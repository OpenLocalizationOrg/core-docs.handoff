<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6aa71a6931deb97d88c833c5edd98a63c66db276</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Array.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c04b16008994c28fcaea375e778d7e26addca392</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="new">Array</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="new">Length</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Rank</source>
          <target state="new">Rank</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>ICollection.Count</source>
          <target state="new">ICollection.Count</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements contained in the collection.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements contained in the collection.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>ICollection.IsSynchronized</source>
          <target state="new">ICollection.IsSynchronized</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ICollection.SyncRoot</source>
          <target state="new">ICollection.SyncRoot</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>IList.IsFixedSize</source>
          <target state="new">IList.IsFixedSize</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>IList.IsReadOnly</source>
          <target state="new">IList.IsReadOnly</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>IList.Item[Int32]</source>
          <target state="new">IList.Item[Int32]</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the element to get or set.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of the element to get or set.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The element at the specified index.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The element at the specified index.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>BinarySearch(Array, Int32, Int32, Object)</source>
          <target state="new">BinarySearch(Array, Int32, Int32, Object)</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>BinarySearch(Array, Int32, Int32, Object, IComparer)</source>
          <target state="new">BinarySearch(Array, Int32, Int32, Object, IComparer)</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>BinarySearch(Array, Object)</source>
          <target state="new">BinarySearch(Array, Object)</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;\n</source>
          <target state="new">If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>BinarySearch(Array, Object, IComparer)</source>
          <target state="new">BinarySearch(Array, Object, IComparer)</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>BinarySearch&lt;T&gt;(T[], T)</source>
          <target state="new">BinarySearch&lt;T&gt;(T[], T)</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>BinarySearch&lt;T&gt;(T[], T, IComparer&lt;T&gt;)</source>
          <target state="new">BinarySearch&lt;T&gt;(T[], T, IComparer&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>BinarySearch&lt;T&gt;(T[], Int32, Int32, T)</source>
          <target state="new">BinarySearch&lt;T&gt;(T[], Int32, Int32, T)</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>BinarySearch&lt;T&gt;(T[], Int32, Int32, T, IComparer&lt;T&gt;)</source>
          <target state="new">BinarySearch&lt;T&gt;(T[], Int32, Int32, T, IComparer&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Clear(Array, Int32, Int32)</source>
          <target state="new">Clear(Array, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array whose elements need to be cleared.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The array whose elements need to be cleared.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range of elements to clear.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range of elements to clear.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements to clear.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements to clear.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The sum of &lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; is greater than the size of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The sum of &lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; is greater than the size of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Clone()</source>
          <target state="new">Clone()</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ConstrainedCopy(Array, Int32, Array, Int32, Int32)</source>
          <target state="new">ConstrainedCopy(Array, Int32, Array, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;sourceArray&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;sourceArray&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;destinationArray&lt;/em&gt; at which storing begins.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;destinationArray&lt;/em&gt; at which storing begins.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the number of elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit integer that represents the number of elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; have different ranks.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; have different ranks.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;sourceArray&lt;/em&gt; type is neither the same as nor derived from the &lt;em&gt;destinationArray&lt;/em&gt; type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;sourceArray&lt;/em&gt; type is neither the same as nor derived from the &lt;em&gt;destinationArray&lt;/em&gt; type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;At least one element in &lt;em&gt;sourceArray&lt;/em&gt; cannot be cast to the type of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;At least one element in &lt;em&gt;sourceArray&lt;/em&gt; cannot be cast to the type of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;sourceIndex&lt;/em&gt; to the end of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;destinationIndex&lt;/em&gt; to the end of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;sourceIndex&lt;/em&gt; to the end of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;destinationIndex&lt;/em&gt; to the end of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Copy(Array, Array, Int32)</source>
          <target state="new">Copy(Array, Array, Int32)</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the number of elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit integer that represents the number of elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; have different ranks.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; have different ranks.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; are of incompatible types.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; are of incompatible types.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;At least one element in &lt;em&gt;sourceArray&lt;/em&gt; cannot be cast to the type of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;At least one element in &lt;em&gt;sourceArray&lt;/em&gt; cannot be cast to the type of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements in &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements in &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements in &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements in &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Copy(Array, Int32, Array, Int32, Int32)</source>
          <target state="new">Copy(Array, Int32, Array, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;sourceArray&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;sourceArray&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;destinationArray&lt;/em&gt; at which storing begins.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;destinationArray&lt;/em&gt; at which storing begins.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the number of elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit integer that represents the number of elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; have different ranks.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; have different ranks.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; are of incompatible types.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; are of incompatible types.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;At least one element in &lt;em&gt;sourceArray&lt;/em&gt; cannot be cast to the type of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;At least one element in &lt;em&gt;sourceArray&lt;/em&gt; cannot be cast to the type of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;sourceIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;sourceIndex&lt;/em&gt; to the end of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;destinationIndex&lt;/em&gt; to the end of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;sourceIndex&lt;/em&gt; to the end of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;destinationIndex&lt;/em&gt; to the end of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>CopyTo(Array, Int32)</source>
          <target state="new">CopyTo(Array, Int32)</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array that is the destination of the elements copied from the current array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array that is the destination of the elements copied from the current array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit integer that represents the index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The number of elements in the source array is greater than the available number of elements from &lt;em&gt;index&lt;/em&gt; to the end of the destination &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The number of elements in the source array is greater than the available number of elements from &lt;em&gt;index&lt;/em&gt; to the end of the destination &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The source array is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The source array is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>CreateInstance(Type, Int32)</source>
          <target state="new">CreateInstance(Type, Int32)</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;elementType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;elementType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>CreateInstance(Type, Int32[])</source>
          <target state="new">CreateInstance(Type, Int32[])</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;elementType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;lengths&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;elementType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;lengths&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Any value in &lt;em&gt;lengths&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Any value in &lt;em&gt;lengths&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>CreateInstance(Type, Int32[], Int32[])</source>
          <target state="new">CreateInstance(Type, Int32[], Int32[])</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;elementType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;lengths&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;lowerBounds&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;elementType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;lengths&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;lowerBounds&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Empty&lt;T&gt;()</source>
          <target state="new">Empty&lt;T&gt;()</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Exists&lt;T&gt;(T[], Predicate&lt;T&gt;)</source>
          <target state="new">Exists&lt;T&gt;(T[], Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;array&lt;/em&gt; contains one or more elements that match the conditions defined by the specified predicate; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;array&lt;/em&gt; contains one or more elements that match the conditions defined by the specified predicate; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Find&lt;T&gt;(T[], Predicate&lt;T&gt;)</source>
          <target state="new">Find&lt;T&gt;(T[], Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The predicate that defines the conditions of the element to search for.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The predicate that defines the conditions of the element to search for.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type &lt;em&gt;T&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type &lt;em&gt;T&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>FindAll&lt;T&gt;(T[], Predicate&lt;T&gt;)</source>
          <target state="new">FindAll&lt;T&gt;(T[], Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>FindIndex&lt;T&gt;(T[], Int32, Int32, Predicate&lt;T&gt;)</source>
          <target state="new">FindIndex&lt;T&gt;(T[], Int32, Int32, Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based starting index of the search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, -1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, -1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>FindIndex&lt;T&gt;(T[], Int32, Predicate&lt;T&gt;)</source>
          <target state="new">FindIndex&lt;T&gt;(T[], Int32, Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based starting index of the search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, -1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, -1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>FindIndex&lt;T&gt;(T[], Predicate&lt;T&gt;)</source>
          <target state="new">FindIndex&lt;T&gt;(T[], Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, -1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, -1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>FindLast&lt;T&gt;(T[], Predicate&lt;T&gt;)</source>
          <target state="new">FindLast&lt;T&gt;(T[], Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type &lt;em&gt;T&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type &lt;em&gt;T&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>FindLastIndex&lt;T&gt;(T[], Int32, Int32, Predicate&lt;T&gt;)</source>
          <target state="new">FindLastIndex&lt;T&gt;(T[], Int32, Int32, Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>FindLastIndex&lt;T&gt;(T[], Int32, Predicate&lt;T&gt;)</source>
          <target state="new">FindLastIndex&lt;T&gt;(T[], Int32, Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>FindLastIndex&lt;T&gt;(T[], Predicate&lt;T&gt;)</source>
          <target state="new">FindLastIndex&lt;T&gt;(T[], Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>GetEnumerator()</source>
          <target state="new">GetEnumerator()</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>GetLength(Int32)</source>
          <target state="new">GetLength(Int32)</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the number of elements in the specified dimension.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit integer that represents the number of elements in the specified dimension.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>GetLowerBound(Int32)</source>
          <target state="new">GetLowerBound(Int32)</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A zero-based dimension of the array whose starting index needs to be determined.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A zero-based dimension of the array whose starting index needs to be determined.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the first element of the specified dimension in the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of the first element of the specified dimension in the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>GetUpperBound(Int32)</source>
          <target state="new">GetUpperBound(Int32)</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A zero-based dimension of the array whose upper bound needs to be determined.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A zero-based dimension of the array whose upper bound needs to be determined.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the last element of the specified dimension in the array, or -1 if the specified dimension is empty.</source>
          <target state="new">\n&lt;p&gt;The index of the last element of the specified dimension in the array, or -1 if the specified dimension is empty.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>GetValue(Int32)</source>
          <target state="new">GetValue(Int32)</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>GetValue(Int32[])</source>
          <target state="new">GetValue(Int32[])</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;indices&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;indices&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>IndexOf(Array, Object)</source>
          <target state="new">IndexOf(Array, Object)</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the first occurrence of &lt;em&gt;value&lt;/em&gt; in &lt;em&gt;array&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of the first occurrence of &lt;em&gt;value&lt;/em&gt; in &lt;em&gt;array&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>IndexOf(Array, Object, Int32)</source>
          <target state="new">IndexOf(Array, Object, Int32)</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the search.</source>
          <target state="new">\n&lt;p&gt;The starting index of the search.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty array.&lt;/p&gt;\n</source>
          <target state="new">0 (zero) is valid in an empty array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the first occurrence of &lt;em&gt;value&lt;/em&gt;, if it’s found, within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from &lt;em&gt;startIndex&lt;/em&gt; to the last element; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of the first occurrence of &lt;em&gt;value&lt;/em&gt;, if it’s found, within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from &lt;em&gt;startIndex&lt;/em&gt; to the last element; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>IndexOf(Array, Object, Int32, Int32)</source>
          <target state="new">IndexOf(Array, Object, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the search.</source>
          <target state="new">\n&lt;p&gt;The starting index of the search.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty array.&lt;/p&gt;\n</source>
          <target state="new">0 (zero) is valid in an empty array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the first occurrence of &lt;em&gt;value&lt;/em&gt;, if it’s found in the &lt;em&gt;array&lt;/em&gt; from index &lt;em&gt;startIndex&lt;/em&gt; to &lt;em&gt;startIndex&lt;/em&gt; + &lt;em&gt;count&lt;/em&gt; - 1; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of the first occurrence of &lt;em&gt;value&lt;/em&gt;, if it’s found in the &lt;em&gt;array&lt;/em&gt; from index &lt;em&gt;startIndex&lt;/em&gt; to &lt;em&gt;startIndex&lt;/em&gt; + &lt;em&gt;count&lt;/em&gt; - 1; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>IndexOf&lt;T&gt;(T[], T)</source>
          <target state="new">IndexOf&lt;T&gt;(T[], T)</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of &lt;em&gt;value&lt;/em&gt; in the entire &lt;em&gt;array&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the first occurrence of &lt;em&gt;value&lt;/em&gt; in the entire &lt;em&gt;array&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>IndexOf&lt;T&gt;(T[], T, Int32)</source>
          <target state="new">IndexOf&lt;T&gt;(T[], T, Int32)</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the search.</source>
          <target state="new">\n&lt;p&gt;The zero-based starting index of the search.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty array.&lt;/p&gt;\n</source>
          <target state="new">0 (zero) is valid in an empty array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from &lt;em&gt;startIndex&lt;/em&gt; to the last element, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the first occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from &lt;em&gt;startIndex&lt;/em&gt; to the last element, if found; otherwise, –1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>IndexOf&lt;T&gt;(T[], T, Int32, Int32)</source>
          <target state="new">IndexOf&lt;T&gt;(T[], T, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the search.</source>
          <target state="new">\n&lt;p&gt;The zero-based starting index of the search.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty array.&lt;/p&gt;\n</source>
          <target state="new">0 (zero) is valid in an empty array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that starts at &lt;em&gt;startIndex&lt;/em&gt; and contains the number of elements specified in &lt;em&gt;count&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the first occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that starts at &lt;em&gt;startIndex&lt;/em&gt; and contains the number of elements specified in &lt;em&gt;count&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Initialize()</source>
          <target state="new">Initialize()</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>LastIndexOf(Array, Object)</source>
          <target state="new">LastIndexOf(Array, Object)</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the entire &lt;em&gt;array&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the entire &lt;em&gt;array&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>LastIndexOf(Array, Object, Int32)</source>
          <target state="new">LastIndexOf(Array, Object, Int32)</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the backward search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from the first element to &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from the first element to &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>LastIndexOf(Array, Object, Int32, Int32)</source>
          <target state="new">LastIndexOf(Array, Object, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the backward search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that contains the number of elements specified in &lt;em&gt;count&lt;/em&gt; and ends at &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that contains the number of elements specified in &lt;em&gt;count&lt;/em&gt; and ends at &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>LastIndexOf&lt;T&gt;(T[], T)</source>
          <target state="new">LastIndexOf&lt;T&gt;(T[], T)</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the entire &lt;em&gt;array&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the entire &lt;em&gt;array&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>LastIndexOf&lt;T&gt;(T[], T, Int32)</source>
          <target state="new">LastIndexOf&lt;T&gt;(T[], T, Int32)</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from the first element to &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from the first element to &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>LastIndexOf&lt;T&gt;(T[], T, Int32, Int32)</source>
          <target state="new">LastIndexOf&lt;T&gt;(T[], T, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that contains the number of elements specified in &lt;em&gt;count&lt;/em&gt; and ends at &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that contains the number of elements specified in &lt;em&gt;count&lt;/em&gt; and ends at &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Resize&lt;T&gt;(ref T[], Int32)</source>
          <target state="new">Resize&lt;T&gt;(ref T[], Int32)</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to resize, or &lt;strong&gt;null&lt;/strong&gt; to create a new array with the specified size.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional, zero-based array to resize, or &lt;strong&gt;null&lt;/strong&gt; to create a new array with the specified size.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The size of the new array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The size of the new array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;newSize&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;newSize&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Reverse(Array)</source>
          <target state="new">Reverse(Array)</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Reverse(Array, Int32, Int32)</source>
          <target state="new">Reverse(Array, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the section to reverse.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the section to reverse.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to reverse.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the section to reverse.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>SetValue(Object, Int32)</source>
          <target state="new">SetValue(Object, Int32)</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The new value for the specified element.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The new value for the specified element.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>SetValue(Object, Int32[])</source>
          <target state="new">SetValue(Object, Int32[])</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The new value for the specified element.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The new value for the specified element.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;indices&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;indices&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Sort(Array)</source>
          <target state="new">Sort(Array)</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Sort(Array, Array)</source>
          <target state="new">Sort(Array, Array)</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Sort(Array, Array, IComparer)</source>
          <target state="new">Sort(Array, Array, IComparer)</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Sort(Array, Array, Int32, Int32)</source>
          <target state="new">Sort(Array, Array, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Sort(Array, Array, Int32, Int32, IComparer)</source>
          <target state="new">Sort(Array, Array, Int32, Int32, IComparer)</target>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Sort(Array, IComparer)</source>
          <target state="new">Sort(Array, IComparer)</target>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</target>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Sort(Array, Int32, Int32)</source>
          <target state="new">Sort(Array, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Sort(Array, Int32, Int32, IComparer)</source>
          <target state="new">Sort(Array, Int32, Int32, IComparer)</target>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</target>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Sort&lt;T&gt;(T[])</source>
          <target state="new">Sort&lt;T&gt;(T[])</target>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Sort&lt;T&gt;(T[], IComparer&lt;T&gt;)</source>
          <target state="new">Sort&lt;T&gt;(T[], IComparer&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</target>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Sort&lt;T&gt;(T[], Comparison&lt;T&gt;)</source>
          <target state="new">Sort&lt;T&gt;(T[], Comparison&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;comparison&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;comparison&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The implementation of &lt;em&gt;comparison&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">\n&lt;p&gt;The implementation of &lt;em&gt;comparison&lt;/em&gt; caused an error during the sort.</target>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparison&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">For example, &lt;em&gt;comparison&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Sort&lt;T&gt;(T[], Int32, Int32)</source>
          <target state="new">Sort&lt;T&gt;(T[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Sort&lt;T&gt;(T[], Int32, Int32, IComparer&lt;T&gt;)</source>
          <target state="new">Sort&lt;T&gt;(T[], Int32, Int32, IComparer&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</target>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Sort&lt;TKey, TValue&gt;(TKey[], TValue[])</source>
          <target state="new">Sort&lt;TKey, TValue&gt;(TKey[], TValue[])</target>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the lower bound of &lt;em&gt;keys&lt;/em&gt; does not match the lower bound of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the lower bound of &lt;em&gt;keys&lt;/em&gt; does not match the lower bound of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Sort&lt;TKey, TValue&gt;(TKey[], TValue[], IComparer&lt;TKey&gt;)</source>
          <target state="new">Sort&lt;TKey, TValue&gt;(TKey[], TValue[], IComparer&lt;TKey&gt;)</target>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the lower bound of &lt;em&gt;keys&lt;/em&gt; does not match the lower bound of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the lower bound of &lt;em&gt;keys&lt;/em&gt; does not match the lower bound of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</target>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Sort&lt;TKey, TValue&gt;(TKey[], TValue[], Int32, Int32)</source>
          <target state="new">Sort&lt;TKey, TValue&gt;(TKey[], TValue[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Sort&lt;TKey, TValue&gt;(TKey[], TValue[], Int32, Int32, IComparer&lt;TKey&gt;)</source>
          <target state="new">Sort&lt;TKey, TValue&gt;(TKey[], TValue[], Int32, Int32, IComparer&lt;TKey&gt;)</target>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>IList.Add(Object)</source>
          <target state="new">IList.Add(Object)</target>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Adding a value to an array is not supported.</source>
          <target state="new">\n&lt;p&gt;Adding a value to an array is not supported.</target>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>No value is returned.</source>
          <target state="new">No value is returned.</target>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>IList.Clear()</source>
          <target state="new">IList.Clear()</target>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>IList.Contains(Object)</source>
          <target state="new">IList.Contains(Object)</target>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in the current list.</source>
          <target state="new">\n&lt;p&gt;The object to locate in the current list.</target>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The element to locate can be &lt;strong&gt;null&lt;/strong&gt; for reference types.&lt;/p&gt;\n</source>
          <target state="new">The element to locate can be &lt;strong&gt;null&lt;/strong&gt; for reference types.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>IList.IndexOf(Object)</source>
          <target state="new">IList.IndexOf(Object)</target>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in the current list.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to locate in the current list.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of value if found in the list; otherwise, -1.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of value if found in the list; otherwise, -1.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>IList.Insert(Int32, Object)</source>
          <target state="new">IList.Insert(Int32, Object)</target>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index at which &lt;em&gt;value&lt;/em&gt; should be inserted.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index at which &lt;em&gt;value&lt;/em&gt; should be inserted.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to insert.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to insert.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>IList.Remove(Object)</source>
          <target state="new">IList.Remove(Object)</target>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>IList.RemoveAt(Int32)</source>
          <target state="new">IList.RemoveAt(Int32)</target>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the element to remove.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index of the element to remove.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>IStructuralComparable.CompareTo(Object, IComparer)</source>
          <target state="new">IStructuralComparable.CompareTo(Object, IComparer)</target>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to compare with the current instance.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to compare with the current instance.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that compares the current object and &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An object that compares the current object and &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An integer that indicates the relationship of the current collection object to other, as shown in the following table.&lt;/p&gt;\n&lt;p&gt;Return value&lt;/p&gt;\n&lt;p&gt;Description&lt;/p&gt;\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;-1&lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The current instance precedes &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;0&lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The current instance and &lt;em&gt;other&lt;/em&gt; are equal.&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;1&lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The current instance follows &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n</source>
          <target state="new">\n&lt;p&gt;An integer that indicates the relationship of the current collection object to other, as shown in the following table.&lt;/p&gt;\n&lt;p&gt;Return value&lt;/p&gt;\n&lt;p&gt;Description&lt;/p&gt;\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;-1&lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The current instance precedes &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;0&lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The current instance and &lt;em&gt;other&lt;/em&gt; are equal.&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;1&lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The current instance follows &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n</target>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>IStructuralEquatable.Equals(Object, IEqualityComparer)</source>
          <target state="new">IStructuralEquatable.Equals(Object, IEqualityComparer)</target>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to compare with the current instance.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to compare with the current instance.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that determines whether the current instance and &lt;em&gt;other&lt;/em&gt; are equal.</source>
          <target state="new">\n&lt;p&gt;An object that determines whether the current instance and &lt;em&gt;other&lt;/em&gt; are equal.</target>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the two objects are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the two objects are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>IStructuralEquatable.GetHashCode(IEqualityComparer)</source>
          <target state="new">IStructuralEquatable.GetHashCode(IEqualityComparer)</target>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that computes the hash code of the current object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An object that computes the hash code of the current object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The hash code for the current instance.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The hash code for the current instance.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>TrueForAll&lt;T&gt;(T[], Predicate&lt;T&gt;)</source>
          <target state="new">TrueForAll&lt;T&gt;(T[], Predicate&lt;T&gt;)</target>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The predicate that defines the conditions to check against the elements.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The predicate that defines the conditions to check against the elements.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if every element in &lt;em&gt;array&lt;/em&gt; matches the conditions defined by the specified predicate; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if every element in &lt;em&gt;array&lt;/em&gt; matches the conditions defined by the specified predicate; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>If there are no elements in the array, the return value is &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">If there are no elements in the array, the return value is &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="new">System</target>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>IList</source>
          <target state="new">IList</target>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>ICollection</source>
          <target state="new">ICollection</target>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>IStructuralComparable</source>
          <target state="new">IStructuralComparable</target>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>IStructuralEquatable</source>
          <target state="new">IStructuralEquatable</target>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>ToString()</source>
          <target state="new">ToString()</target>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Equals(Object)</source>
          <target state="new">Equals(Object)</target>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Equals(Object, Object)</source>
          <target state="new">Equals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>ReferenceEquals(Object, Object)</source>
          <target state="new">ReferenceEquals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>GetHashCode()</source>
          <target state="new">GetHashCode()</target>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>GetType()</source>
          <target state="new">GetType()</target>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>MemberwiseClone()</source>
          <target state="new">MemberwiseClone()</target>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>System.Collections</source>
          <target state="new">System.Collections</target>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Count</source>
          <target state="new">Count</target>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>IsSynchronized</source>
          <target state="new">IsSynchronized</target>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>SyncRoot</source>
          <target state="new">SyncRoot</target>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>IsFixedSize</source>
          <target state="new">IsFixedSize</target>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>IsReadOnly</source>
          <target state="new">IsReadOnly</target>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Item[Int32]</source>
          <target state="new">Item[Int32]</target>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Item</source>
          <target state="new">Item</target>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>[</source>
          <target state="new">[</target>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>]</source>
          <target state="new">]</target>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Item</source>
          <target state="new">Item</target>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="new">Array</target>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>IComparer</source>
          <target state="new">IComparer</target>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>T[]</source>
          <target state="new">T[]</target>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>IComparer&lt;T&gt;</source>
          <target state="new">IComparer&lt;T&gt;</target>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>IComparer</source>
          <target state="new">IComparer</target>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>IComparer</source>
          <target state="new">IComparer</target>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>IComparer&lt;T&gt;</source>
          <target state="new">IComparer&lt;T&gt;</target>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>IComparer</source>
          <target state="new">IComparer</target>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>IComparer</source>
          <target state="new">IComparer</target>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>System.Collections.Generic</source>
          <target state="new">System.Collections.Generic</target>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>CopyTo(Array, Int32)</source>
          <target state="new">CopyTo(Array, Int32)</target>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>CopyTo</source>
          <target state="new">CopyTo</target>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="new">Array</target>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>CopyTo</source>
          <target state="new">CopyTo</target>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="new">Array</target>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>Int32[]</source>
          <target state="new">Int32[]</target>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>Predicate&lt;T&gt;</source>
          <target state="new">Predicate&lt;T&gt;</target>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="new">Predicate</target>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="new">Predicate</target>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Predicate&lt;T&gt;</source>
          <target state="new">Predicate&lt;T&gt;</target>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="new">Predicate</target>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="new">Predicate</target>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>GetEnumerator()</source>
          <target state="new">GetEnumerator()</target>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>GetEnumerator</source>
          <target state="new">GetEnumerator</target>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>GetEnumerator</source>
          <target state="new">GetEnumerator</target>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>IEnumerator</source>
          <target state="new">IEnumerator</target>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Comparison&lt;T&gt;</source>
          <target state="new">Comparison&lt;T&gt;</target>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>Comparison</source>
          <target state="new">Comparison</target>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Comparison</source>
          <target state="new">Comparison</target>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Comparison&lt;T&gt;</source>
          <target state="new">Comparison&lt;T&gt;</target>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Comparison</source>
          <target state="new">Comparison</target>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Comparison</source>
          <target state="new">Comparison</target>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>TKey[]</source>
          <target state="new">TKey[]</target>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>TKey</source>
          <target state="new">TKey</target>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>TKey</source>
          <target state="new">TKey</target>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>TValue[]</source>
          <target state="new">TValue[]</target>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>TValue</source>
          <target state="new">TValue</target>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>TValue</source>
          <target state="new">TValue</target>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>IComparer&lt;TKey&gt;</source>
          <target state="new">IComparer&lt;TKey&gt;</target>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>IComparer</source>
          <target state="new">IComparer</target>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>TKey</source>
          <target state="new">TKey</target>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>IComparer</source>
          <target state="new">IComparer</target>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>TKey</source>
          <target state="new">TKey</target>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>Add(Object)</source>
          <target state="new">Add(Object)</target>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="new">Add</target>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="new">Add</target>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>Clear()</source>
          <target state="new">Clear()</target>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>Clear</source>
          <target state="new">Clear</target>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Clear</source>
          <target state="new">Clear</target>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Contains(Object)</source>
          <target state="new">Contains(Object)</target>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>Contains</source>
          <target state="new">Contains</target>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>Contains</source>
          <target state="new">Contains</target>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>IndexOf(Object)</source>
          <target state="new">IndexOf(Object)</target>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>IndexOf</source>
          <target state="new">IndexOf</target>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>IndexOf</source>
          <target state="new">IndexOf</target>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Insert(Int32, Object)</source>
          <target state="new">Insert(Int32, Object)</target>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="new">Insert</target>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="new">Insert</target>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Remove(Object)</source>
          <target state="new">Remove(Object)</target>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Remove</source>
          <target state="new">Remove</target>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>Remove</source>
          <target state="new">Remove</target>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>RemoveAt(Int32)</source>
          <target state="new">RemoveAt(Int32)</target>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>RemoveAt</source>
          <target state="new">RemoveAt</target>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>RemoveAt</source>
          <target state="new">RemoveAt</target>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>CompareTo(Object, IComparer)</source>
          <target state="new">CompareTo(Object, IComparer)</target>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>CompareTo</source>
          <target state="new">CompareTo</target>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>IComparer</source>
          <target state="new">IComparer</target>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>CompareTo</source>
          <target state="new">CompareTo</target>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>IComparer</source>
          <target state="new">IComparer</target>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Equals(Object, IEqualityComparer)</source>
          <target state="new">Equals(Object, IEqualityComparer)</target>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>IEqualityComparer</source>
          <target state="new">IEqualityComparer</target>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>IEqualityComparer</source>
          <target state="new">IEqualityComparer</target>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>IEqualityComparer</source>
          <target state="new">IEqualityComparer</target>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>GetHashCode(IEqualityComparer)</source>
          <target state="new">GetHashCode(IEqualityComparer)</target>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>IEqualityComparer</source>
          <target state="new">IEqualityComparer</target>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>IEqualityComparer</source>
          <target state="new">IEqualityComparer</target>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>OverflowException</source>
          <target state="new">OverflowException</target>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>ArgumentOutOfRangeException</source>
          <target state="new">ArgumentOutOfRangeException</target>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>ArgumentException</source>
          <target state="new">ArgumentException</target>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>ArgumentNullException</source>
          <target state="new">ArgumentNullException</target>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>RankException</source>
          <target state="new">RankException</target>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>InvalidOperationException</source>
          <target state="new">InvalidOperationException</target>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>IndexOutOfRangeException</source>
          <target state="new">IndexOutOfRangeException</target>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>ArrayTypeMismatchException</source>
          <target state="new">ArrayTypeMismatchException</target>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>InvalidCastException</source>
          <target state="new">InvalidCastException</target>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>NotSupportedException</source>
          <target state="new">NotSupportedException</target>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>NullReferenceException</source>
          <target state="new">NullReferenceException</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>