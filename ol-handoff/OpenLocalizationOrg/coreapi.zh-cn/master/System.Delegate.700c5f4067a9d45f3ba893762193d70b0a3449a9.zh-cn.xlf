<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4708b7e9db7be5f5e8660d02ed4b358a31171137</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Delegate.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">981ddcedb7a889ccceb6a6e0b5647ec840aebce8</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Delegate</source>
          <target state="new">Delegate</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="new">Target</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object on which the current delegate invokes the instance method, if the delegate represents an instance method; &lt;strong&gt;null&lt;/strong&gt; if the delegate represents a static method.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object on which the current delegate invokes the instance method, if the delegate represents an instance method; &lt;strong&gt;null&lt;/strong&gt; if the delegate represents a static method.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Combine(Delegate, Delegate)</source>
          <target state="new">Combine(Delegate, Delegate)</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate whose invocation list comes first.</source>
          <target state="new">\n&lt;p&gt;The delegate whose invocation list comes first.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate whose invocation list comes last.</source>
          <target state="new">\n&lt;p&gt;The delegate whose invocation list comes last.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A new delegate with an invocation list that concatenates the invocation lists of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; in that order.</source>
          <target state="new">\n&lt;p&gt;A new delegate with an invocation list that concatenates the invocation lists of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; in that order.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Returns &lt;em&gt;a&lt;/em&gt; if &lt;em&gt;b&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, returns &lt;em&gt;b&lt;/em&gt; if &lt;em&gt;a&lt;/em&gt; is a null reference, and returns a null reference if both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are null references.&lt;/p&gt;\n</source>
          <target state="new">Returns &lt;em&gt;a&lt;/em&gt; if &lt;em&gt;b&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, returns &lt;em&gt;b&lt;/em&gt; if &lt;em&gt;a&lt;/em&gt; is a null reference, and returns a null reference if both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are null references.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are not &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are not instances of the same delegate type.</source>
          <target state="new">\n&lt;p&gt;Both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are not &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are not instances of the same delegate type.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Combine(Delegate[])</source>
          <target state="new">Combine(Delegate[])</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array of delegates to combine.</source>
          <target state="new">\n&lt;p&gt;The array of delegates to combine.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A new delegate with an invocation list that concatenates the invocation lists of the delegates in the &lt;em&gt;delegates&lt;/em&gt; array.</source>
          <target state="new">\n&lt;p&gt;A new delegate with an invocation list that concatenates the invocation lists of the delegates in the &lt;em&gt;delegates&lt;/em&gt; array.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;null&lt;/strong&gt; if &lt;em&gt;delegates&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, if &lt;em&gt;delegates&lt;/em&gt; contains zero elements, or if every entry in &lt;em&gt;delegates&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Returns &lt;strong&gt;null&lt;/strong&gt; if &lt;em&gt;delegates&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, if &lt;em&gt;delegates&lt;/em&gt; contains zero elements, or if every entry in &lt;em&gt;delegates&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Not all the non-null entries in &lt;em&gt;delegates&lt;/em&gt; are instances of the same delegate type.</source>
          <target state="new">\n&lt;p&gt;Not all the non-null entries in &lt;em&gt;delegates&lt;/em&gt; are instances of the same delegate type.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>DynamicInvoke(Object[])</source>
          <target state="new">DynamicInvoke(Object[])</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of objects that are the arguments to pass to the method represented by the current delegate.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;\n&lt;strong&gt;null&lt;/strong&gt;, if the method represented by the current delegate does not require arguments.</source>
          <target state="new">\n&lt;p&gt;An array of objects that are the arguments to pass to the method represented by the current delegate.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;\n&lt;strong&gt;null&lt;/strong&gt;, if the method represented by the current delegate does not require arguments.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object returned by the method represented by the delegate.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object returned by the method represented by the delegate.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The caller does not have access to the method represented by the delegate (for example, if the method is private).&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The number, order, or type of parameters listed in &lt;em&gt;args&lt;/em&gt; is invalid.</source>
          <target state="new">\n&lt;p&gt;The caller does not have access to the method represented by the delegate (for example, if the method is private).&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The number, order, or type of parameters listed in &lt;em&gt;args&lt;/em&gt; is invalid.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The method represented by the delegate is invoked on an object or a class that does not support it.</source>
          <target state="new">\n&lt;p&gt;The method represented by the delegate is invoked on an object or a class that does not support it.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The method represented by the delegate is an instance method and the target object is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;One of the encapsulated methods throws an exception.</source>
          <target state="new">\n&lt;p&gt;The method represented by the delegate is an instance method and the target object is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;One of the encapsulated methods throws an exception.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Equals(Object)</source>
          <target state="new">Equals(Object)</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to compare with the current delegate.</source>
          <target state="new">\n&lt;p&gt;The object to compare with the current delegate.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; and the current delegate have the same targets, methods, and invocation list; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; and the current delegate have the same targets, methods, and invocation list; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The caller does not have access to the method represented by the delegate (for example, if the method is private).</source>
          <target state="new">\n&lt;p&gt;The caller does not have access to the method represented by the delegate (for example, if the method is private).</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>GetHashCode()</source>
          <target state="new">GetHashCode()</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A hash code for the delegate.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A hash code for the delegate.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>GetInvocationList()</source>
          <target state="new">GetInvocationList()</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of delegates representing the invocation list of the current delegate.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of delegates representing the invocation list of the current delegate.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Equality(Delegate, Delegate)</source>
          <target state="new">Equality(Delegate, Delegate)</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The first delegate to compare.</source>
          <target state="new">\n&lt;p&gt;The first delegate to compare.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The second delegate to compare.</source>
          <target state="new">\n&lt;p&gt;The second delegate to compare.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;d1&lt;/em&gt; is equal to &lt;em&gt;d2&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;d1&lt;/em&gt; is equal to &lt;em&gt;d2&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Inequality(Delegate, Delegate)</source>
          <target state="new">Inequality(Delegate, Delegate)</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The first delegate to compare.</source>
          <target state="new">\n&lt;p&gt;The first delegate to compare.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The second delegate to compare.</source>
          <target state="new">\n&lt;p&gt;The second delegate to compare.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;d1&lt;/em&gt; is not equal to &lt;em&gt;d2&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;d1&lt;/em&gt; is not equal to &lt;em&gt;d2&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remove(Delegate, Delegate)</source>
          <target state="new">Remove(Delegate, Delegate)</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate from which to remove the invocation list of &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;The delegate from which to remove the invocation list of &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate that supplies the invocation list to remove from the invocation list of &lt;em&gt;source&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;The delegate that supplies the invocation list to remove from the invocation list of &lt;em&gt;source&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A new delegate with an invocation list formed by taking the invocation list of &lt;em&gt;source&lt;/em&gt; and removing the last occurrence of the invocation list of &lt;em&gt;value&lt;/em&gt;, if the invocation list of &lt;em&gt;value&lt;/em&gt; is found within the invocation list of &lt;em&gt;source&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;A new delegate with an invocation list formed by taking the invocation list of &lt;em&gt;source&lt;/em&gt; and removing the last occurrence of the invocation list of &lt;em&gt;value&lt;/em&gt;, if the invocation list of &lt;em&gt;value&lt;/em&gt; is found within the invocation list of &lt;em&gt;source&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns &lt;em&gt;source&lt;/em&gt; if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or if the invocation list of &lt;em&gt;value&lt;/em&gt; is not found within the invocation list of &lt;em&gt;source&lt;/em&gt;.</source>
          <target state="new">Returns &lt;em&gt;source&lt;/em&gt; if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or if the invocation list of &lt;em&gt;value&lt;/em&gt; is not found within the invocation list of &lt;em&gt;source&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns a null reference if the invocation list of &lt;em&gt;value&lt;/em&gt; is equal to the invocation list of &lt;em&gt;source&lt;/em&gt; or if &lt;em&gt;source&lt;/em&gt; is a null reference.&lt;/p&gt;\n</source>
          <target state="new">Returns a null reference if the invocation list of &lt;em&gt;value&lt;/em&gt; is equal to the invocation list of &lt;em&gt;source&lt;/em&gt; or if &lt;em&gt;source&lt;/em&gt; is a null reference.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The caller does not have access to the method represented by the delegate (for example, if the method is private).</source>
          <target state="new">\n&lt;p&gt;The caller does not have access to the method represented by the delegate (for example, if the method is private).</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate types do not match.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The delegate types do not match.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>RemoveAll(Delegate, Delegate)</source>
          <target state="new">RemoveAll(Delegate, Delegate)</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate from which to remove the invocation list of &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;The delegate from which to remove the invocation list of &lt;em&gt;value&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate that supplies the invocation list to remove from the invocation list of &lt;em&gt;source&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;The delegate that supplies the invocation list to remove from the invocation list of &lt;em&gt;source&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A new delegate with an invocation list formed by taking the invocation list of &lt;em&gt;source&lt;/em&gt; and removing all occurrences of the invocation list of &lt;em&gt;value&lt;/em&gt;, if the invocation list of &lt;em&gt;value&lt;/em&gt; is found within the invocation list of &lt;em&gt;source&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;A new delegate with an invocation list formed by taking the invocation list of &lt;em&gt;source&lt;/em&gt; and removing all occurrences of the invocation list of &lt;em&gt;value&lt;/em&gt;, if the invocation list of &lt;em&gt;value&lt;/em&gt; is found within the invocation list of &lt;em&gt;source&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns &lt;em&gt;source&lt;/em&gt; if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or if the invocation list of &lt;em&gt;value&lt;/em&gt; is not found within the invocation list of &lt;em&gt;source&lt;/em&gt;.</source>
          <target state="new">Returns &lt;em&gt;source&lt;/em&gt; if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or if the invocation list of &lt;em&gt;value&lt;/em&gt; is not found within the invocation list of &lt;em&gt;source&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns a null reference if the invocation list of &lt;em&gt;value&lt;/em&gt; is equal to the invocation list of &lt;em&gt;source&lt;/em&gt;, if &lt;em&gt;source&lt;/em&gt; contains only a series of invocation lists that are equal to the invocation list of &lt;em&gt;value&lt;/em&gt;, or if &lt;em&gt;source&lt;/em&gt; is a null reference.&lt;/p&gt;\n</source>
          <target state="new">Returns a null reference if the invocation list of &lt;em&gt;value&lt;/em&gt; is equal to the invocation list of &lt;em&gt;source&lt;/em&gt;, if &lt;em&gt;source&lt;/em&gt; contains only a series of invocation lists that are equal to the invocation list of &lt;em&gt;value&lt;/em&gt;, or if &lt;em&gt;source&lt;/em&gt; is a null reference.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The caller does not have access to the method represented by the delegate (for example, if the method is private).</source>
          <target state="new">\n&lt;p&gt;The caller does not have access to the method represented by the delegate (for example, if the method is private).</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate types do not match.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The delegate types do not match.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="new">System</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>ToString()</source>
          <target state="new">ToString()</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Equals(Object, Object)</source>
          <target state="new">Equals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>ReferenceEquals(Object, Object)</source>
          <target state="new">ReferenceEquals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>GetType()</source>
          <target state="new">GetType()</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>MemberwiseClone()</source>
          <target state="new">MemberwiseClone()</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Delegate</source>
          <target state="new">Delegate</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Delegate[]</source>
          <target state="new">Delegate[]</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Delegate</source>
          <target state="new">Delegate</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Delegate</source>
          <target state="new">Delegate</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Object[]</source>
          <target state="new">Object[]</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Equals(Object)</source>
          <target state="new">Equals(Object)</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>GetHashCode()</source>
          <target state="new">GetHashCode()</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>ArgumentException</source>
          <target state="new">ArgumentException</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>MemberAccessException</source>
          <target state="new">MemberAccessException</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>TargetInvocationException</source>
          <target state="new">TargetInvocationException</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>