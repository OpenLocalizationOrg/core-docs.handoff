<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43d40cc2ec1220f87757e51ea0910b6d08f2f76f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Dynamic.DynamicObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36e2dd684907ef1b3c159f9814477009fd407e6a</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>DynamicObject</source>
          <target state="new">DynamicObject</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>DynamicObject()</source>
          <target state="new">DynamicObject()</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>GetDynamicMemberNames()</source>
          <target state="new">GetDynamicMemberNames()</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A sequence that contains dynamic member names.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A sequence that contains dynamic member names.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>GetMetaObject(Expression)</source>
          <target state="new">GetMetaObject(Expression)</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>TryBinaryOperation(BinaryOperationBinder, Object, out Object)</source>
          <target state="new">TryBinaryOperation(BinaryOperationBinder, Object, out Object)</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The right operand for the binary operation.</source>
          <target state="new">\n&lt;p&gt;The right operand for the binary operation.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, for the &lt;code&gt;sum = first + second&lt;/code&gt; statement, where &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt; are derived from the &lt;strong&gt;DynamicObject&lt;/strong&gt; class, &lt;em&gt;arg&lt;/em&gt; is equal to &lt;code&gt;second&lt;/code&gt;.&lt;/p&gt;\n</source>
          <target state="new">For example, for the &lt;code&gt;sum = first + second&lt;/code&gt; statement, where &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt; are derived from the &lt;strong&gt;DynamicObject&lt;/strong&gt; class, &lt;em&gt;arg&lt;/em&gt; is equal to &lt;code&gt;second&lt;/code&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the binary operation.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The result of the binary operation.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>TryConvert(ConvertBinder, out Object)</source>
          <target state="new">TryConvert(ConvertBinder, out Object)</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the type conversion operation.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The result of the type conversion operation.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>TryCreateInstance(CreateInstanceBinder, Object[], out Object)</source>
          <target state="new">TryCreateInstance(CreateInstanceBinder, Object[], out Object)</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the initialization operation.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Provides information about the initialization operation.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the initialization.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The result of the initialization.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>TryDeleteIndex(DeleteIndexBinder, Object[])</source>
          <target state="new">TryDeleteIndex(DeleteIndexBinder, Object[])</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the deletion.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Provides information about the deletion.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The indexes to be deleted.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The indexes to be deleted.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>TryDeleteMember(DeleteMemberBinder)</source>
          <target state="new">TryDeleteMember(DeleteMemberBinder)</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the deletion.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Provides information about the deletion.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>TryGetIndex(GetIndexBinder, Object[], out Object)</source>
          <target state="new">TryGetIndex(GetIndexBinder, Object[], out Object)</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the operation.</source>
          <target state="new">\n&lt;p&gt;Provides information about the operation.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The indexes that are used in the operation.</source>
          <target state="new">\n&lt;p&gt;The indexes that are used in the operation.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, for the &lt;code&gt;sampleObject[3]&lt;/code&gt; operation in C# (&lt;code&gt;sampleObject(3)&lt;/code&gt; in Visual Basic), where &lt;code&gt;sampleObject&lt;/code&gt; is derived from the &lt;strong&gt;DynamicObject&lt;/strong&gt; class, &lt;em&gt;indexes[0]&lt;/em&gt; is equal to 3.&lt;/p&gt;\n</source>
          <target state="new">For example, for the &lt;code&gt;sampleObject[3]&lt;/code&gt; operation in C# (&lt;code&gt;sampleObject(3)&lt;/code&gt; in Visual Basic), where &lt;code&gt;sampleObject&lt;/code&gt; is derived from the &lt;strong&gt;DynamicObject&lt;/strong&gt; class, &lt;em&gt;indexes[0]&lt;/em&gt; is equal to 3.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the index operation.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The result of the index operation.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>(In most cases, a run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>TryGetMember(GetMemberBinder, out Object)</source>
          <target state="new">TryGetMember(GetMemberBinder, out Object)</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the get operation.</source>
          <target state="new">\n&lt;p&gt;The result of the get operation.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, if the method is called for a property, you can assign the property value to &lt;em&gt;result&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">For example, if the method is called for a property, you can assign the property value to &lt;em&gt;result&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(In most cases, a run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>TryInvoke(InvokeBinder, Object[], out Object)</source>
          <target state="new">TryInvoke(InvokeBinder, Object[], out Object)</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the invoke operation.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Provides information about the invoke operation.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the object invocation.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The result of the object invocation.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>TryInvokeMember(InvokeMemberBinder, Object[], out Object)</source>
          <target state="new">TryInvokeMember(InvokeMemberBinder, Object[], out Object)</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the member invocation.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The result of the member invocation.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>TrySetIndex(SetIndexBinder, Object[], Object)</source>
          <target state="new">TrySetIndex(SetIndexBinder, Object[], Object)</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the operation.</source>
          <target state="new">\n&lt;p&gt;Provides information about the operation.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>TrySetMember(SetMemberBinder, Object)</source>
          <target state="new">TrySetMember(SetMemberBinder, Object)</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>TryUnaryOperation(UnaryOperationBinder, out Object)</source>
          <target state="new">TryUnaryOperation(UnaryOperationBinder, out Object)</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the unary operation.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The result of the unary operation.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>System.Dynamic</source>
          <target state="new">System.Dynamic</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>IDynamicMetaObjectProvider</source>
          <target state="new">IDynamicMetaObjectProvider</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>ToString()</source>
          <target state="new">ToString()</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Equals(Object)</source>
          <target state="new">Equals(Object)</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Equals(Object, Object)</source>
          <target state="new">Equals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>ReferenceEquals(Object, Object)</source>
          <target state="new">ReferenceEquals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>GetHashCode()</source>
          <target state="new">GetHashCode()</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>GetType()</source>
          <target state="new">GetType()</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>MemberwiseClone()</source>
          <target state="new">MemberwiseClone()</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="new">System</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>IEnumerable&lt;String&gt;</source>
          <target state="new">IEnumerable&lt;String&gt;</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>IEnumerable&lt;T&gt;</source>
          <target state="new">IEnumerable&lt;T&gt;</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>System.Collections.Generic</source>
          <target state="new">System.Collections.Generic</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>GetMetaObject(Expression)</source>
          <target state="new">GetMetaObject(Expression)</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>GetMetaObject</source>
          <target state="new">GetMetaObject</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="new">Expression</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>GetMetaObject</source>
          <target state="new">GetMetaObject</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="new">Expression</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="new">Expression</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>DynamicMetaObject</source>
          <target state="new">DynamicMetaObject</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>System.Linq.Expressions</source>
          <target state="new">System.Linq.Expressions</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>BinaryOperationBinder</source>
          <target state="new">BinaryOperationBinder</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>ConvertBinder</source>
          <target state="new">ConvertBinder</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>CreateInstanceBinder</source>
          <target state="new">CreateInstanceBinder</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Object[]</source>
          <target state="new">Object[]</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>DeleteIndexBinder</source>
          <target state="new">DeleteIndexBinder</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>DeleteMemberBinder</source>
          <target state="new">DeleteMemberBinder</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>GetIndexBinder</source>
          <target state="new">GetIndexBinder</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>GetMemberBinder</source>
          <target state="new">GetMemberBinder</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>InvokeBinder</source>
          <target state="new">InvokeBinder</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>InvokeMemberBinder</source>
          <target state="new">InvokeMemberBinder</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>SetIndexBinder</source>
          <target state="new">SetIndexBinder</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>SetMemberBinder</source>
          <target state="new">SetMemberBinder</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>UnaryOperationBinder</source>
          <target state="new">UnaryOperationBinder</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>