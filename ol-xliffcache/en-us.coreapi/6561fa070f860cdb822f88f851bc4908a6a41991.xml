{"nodes":[{"content":"CSharpArgumentInfo","pos":[373,391]},{"content":"Create(CSharpArgumentInfoFlags, String)","pos":[2102,2141]},{"content":"The flags for the argument.","pos":[3022,3049]},{"content":"The name of the argument, if named; otherwise null.","pos":[3110,3161]},{"content":"Microsoft.CSharp.RuntimeBinder","pos":[3469,3499]},{"content":"Object","pos":[3702,3708]},{"content":"ToString()","pos":[3868,3878]},{"content":"ToString","pos":[3973,3981]},{"content":"(","pos":[4050,4051]},{"content":")","pos":[4078,4079]},{"content":"ToString","pos":[4149,4157]},{"content":"(","pos":[4226,4227]},{"content":")","pos":[4254,4255]},{"content":"Equals(Object)","pos":[4438,4452]},{"content":"Equals","pos":[4571,4577]},{"content":"(","pos":[4644,4645]},{"content":"Object","pos":[4695,4701]},{"content":")","pos":[4761,4762]},{"content":"Equals","pos":[4845,4851]},{"content":"(","pos":[4918,4919]},{"content":"Object","pos":[4969,4975]},{"content":")","pos":[5035,5036]},{"content":"Equals(Object, Object)","pos":[5250,5272]},{"content":"Equals","pos":[5420,5426]},{"content":"(","pos":[5493,5494]},{"content":"Object","pos":[5544,5550]},{"content":",","pos":[5611,5612]},{"content":"Object","pos":[5667,5673]},{"content":")","pos":[5733,5734]},{"content":"Equals","pos":[5831,5837]},{"content":"(","pos":[5904,5905]},{"content":"Object","pos":[5955,5961]},{"content":",","pos":[6022,6023]},{"content":"Object","pos":[6078,6084]},{"content":")","pos":[6144,6145]},{"content":"ReferenceEquals(Object, Object)","pos":[6390,6421]},{"content":"ReferenceEquals","pos":[6587,6602]},{"content":"(","pos":[6678,6679]},{"content":"Object","pos":[6729,6735]},{"content":",","pos":[6796,6797]},{"content":"Object","pos":[6852,6858]},{"content":")","pos":[6918,6919]},{"content":"ReferenceEquals","pos":[7025,7040]},{"content":"(","pos":[7116,7117]},{"content":"Object","pos":[7167,7173]},{"content":",","pos":[7234,7235]},{"content":"Object","pos":[7290,7296]},{"content":")","pos":[7356,7357]},{"content":"GetHashCode()","pos":[7587,7600]},{"content":"GetHashCode","pos":[7701,7712]},{"content":"(","pos":[7784,7785]},{"content":")","pos":[7812,7813]},{"content":"GetHashCode","pos":[7886,7897]},{"content":"(","pos":[7969,7970]},{"content":")","pos":[7997,7998]},{"content":"GetType()","pos":[8173,8182]},{"content":"GetType","pos":[8275,8282]},{"content":"(","pos":[8350,8351]},{"content":")","pos":[8378,8379]},{"content":"GetType","pos":[8448,8455]},{"content":"(","pos":[8523,8524]},{"content":")","pos":[8551,8552]},{"content":"MemberwiseClone()","pos":[8727,8744]},{"content":"MemberwiseClone","pos":[8853,8868]},{"content":"(","pos":[8944,8945]},{"content":")","pos":[8972,8973]},{"content":"MemberwiseClone","pos":[9050,9065]},{"content":"(","pos":[9141,9142]},{"content":")","pos":[9169,9170]},{"content":"System","pos":[9315,9321]},{"content":"CSharpArgumentInfoFlags","pos":[9517,9540]},{"content":"String","pos":[9784,9790]},{"content":"CSharpArgumentInfo","pos":[9995,10013]}],"content":"items:\n- uid: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\n  commentId: T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\n  id: CSharpArgumentInfo\n  parent: Microsoft.CSharp.RuntimeBinder\n  children:\n  - Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)\n  langs:\n  - csharp\n  - vb\n  name: CSharpArgumentInfo\n  fullName: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\n  type: Class\n  source:\n    remote:\n      path: src/Microsoft.CSharp/src/Microsoft/CSharp/RuntimeBinder/CSharpArgumentInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CSharpArgumentInfo\n    path: src/Microsoft.CSharp/src/Microsoft/CSharp/RuntimeBinder/CSharpArgumentInfo.cs\n    startLine: 14\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: \"\\n<p>Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.</p>\\n\"\n  syntax:\n    content: public sealed class CSharpArgumentInfo\n    content.vb: Public NotInheritable Class CSharpArgumentInfo\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: CSharpArgumentInfo\n- uid: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)\n  commentId: M:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)\n  id: Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)\n  parent: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\n  langs:\n  - csharp\n  - vb\n  name: Create(CSharpArgumentInfoFlags, String)\n  fullName: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.CSharp/src/Microsoft/CSharp/RuntimeBinder/CSharpArgumentInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/Microsoft.CSharp/src/Microsoft/CSharp/RuntimeBinder/CSharpArgumentInfo.cs\n    startLine: 43\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  syntax:\n    content: public static CSharpArgumentInfo Create(CSharpArgumentInfoFlags flags, string name)\n    content.vb: Public Shared Function Create(flags As CSharpArgumentInfoFlags, name As String) As CSharpArgumentInfo\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags\n      description: The flags for the argument.\n    - id: name\n      type: System.String\n      description: The name of the argument, if named; otherwise null.\n    return:\n      type: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CSharpArgumentInfo.Create(CSharpArgumentInfoFlags, String)\nreferences:\n- uid: Microsoft.CSharp.RuntimeBinder\n  isExternal: false\n  name: Microsoft.CSharp.RuntimeBinder\n  fullName: Microsoft.CSharp.RuntimeBinder\n  nameWithType: Microsoft.CSharp.RuntimeBinder\n  commentId: N:Microsoft.CSharp.RuntimeBinder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags\n  parent: Microsoft.CSharp.RuntimeBinder\n  isExternal: false\n  name: CSharpArgumentInfoFlags\n  fullName: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags\n  nameWithType: CSharpArgumentInfoFlags\n  commentId: T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\n  parent: Microsoft.CSharp.RuntimeBinder\n  isExternal: false\n  name: CSharpArgumentInfo\n  fullName: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\n  nameWithType: CSharpArgumentInfo\n  commentId: T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\n"}