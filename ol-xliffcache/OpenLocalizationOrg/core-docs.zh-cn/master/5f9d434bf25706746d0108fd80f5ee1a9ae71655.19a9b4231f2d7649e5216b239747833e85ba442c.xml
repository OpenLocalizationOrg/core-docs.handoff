{"nodes":[{"pos":[11,32],"content":"Samples and Tutorials","needQuote":true,"nodes":[{"content":"Samples and Tutorials","pos":[0,21]}]},{"pos":[46,67],"content":"Samples and Tutorials","needQuote":true,"nodes":[{"content":"Samples and Tutorials","pos":[0,21]}]},{"pos":[78,82],"content":".NET","needQuote":true,"nodes":[{"content":".NET","pos":[0,4]}]},{"content":"Samples and Tutorials","pos":[280,301]},{"content":"We've got a rich catalog of samples and tutorials that you can use to learn more about .NET.","pos":[303,395],"source":"We've got a rich catalog of samples and tutorials that you can use\nto learn more about .NET."},{"content":"This area contains samples and tutorials for .NET Core, and the C# Language.","pos":[396,472],"source":" This area contains samples and tutorials\nfor .NET Core, and the C# Language."},{"pos":[474,600],"content":"You can find great resources to learn the F# programming language on the <bpt id=\"p1\">[</bpt>F# Foundation's site<ept id=\"p1\">](http://fsharp.org/learn.html)</ept>.","source":"You can find great resources to learn the F# programming language\non the [F# Foundation's site](http://fsharp.org/learn.html)."},{"pos":[603,732],"content":"You can find great resources for learning ASP.NET Core on the <bpt id=\"p1\">[</bpt>ASP.NET site<ept id=\"p1\">](https://docs.asp.net/en/latest/tutorials/index.html)</ept>","source":"You can find great resources for learning ASP.NET Core on the\n[ASP.NET site](https://docs.asp.net/en/latest/tutorials/index.html)"},{"pos":[734,894],"content":"In addition, if you are interested in exploring C# using an online playground, try these <bpt id=\"p1\">[</bpt>interactive tutorials<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=817234)</ept>.","source":"In addition, if you are interested in exploring C# using an\nonline playground, try these [interactive tutorials](http://go.microsoft.com/fwlink/?LinkId=817234)."},{"content":"General","pos":[899,906]},{"content":"Samples","pos":[912,919]},{"content":"Unit Testing in .NET Core using dotnet test","pos":[924,967]},{"content":"This guide shows how to create an ASP.NET Core web application and the associated unit tests.","pos":[1022,1115]},{"content":"It will start by creating a simple web service application and then add tests, and continue by creating more tests to guide implementing new features.","pos":[1116,1266]},{"content":"The completed code is available <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/unit-testing/using-dotnet-test)</ept>.","pos":[1267,1427],"source":" The completed code is available [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/unit-testing/using-dotnet-test)."},{"content":"Tutorials","pos":[1433,1442]},{"content":"Writing .NET Core console apps using the CLI tools: A step-by-step guide","pos":[1447,1519]},{"content":"This guide will show you how to use the .NET Core CLI tooling to build cross-platform console apps.","pos":[1567,1666]},{"content":"It will start with the most basic console app and eventually span multiple projects, including testing.","pos":[1668,1771]},{"content":"You'll add these features step-by-step, building on what you've already seen and built.","pos":[1772,1859]},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/core-projects/console-apps)</ept>.","pos":[1860,2039],"source":" A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/core-projects/console-apps)."},{"content":"Writing Libraries with Cross Platform Tools","pos":[2044,2087]},{"content":"This sample covers how you can write libraries for .NET using cross-platform CLI tools.","pos":[2124,2211]},{"content":"They provide an efficient and low-level experience that works across any supported OS.","pos":[2213,2299]},{"content":"The completed code is available <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/core-projects/libraries/frameworks-library)</ept>.","pos":[2300,2472],"source":"\nThe completed code is available [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/core-projects/libraries/frameworks-library)."},{"content":"C# Language","pos":[2477,2488]},{"content":"Samples","pos":[2494,2501]},{"content":"Iterators","pos":[2506,2515]},{"content":"This sample demonstrates the syntax and features for creating and consuming C# iterators.","pos":[2544,2633]},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/iterators)</ept>.","pos":[2634,2812],"source":" A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/iterators)."},{"content":"Indexers","pos":[2817,2825]},{"content":"This sample demonstrates the syntax and features for C# indexers.","pos":[2853,2918]},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/indexers)</ept>.","pos":[2919,3096],"source":" A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/indexers)."},{"content":"Delegates and Events","pos":[3101,3121]},{"content":"This sample demonstrates the syntax and features for C# delegates and events.","pos":[3157,3234]},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/delegates-and-events)</ept>.","pos":[3235,3424],"source":" A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/delegates-and-events)."},{"content":"A second sample, focused on events is also in the <bpt id=\"p1\">[</bpt>same repository<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/events)</ept>.","pos":[3425,3573],"source":" A second sample, focused on events is also in the\n[same repository](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/events)."},{"content":"Expression Trees","pos":[3578,3594]},{"content":"This sample demonstrates many of the problems that can be solved by using Expression Trees.","pos":[3630,3721]},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/expression-trees)</ept>.","pos":[3722,3907],"source":" A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/expression-trees)."},{"content":"LINQ Samples","pos":[3911,3923]},{"content":"These series of samples demonstrate many of the features of Language Integrated Query.","pos":[3927,4013]},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/linq/csharp)</ept>.","pos":[4015,4179],"source":"  A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/linq/csharp)."},{"content":"Tutorials","pos":[4185,4194]},{"content":"Console Application","pos":[4199,4218]},{"content":"This tutorial demonstrates Console I/O, the structure of a Console application, and the basics of the Task based asynchronous programming model.","pos":[4268,4412],"source":"This tutorial demonstrates Console I/O, the structure of a Console application, and\nthe basics of the Task based asynchronous programming model."},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/console-teleprompter)</ept>.","pos":[4413,4602],"source":" A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/console-teleprompter)."},{"content":"REST Client","pos":[4607,4618]},{"content":"This tutorial demonstrates web communications, JSON serialization, and Object Oriented features in the C# language.","pos":[4668,4783],"source":"This tutorial demonstrates web communications, JSON serialization, and Object Oriented\nfeatures in the C# language."},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/console-webapiclient)</ept>.","pos":[4784,4973],"source":" A finished version of the code you'll build is located\n[in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/console-webapiclient)."},{"content":"Working with LINQ","pos":[4978,4995]},{"content":"This tutorial demonstrates many of the features of LINQ and the language elements that support it.","pos":[5042,5140]},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/console-linq)</ept>.","pos":[5141,5322],"source":" A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/console-linq)."},{"content":"Microservices hosted in Docker","pos":[5327,5357]},{"content":"This tutorial demonstrates building an asp.net core microservice and hosting it it Docker.","pos":[5400,5490]},{"content":"A finished version of the code you'll build is located <bpt id=\"p1\">[</bpt>in the core-docs repository on GitHub<ept id=\"p1\">](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/WeatherMicroservice)</ept>.","pos":[5491,5679],"source":" A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/WeatherMicroservice)."}],"content":"---\ntitle: Samples and Tutorials\ndescription: Samples and Tutorials\nkeywords: .NET\nauthor: BillWagner\nmanager: wpickett\nms.date: 06/25/2016\nms.topic: article\nms.prod: .net\nms.technology: .net-technologies\nms.devlang: dotnet\nms.assetid: 617310e7-336b-4864-8dab-7e2021512929\n---\n\n# Samples and Tutorials\n\nWe've got a rich catalog of samples and tutorials that you can use\nto learn more about .NET. This area contains samples and tutorials\nfor .NET Core, and the C# Language.\n\nYou can find great resources to learn the F# programming language\non the [F# Foundation's site](http://fsharp.org/learn.html). \n\nYou can find great resources for learning ASP.NET Core on the\n[ASP.NET site](https://docs.asp.net/en/latest/tutorials/index.html)\n\nIn addition, if you are interested in exploring C# using an\nonline playground, try these [interactive tutorials](http://go.microsoft.com/fwlink/?LinkId=817234).\n\n## General\n\n### Samples\n\n**[Unit Testing in .NET Core using dotnet test](../core/testing/unit-testing-with-dotnet-test.md)**\n\nThis guide shows how to create an ASP.NET Core web application and the associated unit tests. It will start by creating a simple web service application and then add tests, and continue by creating more tests to guide implementing new features. The completed code is available [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/unit-testing/using-dotnet-test).\n\n### Tutorials\n\n**[Writing .NET Core console apps using the CLI tools: A step-by-step guide](../core/tutorials/using-with-xplat-cli.md)**\n\nThis guide will show you how to use the .NET Core CLI tooling to build cross-platform console apps.  It will start with the most basic console app and eventually span multiple projects, including testing. You'll add these features step-by-step, building on what you've already seen and built. A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/core-projects/console-apps).\n\n**[Writing Libraries with Cross Platform Tools](../core/tutorials/libraries.md)**\n\nThis sample covers how you can write libraries for .NET using cross-platform CLI tools.  They provide an efficient and low-level experience that works across any supported OS.\nThe completed code is available [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/core-projects/libraries/frameworks-library).\n\n## C# Language\n\n### Samples\n\n**[Iterators](../csharp/iterators.md)**\n\nThis sample demonstrates the syntax and features for creating and consuming C# iterators. A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/iterators).\n\n**[Indexers](../csharp/indexers.md)**\n\nThis sample demonstrates the syntax and features for C# indexers. A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/indexers).\n\n**[Delegates and Events](../csharp/delegates-events.md)**\n\nThis sample demonstrates the syntax and features for C# delegates and events. A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/delegates-and-events). A second sample, focused on events is also in the\n[same repository](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/events).\n\n**[Expression Trees](../csharp/expression-trees.md)**\n\nThis sample demonstrates many of the problems that can be solved by using Expression Trees. A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/expression-trees).\n\n**LINQ Samples**\n\nThese series of samples demonstrate many of the features of Language Integrated Query.  A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/linq/csharp).\n\n### Tutorials\n\n**[Console Application](../csharp/tutorials/console-teleprompter.md)**\n\nThis tutorial demonstrates Console I/O, the structure of a Console application, and\nthe basics of the Task based asynchronous programming model. A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/console-teleprompter).\n\n**[REST Client](../csharp/tutorials/console-webapiclient.md)**\n\nThis tutorial demonstrates web communications, JSON serialization, and Object Oriented\nfeatures in the C# language. A finished version of the code you'll build is located\n[in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/console-webapiclient).\n\n**[Working with LINQ](../csharp/tutorials/working-with-linq.md)**\n\nThis tutorial demonstrates many of the features of LINQ and the language elements that support it. A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/console-linq).\n\n**[Microservices hosted in Docker](../csharp/tutorials/microservices.md)**\n\nThis tutorial demonstrates building an asp.net core microservice and hosting it it Docker. A finished version of the code you'll build is located [in the core-docs repository on GitHub](https://github.com/dotnet/core-docs/tree/master/samples/csharp-language/WeatherMicroservice)."}