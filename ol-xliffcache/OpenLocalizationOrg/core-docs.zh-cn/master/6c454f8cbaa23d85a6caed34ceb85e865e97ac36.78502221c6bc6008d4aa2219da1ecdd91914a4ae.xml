{"nodes":[{"content":".NET Core Samples","pos":[2,19]},{"content":"This folder contains all the sample code that is part of any topic under the .NET Core documentation.","pos":[21,122],"source":"This folder contains all the sample code that is part of any topic under\nthe .NET Core documentation."},{"content":"There are several different projects that are organized in sub-folders.","pos":[123,194],"source":" There are several different projects that\nare organized in sub-folders."},{"content":"These sub-folders are organized similar to the organization of the docs for .NET Core.","pos":[195,281],"source":" These sub-folders are organized similar\nto the organization of the docs for .NET Core."},{"content":"Some of the articles will have more than one sample associated with them.","pos":[283,356]},{"pos":[359,488],"content":"The readme.md file for each sample will refer to the article so that you can read more about the concepts covered in each sample.","source":"The readme.md file for each sample will refer to the article so that\nyou can read more about the concepts covered in each sample."},{"content":"Building a sample","pos":[493,510]},{"content":"You build the samples using the .NET CLI.","pos":[512,553]},{"content":"You can download the CLI from <bpt id=\"p1\">[</bpt>the .NET Core home page<ept id=\"p1\">](http://microsoft.com/net/core)</ept>.","pos":[554,641],"source":" You can download the CLI from\n[the .NET Core home page](http://microsoft.com/net/core)."},{"content":"Then, execute these commands from the CLI in the directory of any sample:","pos":[642,715],"source":" Then, execute\nthese commands from the CLI in the directory of any sample:"},{"pos":[765,861],"content":"These will install any needed dependencies, build the project, and run the project respectively.","source":"These will install any needed dependencies, build the project, and run\nthe project respectively."},{"pos":[863,949],"content":"Multi-project samples have instructions in their root directory in a <ph id=\"ph1\">`README.md`</ph> file.","source":"Multi-project samples have instructions in their root directory in\na `README.md` file."},{"content":"Except where noted, all samples will build from the command line, on any platform supported by .NET Core.","pos":[953,1058],"source":"Except where noted, all samples will build from the command line, on\nany platform supported by .NET Core."},{"content":"There are a few samples that are specific to Visual Studio, and will require Visual Studio 2015 Update 3 or a newer version.","pos":[1059,1183],"source":" There are a few samples that are\nspecific to Visual Studio, and will require Visual Studio 2015 Update 3\nor a newer version."},{"content":"In addition, some samples show platform specific features, and will require a specific platform.","pos":[1184,1280],"source":" In addition, some samples show platform specific features,\nand will require a specific platform."},{"content":"Creating new samples","pos":[1285,1305]},{"content":"If you wish to add a code sample:","pos":[1307,1340]},{"pos":[1345,1396],"content":"Your sample <bpt id=\"p1\">**</bpt>must be part of a buildable project<ept id=\"p1\">**</ept>","source":"Your sample **must be part of a buildable project**"},{"pos":[1400,1449],"content":"Your sample <bpt id=\"p1\">**</bpt>cannot be a Visual Studio Project<ept id=\"p1\">**</ept>","source":"Your sample **cannot be a Visual Studio Project**"},{"content":"We do not want Windows and Visual Studio to be a dependency for people building these on their own.","pos":[1456,1555]},{"content":"The only exception is if your sample highlights particular tooling and is referenced by a topic that explains the prerequisites.","pos":[1556,1684]},{"pos":[1688,1862],"content":"Your sample should conform to the <bpt id=\"p1\">[</bpt>corefx coding style<ept id=\"p1\">](https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md)</ept> to maintain consistency.","source":"Your sample should conform to the [corefx coding style](https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md) to maintain consistency."},{"pos":[1869,2027],"content":"Additionally, we prefer the use of <ph id=\"ph1\">`static`</ph> methods rather than instance methods when demonstrating something that doesn't require instantiating a new object.","source":"Additionally, we prefer the use of `static` methods rather than instance methods when demonstrating something that doesn't require instantiating a new object."},{"content":"We will eventually have a CI system in place to build these projects.","pos":[2029,2098]},{"content":"To create a sample:","pos":[2100,2119]},{"pos":[2124,2247],"content":"File an <bpt id=\"p1\">[</bpt>issue<ept id=\"p1\">](https://github.com/dotnet/core-docs/issues)</ept> or add a comment to an existing one that you are working on it.","source":"File an [issue](https://github.com/dotnet/core-docs/issues) or add a comment to an existing one that you are working on it."},{"pos":[2251,2369],"content":"Write the topic that explains the concepts demonstrated in your sample (example: <ph id=\"ph1\">`docs/standard/linq/where-clause.md`</ph>)","source":"Write the topic that explains the concepts demonstrated in your sample (example: `docs/standard/linq/where-clause.md`)"},{"pos":[2374,2427],"content":"Write your sample (example: <ph id=\"ph1\">`WhereClause-Sample1.cs`</ph>)","source":"Write your sample (example: `WhereClause-Sample1.cs`)"},{"content":"Create a Program.cs with a Main entry point that calls your samples.","pos":[2431,2499]},{"content":"If there is already one there, add the call to your sample:","pos":[2500,2559]},{"content":"To build and run your sample...","pos":[2821,2852]},{"content":"Restore dependencies","pos":[2857,2877]},{"content":"Go to the sample folder and Build to check for errors.","pos":[2915,2969]},{"content":"Run!","pos":[3001,3005]},{"content":"Add a readme.md to the root directory of your sample.","pos":[3036,3089]},{"content":"This should include a brief description of the code, and refer people to the article that references the sample.","pos":[3096,3208]}],"content":"# .NET Core Samples\n\nThis folder contains all the sample code that is part of any topic under\nthe .NET Core documentation. There are several different projects that\nare organized in sub-folders. These sub-folders are organized similar\nto the organization of the docs for .NET Core.\n\nSome of the articles will have more than one sample associated with them. \n\nThe readme.md file for each sample will refer to the article so that\nyou can read more about the concepts covered in each sample.\n\n## Building a sample\n\nYou build the samples using the .NET CLI. You can download the CLI from\n[the .NET Core home page](http://microsoft.com/net/core). Then, execute\nthese commands from the CLI in the directory of any sample:\n\n```\ndotnet restore\ndotnet build\ndotnet run\n```\n\nThese will install any needed dependencies, build the project, and run\nthe project respectively.\n\nMulti-project samples have instructions in their root directory in\na `README.md` file.  \n\nExcept where noted, all samples will build from the command line, on\nany platform supported by .NET Core. There are a few samples that are\nspecific to Visual Studio, and will require Visual Studio 2015 Update 3\nor a newer version. In addition, some samples show platform specific features,\nand will require a specific platform.\n\n## Creating new samples\n\nIf you wish to add a code sample:\n\n1. Your sample **must be part of a buildable project**\n2. Your sample **cannot be a Visual Studio Project**\n    - We do not want Windows and Visual Studio to be a dependency for people building these on their own. The only exception is if your sample highlights particular tooling and is referenced by a topic that explains the prerequisites.\n3. Your sample should conform to the [corefx coding style](https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md) to maintain consistency.\n    - Additionally, we prefer the use of `static` methods rather than instance methods when demonstrating something that doesn't require instantiating a new object.\n\nWe will eventually have a CI system in place to build these projects.\n\nTo create a sample:\n\n1. File an [issue](https://github.com/dotnet/core-docs/issues) or add a comment to an existing one that you are working on it.\n2. Write the topic that explains the concepts demonstrated in your sample (example: `docs/standard/linq/where-clause.md`) \n3. Write your sample (example: `WhereClause-Sample1.cs`)\n4. Create a Program.cs with a Main entry point that calls your samples. If there is already one there, add the call to your sample:\n  ```c#\n    public class Program\n    {\n        public void Main(string[] args)\n        {\n            WhereClause1.QuerySyntaxExample();\n\n            // Add the method syntax as an example.\n            WhereClause1.MethodSyntaxExample();\n        }\n    }\n  ```\n  To build and run your sample...\n\n5. Restore dependencies\n\n ```    \n    dotnet restore\n ```\n6. Go to the sample folder and Build to check for errors.\n\n ```\n    dotnet build\n ```\n7. Run!\n\n ```\n    dotnet run\n ```\n\n8. Add a readme.md to the root directory of your sample.\n    - This should include a brief description of the code, and refer people to the article that references the sample."}