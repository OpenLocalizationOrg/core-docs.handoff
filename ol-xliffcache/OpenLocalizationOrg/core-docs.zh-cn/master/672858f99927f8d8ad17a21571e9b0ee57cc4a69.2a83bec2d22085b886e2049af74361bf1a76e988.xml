{"nodes":[{"content":"C# Iterators Sample","pos":[0,19]},{"content":"This sample is created during the <bpt id=\"p1\">[</bpt>Iterators topic<ept id=\"p1\">](https://docs.microsoft.com/dotnet/articles/csharp/iterators)</ept> for learning C# features.","pos":[38,176],"source":"This sample is created during the [Iterators topic](https://docs.microsoft.com/dotnet/articles/csharp/iterators)\nfor learning C# features."},{"content":"Please see that topic for detailed steps on the code for this sample.","pos":[177,246],"source":" Please see that topic for detailed steps on the code\nfor this sample."},{"content":"Key Features","pos":[248,260]},{"pos":[275,416],"content":"This sample demonstrates iterating across a data source, and creating iterator methods to control how a data source is visited (or iterated).","source":"This sample demonstrates iterating across a data source, and creating\niterator methods to control how a data source is visited (or iterated)."},{"content":"Build and Run","pos":[418,431]},{"content":"To build and run the sample, type the following three commands:","pos":[447,510]},{"content":"installs all the dependencies for this sample into the current directory.","pos":[575,648]},{"content":"creates the output assembly (or assemblies).","pos":[664,708]},{"content":"runs the output assembly.","pos":[722,747]}],"content":"C# Iterators Sample\n================\n\nThis sample is created during the [Iterators topic](https://docs.microsoft.com/dotnet/articles/csharp/iterators)\nfor learning C# features. Please see that topic for detailed steps on the code\nfor this sample.\n\nKey Features\n------------\n\nThis sample demonstrates iterating across a data source, and creating\niterator methods to control how a data source is visited (or iterated).\n\nBuild and Run\n-------------\n\nTo build and run the sample, type the following three commands:\n\n`dotnet restore`\n`dotnet build`\n`dotnet run`\n\n`dotnet restore` installs all the dependencies for this sample into the current directory.\n`dotnet build` creates the output assembly (or assemblies).\n`dotnet run` runs the output assembly.\n"}