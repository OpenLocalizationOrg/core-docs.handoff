{"nodes":[{"content":"Unit Testing using dotnet test Sample","pos":[0,37]},{"content":"This sample is part of the <bpt id=\"p1\">[</bpt>unit testing tutorial<ept id=\"p1\">](https://docs.microsoft.com/dotnet/articles/core/testing/unit-testing-with-dotnet-test)</ept> for creating applications with unit tests included.","pos":[56,245],"source":"This sample is part of the [unit testing tutorial](https://docs.microsoft.com/dotnet/articles/core/testing/unit-testing-with-dotnet-test)\nfor creating applications with unit tests included."},{"content":"Please see that topic for detailed steps on the code for this sample.","pos":[246,315],"source":" Please see that topic for detailed steps on the code\nfor this sample."},{"content":"Key Features","pos":[317,329]},{"pos":[344,464],"content":"This sample demonstrates creating a library and writing effective unit tests that validate the features in that library.","source":"This sample demonstrates creating a library and writing effective unit tests\nthat validate the features in that library."},{"pos":[467,558],"content":"The example provides a service that indicates whether a number is or is not a prime number.","source":"The example provides a service that indicates whether a number is or is not\na prime number."},{"content":"Build and Run","pos":[560,573]},{"pos":[589,699],"content":"To build and run the sample, change to the <ph id=\"ph1\">`src/PrimeService`</ph> directory and type the following three commands:","source":"To build and run the sample, change to the `src/PrimeService` directory and\ntype the following three commands:"},{"content":"installs all the dependencies for this sample into the current directory.","pos":[764,837]},{"content":"creates the output assembly (or assemblies).","pos":[853,897]},{"content":"runs the output executable.","pos":[911,938]},{"pos":[941,1048],"content":"To run the tests, change to the <ph id=\"ph1\">`tests/PrimeService.Tests`</ph> directory and type the following three commands:","source":"To run the tests, change to the `tests/PrimeService.Tests` directory and\ntype the following three commands:"},{"pos":[1111,1139],"content":"runs all the configure tests"},{"content":"Note that you must run <ph id=\"ph1\">`dotnet restore`</ph> in the <ph id=\"ph2\">`src/PrimeService`</ph> directory before you can run the tests.","pos":[1142,1247],"source":"Note that you must run `dotnet restore` in the `src/PrimeService` directory before you can run\nthe tests."},{"content":"will follow the dependency and build both the library and unit tests projects, but it will not restore NuGet packages.","pos":[1263,1381],"source":" will follow the dependency and build both the library and unit\ntests projects, but it will not restore NuGet packages."}],"content":"Unit Testing using dotnet test Sample\n================\n\nThis sample is part of the [unit testing tutorial](https://docs.microsoft.com/dotnet/articles/core/testing/unit-testing-with-dotnet-test)\nfor creating applications with unit tests included. Please see that topic for detailed steps on the code\nfor this sample.\n\nKey Features\n------------\n\nThis sample demonstrates creating a library and writing effective unit tests\nthat validate the features in that library. \n\nThe example provides a service that indicates whether a number is or is not\na prime number.\n\nBuild and Run\n-------------\n\nTo build and run the sample, change to the `src/PrimeService` directory and\ntype the following three commands:\n\n`dotnet restore`\n`dotnet build`\n`dotnet run`\n\n`dotnet restore` installs all the dependencies for this sample into the current directory.\n`dotnet build` creates the output assembly (or assemblies).\n`dotnet run` runs the output executable. \n\nTo run the tests, change to the `tests/PrimeService.Tests` directory and\ntype the following three commands:\n\n`dotnet restore`\n`dotnet build`\n`dotnet test`\n\n`dotnet test` runs all the configure tests \n\nNote that you must run `dotnet restore` in the `src/PrimeService` directory before you can run\nthe tests. `dotnet build` will follow the dependency and build both the library and unit\ntests projects, but it will not restore NuGet packages.\n"}