{"nodes":[{"pos":[11,52],"content":"Getting started with .NET Core on Windows","needQuote":true,"nodes":[{"content":"Getting started with .NET Core on Windows","pos":[0,41]}]},{"pos":[66,133],"content":"Getting started with .NET Core on Windows, using Visual Studio 2015","needQuote":true,"nodes":[{"content":"Getting started with .NET Core on Windows, using Visual Studio 2015","pos":[0,67]}]},{"pos":[144,159],"content":".NET, .NET Core","needQuote":true,"nodes":[{"content":".NET, .NET Core","pos":[0,15]}]},{"content":"Getting started with .NET Core on Windows, using Visual Studio 2015","pos":[363,430]},{"pos":[432,529],"content":"by <bpt id=\"p1\">[</bpt>Bertrand Le Roy<ept id=\"p1\">](https://github.com/bleroy)</ept> and <bpt id=\"p2\">[</bpt>Phillip Carter<ept id=\"p2\">](https://github.com/cartermp)</ept>","source":"by [Bertrand Le Roy](https://github.com/bleroy) and [Phillip Carter](https://github.com/cartermp)"},{"content":"Visual Studio 2015 provides a full-featured development environment for developing .NET Core applications.","pos":[531,637]},{"content":"The procedures in this document describe the steps necessary to build a number of typical .NET Core solutions, or solutions that include .NET Core components, using Visual Studio.","pos":[638,817]},{"content":"The scenarios include testing and using third-party libraries that have not been explicitly built for the most recent version of .NET Core.","pos":[818,957]},{"content":"Prerequisites","pos":[963,976]},{"pos":[978,1086],"content":"Follow the instructions on <bpt id=\"p1\">[</bpt>our prerequisites page<ept id=\"p1\">](../windows-prerequisites.md)</ept> to update your environment.","source":"Follow the instructions on [our prerequisites page](../windows-prerequisites.md) to update your environment."},{"content":"Getting Started","pos":[1091,1106]},{"content":"The following steps will set up Visual Studio 2015 for .NET Core development:","pos":[1108,1185]},{"pos":[1190,1264],"content":"Open Visual Studio, and on the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","source":"Open Visual Studio, and on the **File** menu, choose **New**, **Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog, in the <bpt id=\"p2\">**</bpt>Templates<ept id=\"p2\">**</ept> list, expand the <bpt id=\"p3\">**</bpt>Visual C#<ept id=\"p3\">**</ept> node and choose <bpt id=\"p4\">**</bpt>.NET Core<ept id=\"p4\">**</ept>.","pos":[1269,1382],"source":"In the **New Project** dialog, in the **Templates** list, expand the **Visual C#** node and choose **.NET Core**."},{"content":"You should see three new project templates for <bpt id=\"p1\">**</bpt>Class Library (.NET Core)<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Console Application (.NET Core)<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>ASP.NET Core Web Application (.NET Core)<ept id=\"p3\">**</ept>.","pos":[1383,1547],"source":" You should see three new project templates for **Class Library (.NET Core)**, **Console Application (.NET Core)**, and **ASP.NET Core Web Application (.NET Core)**."},{"content":"A solution using only .NET Core projects","pos":[1549,1589]},{"content":"Writing the library","pos":[1636,1655]},{"content":"In Visual Studio, choose <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","pos":[1660,1716],"source":"In Visual Studio, choose **File**, **New**, **Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog, expand the <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept> node and choose the <bpt id=\"p3\">**</bpt>.NET Core<ept id=\"p3\">**</ept> node, and then choose <bpt id=\"p4\">**</bpt>Class Library (.NET Core)<ept id=\"p4\">**</ept>.","pos":[1717,1859],"source":" In the **New Project** dialog, expand the **Visual C#** node and choose the **.NET Core** node, and then choose **Class Library (.NET Core)**."},{"content":"Name the project \"Library\" and the solution \"Golden\".","pos":[1865,1918]},{"content":"Leave <bpt id=\"p1\">**</bpt>Create directory for solution<ept id=\"p1\">**</ept> checked.","pos":[1919,1967],"source":" Leave **Create directory for solution** checked."},{"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","pos":[1968,1981],"source":" Click **OK**."},{"pos":[1986,2095],"content":"In Solution Explorer, open the context menu for the <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept> node and choose <bpt id=\"p2\">**</bpt>Manage NuGet Packages<ept id=\"p2\">**</ept>.","source":"In Solution Explorer, open the context menu for the **References** node and choose **Manage NuGet Packages**."},{"content":"Choose \"nuget.org\" as the <bpt id=\"p1\">**</bpt>Package source<ept id=\"p1\">**</ept>, and choose the <bpt id=\"p2\">**</bpt>Browse<ept id=\"p2\">**</ept> tab.","pos":[2100,2176],"source":"Choose \"nuget.org\" as the **Package source**, and choose the **Browse** tab."},{"content":"Check the <bpt id=\"p1\">**</bpt>Include prerelease<ept id=\"p1\">**</ept> checkbox, and then browse for <bpt id=\"p2\">**</bpt>Newtonsoft.Json<ept id=\"p2\">**</ept>.","pos":[2177,2260],"source":" Check the **Include prerelease** checkbox, and then browse for **Newtonsoft.Json**."},{"content":"Click <bpt id=\"p1\">**</bpt>Install<ept id=\"p1\">**</ept>.","pos":[2261,2279],"source":" Click **Install**."},{"pos":[2285,2368],"content":"Open the context menu for the <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept> node and choose  <bpt id=\"p2\">**</bpt>Restore packages<ept id=\"p2\">**</ept>.","source":"Open the context menu for the **References** node and choose  **Restore packages**."},{"content":"Rename the <ph id=\"ph1\">`Class1.cs`</ph> file to <ph id=\"ph2\">`Thing.cs`</ph>.","pos":[2373,2415],"source":"Rename the `Class1.cs` file to `Thing.cs`."},{"content":"Accept the rename of the class.","pos":[2416,2447]},{"content":"Remove the constructor and add a method:","pos":[2448,2488]},{"pos":[2590,2639],"content":"On the <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Build Solution<ept id=\"p2\">**</ept>.","source":"On the **Build** menu, choose **Build Solution**."},{"content":"The solution should build without error.","pos":[2644,2684]},{"content":"Writing the test project","pos":[2690,2714]},{"pos":[2719,2916],"content":"In Solution Explorer, open the context menu for the **Solution** node and choose **Add**, **New Solution Folder**. Name the folder \"test\". \nThis is only a solution folder, not a physical folder.","leadings":["","   "],"nodes":[{"content":"In Solution Explorer, open the context menu for the <bpt id=\"p1\">**</bpt>Solution<ept id=\"p1\">**</ept> node and choose <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>New Solution Folder<ept id=\"p3\">**</ept>.","pos":[0,114],"source":"In Solution Explorer, open the context menu for the **Solution** node and choose **Add**, **New Solution Folder**."},{"content":"Name the folder \"test\".","pos":[115,138]},{"content":"This is only a solution folder, not a physical folder.","pos":[140,194]}]},{"content":"Open the context menu for the <bpt id=\"p1\">**</bpt>test<ept id=\"p1\">**</ept> folder and choose <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>.","pos":[2921,2986],"source":"Open the context menu for the **test** folder and choose **Add**."},{"content":"<bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept>.","pos":[2987,3003],"source":"**New Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog, choose <bpt id=\"p2\">**</bpt>Console Application (.NET Core)<ept id=\"p2\">**</ept>.","pos":[3004,3078],"source":" In the **New Project** dialog, choose **Console Application (.NET Core)**."},{"content":"Name it \"TestLibrary\" and explicitly put it under the <ph id=\"ph1\">`Golden\\test`</ph> path.","pos":[3079,3152],"source":" Name it \"TestLibrary\" and explicitly put it under the `Golden\\test` path."},{"content":"Important","pos":[3162,3171]},{"content":"The project needs to be a console application, not a class library.","pos":[3184,3251]},{"pos":[3256,3367],"content":"In the <bpt id=\"p1\">**</bpt>TestLibrary<ept id=\"p1\">**</ept> project, open the context menu for the <bpt id=\"p2\">**</bpt>References<ept id=\"p2\">**</ept> node and choose <bpt id=\"p3\">**</bpt>Add Reference<ept id=\"p3\">**</ept>.","source":"In the **TestLibrary** project, open the context menu for the **References** node and choose **Add Reference**."},{"pos":[3373,3493],"content":"In the <bpt id=\"p1\">**</bpt>Reference Manager<ept id=\"p1\">**</ept> dialog, check <bpt id=\"p2\">**</bpt>Library<ept id=\"p2\">**</ept> under the <bpt id=\"p3\">**</bpt>Projects<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>Solution<ept id=\"p4\">**</ept> node, and then click <bpt id=\"p5\">**</bpt>OK<ept id=\"p5\">**</ept>.","source":"In the **Reference Manager** dialog, check **Library** under the **Projects**, **Solution** node, and then click **OK**."},{"pos":[3499,3658],"content":"In the <bpt id=\"p1\">**</bpt>TestLibrary<ept id=\"p1\">**</ept> project, open the <ph id=\"ph1\">`project.json`</ph> file, and replace <ph id=\"ph2\">`\"Library\": \"1.0.0-*\"`</ph> with <ph id=\"ph3\">`\"Library\": {\"target\": \"project\", \"version\": \"1.0.0-*\"}`</ph>.","source":"In the **TestLibrary** project, open the `project.json` file, and replace `\"Library\": \"1.0.0-*\"` with `\"Library\": {\"target\": \"project\", \"version\": \"1.0.0-*\"}`."},{"content":"This is to avoid the resolution of the <ph id=\"ph1\">`Library`</ph> project to a NuGet package with the same name.","pos":[3664,3759],"source":"This is to avoid the resolution of the `Library` project to a NuGet package with the same name."},{"content":"Explicitly setting the target to \"project\" ensures that the tooling will first search for a project with that name, and not a package.","pos":[3760,3894]},{"pos":[3903,4017],"content":"In the <bpt id=\"p1\">**</bpt>TestLibrary<ept id=\"p1\">**</ept> project, open the context menu for the <bpt id=\"p2\">**</bpt>References<ept id=\"p2\">**</ept> node and choose <bpt id=\"p3\">**</bpt>Restore Packages<ept id=\"p3\">**</ept>.","source":"In the **TestLibrary** project, open the context menu for the **References** node and choose **Restore Packages**."},{"pos":[4022,4109],"content":"Open the context menu for the <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept> node and choose <bpt id=\"p2\">**</bpt>Manage NuGet Packages<ept id=\"p2\">**</ept>.","source":"Open the context menu for the **References** node and choose **Manage NuGet Packages**."},{"content":"Choose \"nuget.org\" as the <bpt id=\"p1\">**</bpt>Package source<ept id=\"p1\">**</ept>, and choose the <bpt id=\"p2\">**</bpt>Browse<ept id=\"p2\">**</ept> tab.","pos":[4114,4190],"source":"Choose \"nuget.org\" as the **Package source**, and choose the **Browse** tab."},{"content":"Check the <bpt id=\"p1\">**</bpt>Include prerelease<ept id=\"p1\">**</ept> checkbox, and then browse for <bpt id=\"p2\">**</bpt>xUnit<ept id=\"p2\">**</ept> version 2.2.0 or newer, and then click <bpt id=\"p3\">**</bpt>Install<ept id=\"p3\">**</ept>.","pos":[4191,4315],"source":" Check the **Include prerelease** checkbox, and then browse for **xUnit** version 2.2.0 or newer, and then click **Install**."},{"pos":[4321,4405],"content":"Browse for <bpt id=\"p1\">**</bpt>dotnet-test-xunit<ept id=\"p1\">**</ept> version 2.2.0 or newer, and then click <bpt id=\"p2\">**</bpt>Install<ept id=\"p2\">**</ept>.","source":"Browse for **dotnet-test-xunit** version 2.2.0 or newer, and then click **Install**."},{"pos":[4411,4525],"content":"Edit <ph id=\"ph1\">`project.json`</ph> and replace <ph id=\"ph2\">`\"imports\": \"dnxcore50\"`</ph> with <ph id=\"ph3\">`\"imports\": [ \"dnxcore50\", \"portable-net45+win8\" ]`</ph>.","source":"Edit `project.json` and replace `\"imports\": \"dnxcore50\"` with `\"imports\": [ \"dnxcore50\", \"portable-net45+win8\" ]`."},{"content":"This enables the xunit libraries to be correctly restored and used by the project: those libraries have been compiled to be used with portable profiles that include \"portable-net45+win8\", but not .NET Core, which didn't exist when they were built.","pos":[4531,4778]},{"content":"The <ph id=\"ph1\">`import`</ph> relaxes the tooling version checks at build time.","pos":[4779,4841],"source":" The `import` relaxes the tooling version checks at build time."},{"content":"You may now restore packages without error.","pos":[4842,4885]},{"pos":[4891,4976],"content":"Edit <ph id=\"ph1\">`project.json`</ph> to add <ph id=\"ph2\">`\"testRunner\": \"xunit\",`</ph> after the <ph id=\"ph3\">`\"frameworks\"`</ph> section.","source":"Edit `project.json` to add `\"testRunner\": \"xunit\",` after the `\"frameworks\"` section."},{"pos":[4982,5176],"content":"Add a <ph id=\"ph1\">`LibraryTests.cs`</ph> class file to the <bpt id=\"p1\">**</bpt>TestLibrary<ept id=\"p1\">**</ept> project, add the <ph id=\"ph2\">`using`</ph> directives <ph id=\"ph3\">`using Xunit;`</ph> and <ph id=\"ph4\">`using Library;`</ph> to the top of the file, and add the following code to the class:","source":"Add a `LibraryTests.cs` class file to the **TestLibrary** project, add the `using` directives `using Xunit;` and `using Library;` to the top of the file, and add the following code to the class:"},{"pos":[5318,5468],"content":"Optionally, delete the <ph id=\"ph1\">`Program.cs`</ph> file from the <bpt id=\"p1\">**</bpt>TestLibrary<ept id=\"p1\">**</ept> project, and remove <ph id=\"ph2\">`\"buildOptions\": {\"emitEntryPoint\": true},`</ph> from <ph id=\"ph3\">`project.json`</ph>.","source":"Optionally, delete the `Program.cs` file from the **TestLibrary** project, and remove `\"buildOptions\": {\"emitEntryPoint\": true},` from `project.json`."},{"content":"You should now be able to build the solution.","pos":[5473,5518]},{"pos":[5528,5629],"content":"On the <bpt id=\"p1\">**</bpt>Test<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Windows<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Test Explorer<ept id=\"p3\">**</ept>, and in Test Explorer choose <bpt id=\"p4\">**</bpt>Run All<ept id=\"p4\">**</ept>.","source":"On the **Test** menu, choose **Windows**, **Test Explorer**, and in Test Explorer choose **Run All**."},{"content":"The test should pass.","pos":[5637,5658]},{"content":"Writing the console app","pos":[5664,5687]},{"content":"In Solution Explorer, open the context menu for the <ph id=\"ph1\">`src`</ph> folder, and add a new <bpt id=\"p1\">**</bpt>Console Application (.NET Core)<ept id=\"p1\">**</ept> project.","pos":[5692,5816],"source":"In Solution Explorer, open the context menu for the `src` folder, and add a new **Console Application (.NET Core)** project."},{"content":"Name it \"App\", and set the location to <ph id=\"ph1\">`Golden\\src`</ph>.","pos":[5817,5869],"source":" Name it \"App\", and set the location to `Golden\\src`."},{"pos":[5874,5983],"content":"In the <bpt id=\"p1\">**</bpt>App<ept id=\"p1\">**</ept> project, open the context menu for the <bpt id=\"p2\">**</bpt>References<ept id=\"p2\">**</ept> node and choose <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>,  <bpt id=\"p4\">**</bpt>Reference<ept id=\"p4\">**</ept>.","source":"In the **App** project, open the context menu for the **References** node and choose **Add**,  **Reference**."},{"pos":[5989,6108],"content":"In the <bpt id=\"p1\">**</bpt>Reference Manager<ept id=\"p1\">**</ept> dialog, check <bpt id=\"p2\">**</bpt>Library<ept id=\"p2\">**</ept> under the <bpt id=\"p3\">**</bpt>Projects<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>Solution<ept id=\"p4\">**</ept> node, and then click <bpt id=\"p5\">**</bpt>OK<ept id=\"p5\">**</ept>","source":"In the **Reference Manager** dialog, check **Library** under the **Projects**, **Solution** node, and then click **OK**"},{"pos":[6113,6242],"content":"In the <bpt id=\"p1\">**</bpt>App<ept id=\"p1\">**</ept> project, open the <ph id=\"ph1\">`project.json`</ph> file, and replace <ph id=\"ph2\">`\"Library\": \"1.0.0-*\"`</ph> with <ph id=\"ph3\">`\"Library\": {\"target\": \"project\"}`</ph>.","source":"In the **App** project, open the `project.json` file, and replace `\"Library\": \"1.0.0-*\"` with `\"Library\": {\"target\": \"project\"}`."},{"pos":[6247,6329],"content":"Open the context menu for the <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept> node and choose <bpt id=\"p2\">**</bpt>Restore Packages<ept id=\"p2\">**</ept>.","source":"Open the context menu for the **References** node and choose **Restore Packages**."},{"pos":[6334,6415],"content":"Open the context menu for the <bpt id=\"p1\">**</bpt>App<ept id=\"p1\">**</ept> node and choose <bpt id=\"p2\">**</bpt>Set as StartUp Project<ept id=\"p2\">**</ept>.","source":"Open the context menu for the **App** node and choose **Set as StartUp Project**."},{"pos":[6420,6600],"content":"Open the <ph id=\"ph1\">`Program.cs`</ph> file, add a <ph id=\"ph2\">`using Library;`</ph> directive to the top of the file, and then add <ph id=\"ph3\">`Console.WriteLine($\"The answer is {new Thing().Get(42)}\");`</ph> to the <ph id=\"ph4\">`Main`</ph> method.","source":"Open the `Program.cs` file, add a `using Library;` directive to the top of the file, and then add `Console.WriteLine($\"The answer is {new Thing().Get(42)}\");` to the `Main` method."},{"content":"Set a breakpoint after the line that you just added.","pos":[6605,6657]},{"content":"Press F5 to run the application..","pos":[6662,6695]},{"content":"The application should build without error, and should hit the breakpoint.","pos":[6700,6774]},{"content":"You should also be able to check that the application output \"The answer is 42.\".","pos":[6775,6856]},{"content":"A mixed .NET Core library and .NET Framework application","pos":[6858,6914]},{"content":"Starting from the solution obtained with the previous script, execute the following steps:","pos":[6973,7063]},{"pos":[7068,7246],"content":"In Solution Explorer, open the <ph id=\"ph1\">`project.json`</ph> file for the <bpt id=\"p1\">**</bpt>Library<ept id=\"p1\">**</ept> project and replace <ph id=\"ph2\">`\"frameworks\": {\n \"netstandard1.6\" }`</ph> with <ph id=\"ph3\">`\"frameworks\": {\n \"netstandard1.4\" }`</ph>.","leadings":["","   ","   "],"source":"In Solution Explorer, open the `project.json` file for the **Library** project and replace `\"frameworks\": {\n \"netstandard1.6\" }` with `\"frameworks\": {\n \"netstandard1.4\" }`."},{"pos":[7251,7361],"content":"In the <bpt id=\"p1\">**</bpt>Library<ept id=\"p1\">**</ept> project, open the context menu for the <bpt id=\"p2\">**</bpt>References<ept id=\"p2\">**</ept> node and choose <bpt id=\"p3\">**</bpt>Restore Packages<ept id=\"p3\">**</ept>.","source":"In the **Library** project, open the context menu for the **References** node and choose **Restore Packages**."},{"content":"The solution should still build and function exactly like it did before: the test should pass, and the console application should run and be debuggable.","pos":[7366,7518]},{"pos":[7523,7594],"content":"In the <bpt id=\"p1\">**</bpt>Library<ept id=\"p1\">**</ept> project, open the context menu and choose <bpt id=\"p2\">**</bpt>Build<ept id=\"p2\">**</ept>.","source":"In the **Library** project, open the context menu and choose **Build**."},{"content":"In Solution Explorer, open the context menu for the <ph id=\"ph1\">`src`</ph> folder, and choose <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.","pos":[7599,7684],"source":"In Solution Explorer, open the context menu for the `src` folder, and choose **Add**."},{"content":", <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept>.","pos":[7685,7703],"source":" , **New Project**."},{"pos":[7708,7810],"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog, choose the <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept> node, and then choose <bpt id=\"p3\">**</bpt>Console Application<ept id=\"p3\">**</ept>.","source":"In the **New Project** dialog, choose the **Visual C#** node, and then choose **Console Application**."},{"content":"Important","pos":[7819,7828]},{"content":"Make sure you choose a standard console application, not the .NET Core version.","pos":[7841,7920]},{"content":"In this section, you'll be  consuming the library from a .NET Framework application","pos":[7921,8004]},{"pos":[8009,8072],"content":"Name the project \"FxApp\", and set the location to <ph id=\"ph1\">`Golden\\src`</ph>.","source":"Name the project \"FxApp\", and set the location to `Golden\\src`."},{"pos":[8077,8182],"content":"In the <bpt id=\"p1\">**</bpt>FxApp<ept id=\"p1\">**</ept> project, open the context menu for the <bpt id=\"p2\">**</bpt>References<ept id=\"p2\">**</ept> node and choose <bpt id=\"p3\">**</bpt>Add Reference<ept id=\"p3\">**</ept>.","source":"In the **FxApp** project, open the context menu for the **References** node and choose **Add Reference**."},{"pos":[8187,8383],"content":"In the <bpt id=\"p1\">**</bpt>Reference Manager<ept id=\"p1\">**</ept> dialog, choose <bpt id=\"p2\">**</bpt>Browse<ept id=\"p2\">**</ept> and browse to the location of the built <ph id=\"ph1\">`Library.dll`</ph> (under the ..Golden\\src\\Library\\bin\\Debug\\netstandard1.4 path), and then click <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>.","source":"In the **Reference Manager** dialog, choose **Browse** and browse to the location of the built `Library.dll` (under the ..Golden\\src\\Library\\bin\\Debug\\netstandard1.4 path), and then click **Add**."},{"content":"You could also package the library and reference the package, as another way to reference .NET Core code from the .NET Framework.","pos":[8389,8518]},{"pos":[8523,8610],"content":"Open the context menu for the <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept> node and choose <bpt id=\"p2\">**</bpt>Manage NuGet Packages<ept id=\"p2\">**</ept>.","source":"Open the context menu for the **References** node and choose **Manage NuGet Packages**."},{"content":"Choose \"nuget.org\" as the <bpt id=\"p1\">**</bpt>Package source<ept id=\"p1\">**</ept>, and choose the <bpt id=\"p2\">**</bpt>Browse<ept id=\"p2\">**</ept> tab.","pos":[8616,8692],"source":"Choose \"nuget.org\" as the **Package source**, and choose the **Browse** tab."},{"content":"Check the <bpt id=\"p1\">**</bpt>Include prerelease<ept id=\"p1\">**</ept> checkbox, and then browse for <bpt id=\"p2\">**</bpt>Newtonsoft.Json<ept id=\"p2\">**</ept>.","pos":[8693,8776],"source":" Check the **Include prerelease** checkbox, and then browse for **Newtonsoft.Json**."},{"content":"Click <bpt id=\"p1\">**</bpt>Install<ept id=\"p1\">**</ept>.","pos":[8777,8795],"source":" Click **Install**."},{"pos":[8802,9022],"content":"In the <bpt id=\"p1\">**</bpt>FxApp<ept id=\"p1\">**</ept> project, open the <ph id=\"ph1\">`Program.cs`</ph> file and add a <ph id=\"ph2\">`using Library;`</ph> directive to the top of the file, and add <ph id=\"ph3\">`Console.WriteLine($\"The answer is {new Thing().Get(42)}.\");`</ph> to the <ph id=\"ph4\">`Main`</ph> method of the program.","source":"In the **FxApp** project, open the `Program.cs` file and add a `using Library;` directive to the top of the file, and add `Console.WriteLine($\"The answer is {new Thing().Get(42)}.\");` to the `Main` method of the program."},{"content":"Set a breakpoint after the line that you just added.","pos":[9028,9080]},{"pos":[9086,9142],"content":"Make <bpt id=\"p1\">**</bpt>FxApp<ept id=\"p1\">**</ept> the startup application for the solution.","source":"Make **FxApp** the startup application for the solution."},{"content":"Press F5 to run the app.","pos":[9148,9172]},{"content":"The application should build and hit the breakpoint.","pos":[9177,9229]},{"content":"The application output should be \"The answer is 42.\".","pos":[9230,9283]},{"content":"Moving a library from netstandard 1.4 to 1.3","pos":[9285,9329]},{"pos":[9379,9457],"content":"In Solution Explorer, open the <ph id=\"ph1\">`project.json`</ph> file in the <bpt id=\"p1\">**</bpt>Library<ept id=\"p1\">**</ept> project.","source":"In Solution Explorer, open the `project.json` file in the **Library** project."},{"pos":[9462,9547],"content":"Replace <ph id=\"ph1\">`frameworks\": { \"netstandard1.4\" }`</ph> with <ph id=\"ph2\">`frameworks\": { \"netstandard1.3\" }`</ph>.","source":"Replace `frameworks\": { \"netstandard1.4\" }` with `frameworks\": { \"netstandard1.3\" }`."},{"pos":[9552,9662],"content":"In the <bpt id=\"p1\">**</bpt>Library<ept id=\"p1\">**</ept> project, open the context menu for the <bpt id=\"p2\">**</bpt>References<ept id=\"p2\">**</ept> node and choose <bpt id=\"p3\">**</bpt>Restore Packages<ept id=\"p3\">**</ept>.","source":"In the **Library** project, open the context menu for the **References** node and choose **Restore Packages**."},{"pos":[9667,9715],"content":"On the <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Build Library<ept id=\"p2\">**</ept>.","source":"On the **Build** menu, choose **Build Library**."},{"content":"Remove the <ph id=\"ph1\">`Library`</ph> reference from the <bpt id=\"p1\">**</bpt>FxApp<ept id=\"p1\">**</ept> then add it back using the ..Golden\\src\\Library\\bin\\Debug\\netstandard1.3 path.","pos":[9720,9848],"source":"Remove the `Library` reference from the **FxApp** then add it back using the ..Golden\\src\\Library\\bin\\Debug\\netstandard1.3 path."},{"content":"This will now reference the 1.3 version.","pos":[9849,9889]},{"content":"Press F5 to run the application.","pos":[9894,9926]},{"content":"Everything should still work as it did before.","pos":[9931,9977]},{"content":"Check that the application output is \"The answer is 42.\", that the breakpoint was hit, and that variables can be inspected.","pos":[9978,10101]},{"content":"A mixed PCL library and .NET Framework application","pos":[10103,10153]},{"content":"Close the previous solution if it was open: you will be starting a new script from this section on.","pos":[10206,10305]},{"content":"Writing the library","pos":[10311,10330]},{"content":"In Visual Studio, choose <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","pos":[10335,10391],"source":"In Visual Studio, choose **File**, **New**, **Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog, expand the <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept> node, and choose <bpt id=\"p3\">**</bpt>Class Library (Portable for iOS, Android and Windows)<ept id=\"p3\">**</ept>.","pos":[10392,10523],"source":" In the **New Project** dialog, expand the **Visual C#** node, and choose **Class Library (Portable for iOS, Android and Windows)**."},{"content":"Name the project \"PCLLibrary\" and the solution \"GoldenPCL\".","pos":[10529,10588]},{"content":"Leave <bpt id=\"p1\">**</bpt>Create directory for solution<ept id=\"p1\">**</ept> checked.","pos":[10589,10637],"source":" Leave **Create directory for solution** checked."},{"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","pos":[10638,10651],"source":" Click **OK**."},{"pos":[10656,10765],"content":"In Solution Explorer, open the context menu for the <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept> node and choose <bpt id=\"p2\">**</bpt>Manage NuGet Packages<ept id=\"p2\">**</ept>.","source":"In Solution Explorer, open the context menu for the **References** node and choose **Manage NuGet Packages**."},{"content":"Choose \"nuget.org\" as the <bpt id=\"p1\">**</bpt>Package source<ept id=\"p1\">**</ept>, and choose the <bpt id=\"p2\">**</bpt>Browse<ept id=\"p2\">**</ept> tab.","pos":[10770,10846],"source":"Choose \"nuget.org\" as the **Package source**, and choose the **Browse** tab."},{"content":"Check the <bpt id=\"p1\">**</bpt>Include prerelease<ept id=\"p1\">**</ept> checkbox, and then browse for <bpt id=\"p2\">**</bpt>Newtonsoft.Json<ept id=\"p2\">**</ept>.","pos":[10847,10930],"source":" Check the **Include prerelease** checkbox, and then browse for **Newtonsoft.Json**."},{"content":"Click <bpt id=\"p1\">**</bpt>Install<ept id=\"p1\">**</ept>.","pos":[10931,10949],"source":" Click **Install**."},{"pos":[10955,10997],"content":"Rename the class \"Thing\" and add a method:"},{"pos":[11099,11185],"content":"On the <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Build Solution<ept id=\"p2\">**</ept>, and verify that the solution builds.","source":"On the **Build** menu, choose **Build Solution**, and verify that the solution builds."},{"content":"Writing the console app","pos":[11191,11214]},{"content":"In Solution Explorer, open the context menu for the <bpt id=\"p1\">**</bpt>Solution 'GoldenPCL'<ept id=\"p1\">**</ept> node and choose <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>.","pos":[11219,11320],"source":"In Solution Explorer, open the context menu for the **Solution 'GoldenPCL'** node and choose **Add**."},{"content":"<bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept>.","pos":[11321,11337],"source":"**New Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog, expand the <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept> node, choose <bpt id=\"p3\">**</bpt>Console Application<ept id=\"p3\">**</ept>, and name the project \"App\".","pos":[11338,11459],"source":" In the **New Project** dialog, expand the **Visual C#** node, choose **Console Application**, and name the project \"App\"."},{"pos":[11465,11574],"content":"In the <bpt id=\"p1\">**</bpt>App<ept id=\"p1\">**</ept> project, open the context menu for the <bpt id=\"p2\">**</bpt>References<ept id=\"p2\">**</ept> node and choose <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>,  <bpt id=\"p4\">**</bpt>Reference<ept id=\"p4\">**</ept>.","source":"In the **App** project, open the context menu for the **References** node and choose **Add**,  **Reference**."},{"pos":[11580,11767],"content":"In the <bpt id=\"p1\">**</bpt>Reference Manager<ept id=\"p1\">**</ept> dialog, choose <bpt id=\"p2\">**</bpt>Browse<ept id=\"p2\">**</ept> and browse to the location of the built <ph id=\"ph1\">`PCLLibrary.dll`</ph> (under the ..\\GoldenPCL\\PCLLibrary\\bin\\Debug path), and then click <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>.","source":"In the **Reference Manager** dialog, choose **Browse** and browse to the location of the built `PCLLibrary.dll` (under the ..\\GoldenPCL\\PCLLibrary\\bin\\Debug path), and then click **Add**."},{"pos":[11773,11994],"content":"In the <bpt id=\"p1\">**</bpt>App<ept id=\"p1\">**</ept> project, open the <ph id=\"ph1\">`Program.cs`</ph> file and add a <ph id=\"ph2\">`using PCLLibrary;`</ph> directive to the top of the file, and add <ph id=\"ph3\">`Console.WriteLine($\"The answer is {new Thing().Get(42)}.\");`</ph> to the <ph id=\"ph4\">`Main`</ph> method of the program.","source":"In the **App** project, open the `Program.cs` file and add a `using PCLLibrary;` directive to the top of the file, and add `Console.WriteLine($\"The answer is {new Thing().Get(42)}.\");` to the `Main` method of the program."},{"content":"Set a breakpoint after the line that you just added..","pos":[11999,12052]},{"pos":[12057,12160],"content":"In Solution Explorer, open the context menu for the <bpt id=\"p1\">**</bpt>App<ept id=\"p1\">**</ept> node and choose <bpt id=\"p2\">**</bpt>Set as StartUp Project<ept id=\"p2\">**</ept>.","source":"In Solution Explorer, open the context menu for the **App** node and choose **Set as StartUp Project**."},{"content":"Press F5 to run the app.","pos":[12165,12189]},{"content":"The application should build, run, and hit the breakpoint after it outputs \"The answer is 42.\".","pos":[12194,12289]},{"content":"Moving a PCL to a NetStandard library","pos":[12291,12328]},{"content":"The Portable Class Library tooling can automatically modify your PCL to target .NET Standard.","pos":[12367,12460]},{"content":"Double click on the “Properties” node to open the Project Property page*","pos":[12467,12539]},{"content":"Under the “Targeting header” click the hyperlink “Target .NET Platform Standard”","pos":[12545,12625]},{"content":"Click “Yes” when asked for confirmation","pos":[12631,12670]},{"content":"The tooling will automatically select the version of .NET Standard that includes all of the targets originally targeted by your PCL.","pos":[12672,12804]},{"content":"You can target a different version of .NET Standard using the .NET Standard dropdown in the project property page.","pos":[12805,12919]},{"content":"If you previously had a packages.config, you may be prompted to uninstall any installed packages before the conversion.","pos":[12924,13043]},{"content":"Manually edit project.json to target .NET Standard from an existing Portable Class Library","pos":[13049,13139]},{"content":"If your project.json contains “dnxcore50” in the “supports” element, remove it.","pos":[13145,13224]},{"content":"Remove the dependency on “Microsoft.NETCore”","pos":[13230,13274]},{"content":"Modify the dependency on “Microsoft.NETCore.Portable.Compatibility” version “1.0.0” to version “1.0.1”","pos":[13280,13382]},{"content":"Add a dependency on “NETStandard.Library” version “1.6.0”","pos":[13388,13445]},{"content":"From the “frameworks” element, remove the “dotnet” framework (and the “imports” element within it)","pos":[13451,13549]},{"pos":[13555,13685],"content":"Add <ph id=\"ph1\">` \"netstandard1.x” : { } `</ph> to the frameworks element, where x is replaced with the version of .NET Standard you want to target","source":"Add ` \"netstandard1.x” : { } ` to the frameworks element, where x is replaced with the version of .NET Standard you want to target"},{"content":"Example project.json","pos":[13691,13711]},{"content":"This project.json includes supports clauses for UWP and .NET 4.6 and targets netstandard1.3:","pos":[13713,13805]}],"content":"---\ntitle: Getting started with .NET Core on Windows\ndescription: Getting started with .NET Core on Windows, using Visual Studio 2015\nkeywords: .NET, .NET Core\nauthor: bleroy\nmanager: wpickett\nms.date: 06/20/2016\nms.topic: article\nms.prod: .net-core\nms.technology: .net-core-technologies\nms.devlang: dotnet\nms.assetid: d743134a-08a3-4ff6-aab7-49f71f0568c3\n---\n\n# Getting started with .NET Core on Windows, using Visual Studio 2015\n\nby [Bertrand Le Roy](https://github.com/bleroy) and [Phillip Carter](https://github.com/cartermp)\n\nVisual Studio 2015 provides a full-featured development environment for developing .NET Core applications. The procedures in this document describe the steps necessary to build a number of typical .NET Core solutions, or solutions that include .NET Core components, using Visual Studio. The scenarios include testing and using third-party libraries that have not been explicitly built for the most recent version of .NET Core. \n\n## Prerequisites\n\nFollow the instructions on [our prerequisites page](../windows-prerequisites.md) to update your environment.\n\n## Getting Started\n\nThe following steps will set up Visual Studio 2015 for .NET Core development:\n\n1. Open Visual Studio, and on the **File** menu, choose **New**, **Project**.\n\n2. In the **New Project** dialog, in the **Templates** list, expand the **Visual C#** node and choose **.NET Core**. You should see three new project templates for **Class Library (.NET Core)**, **Console Application (.NET Core)**, and **ASP.NET Core Web Application (.NET Core)**.\n\nA solution using only .NET Core projects\n----------------------------------------\n\n### Writing the library\n\n1. In Visual Studio, choose **File**, **New**, **Project**. In the **New Project** dialog, expand the **Visual C#** node and choose the **.NET Core** node, and then choose **Class Library (.NET Core)**. \n\n2. Name the project \"Library\" and the solution \"Golden\". Leave **Create directory for solution** checked. Click **OK**.\n\n3. In Solution Explorer, open the context menu for the **References** node and choose **Manage NuGet Packages**.\n\n4. Choose \"nuget.org\" as the **Package source**, and choose the **Browse** tab. Check the **Include prerelease** checkbox, and then browse for **Newtonsoft.Json**. Click **Install**. \n\n5. Open the context menu for the **References** node and choose  **Restore packages**.\n\n6. Rename the `Class1.cs` file to `Thing.cs`. Accept the rename of the class. Remove the constructor and add a method: `public int Get(int number) => Newtonsoft.Json.JsonConvert.DeserializeObject<int>($\"{number}\");`\n\n7. On the **Build** menu, choose **Build Solution**.\n\n   The solution should build without error.\n\n### Writing the test project\n\n1. In Solution Explorer, open the context menu for the **Solution** node and choose **Add**, **New Solution Folder**. Name the folder \"test\". \n   This is only a solution folder, not a physical folder.\n\n2. Open the context menu for the **test** folder and choose **Add**. **New Project**. In the **New Project** dialog, choose **Console Application (.NET Core)**. Name it \"TestLibrary\" and explicitly put it under the `Golden\\test` path. \n\n   > **Important**\n   >\n   > The project needs to be a console application, not a class library.\n\n3. In the **TestLibrary** project, open the context menu for the **References** node and choose **Add Reference**. \n\n4. In the **Reference Manager** dialog, check **Library** under the **Projects**, **Solution** node, and then click **OK**. \n\n5. In the **TestLibrary** project, open the `project.json` file, and replace `\"Library\": \"1.0.0-*\"` with `\"Library\": {\"target\": \"project\", \"version\": \"1.0.0-*\"}`. \n\n   This is to avoid the resolution of the `Library` project to a NuGet package with the same name. Explicitly setting the target to \"project\" ensures that the tooling will first search for a project with that name, and not a package. \n   \n6. In the **TestLibrary** project, open the context menu for the **References** node and choose **Restore Packages**.\n\n7. Open the context menu for the **References** node and choose **Manage NuGet Packages**.\n\n8. Choose \"nuget.org\" as the **Package source**, and choose the **Browse** tab. Check the **Include prerelease** checkbox, and then browse for **xUnit** version 2.2.0 or newer, and then click **Install**. \n\n9. Browse for **dotnet-test-xunit** version 2.2.0 or newer, and then click **Install**.\n\n10. Edit `project.json` and replace `\"imports\": \"dnxcore50\"` with `\"imports\": [ \"dnxcore50\", \"portable-net45+win8\" ]`. \n\n   This enables the xunit libraries to be correctly restored and used by the project: those libraries have been compiled to be used with portable profiles that include \"portable-net45+win8\", but not .NET Core, which didn't exist when they were built. The `import` relaxes the tooling version checks at build time. You may now restore packages without error.\n\n11. Edit `project.json` to add `\"testRunner\": \"xunit\",` after the `\"frameworks\"` section.\n\n12. Add a `LibraryTests.cs` class file to the **TestLibrary** project, add the `using` directives `using Xunit;` and `using Library;` to the top of the file, and add the following code to the class:\n    ```csharp\n    [Fact]\n    public void ThingGetsObjectValFromNumber() {\n        Assert.Equal(42, new Thing().Get(42));\n    }\n    ```\n    * Optionally, delete the `Program.cs` file from the **TestLibrary** project, and remove `\"buildOptions\": {\"emitEntryPoint\": true},` from `project.json`.\n\n   You should now be able to build the solution. \n   \n13. On the **Test** menu, choose **Windows**, **Test Explorer**, and in Test Explorer choose **Run All**.\n   \n   The test should pass.\n\n### Writing the console app\n\n1. In Solution Explorer, open the context menu for the `src` folder, and add a new **Console Application (.NET Core)** project. Name it \"App\", and set the location to `Golden\\src`.\n\n2. In the **App** project, open the context menu for the **References** node and choose **Add**,  **Reference**. \n\n3. In the **Reference Manager** dialog, check **Library** under the **Projects**, **Solution** node, and then click **OK**\n\n4. In the **App** project, open the `project.json` file, and replace `\"Library\": \"1.0.0-*\"` with `\"Library\": {\"target\": \"project\"}`.\n\n5. Open the context menu for the **References** node and choose **Restore Packages**.\n\n6. Open the context menu for the **App** node and choose **Set as StartUp Project**.\n\n7. Open the `Program.cs` file, add a `using Library;` directive to the top of the file, and then add `Console.WriteLine($\"The answer is {new Thing().Get(42)}\");` to the `Main` method.\n\n8. Set a breakpoint after the line that you just added.\n\n9. Press F5 to run the application..\n\n   The application should build without error, and should hit the breakpoint. You should also be able to check that the application output \"The answer is 42.\".\n\nA mixed .NET Core library and .NET Framework application\n--------------------------------------------------------\n\nStarting from the solution obtained with the previous script, execute the following steps:\n\n1. In Solution Explorer, open the `project.json` file for the **Library** project and replace `\"frameworks\": {\n    \"netstandard1.6\" }` with `\"frameworks\": {\n    \"netstandard1.4\" }`.\n\n2. In the **Library** project, open the context menu for the **References** node and choose **Restore Packages**.\n\n   The solution should still build and function exactly like it did before: the test should pass, and the console application should run and be debuggable.\n\n3. In the **Library** project, open the context menu and choose **Build**.\n\n4. In Solution Explorer, open the context menu for the `src` folder, and choose **Add**. , **New Project**.\n\n5. In the **New Project** dialog, choose the **Visual C#** node, and then choose **Console Application**.\n\n   > **Important**\n   >\n   > Make sure you choose a standard console application, not the .NET Core version. In this section, you'll be  consuming the library from a .NET Framework application\n\n6. Name the project \"FxApp\", and set the location to `Golden\\src`.\n\n7. In the **FxApp** project, open the context menu for the **References** node and choose **Add Reference**.\n\n8. In the **Reference Manager** dialog, choose **Browse** and browse to the location of the built `Library.dll` (under the ..Golden\\src\\Library\\bin\\Debug\\netstandard1.4 path), and then click **Add**. \n\n   You could also package the library and reference the package, as another way to reference .NET Core code from the .NET Framework.\n\n9. Open the context menu for the **References** node and choose **Manage NuGet Packages**.\n\n10. Choose \"nuget.org\" as the **Package source**, and choose the **Browse** tab. Check the **Include prerelease** checkbox, and then browse for **Newtonsoft.Json**. Click **Install**. \n\n11. In the **FxApp** project, open the `Program.cs` file and add a `using Library;` directive to the top of the file, and add `Console.WriteLine($\"The answer is {new Thing().Get(42)}.\");` to the `Main` method of the program.\n\n12. Set a breakpoint after the line that you just added.\n\n13. Make **FxApp** the startup application for the solution.\n\n14. Press F5 to run the app.\n\n   The application should build and hit the breakpoint. The application output should be \"The answer is 42.\".\n\nMoving a library from netstandard 1.4 to 1.3\n--------------------------------------------\n\n1. In Solution Explorer, open the `project.json` file in the **Library** project.\n\n2. Replace `frameworks\": { \"netstandard1.4\" }` with `frameworks\": { \"netstandard1.3\" }`.\n\n3. In the **Library** project, open the context menu for the **References** node and choose **Restore Packages**.\n\n4. On the **Build** menu, choose **Build Library**.\n\n5. Remove the `Library` reference from the **FxApp** then add it back using the ..Golden\\src\\Library\\bin\\Debug\\netstandard1.3 path. This will now reference the 1.3 version.\n\n6. Press F5 to run the application.\n\n   Everything should still work as it did before. Check that the application output is \"The answer is 42.\", that the breakpoint was hit, and that variables can be inspected.\n\nA mixed PCL library and .NET Framework application\n--------------------------------------------------\n\nClose the previous solution if it was open: you will be starting a new script from this section on.\n\n### Writing the library\n\n1. In Visual Studio, choose **File**, **New**, **Project**. In the **New Project** dialog, expand the **Visual C#** node, and choose **Class Library (Portable for iOS, Android and Windows)**. \n\n2. Name the project \"PCLLibrary\" and the solution \"GoldenPCL\". Leave **Create directory for solution** checked. Click **OK**.\n\n3. In Solution Explorer, open the context menu for the **References** node and choose **Manage NuGet Packages**.\n\n4. Choose \"nuget.org\" as the **Package source**, and choose the **Browse** tab. Check the **Include prerelease** checkbox, and then browse for **Newtonsoft.Json**. Click **Install**. \n\n5. Rename the class \"Thing\" and add a method: `public int Get(int number) => Newtonsoft.Json.JsonConvert.DeserializeObject<int>($\"{number}\");`\n\n6. On the **Build** menu, choose **Build Solution**, and verify that the solution builds.\n\n### Writing the console app\n\n1. In Solution Explorer, open the context menu for the **Solution 'GoldenPCL'** node and choose **Add**. **New Project**. In the **New Project** dialog, expand the **Visual C#** node, choose **Console Application**, and name the project \"App\". \n\n2. In the **App** project, open the context menu for the **References** node and choose **Add**,  **Reference**. \n\n3. In the **Reference Manager** dialog, choose **Browse** and browse to the location of the built `PCLLibrary.dll` (under the ..\\GoldenPCL\\PCLLibrary\\bin\\Debug path), and then click **Add**. \n\n4. In the **App** project, open the `Program.cs` file and add a `using PCLLibrary;` directive to the top of the file, and add `Console.WriteLine($\"The answer is {new Thing().Get(42)}.\");` to the `Main` method of the program.\n\n5. Set a breakpoint after the line that you just added..\n\n6. In Solution Explorer, open the context menu for the **App** node and choose **Set as StartUp Project**.\n\n7. Press F5 to run the app.\n\n   The application should build, run, and hit the breakpoint after it outputs \"The answer is 42.\".\n\nMoving a PCL to a NetStandard library\n-------------------------------------\nThe Portable Class Library tooling can automatically modify your PCL to target .NET Standard. \n\n1.  Double click on the “Properties” node to open the Project Property page*\n\n2.  Under the “Targeting header” click the hyperlink “Target .NET Platform Standard”\n\n3.  Click “Yes” when asked for confirmation\n\nThe tooling will automatically select the version of .NET Standard that includes all of the targets originally targeted by your PCL. You can target a different version of .NET Standard using the .NET Standard dropdown in the project property page.\n \n* If you previously had a packages.config, you may be prompted to uninstall any installed packages before the conversion.\n\n### Manually edit project.json to target .NET Standard from an existing Portable Class Library\n\n1.  If your project.json contains “dnxcore50” in the “supports” element, remove it.\n\n2.  Remove the dependency on “Microsoft.NETCore”\n\n3.  Modify the dependency on “Microsoft.NETCore.Portable.Compatibility” version “1.0.0” to version “1.0.1”\n\n4.  Add a dependency on “NETStandard.Library” version “1.6.0”\n\n5.  From the “frameworks” element, remove the “dotnet” framework (and the “imports” element within it)\n\n6.  Add ` \"netstandard1.x” : { } ` to the frameworks element, where x is replaced with the version of .NET Standard you want to target\n\n### Example project.json\n\nThis project.json includes supports clauses for UWP and .NET 4.6 and targets netstandard1.3:\n```\n{\n  \"supports\": {\n    \"net46.app\": {},\n    \"uwp.10.0.app\": {},\n  },\n  \"dependencies\": {\n    \"NETStandard.Library\": \"1.6.0\",\n    \"Microsoft.NETCore.Portable.Compatibility\": \"1.0.1\"\n  },\n  \"frameworks\": {\n    \"netstandard1.3\" : {}\n  }\n}\n```\n\n\n"}