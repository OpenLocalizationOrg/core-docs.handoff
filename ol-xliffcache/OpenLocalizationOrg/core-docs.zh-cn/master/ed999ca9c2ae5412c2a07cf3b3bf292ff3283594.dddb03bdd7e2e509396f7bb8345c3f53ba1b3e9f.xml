{"nodes":[{"content":"Better Fibonacci Sample","pos":[0,23]},{"content":"This sample is part of the <bpt id=\"p1\">[</bpt>step-by-step tutorial<ept id=\"p1\">](https://docs.microsoft.com/dotnet/articles/core/tutorials/using-with-xplat-cli)</ept> for creating .NET Core Console Applications.","pos":[42,217],"source":"This sample is part of the [step-by-step tutorial](https://docs.microsoft.com/dotnet/articles/core/tutorials/using-with-xplat-cli)\nfor creating .NET Core Console Applications."},{"content":"Please see that topic for detailed steps on the code for this sample.","pos":[218,287],"source":" Please see that topic for detailed steps on the code\nfor this sample."},{"content":"Key Features","pos":[289,301]},{"pos":[316,451],"content":"This sample demonstrates a multiple source file project, adding recursion and caching previous results to the initial Fibonacci sample.","source":"This sample demonstrates a multiple source file project, adding recursion and caching previous\nresults to the initial Fibonacci sample."},{"content":"Build and Run","pos":[453,466]},{"content":"To build and run the sample, type the following three commands:","pos":[482,545]},{"content":"installs all the dependencies for this sample into the current directory.","pos":[610,683]},{"content":"creates the output assembly (or assemblies).","pos":[699,743]},{"content":"runs the output assembly.","pos":[757,782]}],"content":"Better Fibonacci Sample\n================\n\nThis sample is part of the [step-by-step tutorial](https://docs.microsoft.com/dotnet/articles/core/tutorials/using-with-xplat-cli)\nfor creating .NET Core Console Applications. Please see that topic for detailed steps on the code\nfor this sample.\n\nKey Features\n------------\n\nThis sample demonstrates a multiple source file project, adding recursion and caching previous\nresults to the initial Fibonacci sample.\n\nBuild and Run\n-------------\n\nTo build and run the sample, type the following three commands:\n\n`dotnet restore`\n`dotnet build`\n`dotnet run`\n\n`dotnet restore` installs all the dependencies for this sample into the current directory.\n`dotnet build` creates the output assembly (or assemblies).\n`dotnet run` runs the output assembly.\n"}