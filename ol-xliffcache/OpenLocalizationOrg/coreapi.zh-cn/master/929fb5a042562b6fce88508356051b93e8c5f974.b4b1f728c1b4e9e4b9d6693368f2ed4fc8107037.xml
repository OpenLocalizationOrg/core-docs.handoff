{"nodes":[{"pos":[896,918],"content":"ThreadingAclExtensions","needQuote":true,"nodes":[{"content":"ThreadingAclExtensions","pos":[0,22]}]},{"pos":[2513,2546],"content":"GetAccessControl(EventWaitHandle)","needQuote":true,"nodes":[{"content":"GetAccessControl(EventWaitHandle)","pos":[0,33]}]},{"pos":[3953,3976],"content":"GetAccessControl(Mutex)","needQuote":true,"nodes":[{"content":"GetAccessControl(Mutex)","pos":[0,23]}]},{"pos":[5312,5339],"content":"GetAccessControl(Semaphore)","needQuote":true,"nodes":[{"content":"GetAccessControl(Semaphore)","pos":[0,27]}]},{"pos":[6899,6957],"content":"SetAccessControl(EventWaitHandle, EventWaitHandleSecurity)","needQuote":true,"nodes":[{"content":"SetAccessControl(EventWaitHandle, EventWaitHandleSecurity)","pos":[0,58]}]},{"pos":[8618,8656],"content":"SetAccessControl(Mutex, MutexSecurity)","needQuote":true,"nodes":[{"content":"SetAccessControl(Mutex, MutexSecurity)","pos":[0,38]}]},{"pos":[10238,10284],"content":"SetAccessControl(Semaphore, SemaphoreSecurity)","needQuote":true,"nodes":[{"content":"SetAccessControl(Semaphore, SemaphoreSecurity)","pos":[0,46]}]},{"pos":[11528,11544],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[11702,11708],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11877,11887],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12016,12024],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12127,12128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12175,12176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12266,12274],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12377,12378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12425,12426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12608,12622],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12779,12785],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12884,12885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12955,12961],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13046,13047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13150,13156],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13255,13256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13326,13332],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13417,13418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13628,13650],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13844,13850],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13949,13950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14020,14026],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14112,14113]},{"pos":[14191,14197],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14282,14283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14400,14406],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14505,14506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14576,14582],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14668,14669]},{"pos":[14747,14753],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14838,14839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15067,15098],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15319,15334],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15451,15452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15522,15528],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15614,15615]},{"pos":[15693,15699],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15784,15785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15911,15926],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16043,16044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16114,16120],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16206,16207]},{"pos":[16285,16291],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16376,16377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16539,16552],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16690,16701],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16810,16811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16858,16859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16952,16963],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17072,17073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17120,17121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17275,17284],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[17410,17417],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17518,17519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17566,17567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17656,17663],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17764,17765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17812,17813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17983,18000],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18150,18165],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18282,18283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18330,18331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18428,18443],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18560,18561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18608,18609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18710,18716],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18902,18917],"content":"EventWaitHandle","needQuote":true,"nodes":[{"content":"EventWaitHandle","pos":[0,15]}]},{"pos":[19193,19216],"content":"EventWaitHandleSecurity","needQuote":true,"nodes":[{"content":"EventWaitHandleSecurity","pos":[0,23]}]},{"pos":[19433,19462],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[19674,19679],"content":"Mutex","needQuote":true,"nodes":[{"content":"Mutex","pos":[0,5]}]},{"pos":[19915,19928],"content":"MutexSecurity","needQuote":true,"nodes":[{"content":"MutexSecurity","pos":[0,13]}]},{"pos":[20146,20155],"content":"Semaphore","needQuote":true,"nodes":[{"content":"Semaphore","pos":[0,9]}]},{"pos":[20407,20424],"content":"SemaphoreSecurity","needQuote":true,"nodes":[{"content":"SemaphoreSecurity","pos":[0,17]}]}],"content":"items:\n- uid: System.Threading.ThreadingAclExtensions\n  commentId: T:System.Threading.ThreadingAclExtensions\n  id: ThreadingAclExtensions\n  parent: System.Threading\n  children:\n  - System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)\n  - System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)\n  - System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)\n  - System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)\n  - System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)\n  - System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)\n  langs:\n  - csharp\n  - vb\n  name: ThreadingAclExtensions\n  nameWithType: ThreadingAclExtensions\n  fullName: System.Threading.ThreadingAclExtensions\n  type: Class\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ThreadingAclExtensions\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 120\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Threading\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public class ThreadingAclExtensions\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Class ThreadingAclExtensions\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)\n  commentId: M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)\n  id: GetAccessControl(System.Threading.EventWaitHandle)\n  isExtensionMethod: true\n  parent: System.Threading.ThreadingAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: GetAccessControl(EventWaitHandle)\n  nameWithType: ThreadingAclExtensions.GetAccessControl(EventWaitHandle)\n  fullName: System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAccessControl\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 123\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Threading\n  syntax:\n    content: public static EventWaitHandleSecurity GetAccessControl(this EventWaitHandle handle)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Function GetAccessControl(handle As EventWaitHandle) As EventWaitHandleSecurity\n    parameters:\n    - id: handle\n      type: System.Threading.EventWaitHandle\n    return:\n      type: System.Security.AccessControl.EventWaitHandleSecurity\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)\n  commentId: M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)\n  id: GetAccessControl(System.Threading.Mutex)\n  isExtensionMethod: true\n  parent: System.Threading.ThreadingAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: GetAccessControl(Mutex)\n  nameWithType: ThreadingAclExtensions.GetAccessControl(Mutex)\n  fullName: System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAccessControl\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 124\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Threading\n  syntax:\n    content: public static MutexSecurity GetAccessControl(this Mutex mutex)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Function GetAccessControl(mutex As Mutex) As MutexSecurity\n    parameters:\n    - id: mutex\n      type: System.Threading.Mutex\n    return:\n      type: System.Security.AccessControl.MutexSecurity\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)\n  commentId: M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)\n  id: GetAccessControl(System.Threading.Semaphore)\n  isExtensionMethod: true\n  parent: System.Threading.ThreadingAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: GetAccessControl(Semaphore)\n  nameWithType: ThreadingAclExtensions.GetAccessControl(Semaphore)\n  fullName: System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAccessControl\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 125\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Threading\n  syntax:\n    content: public static SemaphoreSecurity GetAccessControl(this Semaphore semaphore)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Function GetAccessControl(semaphore As Semaphore) As SemaphoreSecurity\n    parameters:\n    - id: semaphore\n      type: System.Threading.Semaphore\n    return:\n      type: System.Security.AccessControl.SemaphoreSecurity\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)\n  commentId: M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)\n  id: SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)\n  isExtensionMethod: true\n  parent: System.Threading.ThreadingAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: SetAccessControl(EventWaitHandle, EventWaitHandleSecurity)\n  nameWithType: ThreadingAclExtensions.SetAccessControl(EventWaitHandle, EventWaitHandleSecurity)\n  fullName: System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle, System.Security.AccessControl.EventWaitHandleSecurity)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessControl\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 126\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Threading\n  syntax:\n    content: public static void SetAccessControl(this EventWaitHandle handle, EventWaitHandleSecurity eventSecurity)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Sub SetAccessControl(handle As EventWaitHandle, eventSecurity As EventWaitHandleSecurity)\n    parameters:\n    - id: handle\n      type: System.Threading.EventWaitHandle\n    - id: eventSecurity\n      type: System.Security.AccessControl.EventWaitHandleSecurity\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)\n  commentId: M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)\n  id: SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)\n  isExtensionMethod: true\n  parent: System.Threading.ThreadingAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: SetAccessControl(Mutex, MutexSecurity)\n  nameWithType: ThreadingAclExtensions.SetAccessControl(Mutex, MutexSecurity)\n  fullName: System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex, System.Security.AccessControl.MutexSecurity)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessControl\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 127\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Threading\n  syntax:\n    content: public static void SetAccessControl(this Mutex mutex, MutexSecurity mutexSecurity)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Sub SetAccessControl(mutex As Mutex, mutexSecurity As MutexSecurity)\n    parameters:\n    - id: mutex\n      type: System.Threading.Mutex\n    - id: mutexSecurity\n      type: System.Security.AccessControl.MutexSecurity\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)\n  commentId: M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)\n  id: SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)\n  isExtensionMethod: true\n  parent: System.Threading.ThreadingAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: SetAccessControl(Semaphore, SemaphoreSecurity)\n  nameWithType: ThreadingAclExtensions.SetAccessControl(Semaphore, SemaphoreSecurity)\n  fullName: System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore, System.Security.AccessControl.SemaphoreSecurity)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessControl\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 128\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Threading\n  syntax:\n    content: public static void SetAccessControl(this Semaphore semaphore, SemaphoreSecurity semaphoreSecurity)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Sub SetAccessControl(semaphore As Semaphore, semaphoreSecurity As SemaphoreSecurity)\n    parameters:\n    - id: semaphore\n      type: System.Threading.Semaphore\n    - id: semaphoreSecurity\n      type: System.Security.AccessControl.SemaphoreSecurity\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\nreferences:\n- uid: System.Threading\n  commentId: N:System.Threading\n  isExternal: false\n  name: System.Threading\n  nameWithType: System.Threading\n  fullName: System.Threading\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Threading.EventWaitHandle\n  commentId: T:System.Threading.EventWaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: EventWaitHandle\n  nameWithType: EventWaitHandle\n  fullName: System.Threading.EventWaitHandle\n- uid: System.Security.AccessControl.EventWaitHandleSecurity\n  commentId: T:System.Security.AccessControl.EventWaitHandleSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: EventWaitHandleSecurity\n  nameWithType: EventWaitHandleSecurity\n  fullName: System.Security.AccessControl.EventWaitHandleSecurity\n- uid: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n- uid: System.Threading.Mutex\n  commentId: T:System.Threading.Mutex\n  parent: System.Threading\n  isExternal: false\n  name: Mutex\n  nameWithType: Mutex\n  fullName: System.Threading.Mutex\n- uid: System.Security.AccessControl.MutexSecurity\n  commentId: T:System.Security.AccessControl.MutexSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: MutexSecurity\n  nameWithType: MutexSecurity\n  fullName: System.Security.AccessControl.MutexSecurity\n- uid: System.Threading.Semaphore\n  commentId: T:System.Threading.Semaphore\n  parent: System.Threading\n  isExternal: false\n  name: Semaphore\n  nameWithType: Semaphore\n  fullName: System.Threading.Semaphore\n- uid: System.Security.AccessControl.SemaphoreSecurity\n  commentId: T:System.Security.AccessControl.SemaphoreSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: SemaphoreSecurity\n  nameWithType: SemaphoreSecurity\n  fullName: System.Security.AccessControl.SemaphoreSecurity\n"}