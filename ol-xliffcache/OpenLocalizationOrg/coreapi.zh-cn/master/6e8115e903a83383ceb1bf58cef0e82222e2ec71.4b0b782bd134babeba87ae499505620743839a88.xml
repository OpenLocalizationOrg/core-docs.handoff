{"nodes":[{"pos":[443,458],"content":"CurrencyWrapper","needQuote":true,"nodes":[{"content":"CurrencyWrapper","pos":[0,15]}]},{"pos":[2256,2280],"content":"CurrencyWrapper(Decimal)","needQuote":true,"nodes":[{"content":"CurrencyWrapper(Decimal)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;Decimal&lt;/strong&gt; to be wrapped and marshaled as &lt;strong&gt;VT_CY&lt;/strong&gt;.","pos":[3214,3302],"source":"\\n<p>The <strong>Decimal</strong> to be wrapped and marshaled as <strong>VT_CY</strong>."},{"content":"&lt;/p&gt;\\n","pos":[3303,3309],"source":" </p>\\n"},{"pos":[3705,3728],"content":"CurrencyWrapper(Object)","needQuote":true,"nodes":[{"content":"CurrencyWrapper(Object)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The object containing the &lt;strong&gt;Decimal&lt;/strong&gt; to be wrapped and marshaled as &lt;strong&gt;VT_CY&lt;/strong&gt;.","pos":[4680,4790],"source":"\\n<p>The object containing the <strong>Decimal</strong> to be wrapped and marshaled as <strong>VT_CY</strong>."},{"content":"&lt;/p&gt;\\n","pos":[4791,4797],"source":" </p>\\n"},{"pos":[5407,5420],"content":"WrappedObject","needQuote":true,"nodes":[{"content":"WrappedObject","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The wrapped object to be marshaled as type &lt;strong&gt;VT_CY&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6194,6271],"source":"\\n<p>The wrapped object to be marshaled as type <strong>VT_CY</strong>.</p>\\n"},{"pos":[6476,6506],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[6709,6715],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6875,6885],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6980,6988],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7057,7058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7085,7086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7156,7164],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7233,7234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7261,7262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7445,7459],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7578,7584],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7651,7652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7702,7708],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7768,7769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7852,7858],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7925,7926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7976,7982],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8042,8043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8257,8279],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8427,8433],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8500,8501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8551,8557],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8618,8619]},{"pos":[8674,8680],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8740,8741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8838,8844],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8911,8912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8962,8968],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9029,9030]},{"pos":[9085,9091],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9151,9152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9397,9428],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9594,9609],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9685,9686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9736,9742],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9803,9804]},{"pos":[9859,9865],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9925,9926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10032,10047],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10123,10124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10174,10180],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10241,10242]},{"pos":[10297,10303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10363,10364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10594,10607],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10708,10719],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10791,10792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10819,10820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10893,10904],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10976,10977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11004,11005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11180,11189],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11282,11289],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11357,11358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11385,11386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11455,11462],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11530,11531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11558,11559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11734,11751],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11860,11875],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11951,11952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11979,11980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12057,12072],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12148,12149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12176,12177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12322,12328],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12460,12467],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[12626,12643],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.CurrencyWrapper\n  commentId: T:System.Runtime.InteropServices.CurrencyWrapper\n  id: CurrencyWrapper\n  parent: System.Runtime.InteropServices\n  children:\n  - System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)\n  - System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)\n  - System.Runtime.InteropServices.CurrencyWrapper.WrappedObject\n  langs:\n  - csharp\n  - vb\n  name: CurrencyWrapper\n  fullName: System.Runtime.InteropServices.CurrencyWrapper\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrencyWrapper\n    path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Wraps objects the marshaler should marshal as a <strong>VT_CY</strong>.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public sealed class CurrencyWrapper\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class CurrencyWrapper\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.ObsoleteAttribute\n    ctor: System.ObsoleteAttribute.#ctor(System.String)\n    arguments:\n    - type: System.String\n      value: CurrencyWrapper and support for marshalling to the VARIANT type may be unavailable in future releases.\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: CurrencyWrapper\n- uid: System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)\n  commentId: M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)\n  id: '#ctor(System.Decimal)'\n  parent: System.Runtime.InteropServices.CurrencyWrapper\n  langs:\n  - csharp\n  - vb\n  name: CurrencyWrapper(Decimal)\n  fullName: System.Runtime.InteropServices.CurrencyWrapper.CurrencyWrapper(System.Decimal)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs\n    startLine: 21\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.InteropServices.CurrencyWrapper\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the <strong>Decimal</strong> to be wrapped and marshaled as type <strong>VT_CY</strong>.</p>\\n\"\n  syntax:\n    content: public CurrencyWrapper(decimal obj)\n    content.vb: Public Sub New(obj As Decimal)\n    parameters:\n    - id: obj\n      type: System.Decimal\n      description: \"\\n<p>The <strong>Decimal</strong> to be wrapped and marshaled as <strong>VT_CY</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CurrencyWrapper.CurrencyWrapper(Decimal)\n- uid: System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)\n  commentId: M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Runtime.InteropServices.CurrencyWrapper\n  langs:\n  - csharp\n  - vb\n  name: CurrencyWrapper(Object)\n  fullName: System.Runtime.InteropServices.CurrencyWrapper.CurrencyWrapper(System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.InteropServices.CurrencyWrapper\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the object containing the <strong>Decimal</strong> to be wrapped and marshaled as type <strong>VT_CY</strong>.</p>\\n\"\n  syntax:\n    content: public CurrencyWrapper(object obj)\n    content.vb: Public Sub New(obj As Object)\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object containing the <strong>Decimal</strong> to be wrapped and marshaled as <strong>VT_CY</strong>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>obj</em> parameter is not a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CurrencyWrapper.CurrencyWrapper(Object)\n- uid: System.Runtime.InteropServices.CurrencyWrapper.WrappedObject\n  commentId: P:System.Runtime.InteropServices.CurrencyWrapper.WrappedObject\n  id: WrappedObject\n  parent: System.Runtime.InteropServices.CurrencyWrapper\n  langs:\n  - csharp\n  - vb\n  name: WrappedObject\n  fullName: System.Runtime.InteropServices.CurrencyWrapper.WrappedObject\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WrappedObject\n    path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs\n    startLine: 33\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Gets the wrapped object to be marshaled as type <strong>VT_CY</strong>.</p>\\n\"\n  syntax:\n    content: public decimal WrappedObject { get; }\n    content.vb: Public ReadOnly Property WrappedObject As Decimal\n    parameters: []\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The wrapped object to be marshaled as type <strong>VT_CY</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CurrencyWrapper.WrappedObject\nreferences:\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}