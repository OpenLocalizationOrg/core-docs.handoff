{"nodes":[{"pos":[3053,3057],"content":"File","needQuote":true,"nodes":[{"content":"File","pos":[0,4]}]},{"pos":[4720,4763],"content":"AppendAllLines(String, IEnumerable<String>)","needQuote":true,"nodes":[{"content":"AppendAllLines(String, IEnumerable&lt;String&gt;)","pos":[0,43],"source":"AppendAllLines(String, IEnumerable<String>)"}]},{"content":"\\n&lt;p&gt;The file to append the lines to.","pos":[5665,5702],"source":"\\n<p>The file to append the lines to."},{"content":"The file is created if it doesn't already exist.&lt;/p&gt;\\n","pos":[5703,5757],"source":" The file is created if it doesn't already exist.</p>\\n"},{"content":"\\n&lt;p&gt;The lines to append to the file.&lt;/p&gt;\\n","pos":[5864,5907],"source":"\\n<p>The lines to append to the file.</p>\\n"},{"content":"\\n&lt;p&gt;Either&lt;em&gt; path &lt;/em&gt;or &lt;em&gt;contents&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6359,6437],"source":"\\n<p>Either<em> path </em>or <em>contents</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).&lt;/p&gt;\\n","pos":[6558,6669],"source":"\\n<p>\\n<em>path</em> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).</p>\\n"},{"content":"\\n&lt;p&gt;The file specified by &lt;em&gt;path&lt;/em&gt; was not found.&lt;/p&gt;\\n","pos":[6780,6841],"source":"\\n<p>The file specified by <em>path</em> was not found.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.&lt;/p&gt;\\n","pos":[6932,6988],"source":"\\n<p>An I/O error occurred while opening the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; exceeds the system-defined maximum length.","pos":[7097,7160],"source":"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[7161,7295],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.&lt;/p&gt;\\n","pos":[7400,7451],"source":"\\n<p>\\n<em>path</em> is in an invalid format.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have permission to write to the file.&lt;/p&gt;\\n","pos":[7566,7634],"source":"\\n<p>The caller does not have permission to write to the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specifies a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a directory.&lt;/p&gt;\\n","pos":[7751,7944],"source":"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n"},{"pos":[8771,8824],"content":"AppendAllLines(String, IEnumerable<String>, Encoding)","needQuote":true,"nodes":[{"content":"AppendAllLines(String, IEnumerable&lt;String&gt;, Encoding)","pos":[0,53],"source":"AppendAllLines(String, IEnumerable<String>, Encoding)"}]},{"content":"\\n&lt;p&gt;The file to append the lines to.","pos":[9819,9856],"source":"\\n<p>The file to append the lines to."},{"content":"The file is created if it doesn't already exist.&lt;/p&gt;\\n","pos":[9857,9911],"source":" The file is created if it doesn't already exist.</p>\\n"},{"content":"\\n&lt;p&gt;The lines to append to the file.&lt;/p&gt;\\n","pos":[10018,10061],"source":"\\n<p>The lines to append to the file.</p>\\n"},{"content":"\\n&lt;p&gt;The character encoding to use.&lt;/p&gt;\\n","pos":[10135,10176],"source":"\\n<p>The character encoding to use.</p>\\n"},{"content":"\\n&lt;p&gt;Either&lt;em&gt; path&lt;/em&gt;, &lt;em&gt;contents&lt;/em&gt;, or &lt;em&gt;encoding&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10628,10726],"source":"\\n<p>Either<em> path</em>, <em>contents</em>, or <em>encoding</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).&lt;/p&gt;\\n","pos":[10847,10958],"source":"\\n<p>\\n<em>path</em> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).</p>\\n"},{"content":"\\n&lt;p&gt;The file specified by &lt;em&gt;path&lt;/em&gt; was not found.&lt;/p&gt;\\n","pos":[11069,11130],"source":"\\n<p>The file specified by <em>path</em> was not found.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.&lt;/p&gt;\\n","pos":[11221,11277],"source":"\\n<p>An I/O error occurred while opening the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; exceeds the system-defined maximum length.","pos":[11386,11449],"source":"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[11450,11584],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.&lt;/p&gt;\\n","pos":[11689,11740],"source":"\\n<p>\\n<em>path</em> is in an invalid format.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[11855,11915],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specifies a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a directory.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[12032,12296],"source":"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[12989,13018],"content":"AppendAllText(String, String)","needQuote":true,"nodes":[{"content":"AppendAllText(String, String)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The file to append the specified string to.","pos":[13865,13913],"source":"\\n<p>The file to append the specified string to."},{"content":"&lt;/p&gt;\\n","pos":[13914,13920],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string to append to the file.","pos":[13987,14025],"source":"\\n<p>The string to append to the file."},{"content":"&lt;/p&gt;\\n","pos":[14026,14032],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[14477,14523],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[14524,14530],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[14639,14724],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[14725,14854]},{"content":"&lt;/p&gt;\\n","pos":[14855,14861],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","pos":[14982,15090],"source":"\\n<p>The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[15091,15097],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[15188,15238],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[15239,15245],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[15362,15630],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[15631,15637],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[15742,15787],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[15788,15794],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[15909,15963],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[15964,15970],"source":" </p>\\n"},{"pos":[16537,16576],"content":"AppendAllText(String, String, Encoding)","needQuote":true,"nodes":[{"content":"AppendAllText(String, String, Encoding)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The file to append the specified string to.","pos":[17375,17423],"source":"\\n<p>The file to append the specified string to."},{"content":"&lt;/p&gt;\\n","pos":[17424,17430],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string to append to the file.","pos":[17497,17535],"source":"\\n<p>The string to append to the file."},{"content":"&lt;/p&gt;\\n","pos":[17536,17542],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The character encoding to use.","pos":[17616,17651],"source":"\\n<p>The character encoding to use."},{"content":"&lt;/p&gt;\\n","pos":[17652,17658],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[18103,18149],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[18150,18156],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[18265,18350],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[18351,18480]},{"content":"&lt;/p&gt;\\n","pos":[18481,18487],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","pos":[18608,18716],"source":"\\n<p>The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[18717,18723],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[18814,18864],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[18865,18871],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[18988,19256],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[19257,19263],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[19368,19413],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[19414,19420],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[19535,19589],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[19590,19596],"source":" </p>\\n"},{"pos":[20059,20077],"content":"AppendText(String)","needQuote":true,"nodes":[{"content":"AppendText(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The path to the file to append to.","pos":[20888,20927],"source":"\\n<p>The path to the file to append to."},{"content":"&lt;/p&gt;\\n","pos":[20928,20934],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A stream writer that appends UTF-8 encoded text to the specified file or to a new file.&lt;/p&gt;\\n","pos":[21003,21101],"source":"\\n<p>A stream writer that appends UTF-8 encoded text to the specified file or to a new file.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[21232,21286],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[21287,21293],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[21724,21770],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[21771,21777],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[21886,21971],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[21972,22101]},{"content":"&lt;/p&gt;\\n","pos":[22102,22108],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","pos":[22229,22337],"source":"\\n<p>The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[22338,22344],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[22449,22494],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[22495,22501],"source":" </p>\\n"},{"pos":[23051,23071],"content":"Copy(String, String)","needQuote":true,"nodes":[{"content":"Copy(String, String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The file to copy.","pos":[23809,23831],"source":"\\n<p>The file to copy."},{"content":"&lt;/p&gt;\\n","pos":[23832,23838],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the destination file.","pos":[23909,23947],"source":"\\n<p>The name of the destination file."},{"content":"This cannot be a directory or an existing file.","pos":[23948,23995]},{"content":"&lt;/p&gt;\\n","pos":[23996,24002],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[24133,24187],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[24188,24194],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceFileName&lt;/em&gt; or &lt;em&gt;destFileName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[24756,24837],"source":"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[24838,24844],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[24953,25038],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[25039,25168]},{"content":"&lt;/p&gt;\\n","pos":[25169,25175],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The path specified in &lt;em&gt;sourceFileName&lt;/em&gt; or &lt;em&gt;destFileName&lt;/em&gt; is invalid (for example, it is on an unmapped drive).","pos":[25296,25425],"source":"\\n<p>The path specified in <em>sourceFileName</em> or <em>destFileName</em> is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[25426,25432],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceFileName&lt;/em&gt; was not found.","pos":[25543,25588],"source":"\\n<p>\\n<em>sourceFileName</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[25589,25595],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;destFileName&lt;/em&gt; exists.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;An I/O error has occurred.","pos":[25686,25771],"source":"\\n<p>\\n<em>destFileName</em> exists.</p>\\n<p>-or- </p>\\n<p>An I/O error has occurred."},{"content":"&lt;/p&gt;\\n","pos":[25772,25778],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceFileName&lt;/em&gt; or &lt;em&gt;destFileName&lt;/em&gt; is in an invalid format.","pos":[25883,25963],"source":"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[25964,25970],"source":" </p>\\n"},{"pos":[26754,26783],"content":"Copy(String, String, Boolean)","needQuote":true,"nodes":[{"content":"Copy(String, String, Boolean)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The file to copy.","pos":[27571,27593],"source":"\\n<p>The file to copy."},{"content":"&lt;/p&gt;\\n","pos":[27594,27600],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the destination file.","pos":[27671,27709],"source":"\\n<p>The name of the destination file."},{"content":"This cannot be a directory.","pos":[27710,27737]},{"content":"&lt;/p&gt;\\n","pos":[27738,27744],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the destination file can be overwritten; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[27813,27920],"source":"\\n<p>\\n<strong>true</strong> if the destination file can be overwritten; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[27921,27927],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[28058,28112],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;destFileName&lt;/em&gt; is read-only.&lt;/p&gt;\\n","pos":[28113,28178],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>destFileName</em> is read-only.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceFileName&lt;/em&gt; or &lt;em&gt;destFileName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[28740,28821],"source":"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[28822,28828],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[28937,29022],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[29023,29152]},{"content":"&lt;/p&gt;\\n","pos":[29153,29159],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The path specified in &lt;em&gt;sourceFileName&lt;/em&gt; or &lt;em&gt;destFileName&lt;/em&gt; is invalid (for example, it is on an unmapped drive).","pos":[29280,29409],"source":"\\n<p>The path specified in <em>sourceFileName</em> or <em>destFileName</em> is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[29410,29416],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceFileName&lt;/em&gt; was not found.","pos":[29527,29572],"source":"\\n<p>\\n<em>sourceFileName</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[29573,29579],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;destFileName&lt;/em&gt; exists and &lt;em&gt;overwrite&lt;/em&gt; is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;An I/O error has occurred.","pos":[29670,29804],"source":"\\n<p>\\n<em>destFileName</em> exists and <em>overwrite</em> is <strong>false</strong>.</p>\\n<p>-or- </p>\\n<p>An I/O error has occurred."},{"content":"&lt;/p&gt;\\n","pos":[29805,29811],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceFileName&lt;/em&gt; or &lt;em&gt;destFileName&lt;/em&gt; is in an invalid format.","pos":[29916,29996],"source":"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[29997,30003],"source":" </p>\\n"},{"pos":[30715,30729],"content":"Create(String)","needQuote":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The path and name of the file to create.","pos":[31372,31417],"source":"\\n<p>The path and name of the file to create."},{"content":"&lt;/p&gt;\\n","pos":[31418,31424],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.","pos":[31787,31915],"source":"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a file that is read-only."},{"content":"&lt;/p&gt;\\n","pos":[31916,31922],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[32353,32399],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[32400,32406],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[32515,32600],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[32601,32730]},{"content":"&lt;/p&gt;\\n","pos":[32731,32737],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[32858,32935],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[32936,32942],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while creating the file.","pos":[33033,33084],"source":"\\n<p>An I/O error occurred while creating the file."},{"content":"&lt;/p&gt;\\n","pos":[33085,33091],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[33196,33241],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[33242,33248],"source":" </p>\\n"},{"pos":[33713,33734],"content":"Create(String, Int32)","needQuote":true,"nodes":[{"content":"Create(String, Int32)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The name of the file.","pos":[34420,34446],"source":"\\n<p>The name of the file."},{"content":"&lt;/p&gt;\\n","pos":[34447,34453],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes buffered for reads and writes to the file.","pos":[34521,34588],"source":"\\n<p>The number of bytes buffered for reads and writes to the file."},{"content":"&lt;/p&gt;\\n","pos":[34589,34595],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.","pos":[34989,35117],"source":"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a file that is read-only."},{"content":"&lt;/p&gt;\\n","pos":[35118,35124],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[35555,35601],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[35602,35608],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[35717,35802],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[35803,35932]},{"content":"&lt;/p&gt;\\n","pos":[35933,35939],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[36060,36137],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[36138,36144],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while creating the file.","pos":[36235,36286],"source":"\\n<p>An I/O error occurred while creating the file."},{"content":"&lt;/p&gt;\\n","pos":[36287,36293],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[36398,36443],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[36444,36450],"source":" </p>\\n"},{"pos":[36988,37022],"content":"Create(String, Int32, FileOptions)","needQuote":true,"nodes":[{"content":"Create(String, Int32, FileOptions)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The name of the file.","pos":[37947,37973],"source":"\\n<p>The name of the file."},{"content":"&lt;/p&gt;\\n","pos":[37974,37980],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes buffered for reads and writes to the file.","pos":[38048,38115],"source":"\\n<p>The number of bytes buffered for reads and writes to the file."},{"content":"&lt;/p&gt;\\n","pos":[38116,38122],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A new file with the specified buffer size.&lt;/p&gt;\\n","pos":[38425,38478],"source":"\\n<p>A new file with the specified buffer size.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[39386,39432],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[39433,39439],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[39548,39633],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[39634,39763]},{"content":"&lt;/p&gt;\\n","pos":[39764,39770],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive.","pos":[39891,39967],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[39968,39974],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while creating the file.","pos":[40065,40116],"source":"\\n<p>An I/O error occurred while creating the file."},{"content":"&lt;/p&gt;\\n","pos":[40117,40123],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[40228,40273],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[40274,40280],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.","pos":[40397,40525],"source":"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a file that is read-only."},{"content":"&lt;/p&gt;\\n","pos":[40526,40532],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.","pos":[40649,40777],"source":"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a file that is read-only."},{"content":"&lt;/p&gt;\\n","pos":[40778,40784],"source":" </p>\\n"},{"pos":[41242,41260],"content":"CreateText(String)","needQuote":true,"nodes":[{"content":"CreateText(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The file to be opened for writing.","pos":[41926,41965],"source":"\\n<p>The file to be opened for writing."},{"content":"&lt;/p&gt;\\n","pos":[41966,41972],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[42323,42377],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[42378,42384],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[42815,42861],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[42862,42868],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[42977,43062],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[43063,43192]},{"content":"&lt;/p&gt;\\n","pos":[43193,43199],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[43320,43397],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[43398,43404],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[43509,43554],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[43555,43561],"source":" </p>\\n"},{"pos":[43991,44005],"content":"Delete(String)","needQuote":true,"nodes":[{"content":"Delete(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The name of the file to be deleted.","pos":[44678,44718],"source":"\\n<p>The name of the file to be deleted."},{"content":"Wildcard characters are not supported.&lt;/p&gt;\\n","pos":[44719,44763],"source":" Wildcard characters are not supported.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[45208,45254],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[45255,45261],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[45382,45459],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[45460,45466],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified file is in use.","pos":[45557,45591],"source":"\\n<p>The specified file is in use."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;There is an open handle on the file, and the operating system is Windows XP or earlier.","pos":[45592,45701],"source":" </p>\\n<p>-or-</p>\\n<p>There is an open handle on the file, and the operating system is Windows XP or earlier."},{"content":"This open handle can result from enumerating directories and files.","pos":[45702,45769]},{"content":"For more information, see How to: Enumerate Directories and Files.&lt;/p&gt;\\n","pos":[45770,45842],"source":" For more information, see How to: Enumerate Directories and Files.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[45947,45992],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[45993,45999],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[46108,46193],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[46194,46323]},{"content":"&lt;/p&gt;\\n","pos":[46324,46330],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The file is an executable file that is in use.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a read-only file.","pos":[46447,46690],"source":"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>The file is an executable file that is in use.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a read-only file."},{"content":"&lt;/p&gt;\\n","pos":[46691,46697],"source":" </p>\\n"},{"pos":[47123,47137],"content":"Exists(String)","needQuote":true,"nodes":[{"content":"Exists(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The file to check.","pos":[47843,47866],"source":"\\n<p>The file to check."},{"content":"&lt;/p&gt;\\n","pos":[47867,47873],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the caller has the required permissions and &lt;em&gt;path&lt;/em&gt; contains the name of an existing file; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[47934,48097],"source":"\\n<p>\\n<strong>true</strong> if the caller has the required permissions and <em>path</em> contains the name of an existing file; otherwise, <strong>false</strong>."},{"content":"This method also returns &lt;strong&gt;false&lt;/strong&gt; if &lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, an invalid path, or a zero-length string.","pos":[48098,48230],"source":" This method also returns <strong>false</strong> if <em>path</em> is <strong>null</strong>, an invalid path, or a zero-length string."},{"content":"If the caller does not have sufficient permissions to read the specified file, no exception is thrown and the method returns &lt;strong&gt;false&lt;/strong&gt; regardless of the existence of &lt;em&gt;path&lt;/em&gt;.&lt;/p&gt;\\n","pos":[48231,48430],"source":" If the caller does not have sufficient permissions to read the specified file, no exception is thrown and the method returns <strong>false</strong> regardless of the existence of <em>path</em>.</p>\\n"},{"pos":[48999,49020],"content":"GetAttributes(String)","needQuote":true,"nodes":[{"content":"GetAttributes(String)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The path to the file.","pos":[49844,49870],"source":"\\n<p>The path to the file."},{"content":"&lt;/p&gt;\\n","pos":[49871,49877],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is empty, contains only white spaces, or contains invalid characters.","pos":[50183,50273],"source":"\\n<p>\\n<em>path</em> is empty, contains only white spaces, or contains invalid characters."},{"content":"&lt;/p&gt;\\n","pos":[50274,50280],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[50389,50474],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[50475,50604]},{"content":"&lt;/p&gt;\\n","pos":[50605,50611],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[50716,50761],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[50762,50768],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; represents a file and is invalid, such as being on an unmapped drive, or the file cannot be found.","pos":[50879,50998],"source":"\\n<p>\\n<em>path</em> represents a file and is invalid, such as being on an unmapped drive, or the file cannot be found."},{"content":"&lt;/p&gt;\\n","pos":[50999,51005],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; represents a directory and is invalid, such as being on an unmapped drive, or the directory cannot be found.&lt;/p&gt;\\n","pos":[51126,51261],"source":"\\n<p>\\n<em>path</em> represents a directory and is invalid, such as being on an unmapped drive, or the directory cannot be found.</p>\\n"},{"content":"\\n&lt;p&gt;This file is being used by another process.&lt;/p&gt;\\n","pos":[51352,51406],"source":"\\n<p>This file is being used by another process.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[51523,51583],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[52043,52066],"content":"GetCreationTime(String)","needQuote":true,"nodes":[{"content":"GetCreationTime(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain creation date and time information.","pos":[52834,52916],"source":"\\n<p>The file or directory for which to obtain creation date and time information."},{"content":"&lt;/p&gt;\\n","pos":[52917,52923],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[53324,53378],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[53379,53385],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[53816,53862],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[53863,53869],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[53978,54063],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[54064,54193]},{"content":"&lt;/p&gt;\\n","pos":[54194,54200],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[54305,54350],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[54351,54357],"source":" </p>\\n"},{"pos":[54922,54948],"content":"GetCreationTimeUtc(String)","needQuote":true,"nodes":[{"content":"GetCreationTimeUtc(String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain creation date and time information.","pos":[55766,55848],"source":"\\n<p>The file or directory for which to obtain creation date and time information."},{"content":"&lt;/p&gt;\\n","pos":[55849,55855],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[56254,56308],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[56309,56315],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[56746,56792],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[56793,56799],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[56908,56993],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[56994,57123]},{"content":"&lt;/p&gt;\\n","pos":[57124,57130],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[57235,57280],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[57281,57287],"source":" </p>\\n"},{"pos":[57852,57877],"content":"GetLastAccessTime(String)","needQuote":true,"nodes":[{"content":"GetLastAccessTime(String)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain access date and time information.","pos":[58659,58739],"source":"\\n<p>The file or directory for which to obtain access date and time information."},{"content":"&lt;/p&gt;\\n","pos":[58740,58746],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[59157,59211],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[59212,59218],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[59649,59695],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[59696,59702],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[59811,59896],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[59897,60026]},{"content":"&lt;/p&gt;\\n","pos":[60027,60033],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[60138,60183],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[60184,60190],"source":" </p>\\n"},{"pos":[60763,60791],"content":"GetLastAccessTimeUtc(String)","needQuote":true,"nodes":[{"content":"GetLastAccessTimeUtc(String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain access date and time information.","pos":[61628,61708],"source":"\\n<p>The file or directory for which to obtain access date and time information."},{"content":"&lt;/p&gt;\\n","pos":[61709,61715],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[62124,62178],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[62179,62185],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[62616,62662],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[62663,62669],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[62778,62863],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[62864,62993]},{"content":"&lt;/p&gt;\\n","pos":[62994,63000],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[63105,63150],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[63151,63157],"source":" </p>\\n"},{"pos":[63721,63745],"content":"GetLastWriteTime(String)","needQuote":true,"nodes":[{"content":"GetLastWriteTime(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain write date and time information.","pos":[64525,64604],"source":"\\n<p>The file or directory for which to obtain write date and time information."},{"content":"&lt;/p&gt;\\n","pos":[64605,64611],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[65024,65078],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[65079,65085],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[65516,65562],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[65563,65569],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[65678,65763],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[65764,65893]},{"content":"&lt;/p&gt;\\n","pos":[65894,65900],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[66005,66050],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[66051,66057],"source":" </p>\\n"},{"pos":[66626,66653],"content":"GetLastWriteTimeUtc(String)","needQuote":true,"nodes":[{"content":"GetLastWriteTimeUtc(String)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain write date and time information.","pos":[67488,67567],"source":"\\n<p>The file or directory for which to obtain write date and time information."},{"content":"&lt;/p&gt;\\n","pos":[67568,67574],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[67985,68039],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[68040,68046],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[68477,68523],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[68524,68530],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[68639,68724],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[68725,68854]},{"content":"&lt;/p&gt;\\n","pos":[68855,68861],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[68966,69011],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[69012,69018],"source":" </p>\\n"},{"pos":[69587,69607],"content":"Move(String, String)","needQuote":true,"nodes":[{"content":"Move(String, String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The name of the file to move.","pos":[70425,70459],"source":"\\n<p>The name of the file to move."},{"content":"Can include a relative or absolute path.&lt;/p&gt;\\n","pos":[70460,70506],"source":" Can include a relative or absolute path.</p>\\n"},{"content":"\\n&lt;p&gt;The new path and name for the file.&lt;/p&gt;\\n","pos":[70577,70623],"source":"\\n<p>The new path and name for the file.</p>\\n"},{"content":"\\n&lt;p&gt;The destination file already exists.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;sourceFileName&lt;/em&gt; was not found.","pos":[70728,70831],"source":"\\n<p>The destination file already exists.</p>\\n<p>-or-</p>\\n<p>\\n<em>sourceFileName</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[70832,70838],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceFileName&lt;/em&gt; or &lt;em&gt;destFileName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[70943,71024],"source":"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[71025,71031],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[71497,71551],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[71552,71558],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[71667,71752],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[71753,71882]},{"content":"&lt;/p&gt;\\n","pos":[71883,71889],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The path specified in &lt;em&gt;sourceFileName&lt;/em&gt; or &lt;em&gt;destFileName&lt;/em&gt; is invalid, (for example, it is on an unmapped drive).","pos":[72010,72140],"source":"\\n<p>The path specified in <em>sourceFileName</em> or <em>destFileName</em> is invalid, (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[72141,72147],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceFileName&lt;/em&gt; or &lt;em&gt;destFileName&lt;/em&gt; is in an invalid format.","pos":[72252,72332],"source":"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[72333,72339],"source":" </p>\\n"},{"pos":[72822,72844],"content":"Open(String, FileMode)","needQuote":true,"nodes":[{"content":"Open(String, FileMode)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The file to open.","pos":[73615,73637],"source":"\\n<p>The file to open."},{"content":"&lt;/p&gt;\\n","pos":[73638,73644],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[74640,74686],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[74687,74693],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[74802,74887],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[74888,75017]},{"content":"&lt;/p&gt;\\n","pos":[75018,75024],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, (for example, it is on an unmapped drive).","pos":[75145,75223],"source":"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[75224,75230],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[75321,75371],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[75372,75378],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mode&lt;/em&gt; specified an invalid value.","pos":[76054,76102],"source":"\\n<p>\\n<em>mode</em> specified an invalid value."},{"content":"&lt;/p&gt;\\n","pos":[76103,76109],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[76220,76275],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[76276,76282],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[76387,76432],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[76433,76439],"source":" </p>\\n"},{"pos":[76987,77021],"content":"Open(String, FileMode, FileAccess)","needQuote":true,"nodes":[{"content":"Open(String, FileMode, FileAccess)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The file to open.","pos":[77868,77890],"source":"\\n<p>The file to open."},{"content":"&lt;/p&gt;\\n","pos":[77891,77897],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[79350,79396],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[79397,79403],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[79512,79597],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[79598,79727]},{"content":"&lt;/p&gt;\\n","pos":[79728,79734],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, (for example, it is on an unmapped drive).","pos":[79855,79933],"source":"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[79934,79940],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[80031,80081],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[80082,80088],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mode&lt;/em&gt; or &lt;em&gt;access&lt;/em&gt; specified an invalid value.","pos":[80734,80801],"source":"\\n<p>\\n<em>mode</em> or <em>access</em> specified an invalid value."},{"content":"&lt;/p&gt;\\n","pos":[80802,80808],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[80919,80974],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[80975,80981],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[81086,81131],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[81132,81138],"source":" </p>\\n"},{"pos":[81758,81803],"content":"Open(String, FileMode, FileAccess, FileShare)","needQuote":true,"nodes":[{"content":"Open(String, FileMode, FileAccess, FileShare)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The file to open.","pos":[82771,82793],"source":"\\n<p>The file to open."},{"content":"&lt;/p&gt;\\n","pos":[82794,82800],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[84516,84562],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[84563,84569],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[84678,84763],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[84764,84893]},{"content":"&lt;/p&gt;\\n","pos":[84894,84900],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, (for example, it is on an unmapped drive).","pos":[85021,85099],"source":"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[85100,85106],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[85197,85247],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[85248,85254],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mode&lt;/em&gt;, &lt;em&gt;access&lt;/em&gt;, or &lt;em&gt;share&lt;/em&gt; specified an invalid value.","pos":[85900,85984],"source":"\\n<p>\\n<em>mode</em>, <em>access</em>, or <em>share</em> specified an invalid value."},{"content":"&lt;/p&gt;\\n","pos":[85985,85991],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[86102,86157],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[86158,86164],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[86269,86314],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[86315,86321],"source":" </p>\\n"},{"pos":[86784,86800],"content":"OpenRead(String)","needQuote":true,"nodes":[{"content":"OpenRead(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The file to be opened for reading.","pos":[87435,87474],"source":"\\n<p>The file to be opened for reading."},{"content":"&lt;/p&gt;\\n","pos":[87475,87481],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[88119,88165],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[88166,88172],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[88281,88366],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[88367,88496]},{"content":"&lt;/p&gt;\\n","pos":[88497,88503],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, (for example, it is on an unmapped drive).","pos":[88624,88702],"source":"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[88703,88709],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[88826,88941],"source":"\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[88942,88948],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[89059,89114],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[89115,89121],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[89226,89271],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[89272,89278],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[89369,89419],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[89420,89426],"source":" </p>\\n"},{"pos":[89860,89876],"content":"OpenText(String)","needQuote":true,"nodes":[{"content":"OpenText(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The file to be opened for reading.","pos":[90533,90572],"source":"\\n<p>The file to be opened for reading."},{"content":"&lt;/p&gt;\\n","pos":[90573,90579],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[90897,90951],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[90952,90958],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[91389,91435],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[91436,91442],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[91551,91636],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[91637,91766]},{"content":"&lt;/p&gt;\\n","pos":[91767,91773],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, (for example, it is on an unmapped drive).","pos":[91894,91972],"source":"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[91973,91979],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[92090,92145],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[92146,92152],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[92257,92302],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[92303,92309],"source":" </p>\\n"},{"pos":[92746,92763],"content":"OpenWrite(String)","needQuote":true,"nodes":[{"content":"OpenWrite(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The file to be opened for writing.","pos":[93424,93463],"source":"\\n<p>The file to be opened for writing."},{"content":"&lt;/p&gt;\\n","pos":[93464,93470],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a read-only file or directory.","pos":[93900,94033],"source":"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a read-only file or directory."},{"content":"&lt;/p&gt;\\n","pos":[94034,94040],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[94471,94517],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[94518,94524],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[94633,94718],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[94719,94848]},{"content":"&lt;/p&gt;\\n","pos":[94849,94855],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, (for example, it is on an unmapped drive).","pos":[94976,95054],"source":"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[95055,95061],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[95166,95211],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[95212,95218],"source":" </p>\\n"},{"pos":[95665,95685],"content":"ReadAllBytes(String)","needQuote":true,"nodes":[{"content":"ReadAllBytes(String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The file to open for reading.","pos":[96467,96501],"source":"\\n<p>The file to open for reading."},{"content":"&lt;/p&gt;\\n","pos":[96502,96508],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A byte array containing the contents of the file.&lt;/p&gt;\\n","pos":[96568,96628],"source":"\\n<p>A byte array containing the contents of the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[97073,97119],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[97120,97126],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[97235,97320],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[97321,97450]},{"content":"&lt;/p&gt;\\n","pos":[97451,97457],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[97578,97655],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[97656,97662],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[97753,97803],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[97804,97810],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[97927,98121],"source":"\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[98122,98128],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[98239,98294],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[98295,98301],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[98406,98451],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[98452,98458],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[98573,98627],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[98628,98634],"source":" </p>\\n"},{"pos":[99084,99104],"content":"ReadAllLines(String)","needQuote":true,"nodes":[{"content":"ReadAllLines(String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The file to open for reading.","pos":[99789,99823],"source":"\\n<p>The file to open for reading."},{"content":"&lt;/p&gt;\\n","pos":[99824,99830],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A string array containing all lines of the file.&lt;/p&gt;\\n","pos":[99892,99951],"source":"\\n<p>A string array containing all lines of the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[100396,100442],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[100443,100449],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[100558,100643],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[100644,100773]},{"content":"&lt;/p&gt;\\n","pos":[100774,100780],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[100901,100978],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[100979,100985],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[101076,101126],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[101127,101133],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[101250,101518],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[101519,101525],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[101636,101691],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[101692,101698],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[101803,101848],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[101849,101855],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[101970,102024],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[102025,102031],"source":" </p>\\n"},{"pos":[102544,102574],"content":"ReadAllLines(String, Encoding)","needQuote":true,"nodes":[{"content":"ReadAllLines(String, Encoding)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The file to open for reading.","pos":[103345,103379],"source":"\\n<p>The file to open for reading."},{"content":"&lt;/p&gt;\\n","pos":[103380,103386],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The encoding applied to the contents of the file.","pos":[103460,103514],"source":"\\n<p>The encoding applied to the contents of the file."},{"content":"&lt;/p&gt;\\n","pos":[103515,103521],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A string array containing all lines of the file.&lt;/p&gt;\\n","pos":[103583,103642],"source":"\\n<p>A string array containing all lines of the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[104087,104133],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[104134,104140],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[104249,104334],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[104335,104464]},{"content":"&lt;/p&gt;\\n","pos":[104465,104471],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[104592,104669],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[104670,104676],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[104767,104817],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[104818,104824],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[104941,105209],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[105210,105216],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[105327,105382],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[105383,105389],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[105494,105539],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[105540,105546],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[105661,105715],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[105716,105722],"source":" </p>\\n"},{"pos":[106179,106198],"content":"ReadAllText(String)","needQuote":true,"nodes":[{"content":"ReadAllText(String)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The file to open for reading.","pos":[106953,106987],"source":"\\n<p>The file to open for reading."},{"content":"&lt;/p&gt;\\n","pos":[106988,106994],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A string containing all lines of the file.&lt;/p&gt;\\n","pos":[107054,107107],"source":"\\n<p>A string containing all lines of the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[107552,107598],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[107599,107605],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[107714,107799],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[107800,107929]},{"content":"&lt;/p&gt;\\n","pos":[107930,107936],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[108057,108134],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[108135,108141],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[108232,108282],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[108283,108289],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[108406,108674],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[108675,108681],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[108792,108847],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[108848,108854],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[108959,109004],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[109005,109011],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[109126,109180],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[109181,109187],"source":" </p>\\n"},{"pos":[109696,109725],"content":"ReadAllText(String, Encoding)","needQuote":true,"nodes":[{"content":"ReadAllText(String, Encoding)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The file to open for reading.","pos":[110566,110600],"source":"\\n<p>The file to open for reading."},{"content":"&lt;/p&gt;\\n","pos":[110601,110607],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The encoding applied to the contents of the file.","pos":[110681,110735],"source":"\\n<p>The encoding applied to the contents of the file."},{"content":"&lt;/p&gt;\\n","pos":[110736,110742],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A string containing all lines of the file.&lt;/p&gt;\\n","pos":[110802,110855],"source":"\\n<p>A string containing all lines of the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[111300,111346],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[111347,111353],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[111462,111547],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[111548,111677]},{"content":"&lt;/p&gt;\\n","pos":[111678,111684],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[111805,111882],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[111883,111889],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[111980,112030],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[112031,112037],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[112154,112422],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[112423,112429],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file specified in &lt;em&gt;path&lt;/em&gt; was not found.","pos":[112540,112595],"source":"\\n<p>The file specified in <em>path</em> was not found."},{"content":"&lt;/p&gt;\\n","pos":[112596,112602],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[112707,112752],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[112753,112759],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[112874,112928],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[112929,112935],"source":" </p>\\n"},{"pos":[113385,113402],"content":"ReadLines(String)","needQuote":true,"nodes":[{"content":"ReadLines(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The file to read.&lt;/p&gt;\\n","pos":[114053,114081],"source":"\\n<p>The file to read.</p>\\n"},{"content":"\\n&lt;p&gt;All the lines of the file, or the lines that are the result of a query.&lt;/p&gt;\\n","pos":[114181,114263],"source":"\\n<p>All the lines of the file, or the lines that are the result of a query.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[114718,114770],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid (for example, it is on an unmapped drive).&lt;/p&gt;\\n","pos":[114891,114971],"source":"\\n<p>\\n<em>path</em> is invalid (for example, it is on an unmapped drive).</p>\\n"},{"content":"\\n&lt;p&gt;The file specified by &lt;em&gt;path&lt;/em&gt; was not found.&lt;/p&gt;\\n","pos":[115082,115143],"source":"\\n<p>The file specified by <em>path</em> was not found.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.&lt;/p&gt;\\n","pos":[115234,115290],"source":"\\n<p>An I/O error occurred while opening the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; exceeds the system-defined maximum length.","pos":[115399,115462],"source":"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[115463,115597],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[115712,115772],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specifies a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a directory.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[115889,116153],"source":"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[116530,116557],"content":"ReadLines(String, Encoding)","needQuote":true,"nodes":[{"content":"ReadLines(String, Encoding)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The file to read.&lt;/p&gt;\\n","pos":[117300,117328],"source":"\\n<p>The file to read.</p>\\n"},{"content":"\\n&lt;p&gt;The encoding that is applied to the contents of the file.","pos":[117402,117464],"source":"\\n<p>The encoding that is applied to the contents of the file."},{"content":"&lt;/p&gt;\\n","pos":[117465,117471],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;All the lines of the file, or the lines that are the result of a query.&lt;/p&gt;\\n","pos":[117571,117653],"source":"\\n<p>All the lines of the file, or the lines that are the result of a query.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[118111,118163],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid (for example, it is on an unmapped drive).&lt;/p&gt;\\n","pos":[118284,118364],"source":"\\n<p>\\n<em>path</em> is invalid (for example, it is on an unmapped drive).</p>\\n"},{"content":"\\n&lt;p&gt;The file specified by &lt;em&gt;path&lt;/em&gt; was not found.&lt;/p&gt;\\n","pos":[118475,118536],"source":"\\n<p>The file specified by <em>path</em> was not found.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.&lt;/p&gt;\\n","pos":[118627,118683],"source":"\\n<p>An I/O error occurred while opening the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; exceeds the system-defined maximum length.","pos":[118792,118855],"source":"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[118856,118990],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[119105,119165],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specifies a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a directory.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[119282,119546],"source":"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[119957,119994],"content":"SetAttributes(String, FileAttributes)","needQuote":true,"nodes":[{"content":"SetAttributes(String, FileAttributes)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The path to the file.","pos":[120888,120914],"source":"\\n<p>The path to the file."},{"content":"&lt;/p&gt;\\n","pos":[120915,120921],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A bitwise combination of the enumeration values.","pos":[121005,121058],"source":"\\n<p>A bitwise combination of the enumeration values."},{"content":"&lt;/p&gt;\\n","pos":[121059,121065],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is empty, contains only white spaces, contains invalid characters, or the file attribute is invalid.","pos":[121176,121297],"source":"\\n<p>\\n<em>path</em> is empty, contains only white spaces, contains invalid characters, or the file attribute is invalid."},{"content":"&lt;/p&gt;\\n","pos":[121298,121304],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[121413,121498],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[121499,121628]},{"content":"&lt;/p&gt;\\n","pos":[121629,121635],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[121740,121785],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[121786,121792],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid, (for example, it is on an unmapped drive).","pos":[121913,121991],"source":"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[121992,121998],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The file cannot be found.&lt;/p&gt;\\n","pos":[122109,122145],"source":"\\n<p>The file cannot be found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[122262,122536],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[123154,123187],"content":"SetCreationTime(String, DateTime)","needQuote":true,"nodes":[{"content":"SetCreationTime(String, DateTime)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The file for which to set the creation date and time information.","pos":[123896,123966],"source":"\\n<p>The file for which to set the creation date and time information."},{"content":"&lt;/p&gt;\\n","pos":[123967,123973],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[124376,124414],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[124415,124421],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[124852,124898],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[124899,124905],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[125014,125099],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[125100,125229]},{"content":"&lt;/p&gt;\\n","pos":[125230,125236],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while performing the operation.","pos":[125327,125385],"source":"\\n<p>An I/O error occurred while performing the operation."},{"content":"&lt;/p&gt;\\n","pos":[125386,125392],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;creationTime&lt;/em&gt; specifies a value outside the range of dates, times, or both permitted for this operation.","pos":[125509,125628],"source":"\\n<p>\\n<em>creationTime</em> specifies a value outside the range of dates, times, or both permitted for this operation."},{"content":"&lt;/p&gt;\\n","pos":[125629,125635],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[125752,125806],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[125807,125813],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[125918,125963],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[125964,125970],"source":" </p>\\n"},{"pos":[126593,126629],"content":"SetCreationTimeUtc(String, DateTime)","needQuote":true,"nodes":[{"content":"SetCreationTimeUtc(String, DateTime)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The file for which to set the creation date and time information.","pos":[127477,127547],"source":"\\n<p>The file for which to set the creation date and time information."},{"content":"&lt;/p&gt;\\n","pos":[127548,127554],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[127958,127996],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[127997,128003],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[128434,128480],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[128481,128487],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[128596,128681],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[128682,128811]},{"content":"&lt;/p&gt;\\n","pos":[128812,128818],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while performing the operation.","pos":[128909,128967],"source":"\\n<p>An I/O error occurred while performing the operation."},{"content":"&lt;/p&gt;\\n","pos":[128968,128974],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;creationTime&lt;/em&gt; specifies a value outside the range of dates, times, or both permitted for this operation.","pos":[129091,129210],"source":"\\n<p>\\n<em>creationTime</em> specifies a value outside the range of dates, times, or both permitted for this operation."},{"content":"&lt;/p&gt;\\n","pos":[129211,129217],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[129334,129388],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[129389,129395],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[129500,129545],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[129546,129552],"source":" </p>\\n"},{"pos":[130175,130210],"content":"SetLastAccessTime(String, DateTime)","needQuote":true,"nodes":[{"content":"SetLastAccessTime(String, DateTime)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The file for which to set the access date and time information.","pos":[130947,131015],"source":"\\n<p>The file for which to set the access date and time information."},{"content":"&lt;/p&gt;\\n","pos":[131016,131022],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[131750,131796],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[131797,131803],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[131912,131997],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[131998,132127]},{"content":"&lt;/p&gt;\\n","pos":[132128,132134],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[132245,132283],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[132284,132290],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[132407,132461],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[132462,132468],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[132573,132618],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[132619,132625],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;lastAccessTime&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.&lt;/p&gt;\\n","pos":[132742,132862],"source":"\\n<p>\\n<em>lastAccessTime</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n"},{"pos":[133493,133531],"content":"SetLastAccessTimeUtc(String, DateTime)","needQuote":true,"nodes":[{"content":"SetLastAccessTimeUtc(String, DateTime)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The file for which to set the access date and time information.","pos":[134407,134475],"source":"\\n<p>The file for which to set the access date and time information."},{"content":"&lt;/p&gt;\\n","pos":[134476,134482],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[135211,135257],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[135258,135264],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[135373,135458],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[135459,135588]},{"content":"&lt;/p&gt;\\n","pos":[135589,135595],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[135706,135744],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[135745,135751],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[135868,135922],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[135923,135929],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[136034,136079],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[136080,136086],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;lastAccessTimeUtc&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.&lt;/p&gt;\\n","pos":[136203,136326],"source":"\\n<p>\\n<em>lastAccessTimeUtc</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n"},{"pos":[136948,136982],"content":"SetLastWriteTime(String, DateTime)","needQuote":true,"nodes":[{"content":"SetLastWriteTime(String, DateTime)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The file for which to set the date and time information.","pos":[137720,137781],"source":"\\n<p>The file for which to set the date and time information."},{"content":"&lt;/p&gt;\\n","pos":[137782,137788],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[138514,138560],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[138561,138567],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[138676,138761],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[138762,138891]},{"content":"&lt;/p&gt;\\n","pos":[138892,138898],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[139009,139047],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[139048,139054],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[139171,139225],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[139226,139232],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[139337,139382],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[139383,139389],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;lastWriteTime&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.&lt;/p&gt;\\n","pos":[139506,139625],"source":"\\n<p>\\n<em>lastWriteTime</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n"},{"pos":[140252,140289],"content":"SetLastWriteTimeUtc(String, DateTime)","needQuote":true,"nodes":[{"content":"SetLastWriteTimeUtc(String, DateTime)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The file for which to set the date and time information.","pos":[141161,141222],"source":"\\n<p>The file for which to set the date and time information."},{"content":"&lt;/p&gt;\\n","pos":[141223,141229],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[141956,142002],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[142003,142009],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[142118,142203],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[142204,142333]},{"content":"&lt;/p&gt;\\n","pos":[142334,142340],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[142451,142489],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[142490,142496],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[142613,142667],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[142668,142674],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[142779,142824],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[142825,142831],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;lastWriteTimeUtc&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.&lt;/p&gt;\\n","pos":[142948,143070],"source":"\\n<p>\\n<em>lastWriteTimeUtc</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n"},{"pos":[143676,143705],"content":"WriteAllBytes(String, Byte[])","needQuote":true,"nodes":[{"content":"WriteAllBytes(String, Byte[])","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The file to write to.","pos":[144568,144594],"source":"\\n<p>The file to write to."},{"content":"&lt;/p&gt;\\n","pos":[144595,144601],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The bytes to write to the file.","pos":[144665,144701],"source":"\\n<p>The bytes to write to the file."},{"content":"&lt;/p&gt;\\n","pos":[144702,144708],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or the byte array is empty.","pos":[145153,145226],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong> or the byte array is empty."},{"content":"&lt;/p&gt;\\n","pos":[145227,145233],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[145342,145427],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[145428,145557]},{"content":"&lt;/p&gt;\\n","pos":[145558,145564],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[145685,145762],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[145763,145769],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[145860,145910],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[145911,145917],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[146034,146302],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[146303,146309],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[146414,146459],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[146460,146466],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[146581,146635],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[146636,146642],"source":" </p>\\n"},{"pos":[147435,147477],"content":"WriteAllLines(String, IEnumerable<String>)","needQuote":true,"nodes":[{"content":"WriteAllLines(String, IEnumerable&lt;String&gt;)","pos":[0,42],"source":"WriteAllLines(String, IEnumerable<String>)"}]},{"content":"\\n&lt;p&gt;The file to write to.&lt;/p&gt;\\n","pos":[148282,148314],"source":"\\n<p>The file to write to.</p>\\n"},{"content":"\\n&lt;p&gt;The lines to write to the file.&lt;/p&gt;\\n","pos":[148421,148463],"source":"\\n<p>The lines to write to the file.</p>\\n"},{"content":"\\n&lt;p&gt;Either&lt;em&gt; path &lt;/em&gt;or &lt;em&gt;contents&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[148918,148996],"source":"\\n<p>Either<em> path </em>or <em>contents</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid (for example, it is on an unmapped drive).&lt;/p&gt;\\n","pos":[149117,149197],"source":"\\n<p>\\n<em>path</em> is invalid (for example, it is on an unmapped drive).</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.&lt;/p&gt;\\n","pos":[149288,149344],"source":"\\n<p>An I/O error occurred while opening the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; exceeds the system-defined maximum length.","pos":[149453,149516],"source":"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[149517,149651],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.&lt;/p&gt;\\n","pos":[149756,149807],"source":"\\n<p>\\n<em>path</em> is in an invalid format.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[149922,149982],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specifies a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a directory.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[150099,150363],"source":"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[151183,151235],"content":"WriteAllLines(String, IEnumerable<String>, Encoding)","needQuote":true,"nodes":[{"content":"WriteAllLines(String, IEnumerable&lt;String&gt;, Encoding)","pos":[0,52],"source":"WriteAllLines(String, IEnumerable<String>, Encoding)"}]},{"content":"\\n&lt;p&gt;The file to write to.&lt;/p&gt;\\n","pos":[152135,152167],"source":"\\n<p>The file to write to.</p>\\n"},{"content":"\\n&lt;p&gt;The lines to write to the file.&lt;/p&gt;\\n","pos":[152274,152316],"source":"\\n<p>The lines to write to the file.</p>\\n"},{"content":"\\n&lt;p&gt;The character encoding to use.&lt;/p&gt;\\n","pos":[152390,152431],"source":"\\n<p>The character encoding to use.</p>\\n"},{"content":"\\n&lt;p&gt;Either&lt;em&gt; path&lt;/em&gt;,&lt;em&gt; contents&lt;/em&gt;, or &lt;em&gt;encoding&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[152886,152984],"source":"\\n<p>Either<em> path</em>,<em> contents</em>, or <em>encoding</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid (for example, it is on an unmapped drive).&lt;/p&gt;\\n","pos":[153105,153185],"source":"\\n<p>\\n<em>path</em> is invalid (for example, it is on an unmapped drive).</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.&lt;/p&gt;\\n","pos":[153276,153332],"source":"\\n<p>An I/O error occurred while opening the file.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; exceeds the system-defined maximum length.","pos":[153441,153504],"source":"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[153505,153639],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.&lt;/p&gt;\\n","pos":[153744,153795],"source":"\\n<p>\\n<em>path</em> is in an invalid format.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[153910,153970],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specifies a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a directory.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[154087,154351],"source":"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[155037,155065],"content":"WriteAllText(String, String)","needQuote":true,"nodes":[{"content":"WriteAllText(String, String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The file to write to.","pos":[155926,155952],"source":"\\n<p>The file to write to."},{"content":"&lt;/p&gt;\\n","pos":[155953,155959],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string to write to the file.","pos":[156026,156063],"source":"\\n<p>The string to write to the file."},{"content":"&lt;/p&gt;\\n","pos":[156064,156070],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or &lt;em&gt;contents&lt;/em&gt; is empty.","pos":[156515,156591],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong> or <em>contents</em> is empty."},{"content":"&lt;/p&gt;\\n","pos":[156593,156599],"source":"  </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[156708,156793],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[156794,156923]},{"content":"&lt;/p&gt;\\n","pos":[156924,156930],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[157051,157128],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[157129,157135],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[157226,157276],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[157277,157283],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[157400,157668],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[157669,157675],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[157780,157825],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[157826,157832],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[157947,158001],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[158002,158008],"source":" </p>\\n"},{"pos":[158571,158609],"content":"WriteAllText(String, String, Encoding)","needQuote":true,"nodes":[{"content":"WriteAllText(String, String, Encoding)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The file to write to.","pos":[159562,159588],"source":"\\n<p>The file to write to."},{"content":"&lt;/p&gt;\\n","pos":[159589,159595],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string to write to the file.","pos":[159662,159699],"source":"\\n<p>The string to write to the file."},{"content":"&lt;/p&gt;\\n","pos":[159700,159706],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The encoding to apply to the string.&lt;/p&gt;\\n","pos":[159780,159827],"source":"\\n<p>The encoding to apply to the string.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or &lt;em&gt;contents&lt;/em&gt; is empty.","pos":[160272,160348],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong> or <em>contents</em> is empty."},{"content":"&lt;/p&gt;\\n","pos":[160349,160355],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[160464,160549],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[160550,160679]},{"content":"&lt;/p&gt;\\n","pos":[160680,160686],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[160807,160884],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[160885,160891],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred while opening the file.","pos":[160982,161032],"source":"\\n<p>An I/O error occurred while opening the file."},{"content":"&lt;/p&gt;\\n","pos":[161033,161039],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a file that is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;This operation is not supported on the current platform.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; specified a directory.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The caller does not have the required permission.","pos":[161156,161424],"source":"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[161425,161431],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is in an invalid format.","pos":[161536,161581],"source":"\\n<p>\\n<em>path</em> is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[161582,161588],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[161703,161757],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[161758,161764],"source":" </p>\\n"},{"pos":[162087,162096],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[162236,162242],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[162402,162412],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[162507,162515],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[162584,162585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162612,162613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162683,162691],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[162760,162761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162788,162789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162972,162986],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[163105,163111],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[163178,163179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163229,163235],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[163295,163296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163379,163385],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[163452,163453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163503,163509],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[163569,163570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163784,163806],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[163954,163960],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[164027,164028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164078,164084],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[164145,164146]},{"pos":[164201,164207],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[164267,164268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164365,164371],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[164438,164439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164489,164495],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[164556,164557]},{"pos":[164612,164618],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[164678,164679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164924,164955],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[165121,165136],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[165212,165213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165263,165269],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[165330,165331]},{"pos":[165386,165392],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[165452,165453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165559,165574],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[165650,165651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165701,165707],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[165768,165769]},{"pos":[165824,165830],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[165890,165891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166121,166134],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[166235,166246],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[166318,166319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166346,166347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166420,166431],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[166503,166504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166531,166532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166707,166716],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[166809,166816],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[166884,166885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166912,166913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166982,166989],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[167057,167058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167085,167086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167261,167278],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[167387,167402],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[167478,167479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167506,167507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167584,167599],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[167675,167676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167703,167704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167849,167855],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[167986,167992],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[168232,168251],"content":"IEnumerable<String>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;String&gt;","pos":[0,19],"source":"IEnumerable<String>"}]},{"pos":[168499,168510],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[168574,168575],"content":"<","needQuote":true,"nodes":[]},{"pos":[168625,168631],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[168784,168795],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[168860,168863]},{"pos":[168920,168926],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[168986,168987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169227,169241],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[169460,169471],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[169535,169536],"content":"<","needQuote":true,"nodes":[]},{"pos":[169563,169564],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[169684,169695],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[169760,169763]},{"pos":[169797,169798],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[169825,169826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170029,170055],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[170258,170266],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[170408,170419],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[170577,170589],"content":"StreamWriter","needQuote":true,"nodes":[{"content":"StreamWriter","pos":[0,12]}]},{"pos":[170759,170766],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[170924,170934],"content":"FileStream","needQuote":true,"nodes":[{"content":"FileStream","pos":[0,10]}]},{"pos":[171096,171101],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[171254,171265],"content":"FileOptions","needQuote":true,"nodes":[{"content":"FileOptions","pos":[0,11]}]},{"pos":[171445,171459],"content":"FileAttributes","needQuote":true,"nodes":[{"content":"FileAttributes","pos":[0,14]}]},{"pos":[171636,171644],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[171803,171811],"content":"FileMode","needQuote":true,"nodes":[{"content":"FileMode","pos":[0,8]}]},{"pos":[171978,171988],"content":"FileAccess","needQuote":true,"nodes":[{"content":"FileAccess","pos":[0,10]}]},{"pos":[172160,172169],"content":"FileShare","needQuote":true,"nodes":[{"content":"FileShare","pos":[0,9]}]},{"pos":[172341,172353],"content":"StreamReader","needQuote":true,"nodes":[{"content":"StreamReader","pos":[0,12]}]},{"pos":[172485,172491],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[172611,172615],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[172674,172676]},{"pos":[172739,172743],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[172801,172803],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[172901,172909],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[173037,173043],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[173104,173106]},{"pos":[173171,173177],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[173237,173239],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[173387,173404],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[173580,173601],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[173797,173823],"content":"DirectoryNotFoundException","needQuote":true,"nodes":[{"content":"DirectoryNotFoundException","pos":[0,26]}]},{"pos":[174035,174056],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]},{"pos":[174263,174274],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[174440,174460],"content":"PathTooLongException","needQuote":true,"nodes":[{"content":"PathTooLongException","pos":[0,20]}]},{"pos":[174668,174689],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[174882,174899],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[175116,175143],"content":"UnauthorizedAccessException","needQuote":true,"nodes":[{"content":"UnauthorizedAccessException","pos":[0,27]}]},{"pos":[175355,175382],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.IO.File\n  commentId: T:System.IO.File\n  id: File\n  parent: System.IO\n  children:\n  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  - System.IO.File.AppendAllText(System.String,System.String)\n  - System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)\n  - System.IO.File.AppendText(System.String)\n  - System.IO.File.Copy(System.String,System.String)\n  - System.IO.File.Copy(System.String,System.String,System.Boolean)\n  - System.IO.File.Create(System.String)\n  - System.IO.File.Create(System.String,System.Int32)\n  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)\n  - System.IO.File.CreateText(System.String)\n  - System.IO.File.Delete(System.String)\n  - System.IO.File.Exists(System.String)\n  - System.IO.File.GetAttributes(System.String)\n  - System.IO.File.GetCreationTime(System.String)\n  - System.IO.File.GetCreationTimeUtc(System.String)\n  - System.IO.File.GetLastAccessTime(System.String)\n  - System.IO.File.GetLastAccessTimeUtc(System.String)\n  - System.IO.File.GetLastWriteTime(System.String)\n  - System.IO.File.GetLastWriteTimeUtc(System.String)\n  - System.IO.File.Move(System.String,System.String)\n  - System.IO.File.Open(System.String,System.IO.FileMode)\n  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  - System.IO.File.OpenRead(System.String)\n  - System.IO.File.OpenText(System.String)\n  - System.IO.File.OpenWrite(System.String)\n  - System.IO.File.ReadAllBytes(System.String)\n  - System.IO.File.ReadAllLines(System.String)\n  - System.IO.File.ReadAllLines(System.String,System.Text.Encoding)\n  - System.IO.File.ReadAllText(System.String)\n  - System.IO.File.ReadAllText(System.String,System.Text.Encoding)\n  - System.IO.File.ReadLines(System.String)\n  - System.IO.File.ReadLines(System.String,System.Text.Encoding)\n  - System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)\n  - System.IO.File.SetCreationTime(System.String,System.DateTime)\n  - System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)\n  - System.IO.File.SetLastAccessTime(System.String,System.DateTime)\n  - System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)\n  - System.IO.File.SetLastWriteTime(System.String,System.DateTime)\n  - System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)\n  - System.IO.File.WriteAllBytes(System.String,System.Byte[])\n  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  - System.IO.File.WriteAllText(System.String,System.String)\n  - System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)\n  langs:\n  - csharp\n  - vb\n  name: File\n  fullName: System.IO.File\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: File\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 35\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Provides static methods for the creation, copying, deletion, moving, and opening of a single file, and aids in the creation of <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public class File\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Class File\n  seealso:\n  - type: System.IO.DriveInfo\n    commentId: T:System.IO.DriveInfo\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: File\n- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  commentId: M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: AppendAllLines(String, IEnumerable<String>)\n  fullName: System.IO.File.AppendAllLines(System.String, System.Collections.Generic.IEnumerable<System.String>)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AppendAllLines\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 983\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Appends lines to a file, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.</p>\\n\"\n  syntax:\n    content: public static void AppendAllLines(string path, IEnumerable<string> contents)\n    content.vb: Public Shared Sub AppendAllLines(path As String, contents As IEnumerable(Of String))\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to append the lines to. The file is created if it doesn't already exist.</p>\\n\"\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>The lines to append to the file.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>Either<em> path </em>or <em>contents</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified by <em>path</em> was not found.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have permission to write to the file.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.IO.File.AppendAllLines(System.String, System.Collections.Generic.IEnumerable(Of System.String))\n  name.vb: AppendAllLines(String, IEnumerable(Of String))\n  nameWithType: File.AppendAllLines(String, IEnumerable<String>)\n  nameWithType.vb: File.AppendAllLines(String, IEnumerable(Of String))\n- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  commentId: M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: AppendAllLines(String, IEnumerable<String>, Encoding)\n  fullName: System.IO.File.AppendAllLines(System.String, System.Collections.Generic.IEnumerable<System.String>, System.Text.Encoding)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AppendAllLines\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 996\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Appends lines to a file by using a specified encoding, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.</p>\\n\"\n  syntax:\n    content: public static void AppendAllLines(string path, IEnumerable<string> contents, Encoding encoding)\n    content.vb: Public Shared Sub AppendAllLines(path As String, contents As IEnumerable(Of String), encoding As Encoding)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to append the lines to. The file is created if it doesn't already exist.</p>\\n\"\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>The lines to append to the file.</p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The character encoding to use.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>Either<em> path</em>, <em>contents</em>, or <em>encoding</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified by <em>path</em> was not found.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.IO.File.AppendAllLines(System.String, System.Collections.Generic.IEnumerable(Of System.String), System.Text.Encoding)\n  name.vb: AppendAllLines(String, IEnumerable(Of String), Encoding)\n  nameWithType: File.AppendAllLines(String, IEnumerable<String>, Encoding)\n  nameWithType.vb: File.AppendAllLines(String, IEnumerable(Of String), Encoding)\n- uid: System.IO.File.AppendAllText(System.String,System.String)\n  commentId: M:System.IO.File.AppendAllText(System.String,System.String)\n  id: AppendAllText(System.String,System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: AppendAllText(String, String)\n  fullName: System.IO.File.AppendAllText(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AppendAllText\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 949\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.</p>\\n\"\n  syntax:\n    content: public static void AppendAllText(string path, string contents)\n    content.vb: Public Shared Sub AppendAllText(path As String, contents As String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to append the specified string to. </p>\\n\"\n    - id: contents\n      type: System.String\n      description: \"\\n<p>The string to append to the file. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.AppendAllText(String, String)\n- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)\n  id: AppendAllText(System.String,System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: AppendAllText(String, String, Encoding)\n  fullName: System.IO.File.AppendAllText(System.String, System.String, System.Text.Encoding)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AppendAllText\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 960\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Appends the specified string to the file, creating the file if it does not already exist.</p>\\n\"\n  syntax:\n    content: public static void AppendAllText(string path, string contents, Encoding encoding)\n    content.vb: Public Shared Sub AppendAllText(path As String, contents As String, encoding As Encoding)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to append the specified string to. </p>\\n\"\n    - id: contents\n      type: System.String\n      description: \"\\n<p>The string to append to the file. </p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The character encoding to use. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.AppendAllText(String, String, Encoding)\n- uid: System.IO.File.AppendText(System.String)\n  commentId: M:System.IO.File.AppendText(System.String)\n  id: AppendText(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: AppendText(String)\n  fullName: System.IO.File.AppendText(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AppendText\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 56\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates a <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that appends UTF-8 encoded text to an existing file, or to a new file if the specified file does not exist.</p>\\n\"\n  syntax:\n    content: public static StreamWriter AppendText(string path)\n    content.vb: Public Shared Function AppendText(path As String) As StreamWriter\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path to the file to append to. </p>\\n\"\n    return:\n      type: System.IO.StreamWriter\n      description: \"\\n<p>A stream writer that appends UTF-8 encoded text to the specified file or to a new file.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive). </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.StreamWriter\n    commentId: T:System.IO.StreamWriter\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.AppendText(String)\n- uid: System.IO.File.Copy(System.String,System.String)\n  commentId: M:System.IO.File.Copy(System.String,System.String)\n  id: Copy(System.String,System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Copy(String, String)\n  fullName: System.IO.File.Copy(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Copy\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 74\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Copies an existing file to a new file. Overwriting a file of the same name is not allowed.</p>\\n\"\n  syntax:\n    content: public static void Copy(string sourceFileName, string destFileName)\n    content.vb: Public Shared Sub Copy(sourceFileName As String, destFileName As String)\n    parameters:\n    - id: sourceFileName\n      type: System.String\n      description: \"\\n<p>The file to copy. </p>\\n\"\n    - id: destFileName\n      type: System.String\n      description: \"\\n<p>The name of the destination file. This cannot be a directory or an existing file. </p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> specifies a directory. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The path specified in <em>sourceFileName</em> or <em>destFileName</em> is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>\\n<em>sourceFileName</em> was not found. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>destFileName</em> exists.</p>\\n<p>-or- </p>\\n<p>An I/O error has occurred. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.Directory.Move(System.String,System.String)\n    commentId: M:System.IO.Directory.Move(System.String,System.String)\n  - type: System.IO.File.Move(System.String,System.String)\n    commentId: M:System.IO.File.Move(System.String,System.String)\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Copy(String, String)\n- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)\n  commentId: M:System.IO.File.Copy(System.String,System.String,System.Boolean)\n  id: Copy(System.String,System.String,System.Boolean)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Copy(String, String, Boolean)\n  fullName: System.IO.File.Copy(System.String, System.String, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Copy\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 97\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Copies an existing file to a new file. Overwriting a file of the same name is allowed.</p>\\n\"\n  syntax:\n    content: public static void Copy(string sourceFileName, string destFileName, bool overwrite)\n    content.vb: Public Shared Sub Copy(sourceFileName As String, destFileName As String, overwrite As Boolean)\n    parameters:\n    - id: sourceFileName\n      type: System.String\n      description: \"\\n<p>The file to copy. </p>\\n\"\n    - id: destFileName\n      type: System.String\n      description: \"\\n<p>The name of the destination file. This cannot be a directory. </p>\\n\"\n    - id: overwrite\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the destination file can be overwritten; otherwise, <strong>false</strong>. </p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n<p>-or-</p>\\n<p>\\n<em>destFileName</em> is read-only.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> specifies a directory. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The path specified in <em>sourceFileName</em> or <em>destFileName</em> is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>\\n<em>sourceFileName</em> was not found. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>destFileName</em> exists and <em>overwrite</em> is <strong>false</strong>.</p>\\n<p>-or- </p>\\n<p>An I/O error has occurred. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.Directory.Move(System.String,System.String)\n    commentId: M:System.IO.Directory.Move(System.String,System.String)\n  - type: System.IO.File.Move(System.String,System.String)\n    commentId: M:System.IO.File.Move(System.String,System.String)\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Copy(String, String, Boolean)\n- uid: System.IO.File.Create(System.String)\n  commentId: M:System.IO.File.Create(System.String)\n  id: Create(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Create(String)\n  fullName: System.IO.File.Create(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Create\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 187\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates or overwrites a file in the specified path.</p>\\n\"\n  syntax:\n    content: public static FileStream Create(string path)\n    content.vb: Public Shared Function Create(path As String) As FileStream\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path and name of the file to create. </p>\\n\"\n    return:\n      type: System.IO.FileStream\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that provides read/write access to the file specified in <em>path</em>.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a file that is read-only. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while creating the file. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Create(String)\n- uid: System.IO.File.Create(System.String,System.Int32)\n  commentId: M:System.IO.File.Create(System.String,System.Int32)\n  id: Create(System.String,System.Int32)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Create(String, Int32)\n  fullName: System.IO.File.Create(System.String, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Create\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 199\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates or overwrites the specified file.</p>\\n\"\n  syntax:\n    content: public static FileStream Create(string path, int bufferSize)\n    content.vb: Public Shared Function Create(path As String, bufferSize As Integer) As FileStream\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The name of the file. </p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>The number of bytes buffered for reads and writes to the file. </p>\\n\"\n    return:\n      type: System.IO.FileStream\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified buffer size that provides read/write access to the file specified in <em>path</em>.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a file that is read-only. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while creating the file. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Create(String, Int32)\n- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)\n  commentId: M:System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)\n  id: Create(System.String,System.Int32,System.IO.FileOptions)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Create(String, Int32, FileOptions)\n  fullName: System.IO.File.Create(System.String, System.Int32, System.IO.FileOptions)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Create\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 203\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates or overwrites the specified file, specifying a buffer size and a <xref href=\\\"System.IO.FileOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that describes how to create or overwrite the file.</p>\\n\"\n  syntax:\n    content: public static FileStream Create(string path, int bufferSize, FileOptions options)\n    content.vb: Public Shared Function Create(path As String, bufferSize As Integer, options As FileOptions) As FileStream\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The name of the file. </p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>The number of bytes buffered for reads and writes to the file. </p>\\n\"\n    - id: options\n      type: System.IO.FileOptions\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.FileOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that describes how to create or overwrite the file.</p>\\n\"\n    return:\n      type: System.IO.FileStream\n      description: \"\\n<p>A new file with the specified buffer size.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a file that is read-only. </p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.FileOptions.Encrypted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is specified for <em>options</em> and file encryption is not supported on the current platform.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while creating the file. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a file that is read-only. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a file that is read-only. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Create(String, Int32, FileOptions)\n- uid: System.IO.File.CreateText(System.String)\n  commentId: M:System.IO.File.CreateText(System.String)\n  id: CreateText(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: CreateText(String)\n  fullName: System.IO.File.CreateText(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateText\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 48\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates or opens a file for writing UTF-8 encoded text.</p>\\n\"\n  syntax:\n    content: public static StreamWriter CreateText(string path)\n    content.vb: Public Shared Function CreateText(path As String) As StreamWriter\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to be opened for writing. </p>\\n\"\n    return:\n      type: System.IO.StreamWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that writes to the specified file using UTF-8 encoding.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.CreateText(String)\n- uid: System.IO.File.Delete(System.String)\n  commentId: M:System.IO.File.Delete(System.String)\n  id: Delete(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Delete(String)\n  fullName: System.IO.File.Delete(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Delete\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 224\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Deletes the specified file. </p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void Delete(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub Delete(path As String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The name of the file to be deleted. Wildcard characters are not supported.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The specified file is in use. </p>\\n<p>-or-</p>\\n<p>There is an open handle on the file, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see How to: Enumerate Directories and Files.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>The file is an executable file that is in use.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a read-only file. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Delete(String)\n- uid: System.IO.File.Exists(System.String)\n  commentId: M:System.IO.File.Exists(System.String)\n  id: Exists(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Exists(String)\n  fullName: System.IO.File.Exists(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Exists\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 325\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Determines whether the specified file exists.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static bool Exists(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function Exists(path As String) As Boolean\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to check. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the caller has the required permissions and <em>path</em> contains the name of an existing file; otherwise, <strong>false</strong>. This method also returns <strong>false</strong> if <em>path</em> is <strong>null</strong>, an invalid path, or a zero-length string. If the caller does not have sufficient permissions to read the specified file, no exception is thrown and the method returns <strong>false</strong> regardless of the existence of <em>path</em>.</p>\\n\"\n  seealso:\n  - type: System.IO.Directory.Exists(System.String)\n    commentId: M:System.IO.Directory.Exists(System.String)\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Exists(String)\n- uid: System.IO.File.GetAttributes(System.String)\n  commentId: M:System.IO.File.GetAttributes(System.String)\n  id: GetAttributes(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: GetAttributes(String)\n  fullName: System.IO.File.GetAttributes(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetAttributes\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 564\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets the <xref href=\\\"System.IO.FileAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the file on the path.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static FileAttributes GetAttributes(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function GetAttributes(path As String) As FileAttributes\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path to the file. </p>\\n\"\n    return:\n      type: System.IO.FileAttributes\n      description: \"\\n<p>The <xref href=\\\"System.IO.FileAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the file on the path.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is empty, contains only white spaces, or contains invalid characters. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>\\n<em>path</em> represents a file and is invalid, such as being on an unmapped drive, or the file cannot be found. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> represents a directory and is invalid, such as being on an unmapped drive, or the directory cannot be found.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>This file is being used by another process.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.GetAttributes(String)\n- uid: System.IO.File.GetCreationTime(System.String)\n  commentId: M:System.IO.File.GetCreationTime(System.String)\n  id: GetCreationTime(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: GetCreationTime(String)\n  fullName: System.IO.File.GetCreationTime(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCreationTime\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 419\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the creation date and time of the specified file or directory.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static DateTime GetCreationTime(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function GetCreationTime(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain creation date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure set to the creation date and time for the specified file or directory. This value is expressed in local time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.GetCreationTime(String)\n- uid: System.IO.File.GetCreationTimeUtc(System.String)\n  commentId: M:System.IO.File.GetCreationTimeUtc(System.String)\n  id: GetCreationTimeUtc(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: GetCreationTimeUtc(String)\n  fullName: System.IO.File.GetCreationTimeUtc(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCreationTimeUtc\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 425\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the creation date and time, in coordinated universal time (UTC), of the specified file or directory.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static DateTime GetCreationTimeUtc(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function GetCreationTimeUtc(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain creation date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure set to the creation date and time for the specified file or directory. This value is expressed in UTC time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.GetCreationTimeUtc(String)\n- uid: System.IO.File.GetLastAccessTime(System.String)\n  commentId: M:System.IO.File.GetLastAccessTime(System.String)\n  id: GetLastAccessTime(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: GetLastAccessTime(String)\n  fullName: System.IO.File.GetLastAccessTime(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLastAccessTime\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 474\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the date and time the specified file or directory was last accessed.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static DateTime GetLastAccessTime(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function GetLastAccessTime(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain access date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in local time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.GetLastAccessTime(String)\n- uid: System.IO.File.GetLastAccessTimeUtc(System.String)\n  commentId: M:System.IO.File.GetLastAccessTimeUtc(System.String)\n  id: GetLastAccessTimeUtc(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: GetLastAccessTimeUtc(String)\n  fullName: System.IO.File.GetLastAccessTimeUtc(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLastAccessTimeUtc\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 480\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last accessed.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static DateTime GetLastAccessTimeUtc(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function GetLastAccessTimeUtc(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain access date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in UTC time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.GetLastAccessTimeUtc(String)\n- uid: System.IO.File.GetLastWriteTime(System.String)\n  commentId: M:System.IO.File.GetLastWriteTime(System.String)\n  id: GetLastWriteTime(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: GetLastWriteTime(String)\n  fullName: System.IO.File.GetLastWriteTime(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLastWriteTime\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 529\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the date and time the specified file or directory was last written to.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static DateTime GetLastWriteTime(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function GetLastWriteTime(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain write date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure set to the date and time that the specified file or directory was last written to. This value is expressed in local time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.GetLastWriteTime(String)\n- uid: System.IO.File.GetLastWriteTimeUtc(System.String)\n  commentId: M:System.IO.File.GetLastWriteTimeUtc(System.String)\n  id: GetLastWriteTimeUtc(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: GetLastWriteTimeUtc(String)\n  fullName: System.IO.File.GetLastWriteTimeUtc(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLastWriteTimeUtc\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 535\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last written to.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static DateTime GetLastWriteTimeUtc(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function GetLastWriteTimeUtc(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain write date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure set to the date and time that the specified file or directory was last written to. This value is expressed in UTC time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.GetLastWriteTimeUtc(String)\n- uid: System.IO.File.Move(System.String,System.String)\n  commentId: M:System.IO.File.Move(System.String,System.String)\n  id: Move(System.String,System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Move(String, String)\n  fullName: System.IO.File.Move(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Move\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 1019\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Moves a specified file to a new location, providing the option to specify a new file name.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void Move(string sourceFileName, string destFileName)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub Move(sourceFileName As String, destFileName As String)\n    parameters:\n    - id: sourceFileName\n      type: System.String\n      description: \"\\n<p>The name of the file to move. Can include a relative or absolute path.</p>\\n\"\n    - id: destFileName\n      type: System.String\n      description: \"\\n<p>The new path and name for the file.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The destination file already exists.</p>\\n<p>-or-</p>\\n<p>\\n<em>sourceFileName</em> was not found. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is a zero-length string, contains only white space, or contains invalid characters as defined in <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The path specified in <em>sourceFileName</em> or <em>destFileName</em> is invalid, (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>sourceFileName</em> or <em>destFileName</em> is in an invalid format. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Move(String, String)\n- uid: System.IO.File.Open(System.String,System.IO.FileMode)\n  commentId: M:System.IO.File.Open(System.String,System.IO.FileMode)\n  id: Open(System.String,System.IO.FileMode)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Open(String, FileMode)\n  fullName: System.IO.File.Open(System.String, System.IO.FileMode)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Open\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 387\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens a <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on the specified path with read/write access.</p>\\n\"\n  syntax:\n    content: public static FileStream Open(string path, FileMode mode)\n    content.vb: Public Shared Function Open(path As String, mode As FileMode) As FileStream\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to open. </p>\\n\"\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten. </p>\\n\"\n    return:\n      type: System.IO.FileStream\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> opened in the specified mode and path, with read/write access and not shared.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n<p>-or-</p>\\n<p>\\n<em>mode</em> is <xref href=\\\"System.IO.FileMode.Create\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and the specified file is a hidden file.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>mode</em> specified an invalid value. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Open(String, FileMode)\n- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  commentId: M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Open(String, FileMode, FileAccess)\n  fullName: System.IO.File.Open(System.String, System.IO.FileMode, System.IO.FileAccess)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Open\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 391\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens a <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on the specified path, with the specified mode and access.</p>\\n\"\n  syntax:\n    content: public static FileStream Open(string path, FileMode mode, FileAccess access)\n    content.vb: Public Shared Function Open(path As String, mode As FileMode, access As FileAccess) As FileStream\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to open. </p>\\n\"\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the operations that can be performed on the file. </p>\\n\"\n    return:\n      type: System.IO.FileStream\n      description: \"\\n<p>An unshared <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that provides access to the specified file, with the specified mode and access.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>access</em> specified <strong>Read</strong> and <em>mode</em> specified <strong>Create</strong>, <strong>CreateNew</strong>, <strong>Truncate</strong>, or <strong>Append</strong>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only and <em>access</em> is not <strong>Read</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n<p>-or-</p>\\n<p>\\n<em>mode</em> is <xref href=\\\"System.IO.FileMode.Create\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and the specified file is a hidden file.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>mode</em> or <em>access</em> specified an invalid value. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Open(String, FileMode, FileAccess)\n- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  commentId: M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: Open(String, FileMode, FileAccess, FileShare)\n  fullName: System.IO.File.Open(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Open\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 395\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens a <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.</p>\\n\"\n  syntax:\n    content: public static FileStream Open(string path, FileMode mode, FileAccess access, FileShare share)\n    content.vb: Public Shared Function Open(path As String, mode As FileMode, access As FileAccess, share As FileShare) As FileStream\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to open. </p>\\n\"\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten. </p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the operations that can be performed on the file. </p>\\n\"\n    - id: share\n      type: System.IO.FileShare\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileShare\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value specifying the type of access other threads have to the file. </p>\\n\"\n    return:\n      type: System.IO.FileStream\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>access</em> specified <strong>Read</strong> and <em>mode</em> specified <strong>Create</strong>, <strong>CreateNew</strong>, <strong>Truncate</strong>, or <strong>Append</strong>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only and <em>access</em> is not <strong>Read</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n<p>-or-</p>\\n<p>\\n<em>mode</em> is <xref href=\\\"System.IO.FileMode.Create\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and the specified file is a hidden file.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>mode</em>, <em>access</em>, or <em>share</em> specified an invalid value. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.Open(String, FileMode, FileAccess, FileShare)\n- uid: System.IO.File.OpenRead(System.String)\n  commentId: M:System.IO.File.OpenRead(System.String)\n  id: OpenRead(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: OpenRead(String)\n  fullName: System.IO.File.OpenRead(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OpenRead\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 628\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens an existing file for reading.</p>\\n\"\n  syntax:\n    content: public static FileStream OpenRead(string path)\n    content.vb: Public Shared Function OpenRead(path As String) As FileStream\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to be opened for reading. </p>\\n\"\n    return:\n      type: System.IO.FileStream\n      description: \"\\n<p>A read-only <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on the specified path.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.OpenRead(String)\n- uid: System.IO.File.OpenText(System.String)\n  commentId: M:System.IO.File.OpenText(System.String)\n  id: OpenText(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: OpenText(String)\n  fullName: System.IO.File.OpenText(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OpenText\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 40\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens an existing UTF-8 encoded text file for reading.</p>\\n\"\n  syntax:\n    content: public static StreamReader OpenText(string path)\n    content.vb: Public Shared Function OpenText(path As String) As StreamReader\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to be opened for reading. </p>\\n\"\n    return:\n      type: System.IO.StreamReader\n      description: \"\\n<p>A <xref href=\\\"System.IO.StreamReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on the specified path.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.OpenText(String)\n- uid: System.IO.File.OpenWrite(System.String)\n  commentId: M:System.IO.File.OpenWrite(System.String)\n  id: OpenWrite(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: OpenWrite(String)\n  fullName: System.IO.File.OpenWrite(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OpenWrite\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 633\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens an existing file or creates a new file for writing.</p>\\n\"\n  syntax:\n    content: public static FileStream OpenWrite(string path)\n    content.vb: Public Shared Function OpenWrite(path As String) As FileStream\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to be opened for writing. </p>\\n\"\n    return:\n      type: System.IO.FileStream\n      description: \"\\n<p>An unshared <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object on the specified path with <xref href=\\\"System.IO.FileAccess.Write\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> access.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a read-only file or directory. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.OpenWrite(String)\n- uid: System.IO.File.ReadAllBytes(System.String)\n  commentId: M:System.IO.File.ReadAllBytes(System.String)\n  id: ReadAllBytes(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: ReadAllBytes(String)\n  fullName: System.IO.File.ReadAllBytes(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadAllBytes\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 736\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens a binary file, reads the contents of the file into a byte array, and then closes the file.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static byte[] ReadAllBytes(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function ReadAllBytes(path As String) As Byte()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to open for reading. </p>\\n\"\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>A byte array containing the contents of the file.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.ReadAllBytes(String)\n- uid: System.IO.File.ReadAllLines(System.String)\n  commentId: M:System.IO.File.ReadAllLines(System.String)\n  id: ReadAllLines(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: ReadAllLines(String)\n  fullName: System.IO.File.ReadAllLines(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadAllLines\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 815\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens a text file, reads all lines of the file, and then closes the file.</p>\\n\"\n  syntax:\n    content: public static string[] ReadAllLines(string path)\n    content.vb: Public Shared Function ReadAllLines(path As String) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to open for reading. </p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>A string array containing all lines of the file.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.ReadAllLines(String)\n- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.ReadAllLines(System.String,System.Text.Encoding)\n  id: ReadAllLines(System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: ReadAllLines(String, Encoding)\n  fullName: System.IO.File.ReadAllLines(System.String, System.Text.Encoding)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadAllLines\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 826\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens a file, reads all lines of the file with the specified encoding, and then closes the file.</p>\\n\"\n  syntax:\n    content: public static string[] ReadAllLines(string path, Encoding encoding)\n    content.vb: Public Shared Function ReadAllLines(path As String, encoding As Encoding) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to open for reading. </p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding applied to the contents of the file. </p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>A string array containing all lines of the file.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.ReadAllLines(String, Encoding)\n- uid: System.IO.File.ReadAllText(System.String)\n  commentId: M:System.IO.File.ReadAllText(System.String)\n  id: ReadAllText(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: ReadAllText(String)\n  fullName: System.IO.File.ReadAllText(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadAllText\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 638\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens a text file, reads all lines of the file, and then closes the file.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static string ReadAllText(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function ReadAllText(path As String) As String\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to open for reading. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A string containing all lines of the file.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.ReadAllText(String)\n- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.ReadAllText(System.String,System.Text.Encoding)\n  id: ReadAllText(System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: ReadAllText(String, Encoding)\n  fullName: System.IO.File.ReadAllText(System.String, System.Text.Encoding)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadAllText\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 650\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Opens a file, reads all lines of the file with the specified encoding, and then closes the file.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static string ReadAllText(string path, Encoding encoding)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function ReadAllText(path As String, encoding As Encoding) As String\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to open for reading. </p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding applied to the contents of the file. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A string containing all lines of the file.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in <em>path</em> was not found. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.ReadAllText(String, Encoding)\n- uid: System.IO.File.ReadLines(System.String)\n  commentId: M:System.IO.File.ReadLines(System.String)\n  id: ReadLines(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: ReadLines(String)\n  fullName: System.IO.File.ReadLines(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadLines\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 855\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Reads the lines of a file.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> ReadLines(string path)\n    content.vb: Public Shared Function ReadLines(path As String) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to read.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>All the lines of the file, or the lines that are the result of a query.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid (for example, it is on an unmapped drive).</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified by <em>path</em> was not found.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.ReadLines(String)\n- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.ReadLines(System.String,System.Text.Encoding)\n  id: ReadLines(System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: ReadLines(String, Encoding)\n  fullName: System.IO.File.ReadLines(System.String, System.Text.Encoding)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadLines\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 866\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Read the lines of a file that has a specified encoding.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> ReadLines(string path, Encoding encoding)\n    content.vb: Public Shared Function ReadLines(path As String, encoding As Encoding) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to read.</p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding that is applied to the contents of the file. </p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>All the lines of the file, or the lines that are the result of a query.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid (for example, it is on an unmapped drive).</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified by <em>path</em> was not found.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.ReadLines(String, Encoding)\n- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)\n  commentId: M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)\n  id: SetAttributes(System.String,System.IO.FileAttributes)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: SetAttributes(String, FileAttributes)\n  fullName: System.IO.File.SetAttributes(System.String, System.IO.FileAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetAttributes\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 584\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the specified <xref href=\\\"System.IO.FileAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the file on the specified path.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public static void SetAttributes(string path, FileAttributes fileAttributes)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Shared Sub SetAttributes(path As String, fileAttributes As FileAttributes)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path to the file. </p>\\n\"\n    - id: fileAttributes\n      type: System.IO.FileAttributes\n      description: \"\\n<p>A bitwise combination of the enumeration values. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is empty, contains only white spaces, contains invalid characters, or the file attribute is invalid. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid, (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file cannot be found.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.SetAttributes(String, FileAttributes)\n- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetCreationTime(System.String,System.DateTime)\n  id: SetCreationTime(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: SetCreationTime(String, DateTime)\n  fullName: System.IO.File.SetCreationTime(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCreationTime\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 399\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time the file was created.</p>\\n\"\n  syntax:\n    content: public static void SetCreationTime(string path, DateTime creationTime)\n    content.vb: Public Shared Sub SetCreationTime(path As String, creationTime As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file for which to set the creation date and time information. </p>\\n\"\n    - id: creationTime\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the value to set for the creation date and time of <em>path</em>. This value is expressed in local time. </p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while performing the operation. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>creationTime</em> specifies a value outside the range of dates, times, or both permitted for this operation. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.SetCreationTime(String, DateTime)\n- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)\n  id: SetCreationTimeUtc(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: SetCreationTimeUtc(String, DateTime)\n  fullName: System.IO.File.SetCreationTimeUtc(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCreationTimeUtc\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 404\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time, in coordinated universal time (UTC), that the file was created.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void SetCreationTimeUtc(string path, DateTime creationTimeUtc)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub SetCreationTimeUtc(path As String, creationTimeUtc As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file for which to set the creation date and time information. </p>\\n\"\n    - id: creationTimeUtc\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the value to set for the creation date and time of <em>path</em>. This value is expressed in UTC time. </p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while performing the operation. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>creationTime</em> specifies a value outside the range of dates, times, or both permitted for this operation. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.SetCreationTimeUtc(String, DateTime)\n- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetLastAccessTime(System.String,System.DateTime)\n  id: SetLastAccessTime(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: SetLastAccessTime(String, DateTime)\n  fullName: System.IO.File.SetLastAccessTime(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLastAccessTime\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 454\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time the specified file was last accessed.</p>\\n\"\n  syntax:\n    content: public static void SetLastAccessTime(string path, DateTime lastAccessTime)\n    content.vb: Public Shared Sub SetLastAccessTime(path As String, lastAccessTime As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file for which to set the access date and time information. </p>\\n\"\n    - id: lastAccessTime\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the value to set for the last access date and time of <em>path</em>. This value is expressed in local time. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>lastAccessTime</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.SetLastAccessTime(String, DateTime)\n- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)\n  id: SetLastAccessTimeUtc(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: SetLastAccessTimeUtc(String, DateTime)\n  fullName: System.IO.File.SetLastAccessTimeUtc(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLastAccessTimeUtc\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 459\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time, in coordinated universal time (UTC), that the specified file was last accessed.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void SetLastAccessTimeUtc(string path, DateTime lastAccessTimeUtc)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub SetLastAccessTimeUtc(path As String, lastAccessTimeUtc As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file for which to set the access date and time information. </p>\\n\"\n    - id: lastAccessTimeUtc\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the value to set for the last access date and time of <em>path</em>. This value is expressed in UTC time. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>lastAccessTimeUtc</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.SetLastAccessTimeUtc(String, DateTime)\n- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetLastWriteTime(System.String,System.DateTime)\n  id: SetLastWriteTime(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: SetLastWriteTime(String, DateTime)\n  fullName: System.IO.File.SetLastWriteTime(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLastWriteTime\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 509\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time that the specified file was last written to.</p>\\n\"\n  syntax:\n    content: public static void SetLastWriteTime(string path, DateTime lastWriteTime)\n    content.vb: Public Shared Sub SetLastWriteTime(path As String, lastWriteTime As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file for which to set the date and time information. </p>\\n\"\n    - id: lastWriteTime\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the value to set for the last write date and time of <em>path</em>. This value is expressed in local time. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>lastWriteTime</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.SetLastWriteTime(String, DateTime)\n- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)\n  id: SetLastWriteTimeUtc(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: SetLastWriteTimeUtc(String, DateTime)\n  fullName: System.IO.File.SetLastWriteTimeUtc(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLastWriteTimeUtc\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 514\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time, in coordinated universal time (UTC), that the specified file was last written to.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void SetLastWriteTimeUtc(string path, DateTime lastWriteTimeUtc)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub SetLastWriteTimeUtc(path As String, lastWriteTimeUtc As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file for which to set the date and time information. </p>\\n\"\n    - id: lastWriteTimeUtc\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the value to set for the last write date and time of <em>path</em>. This value is expressed in UTC time. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>lastWriteTimeUtc</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.SetLastWriteTimeUtc(String, DateTime)\n- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])\n  commentId: M:System.IO.File.WriteAllBytes(System.String,System.Byte[])\n  id: WriteAllBytes(System.String,System.Byte[])\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: WriteAllBytes(String, Byte[])\n  fullName: System.IO.File.WriteAllBytes(System.String, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAllBytes\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 773\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void WriteAllBytes(string path, byte[] bytes)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub WriteAllBytes(path As String, bytes As Byte())\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to write to. </p>\\n\"\n    - id: bytes\n      type: System.Byte[]\n      description: \"\\n<p>The bytes to write to the file. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong> or the byte array is empty. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.IO.File.WriteAllBytes(System.String, System.Byte())\n  name.vb: WriteAllBytes(String, Byte())\n  nameWithType: File.WriteAllBytes(String, Byte[])\n  nameWithType.vb: File.WriteAllBytes(String, Byte())\n- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  commentId: M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: WriteAllLines(String, IEnumerable<String>)\n  fullName: System.IO.File.WriteAllLines(System.String, System.Collections.Generic.IEnumerable<System.String>)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAllLines\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 907\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new file, writes a collection of strings to the file, and then closes the file.</p>\\n\"\n  syntax:\n    content: public static void WriteAllLines(string path, IEnumerable<string> contents)\n    content.vb: Public Shared Sub WriteAllLines(path As String, contents As IEnumerable(Of String))\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to write to.</p>\\n\"\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>The lines to write to the file.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>Either<em> path </em>or <em>contents</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid (for example, it is on an unmapped drive).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.IO.File.WriteAllLines(System.String, System.Collections.Generic.IEnumerable(Of System.String))\n  name.vb: WriteAllLines(String, IEnumerable(Of String))\n  nameWithType: File.WriteAllLines(String, IEnumerable<String>)\n  nameWithType.vb: File.WriteAllLines(String, IEnumerable(Of String))\n- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  commentId: M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: WriteAllLines(String, IEnumerable<String>, Encoding)\n  fullName: System.IO.File.WriteAllLines(System.String, System.Collections.Generic.IEnumerable<System.String>, System.Text.Encoding)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAllLines\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 920\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.</p>\\n\"\n  syntax:\n    content: public static void WriteAllLines(string path, IEnumerable<string> contents, Encoding encoding)\n    content.vb: Public Shared Sub WriteAllLines(path As String, contents As IEnumerable(Of String), encoding As Encoding)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to write to.</p>\\n\"\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>The lines to write to the file.</p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The character encoding to use.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>Either<em> path</em>,<em> contents</em>, or <em>encoding</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid (for example, it is on an unmapped drive).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>\\n<em>path</em> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specifies a file that is read-only.</p>\\n<p>-or-</p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is a directory.</p>\\n<p>-or-</p>\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.IO.File.WriteAllLines(System.String, System.Collections.Generic.IEnumerable(Of System.String), System.Text.Encoding)\n  name.vb: WriteAllLines(String, IEnumerable(Of String), Encoding)\n  nameWithType: File.WriteAllLines(String, IEnumerable<String>, Encoding)\n  nameWithType.vb: File.WriteAllLines(String, IEnumerable(Of String), Encoding)\n- uid: System.IO.File.WriteAllText(System.String,System.String)\n  commentId: M:System.IO.File.WriteAllText(System.String,System.String)\n  id: WriteAllText(System.String,System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: WriteAllText(String, String)\n  fullName: System.IO.File.WriteAllText(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAllText\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 687\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void WriteAllText(string path, string contents)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub WriteAllText(path As String, contents As String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to write to. </p>\\n\"\n    - id: contents\n      type: System.String\n      description: \"\\n<p>The string to write to the file. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong> or <em>contents</em> is empty.  </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.WriteAllText(String, String)\n- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)\n  id: WriteAllText(System.String,System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  - vb\n  name: WriteAllText(String, String, Encoding)\n  fullName: System.IO.File.WriteAllText(System.String, System.String, System.Text.Encoding)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/File.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAllText\n    path: src/mscorlib/src/System/IO/File.cs\n    startLine: 699\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void WriteAllText(string path, string contents, Encoding encoding)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub WriteAllText(path As String, contents As String, encoding As Encoding)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file to write to. </p>\\n\"\n    - id: contents\n      type: System.String\n      description: \"\\n<p>The string to write to the file. </p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding to apply to the string.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong> or <em>contents</em> is empty. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred while opening the file. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>\\n<em>path</em> specified a file that is read-only.</p>\\n<p>-or- </p>\\n<p>This operation is not supported on the current platform.</p>\\n<p>-or- </p>\\n<p>\\n<em>path</em> specified a directory.</p>\\n<p>-or- </p>\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> is in an invalid format. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: File.WriteAllText(String, String, Encoding)\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)\n  name.vb: IEnumerable(Of String)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<String>\n  nameWithType.vb: IEnumerable(Of String)\n  commentId: T:System.Collections.Generic.IEnumerable{System.String}\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  fullName: System.Text.Encoding\n  nameWithType: Encoding\n  commentId: T:System.Text.Encoding\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.IO.StreamWriter\n  parent: System.IO\n  isExternal: false\n  name: StreamWriter\n  fullName: System.IO.StreamWriter\n  nameWithType: StreamWriter\n  commentId: T:System.IO.StreamWriter\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IO.FileStream\n  parent: System.IO\n  isExternal: false\n  name: FileStream\n  fullName: System.IO.FileStream\n  nameWithType: FileStream\n  commentId: T:System.IO.FileStream\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.IO.FileOptions\n  parent: System.IO\n  isExternal: false\n  name: FileOptions\n  fullName: System.IO.FileOptions\n  nameWithType: FileOptions\n  commentId: T:System.IO.FileOptions\n- uid: System.IO.FileAttributes\n  parent: System.IO\n  isExternal: false\n  name: FileAttributes\n  fullName: System.IO.FileAttributes\n  nameWithType: FileAttributes\n  commentId: T:System.IO.FileAttributes\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  fullName: System.IO.FileMode\n  nameWithType: FileMode\n  commentId: T:System.IO.FileMode\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  fullName: System.IO.FileAccess\n  nameWithType: FileAccess\n  commentId: T:System.IO.FileAccess\n- uid: System.IO.FileShare\n  parent: System.IO\n  isExternal: false\n  name: FileShare\n  fullName: System.IO.FileShare\n  nameWithType: FileShare\n  commentId: T:System.IO.FileShare\n- uid: System.IO.StreamReader\n  parent: System.IO\n  isExternal: false\n  name: StreamReader\n  fullName: System.IO.StreamReader\n  nameWithType: StreamReader\n  commentId: T:System.IO.StreamReader\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.IO.DirectoryNotFoundException\n  isExternal: false\n  name: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  commentId: T:System.IO.DirectoryNotFoundException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.IO.PathTooLongException\n  isExternal: false\n  name: PathTooLongException\n  fullName: System.IO.PathTooLongException\n  nameWithType: PathTooLongException\n  commentId: T:System.IO.PathTooLongException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  commentId: T:System.UnauthorizedAccessException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}