{"nodes":[{"pos":[809,823],"content":"FileSystemInfo","needQuote":true,"nodes":[{"content":"FileSystemInfo","pos":[0,14]}]},{"pos":[2622,2630],"content":"FullPath","needQuote":true,"nodes":[{"content":"FullPath","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The fully qualified path is 260 or more characters.&lt;/p&gt;\\n","pos":[3332,3394],"source":"\\n<p>The fully qualified path is 260 or more characters.</p>\\n"},{"pos":[3781,3793],"content":"OriginalPath","needQuote":true,"nodes":[{"content":"OriginalPath","pos":[0,12]}]},{"pos":[4771,4787],"content":"FileSystemInfo()","needQuote":true,"nodes":[{"content":"FileSystemInfo()","pos":[0,16]}]},{"pos":[5852,5862],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The specified file does not exist.","pos":[6966,7005],"source":"\\n<p>The specified file does not exist."},{"content":"&lt;/p&gt;\\n","pos":[7006,7012],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid; for example, it is on an unmapped drive.","pos":[7133,7209],"source":"\\n<p>The specified path is invalid; for example, it is on an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[7210,7216],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[7331,7385],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[7386,7392],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller attempts to set an invalid file attribute.","pos":[7489,7547],"source":"\\n<p>The caller attempts to set an invalid file attribute."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The user attempts to set an attribute value but does not have write permission.&lt;/p&gt;\\n","pos":[7548,7655],"source":" </p>\\n<p>-or-</p>\\n<p>The user attempts to set an attribute value but does not have write permission.</p>\\n"},{"pos":[8403,8415],"content":"CreationTime","needQuote":true,"nodes":[{"content":"CreationTime","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The specified path is invalid; for example, it is on an unmapped drive.&lt;/p&gt;\\n","pos":[9582,9664],"source":"\\n<p>The specified path is invalid; for example, it is on an unmapped drive.</p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[9785,9852],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;The caller attempts to set an invalid creation time.&lt;/p&gt;\\n","pos":[9969,10032],"source":"\\n<p>The caller attempts to set an invalid creation time.</p>\\n"},{"pos":[10566,10581],"content":"CreationTimeUtc","needQuote":true,"nodes":[{"content":"CreationTimeUtc","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The specified path is invalid; for example, it is on an unmapped drive.&lt;/p&gt;\\n","pos":[11950,12032],"source":"\\n<p>The specified path is invalid; for example, it is on an unmapped drive.</p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[12153,12220],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;The caller attempts to set an invalid access time.&lt;/p&gt;\\n","pos":[12337,12398],"source":"\\n<p>The caller attempts to set an invalid access time.</p>\\n"},{"pos":[12908,12914],"content":"Exists","needQuote":true,"nodes":[{"content":"Exists","pos":[0,6]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the file or directory exists; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13573,13675],"source":"\\n<p>\\n<strong>true</strong> if the file or directory exists; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[14096,14105],"content":"Extension","needQuote":true,"nodes":[{"content":"Extension","pos":[0,9]}]},{"pos":[15274,15282],"content":"FullName","needQuote":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A string containing the full path.&lt;/p&gt;\\n","pos":[15994,16039],"source":"\\n<p>A string containing the full path.</p>\\n"},{"content":"\\n&lt;p&gt;The fully qualified path and file name is 260 or more characters.&lt;/p&gt;\\n","pos":[16162,16238],"source":"\\n<p>The fully qualified path and file name is 260 or more characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[16353,16407],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[16408,16414],"source":" </p>\\n"},{"pos":[16974,16988],"content":"LastAccessTime","needQuote":true,"nodes":[{"content":"LastAccessTime","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The time that the current file or directory was last accessed.&lt;/p&gt;\\n","pos":[17664,17737],"source":"\\n<p>The time that the current file or directory was last accessed.</p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[18097,18164],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;The caller attempts to set an invalid access time&lt;/p&gt;\\n","pos":[18281,18341],"source":"\\n<p>The caller attempts to set an invalid access time</p>\\n"},{"pos":[18883,18900],"content":"LastAccessTimeUtc","needQuote":true,"nodes":[{"content":"LastAccessTimeUtc","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The UTC time that the current file or directory was last accessed.&lt;/p&gt;\\n","pos":[19769,19846],"source":"\\n<p>The UTC time that the current file or directory was last accessed.</p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[20206,20273],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;The caller attempts to set an invalid access time.&lt;/p&gt;\\n","pos":[20390,20451],"source":"\\n<p>The caller attempts to set an invalid access time.</p>\\n"},{"pos":[20984,20997],"content":"LastWriteTime","needQuote":true,"nodes":[{"content":"LastWriteTime","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The time the current file was last written.&lt;/p&gt;\\n","pos":[21676,21730],"source":"\\n<p>The time the current file was last written.</p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[22090,22157],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;The caller attempts to set an invalid write time.&lt;/p&gt;\\n","pos":[22274,22334],"source":"\\n<p>The caller attempts to set an invalid write time.</p>\\n"},{"pos":[22872,22888],"content":"LastWriteTimeUtc","needQuote":true,"nodes":[{"content":"LastWriteTimeUtc","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The UTC time when the current file was last written to.&lt;/p&gt;\\n","pos":[23755,23821],"source":"\\n<p>The UTC time when the current file was last written to.</p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[24181,24248],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;The caller attempts to set an invalid write time.&lt;/p&gt;\\n","pos":[24365,24425],"source":"\\n<p>The caller attempts to set an invalid write time.</p>\\n"},{"pos":[24930,24934],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;A string that is the name of the parent directory, the name of the last directory in the hierarchy, or the name of a file, including the file name extension.&lt;/p&gt;\\n","pos":[25732,25900],"source":"\\n<p>A string that is the name of the parent directory, the name of the last directory in the hierarchy, or the name of a file, including the file name extension.</p>\\n"},{"pos":[26310,26318],"content":"Delete()","needQuote":true,"nodes":[{"content":"Delete()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The specified path is invalid; for example, it is on an unmapped drive.&lt;/p&gt;\\n","pos":[26967,27049],"source":"\\n<p>The specified path is invalid; for example, it is on an unmapped drive.</p>\\n"},{"content":"\\n&lt;p&gt;There is an open handle on the file or directory, and the operating system is Windows XP or earlier.","pos":[27140,27245],"source":"\\n<p>There is an open handle on the file or directory, and the operating system is Windows XP or earlier."},{"content":"This open handle can result from enumerating directories and files.","pos":[27246,27313]},{"content":"For more information, see How to: Enumerate Directories and Files.&lt;/p&gt;\\n","pos":[27314,27386],"source":" For more information, see How to: Enumerate Directories and Files.</p>\\n"},{"pos":[27782,27791],"content":"Refresh()","needQuote":true,"nodes":[{"content":"Refresh()","pos":[0,9]}]},{"content":"\\n&lt;p&gt;A device such as a disk drive is not ready.","pos":[28476,28524],"source":"\\n<p>A device such as a disk drive is not ready."},{"content":"&lt;/p&gt;\\n","pos":[28525,28531],"source":" </p>\\n"},{"pos":[28783,28792],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[28932,28938],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29098,29108],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[29203,29211],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29280,29281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29308,29309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29379,29387],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29456,29457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29484,29485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29668,29682],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[29801,29807],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29874,29875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29925,29931],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29991,29992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30075,30081],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30148,30149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30199,30205],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30265,30266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30480,30502],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[30650,30656],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30723,30724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30774,30780],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30841,30842]},{"pos":[30897,30903],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30963,30964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31061,31067],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31134,31135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31185,31191],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31252,31253]},{"pos":[31308,31314],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31374,31375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31620,31651],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[31817,31832],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[31908,31909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31959,31965],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32026,32027]},{"pos":[32082,32088],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32148,32149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32255,32270],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[32346,32347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32397,32403],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32464,32465]},{"pos":[32520,32526],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32586,32587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32817,32830],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[32931,32942],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33014,33015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33042,33043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33116,33127],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33199,33200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33227,33228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33403,33412],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[33505,33512],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[33580,33581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33608,33609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33678,33685],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[33753,33754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33781,33782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33957,33974],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[34083,34098],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34174,34175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34202,34203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34280,34295],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34371,34372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34399,34400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34545,34551],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[34682,34688],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34847,34861],"content":"FileAttributes","needQuote":true,"nodes":[{"content":"FileAttributes","pos":[0,14]}]},{"pos":[35038,35046],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[35198,35205],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35353,35373],"content":"PathTooLongException","needQuote":true,"nodes":[{"content":"PathTooLongException","pos":[0,20]}]},{"pos":[35567,35588],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]},{"pos":[35790,35816],"content":"DirectoryNotFoundException","needQuote":true,"nodes":[{"content":"DirectoryNotFoundException","pos":[0,26]}]},{"pos":[36030,36047],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[36254,36271],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[36460,36471],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[36643,36672],"content":"PlatformNotSupportedException","needQuote":true,"nodes":[{"content":"PlatformNotSupportedException","pos":[0,29]}]},{"pos":[36890,36917],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.IO.FileSystemInfo\n  commentId: T:System.IO.FileSystemInfo\n  id: FileSystemInfo\n  parent: System.IO\n  children:\n  - System.IO.FileSystemInfo.#ctor\n  - System.IO.FileSystemInfo.Attributes\n  - System.IO.FileSystemInfo.CreationTime\n  - System.IO.FileSystemInfo.CreationTimeUtc\n  - System.IO.FileSystemInfo.Delete\n  - System.IO.FileSystemInfo.Exists\n  - System.IO.FileSystemInfo.Extension\n  - System.IO.FileSystemInfo.FullName\n  - System.IO.FileSystemInfo.FullPath\n  - System.IO.FileSystemInfo.LastAccessTime\n  - System.IO.FileSystemInfo.LastAccessTimeUtc\n  - System.IO.FileSystemInfo.LastWriteTime\n  - System.IO.FileSystemInfo.LastWriteTimeUtc\n  - System.IO.FileSystemInfo.Name\n  - System.IO.FileSystemInfo.OriginalPath\n  - System.IO.FileSystemInfo.Refresh\n  langs:\n  - csharp\n  - vb\n  name: FileSystemInfo\n  fullName: System.IO.FileSystemInfo\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FileSystemInfo\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 27\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Provides the base class for both <xref href=\\\"System.IO.FileInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.DirectoryInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public abstract class FileSystemInfo : ISerializable\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public MustInherit Class FileSystemInfo\n          Implements ISerializable\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  - type: System.IO.DriveInfo\n    commentId: T:System.IO.DriveInfo\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: FileSystemInfo\n- uid: System.IO.FileSystemInfo.FullPath\n  commentId: F:System.IO.FileSystemInfo.FullPath\n  id: FullPath\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: FullPath\n  fullName: System.IO.FileSystemInfo.FullPath\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FullPath\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 47\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Represents the fully qualified path of the directory or file.</p>\\n\"\n  syntax:\n    content: protected string FullPath\n    content.vb: Protected FullPath As String\n    return:\n      type: System.String\n  exceptions:\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The fully qualified path is 260 or more characters.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: FileSystemInfo.FullPath\n- uid: System.IO.FileSystemInfo.OriginalPath\n  commentId: F:System.IO.FileSystemInfo.OriginalPath\n  id: OriginalPath\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: OriginalPath\n  fullName: System.IO.FileSystemInfo.OriginalPath\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OriginalPath\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 48\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>The path originally specified by the user, whether relative or absolute.</p>\\n\"\n  syntax:\n    content: protected string OriginalPath\n    content.vb: Protected OriginalPath As String\n    return:\n      type: System.String\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: FileSystemInfo.OriginalPath\n- uid: System.IO.FileSystemInfo.#ctor\n  commentId: M:System.IO.FileSystemInfo.#ctor\n  id: '#ctor'\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: FileSystemInfo()\n  fullName: System.IO.FileSystemInfo.FileSystemInfo()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 53\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileSystemInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      protected FileSystemInfo()\n    content.vb: >-\n      <SecurityCritical>\n\n      Protected Sub New\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: FileSystemInfo.FileSystemInfo()\n- uid: System.IO.FileSystemInfo.Attributes\n  commentId: P:System.IO.FileSystemInfo.Attributes\n  id: Attributes\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: Attributes\n  fullName: System.IO.FileSystemInfo.Attributes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Attributes\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 289\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the attributes for the current file or directory.</p>\\n\"\n  syntax:\n    content: >-\n      public FileAttributes Attributes\n\n      {\n          [SecuritySafeCritical]\n          get;\n          [SecurityCritical]\n          set;\n      }\n    content.vb: Public Property Attributes As FileAttributes\n    parameters: []\n    return:\n      type: System.IO.FileAttributes\n      description: \"\\n<p>\\n<xref href=\\\"System.IO.FileAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the current <xref href=\\\"System.IO.FileSystemInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified file does not exist. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid; for example, it is on an unmapped drive. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The caller attempts to set an invalid file attribute. </p>\\n<p>-or-</p>\\n<p>The user attempts to set an attribute value but does not have write permission.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.FileSystemInfo.Refresh\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot initialize the data. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemInfo.Attributes\n- uid: System.IO.FileSystemInfo.CreationTime\n  commentId: P:System.IO.FileSystemInfo.CreationTime\n  id: CreationTime\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: CreationTime\n  fullName: System.IO.FileSystemInfo.CreationTime\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreationTime\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 154\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the creation time of the current file or directory.</p>\\n\"\n  syntax:\n    content: public DateTime CreationTime { get; set; }\n    content.vb: Public Property CreationTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The creation date and time of the current <xref href=\\\"System.IO.FileSystemInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.FileSystemInfo.Refresh\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot initialize the data. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid; for example, it is on an unmapped drive.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The caller attempts to set an invalid creation time.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemInfo.CreationTime\n- uid: System.IO.FileSystemInfo.CreationTimeUtc\n  commentId: P:System.IO.FileSystemInfo.CreationTimeUtc\n  id: CreationTimeUtc\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: CreationTimeUtc\n  fullName: System.IO.FileSystemInfo.CreationTimeUtc\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreationTimeUtc\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 166\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the creation time, in coordinated universal time (UTC), of the current file or directory.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      public DateTime CreationTimeUtc\n\n      {\n          [SecuritySafeCritical]\n          get;\n          set;\n      }\n    content.vb: >-\n      <ComVisible(False)>\n\n      Public Property CreationTimeUtc As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The creation date and time in UTC format of the current <xref href=\\\"System.IO.FileSystemInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.FileSystemInfo.Refresh\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot initialize the data. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid; for example, it is on an unmapped drive.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The caller attempts to set an invalid access time.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemInfo.CreationTimeUtc\n- uid: System.IO.FileSystemInfo.Exists\n  commentId: P:System.IO.FileSystemInfo.Exists\n  id: Exists\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: Exists\n  fullName: System.IO.FileSystemInfo.Exists\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Exists\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 146\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets a value indicating whether the file or directory exists.</p>\\n\"\n  syntax:\n    content: public abstract bool Exists { get; }\n    content.vb: Public MustOverride ReadOnly Property Exists As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the file or directory exists; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: FileSystemInfo.Exists\n- uid: System.IO.FileSystemInfo.Extension\n  commentId: P:System.IO.FileSystemInfo.Extension\n  id: Extension\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: Extension\n  fullName: System.IO.FileSystemInfo.Extension\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Extension\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 122\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets the string representing the extension part of the file.</p>\\n\"\n  syntax:\n    content: public string Extension { get; }\n    content.vb: Public ReadOnly Property Extension As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string containing the <xref href=\\\"System.IO.FileSystemInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> extension.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FileSystemInfo.Extension\n- uid: System.IO.FileSystemInfo.FullName\n  commentId: P:System.IO.FileSystemInfo.FullName\n  id: FullName\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: FullName\n  fullName: System.IO.FileSystemInfo.FullName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FullName\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 86\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets the full path of the directory or file.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual string FullName\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property FullName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string containing the full path.</p>\\n\"\n  exceptions:\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The fully qualified path and file name is 260 or more characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: FileSystemInfo.FullName\n- uid: System.IO.FileSystemInfo.LastAccessTime\n  commentId: P:System.IO.FileSystemInfo.LastAccessTime\n  id: LastAccessTime\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: LastAccessTime\n  fullName: System.IO.FileSystemInfo.LastAccessTime\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LastAccessTime\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 198\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the time the current file or directory was last accessed.</p>\\n\"\n  syntax:\n    content: public DateTime LastAccessTime { get; set; }\n    content.vb: Public Property LastAccessTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The time that the current file or directory was last accessed.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.FileSystemInfo.Refresh\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot initialize the data. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The caller attempts to set an invalid access time</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemInfo.LastAccessTime\n- uid: System.IO.FileSystemInfo.LastAccessTimeUtc\n  commentId: P:System.IO.FileSystemInfo.LastAccessTimeUtc\n  id: LastAccessTimeUtc\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: LastAccessTimeUtc\n  fullName: System.IO.FileSystemInfo.LastAccessTimeUtc\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LastAccessTimeUtc\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 209\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the time, in coordinated universal time (UTC), that the current file or directory was last accessed.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      public DateTime LastAccessTimeUtc\n\n      {\n          [SecuritySafeCritical]\n          get;\n          set;\n      }\n    content.vb: >-\n      <ComVisible(False)>\n\n      Public Property LastAccessTimeUtc As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The UTC time that the current file or directory was last accessed.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.FileSystemInfo.Refresh\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot initialize the data. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The caller attempts to set an invalid access time.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemInfo.LastAccessTimeUtc\n- uid: System.IO.FileSystemInfo.LastWriteTime\n  commentId: P:System.IO.FileSystemInfo.LastWriteTime\n  id: LastWriteTime\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: LastWriteTime\n  fullName: System.IO.FileSystemInfo.LastWriteTime\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LastWriteTime\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 240\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the time when the current file or directory was last written to.</p>\\n\"\n  syntax:\n    content: public DateTime LastWriteTime { get; set; }\n    content.vb: Public Property LastWriteTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The time the current file was last written.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.FileSystemInfo.Refresh\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot initialize the data. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The caller attempts to set an invalid write time.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemInfo.LastWriteTime\n- uid: System.IO.FileSystemInfo.LastWriteTimeUtc\n  commentId: P:System.IO.FileSystemInfo.LastWriteTimeUtc\n  id: LastWriteTimeUtc\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: LastWriteTimeUtc\n  fullName: System.IO.FileSystemInfo.LastWriteTimeUtc\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LastWriteTimeUtc\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 252\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the time, in coordinated universal time (UTC), when the current file or directory was last written to.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      public DateTime LastWriteTimeUtc\n\n      {\n          [SecuritySafeCritical]\n          get;\n          set;\n      }\n    content.vb: >-\n      <ComVisible(False)>\n\n      Public Property LastWriteTimeUtc As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The UTC time when the current file was last written to.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.FileSystemInfo.Refresh\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot initialize the data. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The caller attempts to set an invalid write time.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemInfo.LastWriteTimeUtc\n- uid: System.IO.FileSystemInfo.Name\n  commentId: P:System.IO.FileSystemInfo.Name\n  id: Name\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.IO.FileSystemInfo.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 141\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>For files, gets the name of the file. For directories, gets the name of the last directory in the hierarchy if a hierarchy exists. Otherwise, the <strong>Name</strong> property gets the name of the directory.</p>\\n\"\n  syntax:\n    content: public abstract string Name { get; }\n    content.vb: Public MustOverride ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string that is the name of the parent directory, the name of the last directory in the hierarchy, or the name of a file, including the file name extension.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: FileSystemInfo.Name\n- uid: System.IO.FileSystemInfo.Delete\n  commentId: M:System.IO.FileSystemInfo.Delete\n  id: Delete\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: Delete()\n  fullName: System.IO.FileSystemInfo.Delete()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Delete\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 152\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Deletes a file or directory.</p>\\n\"\n  syntax:\n    content: public abstract void Delete()\n    content.vb: Public MustOverride Sub Delete\n  exceptions:\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid; for example, it is on an unmapped drive.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>There is an open handle on the file or directory, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see How to: Enumerate Directories and Files.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: FileSystemInfo.Delete()\n- uid: System.IO.FileSystemInfo.Refresh\n  commentId: M:System.IO.FileSystemInfo.Refresh\n  id: Refresh\n  parent: System.IO.FileSystemInfo\n  langs:\n  - csharp\n  - vb\n  name: Refresh()\n  fullName: System.IO.FileSystemInfo.Refresh()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Refresh\n    path: src/mscorlib/src/System/IO/FileSystemInfo.cs\n    startLine: 283\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Refreshes the state of the object.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void Refresh()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub Refresh\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A device such as a disk drive is not ready. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemInfo.Refresh()\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.IO.FileAttributes\n  parent: System.IO\n  isExternal: false\n  name: FileAttributes\n  fullName: System.IO.FileAttributes\n  nameWithType: FileAttributes\n  commentId: T:System.IO.FileAttributes\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IO.PathTooLongException\n  isExternal: false\n  name: PathTooLongException\n  fullName: System.IO.PathTooLongException\n  nameWithType: PathTooLongException\n  commentId: T:System.IO.PathTooLongException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n- uid: System.IO.DirectoryNotFoundException\n  isExternal: false\n  name: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  commentId: T:System.IO.DirectoryNotFoundException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.PlatformNotSupportedException\n  isExternal: false\n  name: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  commentId: T:System.PlatformNotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}