{"nodes":[{"pos":[2110,2115],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[3855,3863],"content":"MaxValue","needQuote":true,"nodes":[{"content":"MaxValue","pos":[0,8]}]},{"pos":[4806,4814],"content":"MinValue","needQuote":true,"nodes":[{"content":"MinValue","pos":[0,8]}]},{"pos":[5805,5821],"content":"CompareTo(Int64)","needQuote":true,"nodes":[{"content":"CompareTo(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;An integer to compare.","pos":[6493,6520],"source":"\\n<p>An integer to compare."},{"content":"&lt;/p&gt;\\n","pos":[6521,6527],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A signed number indicating the relative values of this instance and &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;Return Value &lt;/p&gt;\\n&lt;p&gt;Description &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is less than &lt;em&gt;value&lt;/em&gt;.","pos":[6586,6827],"source":"\\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\\n<p>Return Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is equal to &lt;em&gt;value&lt;/em&gt;.","pos":[6828,6923],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is equal to <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is greater than &lt;em&gt;value&lt;/em&gt;.","pos":[6924,7036],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[7037,7071],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[7583,7596],"content":"Equals(Int64)","needQuote":true,"nodes":[{"content":"Equals(Int64)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; has the same value as this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8540,8662],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> has the same value as this instance; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[9007,9021],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object to compare with this instance.","pos":[9670,9715],"source":"\\n<p>An object to compare with this instance."},{"content":"&lt;/p&gt;\\n","pos":[9716,9722],"source":" </p>\\n"},{"pos":[10440,10453],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[11024,11069],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[11410,11423],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[12062,12107],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[12108,12114],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 64-bit signed integer equivalent to the number contained in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[12173,12257],"source":"\\n<p>A 64-bit signed integer equivalent to the number contained in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[12376,12419],"source":"\\n<p>\\n<em>s</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12420,12426],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is not in the correct format.","pos":[12519,12566],"source":"\\n<p>\\n<em>s</em> is not in the correct format."},{"content":"&lt;/p&gt;\\n","pos":[12567,12573],"source":" </p>\\n"},{"pos":[13382,13409],"content":"Parse(String, NumberStyles)","needQuote":true,"nodes":[{"content":"Parse(String, NumberStyles)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[14147,14192],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[14193,14199],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 64-bit signed integer equivalent to the number specified in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[14662,14746],"source":"\\n<p>A 64-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[14865,14908],"source":"\\n<p>\\n<em>s</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[14909,14915],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is not in a format compliant with &lt;em&gt;style&lt;/em&gt;.","pos":[15533,15600],"source":"\\n<p>\\n<em>s</em> is not in a format compliant with <em>style</em>."},{"content":"&lt;/p&gt;\\n","pos":[15601,15607],"source":" </p>\\n"},{"pos":[16859,16903],"content":"Parse(String, NumberStyles, IFormatProvider)","needQuote":true,"nodes":[{"content":"Parse(String, NumberStyles, IFormatProvider)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[17748,17793],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[17794,17800],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 64-bit signed integer equivalent to the number specified in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[18444,18528],"source":"\\n<p>A 64-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[18647,18690],"source":"\\n<p>\\n<em>s</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[18691,18697],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is not in a format compliant with &lt;em&gt;style&lt;/em&gt;.","pos":[19315,19382],"source":"\\n<p>\\n<em>s</em> is not in a format compliant with <em>style</em>."},{"content":"&lt;/p&gt;\\n","pos":[19383,19389],"source":" </p>\\n"},{"pos":[20314,20344],"content":"Parse(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"Parse(String, IFormatProvider)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[21101,21146],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[21147,21153],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information about &lt;em&gt;s&lt;/em&gt;.","pos":[21229,21315],"source":"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>."},{"content":"&lt;/p&gt;\\n","pos":[21316,21322],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 64-bit signed integer equivalent to the number specified in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[21381,21465],"source":"\\n<p>A 64-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[21584,21627],"source":"\\n<p>\\n<em>s</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[21628,21634],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is not in the correct format.","pos":[21727,21774],"source":"\\n<p>\\n<em>s</em> is not in the correct format."},{"content":"&lt;/p&gt;\\n","pos":[21775,21781],"source":" </p>\\n"},{"pos":[22831,22860],"content":"IComparable.CompareTo(Object)","needQuote":true,"nodes":[{"content":"IComparable.CompareTo(Object)","pos":[0,29]}]},{"pos":[23970,23996],"content":"IConvertible.GetTypeCode()","needQuote":true,"nodes":[{"content":"IConvertible.GetTypeCode()","pos":[0,26]}]},{"pos":[25075,25114],"content":"IConvertible.ToBoolean(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToBoolean(IFormatProvider)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[25974,26011],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value of the current instance is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[26072,26191],"source":"\\n<p>\\n<strong>true</strong> if the value of the current instance is not zero; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[26736,26772],"content":"IConvertible.ToByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToByte(IFormatProvider)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[27611,27648],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[28372,28408],"content":"IConvertible.ToChar(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToChar(IFormatProvider)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[29247,29284],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[30020,30060],"content":"IConvertible.ToDateTime(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToDateTime(IFormatProvider)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[30936,30973],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;This conversion is not supported.","pos":[31035,31073],"source":"\\n<p>This conversion is not supported."},{"content":"No value is returned.&lt;/p&gt;\\n","pos":[31074,31101],"source":" No value is returned.</p>\\n"},{"content":"\\n&lt;p&gt;In all cases.&lt;/p&gt;\\n","pos":[31218,31242],"source":"\\n<p>In all cases.</p>\\n"},{"pos":[31800,31839],"content":"IConvertible.ToDecimal(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToDecimal(IFormatProvider)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[32702,32739],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[33487,33525],"content":"IConvertible.ToDouble(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToDouble(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[34380,34417],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[35156,35193],"content":"IConvertible.ToInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToInt16(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[36040,36077],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[36811,36848],"content":"IConvertible.ToInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToInt32(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[37695,37732],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[38466,38503],"content":"IConvertible.ToInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToInt64(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[39348,39385],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the current instance, unchanged.&lt;/p&gt;\\n","pos":[39444,39500],"source":"\\n<p>The value of the current instance, unchanged.</p>\\n"},{"pos":[40040,40077],"content":"IConvertible.ToSByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToSByte(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[40924,40961],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[41698,41736],"content":"IConvertible.ToSingle(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToSingle(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[42590,42627],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[43399,43441],"content":"IConvertible.ToType(Type, IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToType(Type, IFormatProvider)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The value of the current instance, converted to &lt;em&gt;type&lt;/em&gt;.&lt;/p&gt;\\n","pos":[44756,44829],"source":"\\n<p>The value of the current instance, converted to <em>type</em>.</p>\\n"},{"pos":[45398,45436],"content":"IConvertible.ToUInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToUInt16(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[46291,46328],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[47070,47108],"content":"IConvertible.ToUInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToUInt32(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[47963,48000],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[48742,48780],"content":"IConvertible.ToUInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToUInt64(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[49633,49670],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[50266,50276],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.&lt;/p&gt;\\n","pos":[50960,51149],"source":"\\n<p>The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</p>\\n"},{"pos":[51681,51706],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The string representation of the value of this instance as specified by &lt;em&gt;provider&lt;/em&gt;.&lt;/p&gt;\\n","pos":[52746,52847],"source":"\\n<p>The string representation of the value of this instance as specified by <em>provider</em>.</p>\\n"},{"pos":[53371,53387],"content":"ToString(String)","needQuote":true,"nodes":[{"content":"ToString(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A numeric format string.&lt;/p&gt;\\n","pos":[54145,54180],"source":"\\n<p>A numeric format string.</p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the value of this instance as specified by &lt;em&gt;format&lt;/em&gt;.&lt;/p&gt;\\n","pos":[54240,54339],"source":"\\n<p>The string representation of the value of this instance as specified by <em>format</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is invalid or not supported.&lt;/p&gt;\\n","pos":[54446,54503],"source":"\\n<p>\\n<em>format</em> is invalid or not supported.</p>\\n"},{"pos":[55016,55049],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;A numeric format string.&lt;/p&gt;\\n","pos":[55925,55960],"source":"\\n<p>A numeric format string.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information about this instance.","pos":[56036,56125],"source":"\\n<p>An object that supplies culture-specific formatting information about this instance."},{"content":"&lt;/p&gt;\\n","pos":[56126,56132],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the value of this instance as specified by &lt;em&gt;format&lt;/em&gt; and &lt;em&gt;provider&lt;/em&gt;.&lt;/p&gt;\\n","pos":[56192,56313],"source":"\\n<p>The string representation of the value of this instance as specified by <em>format</em> and <em>provider</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is invalid or not supported.&lt;/p&gt;\\n","pos":[56420,56477],"source":"\\n<p>\\n<em>format</em> is invalid or not supported.</p>\\n"},{"pos":[57181,57239],"content":"TryParse(String, NumberStyles, IFormatProvider, out Int64)","needQuote":true,"nodes":[{"content":"TryParse(String, NumberStyles, IFormatProvider, out Int64)","pos":[0,58]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[58225,58270],"source":"\\n<p>A string containing a number to convert."},{"content":"The string is interpreted using the style specified by &lt;em&gt;style&lt;/em&gt;.","pos":[58271,58341],"source":" The string is interpreted using the style specified by <em>style</em>."},{"content":"&lt;/p&gt;\\n","pos":[58342,58348],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information about &lt;em&gt;s&lt;/em&gt;.","pos":[58764,58850],"source":"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>."},{"content":"&lt;/p&gt;\\n","pos":[58851,58857],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;s&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[59707,59818],"source":"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[61212,61239],"content":"TryParse(String, out Int64)","needQuote":true,"nodes":[{"content":"TryParse(String, out Int64)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[62019,62064],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[62065,62071],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;s&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[62901,63012],"source":"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[63543,63549],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[63685,63696],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[63890,63908],"content":"IComparable<Int64>","needQuote":true,"nodes":[{"content":"IComparable&lt;Int64&gt;","pos":[0,18],"source":"IComparable<Int64>"}]},{"pos":[64093,64104],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[64148,64149],"content":"<","needQuote":true,"nodes":[]},{"pos":[64198,64203],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[64335,64346],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"content":"(Of","pos":[64391,64394]},{"pos":[64450,64455],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[64514,64515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64728,64740],"content":"IConvertible","needQuote":true,"nodes":[{"content":"IConvertible","pos":[0,12]}]},{"pos":[64935,64952],"content":"IEquatable<Int64>","needQuote":true,"nodes":[{"content":"IEquatable&lt;Int64&gt;","pos":[0,17],"source":"IEquatable<Int64>"}]},{"pos":[65133,65143],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[65186,65187],"content":"<","needQuote":true,"nodes":[]},{"pos":[65236,65241],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[65372,65382],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[65426,65429]},{"pos":[65485,65490],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[65549,65550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65760,65772],"content":"IFormattable","needQuote":true,"nodes":[{"content":"IFormattable","pos":[0,12]}]},{"pos":[65977,65999],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[66147,66153],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66220,66221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66271,66277],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66338,66339]},{"pos":[66394,66400],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66460,66461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66558,66564],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66631,66632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66682,66688],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66749,66750]},{"pos":[66805,66811],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66871,66872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67117,67148],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[67314,67329],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67405,67406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67456,67462],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67523,67524]},{"pos":[67579,67585],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67645,67646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67752,67767],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67843,67844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67894,67900],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67961,67962]},{"pos":[68017,68023],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68083,68084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68310,68319],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[68412,68419],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[68487,68488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68515,68516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68585,68592],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[68660,68661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68688,68689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68832,68846],"content":"IComparable<T>","needQuote":true,"nodes":[{"content":"IComparable&lt;T&gt;","pos":[0,14],"source":"IComparable<T>"}]},{"pos":[69005,69016],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[69060,69061],"content":"<","needQuote":true,"nodes":[]},{"pos":[69088,69089],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[69189,69200],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"content":"(Of","pos":[69245,69248]},{"pos":[69282,69283],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[69310,69311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69487,69500],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"pos":[69655,69665],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[69708,69709],"content":"<","needQuote":true,"nodes":[]},{"pos":[69736,69737],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[69836,69846],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[69890,69893]},{"pos":[69927,69928],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[69955,69956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70140,70146],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70290,70295],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[70535,70551],"content":"CompareTo(Int64)","needQuote":true,"nodes":[{"content":"CompareTo(Int64)","pos":[0,16]}]},{"pos":[70765,70774],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[70842,70843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70892,70897],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[70956,70957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71039,71048],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[71119,71120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71169,71174],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[71233,71234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71498,71503],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71649,71661],"content":"CompareTo(T)","needQuote":true,"nodes":[{"content":"CompareTo(T)","pos":[0,12]}]},{"pos":[71831,71840],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[71897,71898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71925,71926],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[71953,71954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72036,72045],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[72105,72106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72133,72134],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[72161,72162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72478,72491],"content":"Equals(Int64)","needQuote":true,"nodes":[{"content":"Equals(Int64)","pos":[0,13]}]},{"pos":[72693,72699],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[72763,72764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72813,72818],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[72877,72878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72956,72962],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[73029,73030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73079,73084],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[73143,73144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73398,73405],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73553,73562],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"pos":[73720,73726],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[73779,73780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73807,73808],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[73835,73836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73914,73920],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[73976,73977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74004,74005],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[74032,74033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74282,74296],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[74421,74427],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[74476,74477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74527,74533],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74593,74594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74680,74686],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[74735,74736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74786,74792],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74852,74853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75034,75043],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[75222,75235],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[75342,75353],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[75407,75408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75435,75436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75512,75523],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[75577,75578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75605,75606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75773,75779],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[75958,75970],"content":"NumberStyles","needQuote":true,"nodes":[{"content":"NumberStyles","pos":[0,12]}]},{"pos":[76151,76171],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[76353,76368],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[76581,76598],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"pos":[76733,76742],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[76796,76797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76847,76853],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76913,76914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77005,77014],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[77068,77069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77119,77125],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[77185,77186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77405,77418],"content":"GetTypeCode()","needQuote":true,"nodes":[{"content":"GetTypeCode()","pos":[0,13]}]},{"pos":[77531,77542],"content":"GetTypeCode","needQuote":true,"nodes":[{"content":"GetTypeCode","pos":[0,11]}]},{"pos":[77599,77600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77627,77628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77707,77718],"content":"GetTypeCode","needQuote":true,"nodes":[{"content":"GetTypeCode","pos":[0,11]}]},{"pos":[77775,77776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77803,77804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77979,77987],"content":"TypeCode","needQuote":true,"nodes":[{"content":"TypeCode","pos":[0,8]}]},{"pos":[78191,78217],"content":"ToBoolean(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToBoolean(IFormatProvider)","pos":[0,26]}]},{"pos":[78372,78381],"content":"ToBoolean","needQuote":true,"nodes":[{"content":"ToBoolean","pos":[0,9]}]},{"pos":[78436,78437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78496,78511],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[78559,78560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78661,78670],"content":"ToBoolean","needQuote":true,"nodes":[{"content":"ToBoolean","pos":[0,9]}]},{"pos":[78725,78726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78785,78800],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[78848,78849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79107,79130],"content":"ToByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToByte(IFormatProvider)","pos":[0,23]}]},{"pos":[79279,79285],"content":"ToByte","needQuote":true,"nodes":[{"content":"ToByte","pos":[0,6]}]},{"pos":[79337,79338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79397,79412],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[79460,79461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79559,79565],"content":"ToByte","needQuote":true,"nodes":[{"content":"ToByte","pos":[0,6]}]},{"pos":[79617,79618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79677,79692],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[79740,79741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79941,79945],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[80134,80157],"content":"ToChar(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToChar(IFormatProvider)","pos":[0,23]}]},{"pos":[80306,80312],"content":"ToChar","needQuote":true,"nodes":[{"content":"ToChar","pos":[0,6]}]},{"pos":[80364,80365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80424,80439],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[80487,80488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80586,80592],"content":"ToChar","needQuote":true,"nodes":[{"content":"ToChar","pos":[0,6]}]},{"pos":[80644,80645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80704,80719],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[80767,80768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80968,80972],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[81165,81192],"content":"ToDateTime(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDateTime(IFormatProvider)","pos":[0,27]}]},{"pos":[81349,81359],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[81415,81416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81475,81490],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[81538,81539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81641,81651],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[81707,81708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81767,81782],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[81830,81831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82043,82051],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[82255,82281],"content":"ToDecimal(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDecimal(IFormatProvider)","pos":[0,26]}]},{"pos":[82436,82445],"content":"ToDecimal","needQuote":true,"nodes":[{"content":"ToDecimal","pos":[0,9]}]},{"pos":[82500,82501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82560,82575],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[82623,82624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82725,82734],"content":"ToDecimal","needQuote":true,"nodes":[{"content":"ToDecimal","pos":[0,9]}]},{"pos":[82789,82790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82849,82864],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[82912,82913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83122,83129],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[83329,83354],"content":"ToDouble(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDouble(IFormatProvider)","pos":[0,25]}]},{"pos":[83507,83515],"content":"ToDouble","needQuote":true,"nodes":[{"content":"ToDouble","pos":[0,8]}]},{"pos":[83569,83570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83629,83644],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[83692,83693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83793,83801],"content":"ToDouble","needQuote":true,"nodes":[{"content":"ToDouble","pos":[0,8]}]},{"pos":[83855,83856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83915,83930],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[83978,83979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84185,84191],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[84387,84411],"content":"ToInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt16(IFormatProvider)","pos":[0,24]}]},{"pos":[84562,84569],"content":"ToInt16","needQuote":true,"nodes":[{"content":"ToInt16","pos":[0,7]}]},{"pos":[84622,84623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84682,84697],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[84745,84746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84845,84852],"content":"ToInt16","needQuote":true,"nodes":[{"content":"ToInt16","pos":[0,7]}]},{"pos":[84905,84906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84965,84980],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[85028,85029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85232,85237],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[85430,85454],"content":"ToInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt32(IFormatProvider)","pos":[0,24]}]},{"pos":[85605,85612],"content":"ToInt32","needQuote":true,"nodes":[{"content":"ToInt32","pos":[0,7]}]},{"pos":[85665,85666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85725,85740],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[85788,85789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85888,85895],"content":"ToInt32","needQuote":true,"nodes":[{"content":"ToInt32","pos":[0,7]}]},{"pos":[85948,85949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86008,86023],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[86071,86072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86327,86351],"content":"ToInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt64(IFormatProvider)","pos":[0,24]}]},{"pos":[86502,86509],"content":"ToInt64","needQuote":true,"nodes":[{"content":"ToInt64","pos":[0,7]}]},{"pos":[86562,86563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86622,86637],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[86685,86686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86785,86792],"content":"ToInt64","needQuote":true,"nodes":[{"content":"ToInt64","pos":[0,7]}]},{"pos":[86845,86846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86905,86920],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[86968,86969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87224,87248],"content":"ToSByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToSByte(IFormatProvider)","pos":[0,24]}]},{"pos":[87399,87406],"content":"ToSByte","needQuote":true,"nodes":[{"content":"ToSByte","pos":[0,7]}]},{"pos":[87459,87460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87519,87534],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[87582,87583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87682,87689],"content":"ToSByte","needQuote":true,"nodes":[{"content":"ToSByte","pos":[0,7]}]},{"pos":[87742,87743],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87802,87817],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[87865,87866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88069,88074],"content":"SByte","needQuote":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[88268,88293],"content":"ToSingle(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToSingle(IFormatProvider)","pos":[0,25]}]},{"pos":[88446,88454],"content":"ToSingle","needQuote":true,"nodes":[{"content":"ToSingle","pos":[0,8]}]},{"pos":[88508,88509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88568,88583],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[88631,88632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88732,88740],"content":"ToSingle","needQuote":true,"nodes":[{"content":"ToSingle","pos":[0,8]}]},{"pos":[88794,88795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88854,88869],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[88917,88918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89124,89130],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[89337,89366],"content":"ToType(Type, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToType(Type, IFormatProvider)","pos":[0,29]}]},{"pos":[89540,89546],"content":"ToType","needQuote":true,"nodes":[{"content":"ToType","pos":[0,6]}]},{"pos":[89598,89599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89647,89651],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[89689,89690]},{"pos":[89754,89769],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[89817,89818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89928,89934],"content":"ToType","needQuote":true,"nodes":[{"content":"ToType","pos":[0,6]}]},{"pos":[89986,89987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90035,90039],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[90077,90078]},{"pos":[90142,90157],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[90205,90206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90424,90428],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[90619,90644],"content":"ToUInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt16(IFormatProvider)","pos":[0,25]}]},{"pos":[90797,90805],"content":"ToUInt16","needQuote":true,"nodes":[{"content":"ToUInt16","pos":[0,8]}]},{"pos":[90859,90860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90919,90934],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[90982,90983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91083,91091],"content":"ToUInt16","needQuote":true,"nodes":[{"content":"ToUInt16","pos":[0,8]}]},{"pos":[91145,91146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91205,91220],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[91268,91269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91475,91481],"content":"UInt16","needQuote":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[91678,91703],"content":"ToUInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt32(IFormatProvider)","pos":[0,25]}]},{"pos":[91856,91864],"content":"ToUInt32","needQuote":true,"nodes":[{"content":"ToUInt32","pos":[0,8]}]},{"pos":[91918,91919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91978,91993],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[92041,92042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92142,92150],"content":"ToUInt32","needQuote":true,"nodes":[{"content":"ToUInt32","pos":[0,8]}]},{"pos":[92204,92205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92264,92279],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[92327,92328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92534,92540],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[92737,92762],"content":"ToUInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt64(IFormatProvider)","pos":[0,25]}]},{"pos":[92915,92923],"content":"ToUInt64","needQuote":true,"nodes":[{"content":"ToUInt64","pos":[0,8]}]},{"pos":[92977,92978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93037,93052],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[93100,93101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93201,93209],"content":"ToUInt64","needQuote":true,"nodes":[{"content":"ToUInt64","pos":[0,8]}]},{"pos":[93263,93264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93323,93338],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[93386,93387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93593,93599],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[93766,93776],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[93877,93885],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[93936,93937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93964,93965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94038,94046],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[94097,94098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94125,94126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94339,94364],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[94517,94525],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[94579,94580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94639,94654],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[94702,94703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94803,94811],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[94865,94866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94925,94940],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[94988,94989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95260,95293],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"pos":[95475,95483],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[95537,95538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95588,95594],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[95655,95656]},{"pos":[95720,95735],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[95783,95784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95898,95906],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[95960,95961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96011,96017],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[96078,96079]},{"pos":[96143,96158],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[96206,96207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96433,96454],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[96653,96668],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]},{"pos":[96834,96851],"content":"OverflowException","needQuote":true,"nodes":[{"content":"OverflowException","pos":[0,17]}]},{"pos":[97040,97057],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[97232,97252],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]}],"content":"items:\n- uid: System.Int64\n  commentId: T:System.Int64\n  id: Int64\n  parent: System\n  children:\n  - System.Int64.CompareTo(System.Int64)\n  - System.Int64.Equals(System.Int64)\n  - System.Int64.Equals(System.Object)\n  - System.Int64.GetHashCode\n  - System.Int64.MaxValue\n  - System.Int64.MinValue\n  - System.Int64.Parse(System.String)\n  - System.Int64.Parse(System.String,System.Globalization.NumberStyles)\n  - System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  - System.Int64.Parse(System.String,System.IFormatProvider)\n  - System.Int64.System#IComparable#CompareTo(System.Object)\n  - System.Int64.System#IConvertible#GetTypeCode\n  - System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToByte(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToChar(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)\n  - System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)\n  - System.Int64.ToString\n  - System.Int64.ToString(System.IFormatProvider)\n  - System.Int64.ToString(System.String)\n  - System.Int64.ToString(System.String,System.IFormatProvider)\n  - System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)\n  - System.Int64.TryParse(System.String,System.Int64@)\n  langs:\n  - csharp\n  - vb\n  name: Int64\n  fullName: System.Int64\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Int64\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 20\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents a 64-bit signed integer.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [StructLayout(LayoutKind.Sequential)]\n\n      [ComVisible(true)]\n\n      public struct Int64 : IComparable, IFormattable, IConvertible, IComparable<long>, IEquatable<long>\n    content.vb: >-\n      <Serializable>\n\n      <StructLayout(LayoutKind.Sequential)>\n\n      <ComVisible(True)>\n\n      Public Structure Int64\n          Implements IComparable, IFormattable, IConvertible, IComparable(Of Long), IEquatable(Of Long)\n  seealso:\n  - type: System.UInt64\n    commentId: T:System.UInt64\n  implements:\n  - System.IComparable\n  - System.IComparable{System.Int64}\n  - System.IConvertible\n  - System.IEquatable{System.Int64}\n  - System.IFormattable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: Int64\n- uid: System.Int64.MaxValue\n  commentId: F:System.Int64.MaxValue\n  id: MaxValue\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: MaxValue\n  fullName: System.Int64.MaxValue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxValue\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the largest possible value of an <strong>Int64</strong>. This field is constant.</p>\\n\"\n  syntax:\n    content: public const long MaxValue = 9223372036854775807L\n    content.vb: Public Const MaxValue As Long = 9223372036854775807L\n    return:\n      type: System.Int64\n  seealso:\n  - type: System.Int64.MinValue\n    commentId: F:System.Int64.MinValue\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Int64.MaxValue\n- uid: System.Int64.MinValue\n  commentId: F:System.Int64.MinValue\n  id: MinValue\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: MinValue\n  fullName: System.Int64.MinValue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MinValue\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 29\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the smallest possible value of an <strong>Int64</strong>. This field is constant.</p>\\n\"\n  syntax:\n    content: public const long MinValue = -9223372036854775808L\n    content.vb: Public Const MinValue As Long = -9223372036854775808L\n    return:\n      type: System.Int64\n  seealso:\n  - type: System.Int64.MaxValue\n    commentId: F:System.Int64.MaxValue\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Int64.MinValue\n- uid: System.Int64.CompareTo(System.Int64)\n  commentId: M:System.Int64.CompareTo(System.Int64)\n  id: CompareTo(System.Int64)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(Int64)\n  fullName: System.Int64.CompareTo(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CompareTo\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 52\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares this instance to a specified 64-bit signed integer and returns an indication of their relative values.</p>\\n\"\n  syntax:\n    content: public int CompareTo(long value)\n    content.vb: Public Function CompareTo(value As Long) As Integer\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>An integer to compare. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\\n<p>Return Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than <em>value</em>. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is equal to <em>value</em>. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than <em>value</em>. </p>\\n</td></tr></tbody></table>\\n\"\n  seealso:\n  - type: System.UInt64\n    commentId: T:System.UInt64\n  - type: System.Int64.Equals(System.Object)\n    commentId: M:System.Int64.Equals(System.Object)\n  implements:\n  - System.IComparable{System.Int64}.CompareTo(System.Int64)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int64.CompareTo(Int64)\n- uid: System.Int64.Equals(System.Int64)\n  commentId: M:System.Int64.Equals(System.Int64)\n  id: Equals(System.Int64)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: Equals(Int64)\n  fullName: System.Int64.Equals(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 67\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value indicating whether this instance is equal to a specified <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: >-\n      [NonVersionable]\n\n      public bool Equals(long obj)\n    content.vb: >-\n      <NonVersionable>\n\n      Public Function Equals(obj As Long) As Boolean\n    parameters:\n    - id: obj\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value to compare to this instance.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> has the same value as this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.IEquatable{System.Int64}.Equals(System.Int64)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int64.Equals(Int64)\n- uid: System.Int64.Equals(System.Object)\n  commentId: M:System.Int64.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Int64.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 60\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare with this instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> is an instance of an <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and equals the value of this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  seealso:\n  - type: System.Int64.CompareTo(System.Object)\n    commentId: M:System.Int64.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Int64.Equals(Object)\n- uid: System.Int64.GetHashCode\n  commentId: M:System.Int64.GetHashCode\n  id: GetHashCode\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Int64.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 74\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Int64.GetHashCode()\n- uid: System.Int64.Parse(System.String)\n  commentId: M:System.Int64.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Int64.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 102\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number to its 64-bit signed integer equivalent.</p>\\n\"\n  syntax:\n    content: public static long Parse(string s)\n    content.vb: Public Shared Function Parse(s As String) As Long\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>A 64-bit signed integer equivalent to the number contained in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>s</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>s</em> is not in the correct format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>s</em> represents a number less than <xref href=\\\"System.Int64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Int64.ToString\n    commentId: M:System.Int64.ToString\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Int64.Parse(String)\n- uid: System.Int64.Parse(System.String,System.Globalization.NumberStyles)\n  commentId: M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)\n  id: Parse(System.String,System.Globalization.NumberStyles)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, NumberStyles)\n  fullName: System.Int64.Parse(System.String, System.Globalization.NumberStyles)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 106\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified style to its 64-bit signed integer equivalent.</p>\\n\"\n  syntax:\n    content: public static long Parse(string s, NumberStyles style)\n    content.vb: Public Shared Function Parse(s As String, style As NumberStyles) As Long\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that indicates the permitted format of <em>s</em>. A typical value to specify is <xref href=\\\"System.Globalization.NumberStyles.Integer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>A 64-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>s</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>style</em> is not a <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>s</em> is not in a format compliant with <em>style</em>. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>s</em> represents a number less than <xref href=\\\"System.Int64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> supports fractional digits but <em>s</em> includes non-zero fractional digits. </p>\\n\"\n  seealso:\n  - type: System.Int64.ToString\n    commentId: M:System.Int64.ToString\n  - type: System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)\n    commentId: M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Int64.Parse(String, NumberStyles)\n- uid: System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  commentId: M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, NumberStyles, IFormatProvider)\n  fullName: System.Int64.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 120\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</p>\\n\"\n  syntax:\n    content: public static long Parse(string s, NumberStyles style, IFormatProvider provider)\n    content.vb: Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As Long\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: \"\\n<p>A bitwise combination of enumeration values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\\\"System.Globalization.NumberStyles.Integer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that supplies culture-specific formatting information about <em>s</em>. </p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>A 64-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>s</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>style</em> is not a <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>s</em> is not in a format compliant with <em>style</em>. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>s</em> represents a number less than <xref href=\\\"System.Int64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> supports fractional digits, but <em>s</em> includes non-zero fractional digits.</p>\\n\"\n  seealso:\n  - type: System.Int64.ToString\n    commentId: M:System.Int64.ToString\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Int64.Parse(String, NumberStyles, IFormatProvider)\n- uid: System.Int64.Parse(System.String,System.IFormatProvider)\n  commentId: M:System.Int64.Parse(System.String,System.IFormatProvider)\n  id: Parse(System.String,System.IFormatProvider)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, IFormatProvider)\n  fullName: System.Int64.Parse(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 111\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified culture-specific format to its 64-bit signed integer equivalent.</p>\\n\"\n  syntax:\n    content: public static long Parse(string s, IFormatProvider provider)\n    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider) As Long\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>A 64-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>s</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>s</em> is not in the correct format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>s</em> represents a number less than <xref href=\\\"System.Int64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Int64.ToString\n    commentId: M:System.Int64.ToString\n  - type: System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)\n    commentId: M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Int64.Parse(String, IFormatProvider)\n- uid: System.Int64.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Int64.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IComparable.CompareTo(Object)\n  fullName: System.Int64.System.IComparable.CompareTo(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IComparable.CompareTo\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 1104\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo(object value)\n    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Int32\n  implements:\n  - System.IComparable.CompareTo(System.Object)\n  name.vb: System.IComparable.CompareTo(Object)\n  nameWithType: Int64.IComparable.CompareTo(Object)\n  nameWithType.vb: Int64.System.IComparable.CompareTo(Object)\n- uid: System.Int64.System#IConvertible#GetTypeCode\n  commentId: M:System.Int64.System#IConvertible#GetTypeCode\n  id: System#IConvertible#GetTypeCode\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.GetTypeCode()\n  fullName: System.Int64.System.IConvertible.GetTypeCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IConvertible.GetTypeCode\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 1105\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: TypeCode IConvertible.GetTypeCode()\n    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode\n    return:\n      type: System.TypeCode\n  implements:\n  - System.IConvertible.GetTypeCode\n  name.vb: System.IConvertible.GetTypeCode()\n  nameWithType: Int64.IConvertible.GetTypeCode()\n  nameWithType.vb: Int64.System.IConvertible.GetTypeCode()\n- uid: System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)\n  id: System#IConvertible#ToBoolean(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToBoolean(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToBoolean(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToBoolean\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 143\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToBoolean(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: bool IConvertible.ToBoolean(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value of the current instance is not zero; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToBoolean(System.IFormatProvider)\n  name.vb: System.IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToBoolean(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToBoolean(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToByte(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)\n  id: System#IConvertible#ToByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToByte(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToByte(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToByte\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 158\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToByte(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: byte IConvertible.ToByte(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Byte\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToByte(System.IFormatProvider)\n  name.vb: System.IConvertible.ToByte(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToByte(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToByte(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToChar(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)\n  id: System#IConvertible#ToChar(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToChar(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToChar(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToChar\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 148\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToChar(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: char IConvertible.ToChar(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToChar(System.IFormatProvider)\n  name.vb: System.IConvertible.ToChar(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToChar(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToChar(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)\n  id: System#IConvertible#ToDateTime(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToDateTime(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToDateTime(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToDateTime\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 208\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\\\"System.InvalidCastException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>This conversion is not supported. No value is returned.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>In all cases.</p>\\n\"\n  implements:\n  - System.IConvertible.ToDateTime(System.IFormatProvider)\n  name.vb: System.IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToDateTime(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToDateTime(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)\n  id: System#IConvertible#ToDecimal(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToDecimal(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToDecimal(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToDecimal\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 203\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToDecimal(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: decimal IConvertible.ToDecimal(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToDecimal(System.IFormatProvider)\n  name.vb: System.IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToDecimal(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToDecimal(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)\n  id: System#IConvertible#ToDouble(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToDouble(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToDouble(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToDouble\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 198\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToDouble(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: double IConvertible.ToDouble(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToDouble(System.IFormatProvider)\n  name.vb: System.IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToDouble(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToDouble(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)\n  id: System#IConvertible#ToInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToInt16(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToInt16(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToInt16\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 163\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToInt16(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: short IConvertible.ToInt16(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Int16\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.Int16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToInt16(System.IFormatProvider)\n  name.vb: System.IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToInt16(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToInt16(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)\n  id: System#IConvertible#ToInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToInt32(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToInt32(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToInt32\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 173\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToInt32(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: int IConvertible.ToInt32(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToInt32(System.IFormatProvider)\n  name.vb: System.IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToInt32(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToInt32(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)\n  id: System#IConvertible#ToInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToInt64(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToInt64(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToInt64\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 183\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToInt64(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: long IConvertible.ToInt64(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The value of the current instance, unchanged.</p>\\n\"\n  implements:\n  - System.IConvertible.ToInt64(System.IFormatProvider)\n  name.vb: System.IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToInt64(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToInt64(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)\n  id: System#IConvertible#ToSByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToSByte(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToSByte(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToSByte\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 153\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToSByte(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: sbyte IConvertible.ToSByte(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.SByte\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.SByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToSByte(System.IFormatProvider)\n  name.vb: System.IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToSByte(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToSByte(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)\n  id: System#IConvertible#ToSingle(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToSingle(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToSingle(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToSingle\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 193\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToSingle(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: float IConvertible.ToSingle(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToSingle(System.IFormatProvider)\n  name.vb: System.IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToSingle(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToSingle(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToType(Type, IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToType(System.Type, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToType\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 213\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: object IConvertible.ToType(Type type, IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type to which to convert this <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation that provides information about the format of the returned value.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value of the current instance, converted to <em>type</em>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToType(System.Type,System.IFormatProvider)\n  name.vb: System.IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Int64.IConvertible.ToType(Type, IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToType(Type, IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)\n  id: System#IConvertible#ToUInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToUInt16(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToUInt16(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToUInt16\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 168\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToUInt16(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: ushort IConvertible.ToUInt16(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.UInt16\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.UInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToUInt16(System.IFormatProvider)\n  name.vb: System.IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToUInt16(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToUInt16(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)\n  id: System#IConvertible#ToUInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToUInt32(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToUInt32(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToUInt32\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 178\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToUInt32(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: uint IConvertible.ToUInt32(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.UInt32\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToUInt32(System.IFormatProvider)\n  name.vb: System.IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToUInt32(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToUInt32(IFormatProvider)\n- uid: System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)\n  commentId: M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)\n  id: System#IConvertible#ToUInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToUInt64(IFormatProvider)\n  fullName: System.Int64.System.IConvertible.ToUInt64(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToUInt64\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 188\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToUInt64(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: ulong IConvertible.ToUInt64(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToUInt64(System.IFormatProvider)\n  name.vb: System.IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Int64.IConvertible.ToUInt64(IFormatProvider)\n  nameWithType.vb: Int64.System.IConvertible.ToUInt64(IFormatProvider)\n- uid: System.Int64.ToString\n  commentId: M:System.Int64.ToString\n  id: ToString\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Int64.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 78\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</p>\\n\"\n  overridden: System.ValueType.ToString\n  seealso:\n  - type: System.Int64.Parse(System.String)\n    commentId: M:System.Int64.Parse(System.String)\n  - type: System.String\n    commentId: T:System.String\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Int64.ToString()\n- uid: System.Int64.ToString(System.IFormatProvider)\n  commentId: M:System.Int64.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: ToString(IFormatProvider)\n  fullName: System.Int64.ToString(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 84\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string ToString(IFormatProvider provider)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ToString(provider As IFormatProvider) As String\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance as specified by <em>provider</em>.</p>\\n\"\n  seealso:\n  - type: System.Int64.Parse(System.String)\n    commentId: M:System.Int64.Parse(System.String)\n  - type: System.String\n    commentId: T:System.String\n  implements:\n  - System.IConvertible.ToString(System.IFormatProvider)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int64.ToString(IFormatProvider)\n- uid: System.Int64.ToString(System.String)\n  commentId: M:System.Int64.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: ToString(String)\n  fullName: System.Int64.ToString(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 90\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string ToString(string format)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ToString(format As String) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A numeric format string.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance as specified by <em>format</em>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>format</em> is invalid or not supported.</p>\\n\"\n  seealso:\n  - type: System.Int64.Parse(System.String)\n    commentId: M:System.Int64.Parse(System.String)\n  - type: System.String\n    commentId: T:System.String\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int64.ToString(String)\n- uid: System.Int64.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.Int64.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: ToString(String, IFormatProvider)\n  fullName: System.Int64.ToString(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 96\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string ToString(string format, IFormatProvider provider)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ToString(format As String, provider As IFormatProvider) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A numeric format string.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information about this instance. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance as specified by <em>format</em> and <em>provider</em>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>format</em> is invalid or not supported.</p>\\n\"\n  seealso:\n  - type: System.Int64.Parse(System.String)\n    commentId: M:System.Int64.Parse(System.String)\n  implements:\n  - System.IFormattable.ToString(System.String,System.IFormatProvider)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int64.ToString(String, IFormatProvider)\n- uid: System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)\n  commentId: M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)\n  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, NumberStyles, IFormatProvider, out Int64)\n  fullName: System.Int64.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParse\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 129\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out long result)\n    content.vb: Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Long) As Boolean\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. The string is interpreted using the style specified by <em>style</em>. </p>\\n\"\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: \"\\n<p>A bitwise combination of enumeration values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\\\"System.Globalization.NumberStyles.Integer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\\n\"\n    - id: result\n      type: System.Int64\n      description: \"\\n<p>When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <em>s</em>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>  or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, is not in a format compliant with <em>style</em>, or represents a number less than <xref href=\\\"System.Int64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>style</em> is not a <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  seealso:\n  - type: System.Int64.Parse(System.String)\n    commentId: M:System.Int64.Parse(System.String)\n  - type: System.Int64.ToString\n    commentId: M:System.Int64.ToString\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Int64.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.Int64)\n  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef Int64)\n  nameWithType: Int64.TryParse(String, NumberStyles, IFormatProvider, out Int64)\n  nameWithType.vb: Int64.TryParse(String, NumberStyles, IFormatProvider, ByRef Int64)\n- uid: System.Int64.TryParse(System.String,System.Int64@)\n  commentId: M:System.Int64.TryParse(System.String,System.Int64@)\n  id: TryParse(System.String,System.Int64@)\n  parent: System.Int64\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out Int64)\n  fullName: System.Int64.TryParse(System.String, out System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParse\n    path: src/mscorlib/src/System/Int64.cs\n    startLine: 125\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number to its 64-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string s, out long result)\n    content.vb: Public Shared Function TryParse(s As String, ByRef result As Long) As Boolean\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    - id: result\n      type: System.Int64\n      description: \"\\n<p>When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <em>s</em>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>  or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, is not of the correct format, or represents a number less than <xref href=\\\"System.Int64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Int64.Parse(System.String)\n    commentId: M:System.Int64.Parse(System.String)\n  - type: System.Int64.ToString\n    commentId: M:System.Int64.ToString\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Int64.TryParse(System.String, ByRef System.Int64)\n  name.vb: TryParse(String, ByRef Int64)\n  nameWithType: Int64.TryParse(String, out Int64)\n  nameWithType.vb: Int64.TryParse(String, ByRef Int64)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  fullName: System.IComparable\n  nameWithType: IComparable\n  commentId: T:System.IComparable\n- uid: System.IComparable{System.Int64}\n  parent: System\n  definition: System.IComparable`1\n  name: IComparable<Int64>\n  fullName: System.IComparable<System.Int64>\n  fullname.vb: System.IComparable(Of System.Int64)\n  name.vb: IComparable(Of Int64)\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable<Int64>\n  nameWithType.vb: IComparable(Of Int64)\n  commentId: T:System.IComparable{System.Int64}\n- uid: System.IConvertible\n  parent: System\n  isExternal: false\n  name: IConvertible\n  fullName: System.IConvertible\n  nameWithType: IConvertible\n  commentId: T:System.IConvertible\n- uid: System.IEquatable{System.Int64}\n  parent: System\n  definition: System.IEquatable`1\n  name: IEquatable<Int64>\n  fullName: System.IEquatable<System.Int64>\n  fullname.vb: System.IEquatable(Of System.Int64)\n  name.vb: IEquatable(Of Int64)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<Int64>\n  nameWithType.vb: IEquatable(Of Int64)\n  commentId: T:System.IEquatable{System.Int64}\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  fullName: System.IFormattable\n  nameWithType: IFormattable\n  commentId: T:System.IFormattable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.IComparable`1\n  isExternal: false\n  name: IComparable<T>\n  fullName: System.IComparable<T>\n  fullname.vb: System.IComparable(Of T)\n  name.vb: IComparable(Of T)\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparable<T>\n  nameWithType.vb: IComparable(Of T)\n  commentId: T:System.IComparable`1\n- uid: System.IEquatable`1\n  isExternal: false\n  name: IEquatable<T>\n  fullName: System.IEquatable<T>\n  fullname.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n  commentId: T:System.IEquatable`1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.IComparable{System.Int64}.CompareTo(System.Int64)\n  parent: System.IComparable{System.Int64}\n  definition: System.IComparable`1.CompareTo(`0)\n  name: CompareTo(Int64)\n  fullName: System.IComparable<System.Int64>.CompareTo(System.Int64)\n  fullname.vb: System.IComparable(Of System.Int64).CompareTo(System.Int64)\n  spec.csharp:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable<System.Int64>.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable(Of System.Int64).CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable<Int64>.CompareTo(Int64)\n  nameWithType.vb: IComparable(Of Int64).CompareTo(Int64)\n  commentId: M:System.IComparable{System.Int64}.CompareTo(System.Int64)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.IComparable`1.CompareTo(`0)\n  isExternal: false\n  name: CompareTo(T)\n  fullName: System.IComparable<T>.CompareTo(T)\n  fullname.vb: System.IComparable(Of T).CompareTo(T)\n  spec.csharp:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable<T>.CompareTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable(Of T).CompareTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparable<T>.CompareTo(T)\n  nameWithType.vb: IComparable(Of T).CompareTo(T)\n  commentId: M:System.IComparable`1.CompareTo(`0)\n- uid: System.IEquatable{System.Int64}.Equals(System.Int64)\n  parent: System.IEquatable{System.Int64}\n  definition: System.IEquatable`1.Equals(`0)\n  name: Equals(Int64)\n  fullName: System.IEquatable<System.Int64>.Equals(System.Int64)\n  fullname.vb: System.IEquatable(Of System.Int64).Equals(System.Int64)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<System.Int64>.Equals\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of System.Int64).Equals\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<Int64>.Equals(Int64)\n  nameWithType.vb: IEquatable(Of Int64).Equals(Int64)\n  commentId: M:System.IEquatable{System.Int64}.Equals(System.Int64)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IEquatable`1.Equals(`0)\n  isExternal: false\n  name: Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  fullname.vb: System.IEquatable(Of T).Equals(T)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<T>.Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of T).Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\n  commentId: M:System.IEquatable`1.Equals(`0)\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Globalization.NumberStyles\n  parent: System.Globalization\n  isExternal: false\n  name: NumberStyles\n  fullName: System.Globalization.NumberStyles\n  nameWithType: NumberStyles\n  commentId: T:System.Globalization.NumberStyles\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  nameWithType: IFormatProvider\n  commentId: T:System.IFormatProvider\n- uid: System.IComparable.CompareTo(System.Object)\n  parent: System.IComparable\n  isExternal: true\n  name: CompareTo(Object)\n  fullName: System.IComparable.CompareTo(System.Object)\n  spec.csharp:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable.CompareTo(Object)\n  commentId: M:System.IComparable.CompareTo(System.Object)\n- uid: System.IConvertible.GetTypeCode\n  parent: System.IConvertible\n  isExternal: false\n  name: GetTypeCode()\n  fullName: System.IConvertible.GetTypeCode()\n  spec.csharp:\n  - uid: System.IConvertible.GetTypeCode\n    name: GetTypeCode\n    fullName: System.IConvertible.GetTypeCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.GetTypeCode\n    name: GetTypeCode\n    fullName: System.IConvertible.GetTypeCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.GetTypeCode()\n  commentId: M:System.IConvertible.GetTypeCode\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  fullName: System.TypeCode\n  nameWithType: TypeCode\n  commentId: T:System.TypeCode\n- uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToBoolean(IFormatProvider)\n  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n    name: ToBoolean\n    fullName: System.IConvertible.ToBoolean\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n    name: ToBoolean\n    fullName: System.IConvertible.ToBoolean\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToBoolean(IFormatProvider)\n  commentId: M:System.IConvertible.ToBoolean(System.IFormatProvider)\n- uid: System.IConvertible.ToByte(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToByte(IFormatProvider)\n  fullName: System.IConvertible.ToByte(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToByte(System.IFormatProvider)\n    name: ToByte\n    fullName: System.IConvertible.ToByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToByte(System.IFormatProvider)\n    name: ToByte\n    fullName: System.IConvertible.ToByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToByte(IFormatProvider)\n  commentId: M:System.IConvertible.ToByte(System.IFormatProvider)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.IConvertible.ToChar(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToChar(IFormatProvider)\n  fullName: System.IConvertible.ToChar(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToChar(System.IFormatProvider)\n    name: ToChar\n    fullName: System.IConvertible.ToChar\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToChar(System.IFormatProvider)\n    name: ToChar\n    fullName: System.IConvertible.ToChar\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToChar(IFormatProvider)\n  commentId: M:System.IConvertible.ToChar(System.IFormatProvider)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToDateTime(IFormatProvider)\n  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n    name: ToDateTime\n    fullName: System.IConvertible.ToDateTime\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n    name: ToDateTime\n    fullName: System.IConvertible.ToDateTime\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToDateTime(IFormatProvider)\n  commentId: M:System.IConvertible.ToDateTime(System.IFormatProvider)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToDecimal(IFormatProvider)\n  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n    name: ToDecimal\n    fullName: System.IConvertible.ToDecimal\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n    name: ToDecimal\n    fullName: System.IConvertible.ToDecimal\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToDecimal(IFormatProvider)\n  commentId: M:System.IConvertible.ToDecimal(System.IFormatProvider)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.IConvertible.ToDouble(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToDouble(IFormatProvider)\n  fullName: System.IConvertible.ToDouble(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToDouble(System.IFormatProvider)\n    name: ToDouble\n    fullName: System.IConvertible.ToDouble\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToDouble(System.IFormatProvider)\n    name: ToDouble\n    fullName: System.IConvertible.ToDouble\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToDouble(IFormatProvider)\n  commentId: M:System.IConvertible.ToDouble(System.IFormatProvider)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.IConvertible.ToInt16(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToInt16(IFormatProvider)\n  fullName: System.IConvertible.ToInt16(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToInt16(System.IFormatProvider)\n    name: ToInt16\n    fullName: System.IConvertible.ToInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToInt16(System.IFormatProvider)\n    name: ToInt16\n    fullName: System.IConvertible.ToInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToInt16(IFormatProvider)\n  commentId: M:System.IConvertible.ToInt16(System.IFormatProvider)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  nameWithType: Int16\n  commentId: T:System.Int16\n- uid: System.IConvertible.ToInt32(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToInt32(IFormatProvider)\n  fullName: System.IConvertible.ToInt32(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToInt32(System.IFormatProvider)\n    name: ToInt32\n    fullName: System.IConvertible.ToInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToInt32(System.IFormatProvider)\n    name: ToInt32\n    fullName: System.IConvertible.ToInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToInt32(IFormatProvider)\n  commentId: M:System.IConvertible.ToInt32(System.IFormatProvider)\n- uid: System.IConvertible.ToInt64(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToInt64(IFormatProvider)\n  fullName: System.IConvertible.ToInt64(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToInt64(System.IFormatProvider)\n    name: ToInt64\n    fullName: System.IConvertible.ToInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToInt64(System.IFormatProvider)\n    name: ToInt64\n    fullName: System.IConvertible.ToInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToInt64(IFormatProvider)\n  commentId: M:System.IConvertible.ToInt64(System.IFormatProvider)\n- uid: System.IConvertible.ToSByte(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToSByte(IFormatProvider)\n  fullName: System.IConvertible.ToSByte(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToSByte(System.IFormatProvider)\n    name: ToSByte\n    fullName: System.IConvertible.ToSByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToSByte(System.IFormatProvider)\n    name: ToSByte\n    fullName: System.IConvertible.ToSByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToSByte(IFormatProvider)\n  commentId: M:System.IConvertible.ToSByte(System.IFormatProvider)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  fullName: System.SByte\n  nameWithType: SByte\n  commentId: T:System.SByte\n- uid: System.IConvertible.ToSingle(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToSingle(IFormatProvider)\n  fullName: System.IConvertible.ToSingle(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToSingle(System.IFormatProvider)\n    name: ToSingle\n    fullName: System.IConvertible.ToSingle\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToSingle(System.IFormatProvider)\n    name: ToSingle\n    fullName: System.IConvertible.ToSingle\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToSingle(IFormatProvider)\n  commentId: M:System.IConvertible.ToSingle(System.IFormatProvider)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToType(Type, IFormatProvider)\n  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n    name: ToType\n    fullName: System.IConvertible.ToType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n    name: ToType\n    fullName: System.IConvertible.ToType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToType(Type, IFormatProvider)\n  commentId: M:System.IConvertible.ToType(System.Type,System.IFormatProvider)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToUInt16(IFormatProvider)\n  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n    name: ToUInt16\n    fullName: System.IConvertible.ToUInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n    name: ToUInt16\n    fullName: System.IConvertible.ToUInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToUInt16(IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt16(System.IFormatProvider)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  fullName: System.UInt16\n  nameWithType: UInt16\n  commentId: T:System.UInt16\n- uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToUInt32(IFormatProvider)\n  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n    name: ToUInt32\n    fullName: System.IConvertible.ToUInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n    name: ToUInt32\n    fullName: System.IConvertible.ToUInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToUInt32(IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt32(System.IFormatProvider)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  nameWithType: UInt32\n  commentId: T:System.UInt32\n- uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToUInt64(IFormatProvider)\n  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n    name: ToUInt64\n    fullName: System.IConvertible.ToUInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n    name: ToUInt64\n    fullName: System.IConvertible.ToUInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToUInt64(IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt64(System.IFormatProvider)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  fullName: System.UInt64\n  nameWithType: UInt64\n  commentId: T:System.UInt64\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.IConvertible.ToString(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToString(IFormatProvider)\n  fullName: System.IConvertible.ToString(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToString(System.IFormatProvider)\n    name: ToString\n    fullName: System.IConvertible.ToString\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToString(System.IFormatProvider)\n    name: ToString\n    fullName: System.IConvertible.ToString\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToString(IFormatProvider)\n  commentId: M:System.IConvertible.ToString(System.IFormatProvider)\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  isExternal: true\n  name: ToString(String, IFormatProvider)\n  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n- uid: System.OverflowException\n  isExternal: false\n  name: OverflowException\n  fullName: System.OverflowException\n  nameWithType: OverflowException\n  commentId: T:System.OverflowException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n"}