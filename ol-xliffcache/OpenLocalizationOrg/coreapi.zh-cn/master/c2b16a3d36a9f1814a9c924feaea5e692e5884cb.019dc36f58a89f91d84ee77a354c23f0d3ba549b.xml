{"nodes":[{"pos":[351,359],"content":"ICommand","needQuote":true,"nodes":[{"content":"ICommand","pos":[0,8]}]},{"pos":[1201,1218],"content":"CanExecuteChanged","needQuote":true,"nodes":[{"content":"CanExecuteChanged","pos":[0,17]}]},{"pos":[2476,2494],"content":"CanExecute(Object)","needQuote":true,"nodes":[{"content":"CanExecute(Object)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;Data used by the command.","pos":[3219,3249],"source":"\\n<p>Data used by the command."},{"content":"If the command does not require data to be passed, this object can be set to &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3251,3356],"source":"  If the command does not require data to be passed, this object can be set to <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this command can be executed; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3417,3519],"source":"\\n<p>\\n<strong>true</strong> if this command can be executed; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[4103,4118],"content":"Execute(Object)","needQuote":true,"nodes":[{"content":"Execute(Object)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;Data used by the command.","pos":[4787,4817],"source":"\\n<p>Data used by the command."},{"content":"If the command does not require data to be passed, this object can be set to &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4819,4924],"source":"  If the command does not require data to be passed, this object can be set to <strong>null</strong>.</p>\\n"},{"pos":[5341,5361],"content":"System.Windows.Input","needQuote":true,"nodes":[{"content":"System.Windows.Input","pos":[0,20]}]},{"pos":[5540,5552],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[5691,5697],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5828,5834],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5980,5987],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Windows.Input.ICommand\n  commentId: T:System.Windows.Input.ICommand\n  id: ICommand\n  parent: System.Windows.Input\n  children:\n  - System.Windows.Input.ICommand.CanExecute(System.Object)\n  - System.Windows.Input.ICommand.CanExecuteChanged\n  - System.Windows.Input.ICommand.Execute(System.Object)\n  langs:\n  - csharp\n  - vb\n  name: ICommand\n  fullName: System.Windows.Input.ICommand\n  type: Interface\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ICommand\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 198\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Windows.Input\n  summary: \"\\n<p>Defines a command.</p>\\n\"\n  syntax:\n    content: public interface ICommand\n    content.vb: Public Interface ICommand\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: ICommand\n- uid: System.Windows.Input.ICommand.CanExecuteChanged\n  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged\n  id: CanExecuteChanged\n  parent: System.Windows.Input.ICommand\n  langs:\n  - csharp\n  - vb\n  name: CanExecuteChanged\n  fullName: System.Windows.Input.ICommand.CanExecuteChanged\n  type: Event\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanExecuteChanged\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 200\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Windows.Input\n  summary: \"\\n<p>Occurs when changes occur that affect whether or not the command should execute.</p>\\n\"\n  syntax:\n    content: event EventHandler CanExecuteChanged\n    content.vb: Event CanExecuteChanged As EventHandler\n    return:\n      type: System.EventHandler\n  seealso:\n  - type: System.Windows.Input.ICommandSource\n    commentId: T:System.Windows.Input.ICommandSource\n  - type: System.Windows.Input.RoutedCommand\n    commentId: T:System.Windows.Input.RoutedCommand\n  - type: System.Windows.Input.CommandManager\n    commentId: T:System.Windows.Input.CommandManager\n  nameWithType: ICommand.CanExecuteChanged\n- uid: System.Windows.Input.ICommand.CanExecute(System.Object)\n  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)\n  id: CanExecute(System.Object)\n  parent: System.Windows.Input.ICommand\n  langs:\n  - csharp\n  - vb\n  name: CanExecute(Object)\n  fullName: System.Windows.Input.ICommand.CanExecute(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanExecute\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 201\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Windows.Input\n  summary: \"\\n<p>Defines the method that determines whether the command can execute in its current state.</p>\\n\"\n  syntax:\n    content: bool CanExecute(object parameter)\n    content.vb: Function CanExecute(parameter As Object) As Boolean\n    parameters:\n    - id: parameter\n      type: System.Object\n      description: \"\\n<p>Data used by the command.  If the command does not require data to be passed, this object can be set to <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this command can be executed; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Windows.Input.ICommandSource\n    commentId: T:System.Windows.Input.ICommandSource\n  - type: System.Windows.Input.RoutedCommand\n    commentId: T:System.Windows.Input.RoutedCommand\n  - type: System.Windows.Input.CommandManager\n    commentId: T:System.Windows.Input.CommandManager\n  nameWithType: ICommand.CanExecute(Object)\n- uid: System.Windows.Input.ICommand.Execute(System.Object)\n  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)\n  id: Execute(System.Object)\n  parent: System.Windows.Input.ICommand\n  langs:\n  - csharp\n  - vb\n  name: Execute(Object)\n  fullName: System.Windows.Input.ICommand.Execute(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Execute\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 202\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Windows.Input\n  summary: \"\\n<p>Defines the method to be called when the command is invoked.</p>\\n\"\n  syntax:\n    content: void Execute(object parameter)\n    content.vb: Sub Execute(parameter As Object)\n    parameters:\n    - id: parameter\n      type: System.Object\n      description: \"\\n<p>Data used by the command.  If the command does not require data to be passed, this object can be set to <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Windows.Input.ICommandSource\n    commentId: T:System.Windows.Input.ICommandSource\n  - type: System.Windows.Input.RoutedCommand\n    commentId: T:System.Windows.Input.RoutedCommand\n  - type: System.Windows.Input.CommandManager\n    commentId: T:System.Windows.Input.CommandManager\n  nameWithType: ICommand.Execute(Object)\nreferences:\n- uid: System.Windows.Input\n  isExternal: false\n  name: System.Windows.Input\n  fullName: System.Windows.Input\n  commentId: N:System.Windows.Input\n  nameWithType: System.Windows.Input\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  fullName: System.EventHandler\n  commentId: T:System.EventHandler\n  nameWithType: EventHandler\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n"}