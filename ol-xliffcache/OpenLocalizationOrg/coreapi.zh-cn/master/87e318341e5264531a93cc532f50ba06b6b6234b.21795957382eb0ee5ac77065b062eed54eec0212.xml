{"nodes":[{"pos":[3303,3329],"content":"X509Certificate2Collection","needQuote":true,"nodes":[{"content":"X509Certificate2Collection","pos":[0,26]}]},{"pos":[8685,8713],"content":"X509Certificate2Collection()","needQuote":true,"nodes":[{"content":"X509Certificate2Collection()","pos":[0,28]}]},{"pos":[10393,10437],"content":"X509Certificate2Collection(X509Certificate2)","needQuote":true,"nodes":[{"content":"X509Certificate2Collection(X509Certificate2)","pos":[0,44]}]},{"pos":[12562,12608],"content":"X509Certificate2Collection(X509Certificate2[])","needQuote":true,"nodes":[{"content":"X509Certificate2Collection(X509Certificate2[])","pos":[0,46]}]},{"pos":[15094,15148],"content":"X509Certificate2Collection(X509Certificate2Collection)","needQuote":true,"nodes":[{"content":"X509Certificate2Collection(X509Certificate2Collection)","pos":[0,54]}]},{"pos":[17051,17062],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The zero-based index of the element to get or set.","pos":[17963,18018],"source":"\\n<p>The zero-based index of the element to get or set."},{"content":"&lt;/p&gt;\\n","pos":[18019,18025],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The element at the specified index.&lt;/p&gt;\\n","pos":[18134,18180],"source":"\\n<p>The element at the specified index.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[18644,18691],"source":"\\n<p>\\n<em>index</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[18692,18698],"source":" </p>\\n"},{"pos":[19513,19534],"content":"Add(X509Certificate2)","needQuote":true,"nodes":[{"content":"Add(X509Certificate2)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificate&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[21211,21264],"source":"\\n<p>\\n<em>certificate</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[21265,21271],"source":" </p>\\n"},{"pos":[21913,21941],"content":"AddRange(X509Certificate2[])","needQuote":true,"nodes":[{"content":"AddRange(X509Certificate2[])","pos":[0,28]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificates&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[23484,23538],"source":"\\n<p>\\n<em>certificates</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[23539,23545],"source":" </p>\\n"},{"pos":[24496,24532],"content":"AddRange(X509Certificate2Collection)","needQuote":true,"nodes":[{"content":"AddRange(X509Certificate2Collection)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificates&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[26245,26299],"source":"\\n<p>\\n<em>certificates</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[26300,26306],"source":" </p>\\n"},{"pos":[26957,26983],"content":"Contains(X509Certificate2)","needQuote":true,"nodes":[{"content":"Contains(X509Certificate2)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificate&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[28756,28809],"source":"\\n<p>\\n<em>certificate</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[28810,28816],"source":" </p>\\n"},{"pos":[29448,29471],"content":"Export(X509ContentType)","needQuote":true,"nodes":[{"content":"Export(X509ContentType)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;X.509 certificate information in a byte array.&lt;/p&gt;\\n","pos":[30699,30756],"source":"\\n<p>X.509 certificate information in a byte array.</p>\\n"},{"pos":[31427,31458],"content":"Export(X509ContentType, String)","needQuote":true,"nodes":[{"content":"Export(X509ContentType, String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;A string used to protect the byte array.","pos":[32762,32807],"source":"\\n<p>A string used to protect the byte array."},{"content":"&lt;/p&gt;\\n","pos":[32808,32814],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;X.509 certificate information in a byte array.&lt;/p&gt;\\n","pos":[32874,32931],"source":"\\n<p>X.509 certificate information in a byte array.</p>\\n"},{"content":"\\n&lt;p&gt;The certificate is unreadable, the content is invalid or, in the case of a certificate requiring a password, the private key could not be exported because the password provided was incorrect.","pos":[33096,33292],"source":"\\n<p>The certificate is unreadable, the content is invalid or, in the case of a certificate requiring a password, the private key could not be exported because the password provided was incorrect."},{"content":"&lt;/p&gt;\\n","pos":[33293,33299],"source":" </p>\\n"},{"pos":[34008,34043],"content":"Find(X509FindType, Object, Boolean)","needQuote":true,"nodes":[{"content":"Find(X509FindType, Object, Boolean)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The search criteria as an object.","pos":[35699,35737],"source":"\\n<p>The search criteria as an object."},{"content":"&lt;/p&gt;\\n","pos":[35738,35744],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to allow only valid certificates to be returned from the search; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[35813,35941],"source":"\\n<p>\\n<strong>true</strong> to allow only valid certificates to be returned from the search; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[35942,35948],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;findType&lt;/em&gt; is invalid.","pos":[36386,36422],"source":"\\n<p>\\n<em>findType</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[36423,36429],"source":" </p>\\n"},{"pos":[36902,36917],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[38798,38812],"content":"Import(Byte[])","needQuote":true,"nodes":[{"content":"Import(Byte[])","pos":[0,14]}]},{"content":"\\n&lt;p&gt;A byte array containing data from an X.509 certificate.","pos":[39825,39885],"source":"\\n<p>A byte array containing data from an X.509 certificate."},{"content":"&lt;/p&gt;\\n","pos":[39886,39892],"source":" </p>\\n"},{"pos":[40805,40848],"content":"Import(Byte[], String, X509KeyStorageFlags)","needQuote":true,"nodes":[{"content":"Import(Byte[], String, X509KeyStorageFlags)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The password required to access the certificate information.","pos":[42356,42421],"source":"\\n<p>The password required to access the certificate information."},{"content":"&lt;/p&gt;\\n","pos":[42422,42428],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A bitwise combination of the enumeration values that control how and where the certificate is imported.","pos":[42554,42662],"source":"\\n<p>A bitwise combination of the enumeration values that control how and where the certificate is imported."},{"content":"&lt;/p&gt;\\n","pos":[42663,42669],"source":" </p>\\n"},{"pos":[43511,43525],"content":"Import(String)","needQuote":true,"nodes":[{"content":"Import(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The name of the file containing the certificate information.","pos":[44518,44583],"source":"\\n<p>The name of the file containing the certificate information."},{"content":"&lt;/p&gt;\\n","pos":[44584,44590],"source":" </p>\\n"},{"pos":[45306,45349],"content":"Import(String, String, X509KeyStorageFlags)","needQuote":true,"nodes":[{"content":"Import(String, String, X509KeyStorageFlags)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The name of the file containing the certificate information.","pos":[46563,46628],"source":"\\n<p>The name of the file containing the certificate information."},{"content":"&lt;/p&gt;\\n","pos":[46629,46635],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The password required to access the certificate information.","pos":[46702,46767],"source":"\\n<p>The password required to access the certificate information."},{"content":"&lt;/p&gt;\\n","pos":[46768,46774],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A bitwise combination of the enumeration values that control how and where the certificate is imported.","pos":[46900,47008],"source":"\\n<p>A bitwise combination of the enumeration values that control how and where the certificate is imported."},{"content":"&lt;/p&gt;\\n","pos":[47009,47015],"source":" </p>\\n"},{"pos":[47706,47737],"content":"Insert(Int32, X509Certificate2)","needQuote":true,"nodes":[{"content":"Insert(Int32, X509Certificate2)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The zero-based index at which to insert &lt;em&gt;certificate&lt;/em&gt;.","pos":[48860,48926],"source":"\\n<p>The zero-based index at which to insert <em>certificate</em>."},{"content":"&lt;/p&gt;\\n","pos":[48927,48933],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The collection is read-only.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The collection has a fixed size.","pos":[49660,49748],"source":"\\n<p>The collection is read-only.</p>\\n<p>-or- </p>\\n<p>The collection has a fixed size."},{"content":"&lt;/p&gt;\\n","pos":[49749,49755],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificate&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[49860,49913],"source":"\\n<p>\\n<em>certificate</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[49914,49920],"source":" </p>\\n"},{"pos":[50560,50584],"content":"Remove(X509Certificate2)","needQuote":true,"nodes":[{"content":"Remove(X509Certificate2)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificate&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[52153,52206],"source":"\\n<p>\\n<em>certificate</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[52207,52213],"source":" </p>\\n"},{"pos":[52867,52898],"content":"RemoveRange(X509Certificate2[])","needQuote":true,"nodes":[{"content":"RemoveRange(X509Certificate2[])","pos":[0,31]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificates&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[54457,54511],"source":"\\n<p>\\n<em>certificates</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[54512,54518],"source":" </p>\\n"},{"pos":[55490,55529],"content":"RemoveRange(X509Certificate2Collection)","needQuote":true,"nodes":[{"content":"RemoveRange(X509Certificate2Collection)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificates&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[57259,57313],"source":"\\n<p>\\n<em>certificates</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[57314,57320],"source":" </p>\\n"},{"pos":[57556,57601],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[57849,57855],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58097,58122],"content":"X509CertificateCollection","needQuote":true,"nodes":[{"content":"X509CertificateCollection","pos":[0,25]}]},{"pos":[58425,58430],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[58625,58636],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[58849,58860],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[59234,59254],"content":"Add(X509Certificate)","needQuote":true,"nodes":[{"content":"Add(X509Certificate)","pos":[0,20]}]},{"pos":[59579,59582],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[59683,59684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59782,59797],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[59884,59885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60071,60074],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[60175,60176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60274,60289],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[60376,60377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60874,60901],"content":"AddRange(X509Certificate[])","needQuote":true,"nodes":[{"content":"AddRange(X509Certificate[])","pos":[0,27]}]},{"pos":[61440,61448],"content":"AddRange","needQuote":true,"nodes":[{"content":"AddRange","pos":[0,8]}]},{"pos":[61554,61555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61653,61668],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"content":"[]","pos":[61756,61758]},{"pos":[61789,61790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61983,61991],"content":"AddRange","needQuote":true,"nodes":[{"content":"AddRange","pos":[0,8]}]},{"pos":[62097,62098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62196,62211],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[62298,62300],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[62328,62329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62921,62956],"content":"AddRange(X509CertificateCollection)","needQuote":true,"nodes":[{"content":"AddRange(X509CertificateCollection)","pos":[0,35]}]},{"pos":[63311,63319],"content":"AddRange","needQuote":true,"nodes":[{"content":"AddRange","pos":[0,8]}]},{"pos":[63425,63426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63534,63559],"content":"X509CertificateCollection","needQuote":true,"nodes":[{"content":"X509CertificateCollection","pos":[0,25]}]},{"pos":[63656,63657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63858,63866],"content":"AddRange","needQuote":true,"nodes":[{"content":"AddRange","pos":[0,8]}]},{"pos":[63972,63973],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64081,64106],"content":"X509CertificateCollection","needQuote":true,"nodes":[{"content":"X509CertificateCollection","pos":[0,25]}]},{"pos":[64203,64204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64729,64754],"content":"Contains(X509Certificate)","needQuote":true,"nodes":[{"content":"Contains(X509Certificate)","pos":[0,25]}]},{"pos":[65089,65097],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[65203,65204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65302,65317],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[65404,65405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65596,65604],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[65710,65711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65809,65824],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[65911,65912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66429,66461],"content":"CopyTo(X509Certificate[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(X509Certificate[], Int32)","pos":[0,32]}]},{"pos":[67040,67046],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[67150,67151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67249,67264],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"content":"[]","pos":[67352,67354]},{"content":",","pos":[67386,67387]},{"pos":[67441,67446],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[67505,67506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67710,67716],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[67820,67821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67919,67934],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[68021,68023],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[68052,68053]},{"pos":[68107,68112],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68171,68172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68715,68728],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[68945,68956],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[69065,69066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69093,69094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69225,69236],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[69345,69346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69373,69374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69806,69830],"content":"IndexOf(X509Certificate)","needQuote":true,"nodes":[{"content":"IndexOf(X509Certificate)","pos":[0,24]}]},{"pos":[70163,70170],"content":"IndexOf","needQuote":true,"nodes":[{"content":"IndexOf","pos":[0,7]}]},{"pos":[70275,70276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70374,70389],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[70476,70477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70667,70674],"content":"IndexOf","needQuote":true,"nodes":[{"content":"IndexOf","pos":[0,7]}]},{"pos":[70779,70780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70878,70893],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[70980,70981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71494,71524],"content":"Insert(Int32, X509Certificate)","needQuote":true,"nodes":[{"content":"Insert(Int32, X509Certificate)","pos":[0,30]}]},{"pos":[71882,71888],"content":"Insert","needQuote":true,"nodes":[{"content":"Insert","pos":[0,6]}]},{"pos":[71992,71993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72042,72047],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[72107,72108]},{"pos":[72211,72226],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[72313,72314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72516,72522],"content":"Insert","needQuote":true,"nodes":[{"content":"Insert","pos":[0,6]}]},{"pos":[72626,72627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72676,72681],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[72741,72742]},{"pos":[72845,72860],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[72947,72948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73467,73490],"content":"Remove(X509Certificate)","needQuote":true,"nodes":[{"content":"Remove(X509Certificate)","pos":[0,23]}]},{"pos":[73821,73827],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[73931,73932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74030,74045],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[74132,74133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74322,74328],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[74432,74433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74531,74546],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[74633,74634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75069,75074],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[75541,75567],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"pos":[76277,76297],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"pos":[76974,76991],"content":"IList.IsFixedSize","needQuote":true,"nodes":[{"content":"IList.IsFixedSize","pos":[0,17]}]},{"pos":[77652,77668],"content":"IList.IsReadOnly","needQuote":true,"nodes":[{"content":"IList.IsReadOnly","pos":[0,16]}]},{"pos":[78331,78348],"content":"IList.Item[Int32]","needQuote":true,"nodes":[{"content":"IList.Item[Int32]","pos":[0,17]}]},{"pos":[78806,78816],"content":"IList.Item","needQuote":true,"nodes":[{"content":"IList.Item","pos":[0,10]}]},{"content":"[","pos":[78944,78945]},{"pos":[78997,79002],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":"]","pos":[79062,79063]},{"pos":[79229,79258],"content":"System.Collections.IList.Item","needQuote":true,"nodes":[{"content":"System.Collections.IList.Item","pos":[0,29]}]},{"pos":[79385,79386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79435,79440],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[79499,79500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79985,79992],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[80197,80202],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[80305,80306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80333,80334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80459,80464],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[80567,80568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80595,80596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80990,81017],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[81358,81383],"content":"IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator","pos":[0,25]}]},{"pos":[81525,81526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81553,81554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81718,81762],"content":"System.Collections.IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator","pos":[0,44]}]},{"pos":[81904,81905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81932,81933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82455,82470],"content":"RemoveAt(Int32)","needQuote":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[82707,82715],"content":"RemoveAt","needQuote":true,"nodes":[{"content":"RemoveAt","pos":[0,8]}]},{"pos":[82821,82822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82871,82876],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82935,82936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83078,83086],"content":"RemoveAt","needQuote":true,"nodes":[{"content":"RemoveAt","pos":[0,8]}]},{"pos":[83192,83193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83242,83247],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83306,83307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83745,83777],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"pos":[84162,84180],"content":"ICollection.CopyTo","needQuote":true,"nodes":[{"content":"ICollection.CopyTo","pos":[0,18]}]},{"pos":[84315,84316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84365,84370],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[84430,84431]},{"pos":[84485,84490],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84549,84550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84734,84771],"content":"System.Collections.ICollection.CopyTo","needQuote":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo","pos":[0,37]}]},{"pos":[84906,84907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84956,84961],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[85021,85022]},{"pos":[85076,85081],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85140,85141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85714,85731],"content":"IList.Add(Object)","needQuote":true,"nodes":[{"content":"IList.Add(Object)","pos":[0,17]}]},{"pos":[86058,86067],"content":"IList.Add","needQuote":true,"nodes":[{"content":"IList.Add","pos":[0,9]}]},{"pos":[86193,86194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86244,86250],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86310,86311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86474,86502],"content":"System.Collections.IList.Add","needQuote":true,"nodes":[{"content":"System.Collections.IList.Add","pos":[0,28]}]},{"pos":[86628,86629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86679,86685],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86745,86746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87273,87295],"content":"IList.Contains(Object)","needQuote":true,"nodes":[{"content":"IList.Contains(Object)","pos":[0,22]}]},{"pos":[87637,87651],"content":"IList.Contains","needQuote":true,"nodes":[{"content":"IList.Contains","pos":[0,14]}]},{"pos":[87782,87783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87833,87839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87899,87900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88068,88101],"content":"System.Collections.IList.Contains","needQuote":true,"nodes":[{"content":"System.Collections.IList.Contains","pos":[0,33]}]},{"pos":[88232,88233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88283,88289],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88349,88350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88891,88912],"content":"IList.IndexOf(Object)","needQuote":true,"nodes":[{"content":"IList.IndexOf(Object)","pos":[0,21]}]},{"pos":[89251,89264],"content":"IList.IndexOf","needQuote":true,"nodes":[{"content":"IList.IndexOf","pos":[0,13]}]},{"pos":[89394,89395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89445,89451],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[89511,89512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89679,89711],"content":"System.Collections.IList.IndexOf","needQuote":true,"nodes":[{"content":"System.Collections.IList.IndexOf","pos":[0,32]}]},{"pos":[89841,89842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89892,89898],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[89958,89959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90509,90536],"content":"IList.Insert(Int32, Object)","needQuote":true,"nodes":[{"content":"IList.Insert(Int32, Object)","pos":[0,27]}]},{"pos":[90906,90918],"content":"IList.Insert","needQuote":true,"nodes":[{"content":"IList.Insert","pos":[0,12]}]},{"pos":[91047,91048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91097,91102],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[91162,91163]},{"pos":[91218,91224],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[91284,91285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91464,91495],"content":"System.Collections.IList.Insert","needQuote":true,"nodes":[{"content":"System.Collections.IList.Insert","pos":[0,31]}]},{"pos":[91624,91625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91674,91679],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[91739,91740]},{"pos":[91795,91801],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[91861,91862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92423,92443],"content":"IList.Remove(Object)","needQuote":true,"nodes":[{"content":"IList.Remove(Object)","pos":[0,20]}]},{"pos":[92779,92791],"content":"IList.Remove","needQuote":true,"nodes":[{"content":"IList.Remove","pos":[0,12]}]},{"pos":[92920,92921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92971,92977],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[93037,93038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93204,93235],"content":"System.Collections.IList.Remove","needQuote":true,"nodes":[{"content":"System.Collections.IList.Remove","pos":[0,31]}]},{"pos":[93364,93365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93415,93421],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[93481,93482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93862,93872],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[93967,93975],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[94044,94045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94072,94073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94143,94151],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[94220,94221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94248,94249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94432,94446],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[94565,94571],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[94638,94639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94689,94695],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[94755,94756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94839,94845],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[94912,94913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94963,94969],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[95029,95030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95244,95266],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[95414,95420],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[95487,95488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95538,95544],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[95605,95606]},{"pos":[95661,95667],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[95727,95728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95825,95831],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[95898,95899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95949,95955],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[96016,96017]},{"pos":[96072,96078],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[96138,96139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96384,96415],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[96581,96596],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[96672,96673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96723,96729],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[96790,96791]},{"pos":[96846,96852],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[96912,96913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97019,97034],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[97110,97111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97161,97167],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[97228,97229]},{"pos":[97284,97290],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[97350,97351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97577,97586],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[97679,97686],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[97754,97755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97782,97783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97852,97859],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[97927,97928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97955,97956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98131,98148],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[98257,98272],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[98348,98349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98376,98377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98454,98469],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[98545,98546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98573,98574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98869,98882],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[98999,99010],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[99069,99070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99097,99098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99179,99190],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[99249,99250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99277,99278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99633,99645],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[99778,99788],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[99855,99856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99883,99884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99973,99983],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[100050,100051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100078,100079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100420,100435],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[100639,100652],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[100714,100715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100742,100743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100821,100837],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[100902,100903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100930,100931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101309,101326],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[101538,101553],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[101617,101618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101645,101646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101726,101744],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[101811,101812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101839,101840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102075,102081],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[102200,102218],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[102419,102443],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[102622,102633],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[102692,102693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102760,102771],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[102848,102849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102962,102973],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[103032,103033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103100,103111],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[103188,103189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103417,103426],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[103632,103655],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[103850,103860],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[103927,103928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103995,104006],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[104083,104084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104205,104215],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[104282,104283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104350,104361],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[104438,104439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104692,104710],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[104932,104958],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[105265,105278],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[105340,105341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105408,105419],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[105496,105497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105607,105623],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[105688,105689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105756,105767],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[105844,105845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106134,106144],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[106344,106372],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[106687,106702],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[106766,106767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106834,106845],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[106922,106923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107035,107053],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[107120,107121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107188,107199],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[107276,107277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107539,107550],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[107784,107800],"content":"X509Certificate2","needQuote":true,"nodes":[{"content":"X509Certificate2","pos":[0,16]}]},{"pos":[108067,108085],"content":"X509Certificate2[]","needQuote":true,"nodes":[{"content":"X509Certificate2[]","pos":[0,18]}]},{"pos":[108370,108386],"content":"X509Certificate2","needQuote":true,"nodes":[{"content":"X509Certificate2","pos":[0,16]}]},{"content":"[]","pos":[108475,108477]},{"pos":[108591,108607],"content":"X509Certificate2","needQuote":true,"nodes":[{"content":"X509Certificate2","pos":[0,16]}]},{"pos":[108695,108697],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[108952,108978],"content":"X509Certificate2Collection","needQuote":true,"nodes":[{"content":"X509Certificate2Collection","pos":[0,26]}]},{"pos":[109260,109265],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109408,109415],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[109650,109665],"content":"X509ContentType","needQuote":true,"nodes":[{"content":"X509ContentType","pos":[0,15]}]},{"pos":[109878,109884],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[110004,110008],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[110067,110069]},{"pos":[110132,110136],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[110194,110196],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[110329,110335],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[110564,110576],"content":"X509FindType","needQuote":true,"nodes":[{"content":"X509FindType","pos":[0,12]}]},{"pos":[110915,110941],"content":"X509Certificate2Enumerator","needQuote":true,"nodes":[{"content":"X509Certificate2Enumerator","pos":[0,26]}]},{"pos":[111315,111334],"content":"X509KeyStorageFlags","needQuote":true,"nodes":[{"content":"X509KeyStorageFlags","pos":[0,19]}]},{"pos":[111600,111627],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[111833,111854],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[112065,112087],"content":"CryptographicException","needQuote":true,"nodes":[{"content":"CryptographicException","pos":[0,22]}]},{"pos":[112339,112360],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  id: X509Certificate2Collection\n  parent: System.Security.Cryptography.X509Certificates\n  children:\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  langs:\n  - csharp\n  - vb\n  name: X509Certificate2Collection\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X509Certificate2Collection\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 156\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Represents a collection of <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: 'public class X509Certificate2Collection : X509CertificateCollection, IList, ICollection, IEnumerable'\n    content.vb: >-\n      Public Class X509Certificate2Collection\n          Inherits X509CertificateCollection\n          Implements IList, ICollection, IEnumerable\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  implements:\n  - System.Collections.IList\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Count\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#IsSynchronized\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#SyncRoot\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsFixedSize\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsReadOnly\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Item(System.Int32)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Add(System.Object)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Contains(System.Object)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Remove(System.Object)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: X509Certificate2Collection\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: X509Certificate2Collection()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 158\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class without any <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information.</p>\\n\"\n  syntax:\n    content: public X509Certificate2Collection()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.X509Certificate2Collection()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: X509Certificate2Collection(X509Certificate2)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 159\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using an <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public X509Certificate2Collection(X509Certificate2 certificate)\n    content.vb: Public Sub New(certificate As X509Certificate2)\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to start the collection from.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.X509Certificate2Collection(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: X509Certificate2Collection(X509Certificate2[])\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 160\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using an array of <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: public X509Certificate2Collection(X509Certificate2[] certificates)\n    content.vb: Public Sub New(certificates As X509Certificate2())\n    parameters:\n    - id: certificates\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection(System.Security.Cryptography.X509Certificates.X509Certificate2())\n  name.vb: X509Certificate2Collection(X509Certificate2())\n  nameWithType: X509Certificate2Collection.X509Certificate2Collection(X509Certificate2[])\n  nameWithType.vb: X509Certificate2Collection.X509Certificate2Collection(X509Certificate2())\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: X509Certificate2Collection(X509Certificate2Collection)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 161\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified certificate collection.</p>\\n\"\n  syntax:\n    content: public X509Certificate2Collection(X509Certificate2Collection certificates)\n    content.vb: Public Sub New(certificates As X509Certificate2Collection)\n    parameters:\n    - id: certificates\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.X509Certificate2Collection(X509Certificate2Collection)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 162\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets or sets the element at the specified index.</p>\\n\"\n  syntax:\n    content: public X509Certificate2 this[int index] { get; set; }\n    content.vb: Public Property Item(index As Integer) As X509Certificate2\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the element to get or set. </p>\\n\"\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>The element at the specified index.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>index</em> is equal to or greater than the <xref href=\\\"System.Collections.CollectionBase.Count\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>index</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: X509Certificate2Collection.Item[Int32]\n  nameWithType.vb: X509Certificate2Collection.Item(Int32)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Add(X509Certificate2)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 163\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Adds an object to the end of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Add(X509Certificate2 certificate)\n    content.vb: Public Function Add(certificate As X509Certificate2) As Integer\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>An X.509 certificate represented as an <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> index at which the <em>certificate</em> has been added.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificate</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.Add(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  id: AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: AddRange(X509Certificate2[])\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddRange\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 164\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Adds multiple <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects in an array to the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void AddRange(X509Certificate2[] certificates)\n    content.vb: Public Sub AddRange(certificates As X509Certificate2())\n    parameters:\n    - id: certificates\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificates</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2())\n  name.vb: AddRange(X509Certificate2())\n  nameWithType: X509Certificate2Collection.AddRange(X509Certificate2[])\n  nameWithType.vb: X509Certificate2Collection.AddRange(X509Certificate2())\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  id: AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: AddRange(X509Certificate2Collection)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddRange\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 165\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Adds multiple <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects in an <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to another <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void AddRange(X509Certificate2Collection certificates)\n    content.vb: Public Sub AddRange(certificates As X509Certificate2Collection)\n    parameters:\n    - id: certificates\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificates</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.AddRange(X509Certificate2Collection)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Contains(X509Certificate2)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 166\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Determines whether the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object contains a specific certificate.</p>\\n\"\n  syntax:\n    content: public bool Contains(X509Certificate2 certificate)\n    content.vb: Public Function Contains(certificate As X509Certificate2) As Boolean\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to locate in the collection. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains the specified <em>certificate</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificate</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.Contains(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Export(X509ContentType)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Export\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 167\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Exports X.509 certificate information into a byte array.</p>\\n\"\n  syntax:\n    content: public byte[] Export(X509ContentType contentType)\n    content.vb: Public Function Export(contentType As X509ContentType) As Byte()\n    parameters:\n    - id: contentType\n      type: System.Security.Cryptography.X509Certificates.X509ContentType\n      description: \"\\n<p>A supported <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>X.509 certificate information in a byte array.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.Export(X509ContentType)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Export(X509ContentType, String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Export\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 168\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Exports X.509 certificate information into a byte array using a password.</p>\\n\"\n  syntax:\n    content: public byte[] Export(X509ContentType contentType, string password)\n    content.vb: Public Function Export(contentType As X509ContentType, password As String) As Byte()\n    parameters:\n    - id: contentType\n      type: System.Security.Cryptography.X509Certificates.X509ContentType\n      description: \"\\n<p>A supported <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n    - id: password\n      type: System.String\n      description: \"\\n<p>A string used to protect the byte array. </p>\\n\"\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>X.509 certificate information in a byte array.</p>\\n\"\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>The certificate is unreadable, the content is invalid or, in the case of a certificate requiring a password, the private key could not be exported because the password provided was incorrect. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.Export(X509ContentType, String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)\n  id: Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Find(X509FindType, Object, Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType, System.Object, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Find\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 169\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Searches an <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object using the search criteria specified by the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509FindType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration and the <em>findValue</em> object.</p>\\n\"\n  syntax:\n    content: public X509Certificate2Collection Find(X509FindType findType, object findValue, bool validOnly)\n    content.vb: Public Function Find(findType As X509FindType, findValue As Object, validOnly As Boolean) As X509Certificate2Collection\n    parameters:\n    - id: findType\n      type: System.Security.Cryptography.X509Certificates.X509FindType\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509FindType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  values. </p>\\n\"\n    - id: findValue\n      type: System.Object\n      description: \"\\n<p>The search criteria as an object. </p>\\n\"\n    - id: validOnly\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to allow only valid certificates to be returned from the search; otherwise, <strong>false</strong>. </p>\\n\"\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>\\n<em>findType</em> is invalid. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.Find(X509FindType, Object, Boolean)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 170\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Returns an enumerator that can iterate through a <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public X509Certificate2Enumerator GetEnumerator()\n    content.vb: Public Function GetEnumerator As X509Certificate2Enumerator\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that can iterate through the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.GetEnumerator()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])\n  id: Import(System.Byte[])\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Import(Byte[])\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Import\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 171\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Imports a certificate in the form of a byte array into a <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void Import(byte[] rawData)\n    content.vb: Public Sub Import(rawData As Byte())\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: \"\\n<p>A byte array containing data from an X.509 certificate. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte())\n  name.vb: Import(Byte())\n  nameWithType: X509Certificate2Collection.Import(Byte[])\n  nameWithType.vb: X509Certificate2Collection.Import(Byte())\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Import(Byte[], String, X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[], System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Import\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 172\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Imports a certificate, in the form of a byte array that requires a password to access the certificate, into a <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void Import(byte[] rawData, string password, X509KeyStorageFlags keyStorageFlags)\n    content.vb: Public Sub Import(rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: \"\\n<p>A byte array containing data from an <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n    - id: password\n      type: System.String\n      description: \"\\n<p>The password required to access the certificate information. </p>\\n\"\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: \"\\n<p>A bitwise combination of the enumeration values that control how and where the certificate is imported. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte(), System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  name.vb: Import(Byte(), String, X509KeyStorageFlags)\n  nameWithType: X509Certificate2Collection.Import(Byte[], String, X509KeyStorageFlags)\n  nameWithType.vb: X509Certificate2Collection.Import(Byte(), String, X509KeyStorageFlags)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)\n  id: Import(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Import(String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Import\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 173\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Imports a certificate file into a <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void Import(string fileName)\n    content.vb: Public Sub Import(fileName As String)\n    parameters:\n    - id: fileName\n      type: System.String\n      description: \"\\n<p>The name of the file containing the certificate information. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.Import(String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Import(String, String, X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String, System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Import\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 174\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Imports a certificate file that requires a password into a <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void Import(string fileName, string password, X509KeyStorageFlags keyStorageFlags)\n    content.vb: Public Sub Import(fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)\n    parameters:\n    - id: fileName\n      type: System.String\n      description: \"\\n<p>The name of the file containing the certificate information. </p>\\n\"\n    - id: password\n      type: System.String\n      description: \"\\n<p>The password required to access the certificate information. </p>\\n\"\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: \"\\n<p>A bitwise combination of the enumeration values that control how and where the certificate is imported. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.Import(String, String, X509KeyStorageFlags)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Insert(Int32, X509Certificate2)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32, System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Insert\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 175\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Inserts an object into the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object at the specified index.</p>\\n\"\n  syntax:\n    content: public void Insert(int index, X509Certificate2 certificate)\n    content.vb: Public Sub Insert(index As Integer, certificate As X509Certificate2)\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index at which to insert <em>certificate</em>. </p>\\n\"\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to insert. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>index</em> is greater than the <xref href=\\\"System.Collections.CollectionBase.Count\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The collection is read-only.</p>\\n<p>-or- </p>\\n<p>The collection has a fixed size. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificate</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.Insert(Int32, X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: Remove(X509Certificate2)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 176\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Removes the first occurrence of a certificate from the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void Remove(X509Certificate2 certificate)\n    content.vb: Public Sub Remove(certificate As X509Certificate2)\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be removed from the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificate</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.Remove(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  id: RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: RemoveRange(X509Certificate2[])\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveRange\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 177\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Removes multiple <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects in an array from an <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void RemoveRange(X509Certificate2[] certificates)\n    content.vb: Public Sub RemoveRange(certificates As X509Certificate2())\n    parameters:\n    - id: certificates\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificates</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2())\n  name.vb: RemoveRange(X509Certificate2())\n  nameWithType: X509Certificate2Collection.RemoveRange(X509Certificate2[])\n  nameWithType.vb: X509Certificate2Collection.RemoveRange(X509Certificate2())\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  id: RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  langs:\n  - csharp\n  - vb\n  name: RemoveRange(X509Certificate2Collection)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveRange\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 178\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Removes multiple <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects in an <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object from another <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void RemoveRange(X509Certificate2Collection certificates)\n    content.vb: Public Sub RemoveRange(certificates As X509Certificate2Collection)\n    parameters:\n    - id: certificates\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificates</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Certificate2Collection.RemoveRange(X509Certificate2Collection)\nreferences:\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  nameWithType: X509CertificateCollection\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  fullName: System.Collections.IList\n  commentId: T:System.Collections.IList\n  nameWithType: IList\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  commentId: T:System.Collections.ICollection\n  nameWithType: ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: Add(X509Certificate)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: Add\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: Add\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)\n  nameWithType: X509CertificateCollection.Add(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: AddRange(X509Certificate[])\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])\n  fullname.vb: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate())\n  name.vb: AddRange(X509Certificate())\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])\n    name: AddRange\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])\n    name: AddRange\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])\n  nameWithType: X509CertificateCollection.AddRange(X509Certificate[])\n  nameWithType.vb: X509CertificateCollection.AddRange(X509Certificate())\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: AddRange(X509CertificateCollection)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n    name: AddRange\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n    name: X509CertificateCollection\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n    name: AddRange\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n    name: X509CertificateCollection\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n  nameWithType: X509CertificateCollection.AddRange(X509CertificateCollection)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: Contains(X509Certificate)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: Contains\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: Contains\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)\n  nameWithType: X509CertificateCollection.Contains(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: CopyTo(X509Certificate[], Int32)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[], System.Int32)\n  fullname.vb: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate(), System.Int32)\n  name.vb: CopyTo(X509Certificate(), Int32)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)\n    name: CopyTo\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)\n    name: CopyTo\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)\n  nameWithType: X509CertificateCollection.CopyTo(X509Certificate[], Int32)\n  nameWithType.vb: X509CertificateCollection.CopyTo(X509Certificate(), Int32)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode()\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode\n    name: GetHashCode\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode\n    name: GetHashCode\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode\n  nameWithType: X509CertificateCollection.GetHashCode()\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: IndexOf(X509Certificate)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: IndexOf\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: IndexOf\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)\n  nameWithType: X509CertificateCollection.IndexOf(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: Insert(Int32, X509Certificate)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32, System.Security.Cryptography.X509Certificates.X509Certificate)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: Insert\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: Insert\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)\n  nameWithType: X509CertificateCollection.Insert(Int32, X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: Remove(X509Certificate)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: Remove\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)\n    name: Remove\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate\n    name: X509Certificate\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)\n  nameWithType: X509CertificateCollection.Remove(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Count\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: Count\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Count\n  commentId: P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Count\n  nameWithType: X509CertificateCollection.Count\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: ICollection.IsSynchronized\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.IsSynchronized\n  name.vb: System.Collections.ICollection.IsSynchronized\n  commentId: P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#IsSynchronized\n  nameWithType: X509CertificateCollection.ICollection.IsSynchronized\n  nameWithType.vb: X509CertificateCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: ICollection.SyncRoot\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.SyncRoot\n  name.vb: System.Collections.ICollection.SyncRoot\n  commentId: P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#SyncRoot\n  nameWithType: X509CertificateCollection.ICollection.SyncRoot\n  nameWithType.vb: X509CertificateCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsFixedSize\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: IList.IsFixedSize\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IsFixedSize\n  name.vb: System.Collections.IList.IsFixedSize\n  commentId: P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsFixedSize\n  nameWithType: X509CertificateCollection.IList.IsFixedSize\n  nameWithType.vb: X509CertificateCollection.System.Collections.IList.IsFixedSize\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsReadOnly\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: IList.IsReadOnly\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IsReadOnly\n  name.vb: System.Collections.IList.IsReadOnly\n  commentId: P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsReadOnly\n  nameWithType: X509CertificateCollection.IList.IsReadOnly\n  nameWithType.vb: X509CertificateCollection.System.Collections.IList.IsReadOnly\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: IList.Item[Int32]\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Item[System.Int32]\n  fullname.vb: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Item(System.Int32)\n  name.vb: System.Collections.IList.Item(Int32)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Item(System.Int32)\n    name: IList.Item\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Item\n  - name: '['\n    fullName: '['\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Item(System.Int32)\n    name: System.Collections.IList.Item\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Item\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Item(System.Int32)\n  nameWithType: X509CertificateCollection.IList.Item[Int32]\n  nameWithType.vb: X509CertificateCollection.System.Collections.IList.Item(Int32)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: Clear()\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear()\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear\n    name: Clear\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear\n    name: Clear\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear\n  nameWithType: X509CertificateCollection.Clear()\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IEnumerable#GetEnumerator\n    name: IEnumerable.GetEnumerator\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IEnumerable#GetEnumerator\n    name: System.Collections.IEnumerable.GetEnumerator\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IEnumerable#GetEnumerator\n  nameWithType: X509CertificateCollection.IEnumerable.GetEnumerator()\n  nameWithType.vb: X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: RemoveAt(Int32)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)\n    name: RemoveAt\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)\n    name: RemoveAt\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)\n  nameWithType: X509CertificateCollection.RemoveAt(Int32)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n    name: ICollection.CopyTo\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n    name: System.Collections.ICollection.CopyTo\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  nameWithType: X509CertificateCollection.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: X509CertificateCollection.System.Collections.ICollection.CopyTo(Array, Int32)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: IList.Add(Object)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Add(System.Object)\n  name.vb: System.Collections.IList.Add(Object)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Add(System.Object)\n    name: IList.Add\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Add(System.Object)\n    name: System.Collections.IList.Add\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Add(System.Object)\n  nameWithType: X509CertificateCollection.IList.Add(Object)\n  nameWithType.vb: X509CertificateCollection.System.Collections.IList.Add(Object)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: IList.Contains(Object)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Contains(System.Object)\n  name.vb: System.Collections.IList.Contains(Object)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Contains(System.Object)\n    name: IList.Contains\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Contains\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Contains(System.Object)\n    name: System.Collections.IList.Contains\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Contains\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Contains(System.Object)\n  nameWithType: X509CertificateCollection.IList.Contains(Object)\n  nameWithType.vb: X509CertificateCollection.System.Collections.IList.Contains(Object)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: IList.IndexOf(Object)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IndexOf(System.Object)\n  name.vb: System.Collections.IList.IndexOf(Object)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IndexOf(System.Object)\n    name: IList.IndexOf\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IndexOf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IndexOf(System.Object)\n    name: System.Collections.IList.IndexOf\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IndexOf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IndexOf(System.Object)\n  nameWithType: X509CertificateCollection.IList.IndexOf(Object)\n  nameWithType.vb: X509CertificateCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: IList.Insert(Int32, Object)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Insert(System.Int32, System.Object)\n  name.vb: System.Collections.IList.Insert(Int32, Object)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n    name: IList.Insert\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Insert\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n    name: System.Collections.IList.Insert\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Insert\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  nameWithType: X509CertificateCollection.IList.Insert(Int32, Object)\n  nameWithType.vb: X509CertificateCollection.System.Collections.IList.Insert(Int32, Object)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  isExternal: true\n  name: IList.Remove(Object)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Remove(System.Object)\n  name.vb: System.Collections.IList.Remove(Object)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Remove(System.Object)\n    name: IList.Remove\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Remove\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Remove(System.Object)\n    name: System.Collections.IList.Remove\n    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Remove\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Remove(System.Object)\n  nameWithType: X509CertificateCollection.IList.Remove(Object)\n  nameWithType.vb: X509CertificateCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2\n  nameWithType: X509Certificate2\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2[]\n  name: X509Certificate2[]\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2[]\n  fullname.vb: System.Security.Cryptography.X509Certificates.X509Certificate2()\n  name.vb: X509Certificate2()\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n    name: X509Certificate2\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n    name: X509Certificate2\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n  - name: ()\n    fullName: ()\n  nameWithType: X509Certificate2[]\n  nameWithType.vb: X509Certificate2()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2Collection\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  nameWithType: X509Certificate2Collection\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Security.Cryptography.X509Certificates.X509ContentType\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509ContentType\n  fullName: System.Security.Cryptography.X509Certificates.X509ContentType\n  commentId: T:System.Security.Cryptography.X509Certificates.X509ContentType\n  nameWithType: X509ContentType\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.Cryptography.X509Certificates.X509FindType\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509FindType\n  fullName: System.Security.Cryptography.X509Certificates.X509FindType\n  commentId: T:System.Security.Cryptography.X509Certificates.X509FindType\n  nameWithType: X509FindType\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2Enumerator\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator\n  nameWithType: X509Certificate2Enumerator\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  commentId: T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  isExternal: false\n  name: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n  commentId: T:System.Security.Cryptography.CryptographicException\n  nameWithType: CryptographicException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}