{"nodes":[{"pos":[1009,1027],"content":"WarningHeaderValue","needQuote":true,"nodes":[{"content":"WarningHeaderValue","pos":[0,18]}]},{"pos":[2287,2328],"content":"WarningHeaderValue(Int32, String, String)","needQuote":true,"nodes":[{"content":"WarningHeaderValue(Int32, String, String)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The specific warning code.&lt;/p&gt;\\n","pos":[3182,3219],"source":"\\n<p>The specific warning code.</p>\\n"},{"content":"\\n&lt;p&gt;The host that attached the warning.&lt;/p&gt;\\n","pos":[3283,3329],"source":"\\n<p>The host that attached the warning.</p>\\n"},{"content":"\\n&lt;p&gt;A quoted-string containing the warning text.&lt;/p&gt;\\n","pos":[3392,3447],"source":"\\n<p>A quoted-string containing the warning text.</p>\\n"},{"pos":[3998,4055],"content":"WarningHeaderValue(Int32, String, String, DateTimeOffset)","needQuote":true,"nodes":[{"content":"WarningHeaderValue(Int32, String, String, DateTimeOffset)","pos":[0,57]}]},{"content":"\\n&lt;p&gt;The specific warning code.&lt;/p&gt;\\n","pos":[4977,5014],"source":"\\n<p>The specific warning code.</p>\\n"},{"content":"\\n&lt;p&gt;The host that attached the warning.&lt;/p&gt;\\n","pos":[5078,5124],"source":"\\n<p>The host that attached the warning.</p>\\n"},{"content":"\\n&lt;p&gt;A quoted-string containing the warning text.&lt;/p&gt;\\n","pos":[5187,5242],"source":"\\n<p>A quoted-string containing the warning text.</p>\\n"},{"content":"\\n&lt;p&gt;The date/time stamp of the warning.&lt;/p&gt;\\n","pos":[5313,5359],"source":"\\n<p>The date/time stamp of the warning.</p>\\n"},{"pos":[5732,5737],"content":"Agent","needQuote":true,"nodes":[{"content":"Agent","pos":[0,5]}]},{"pos":[6847,6851],"content":"Code","needQuote":true,"nodes":[{"content":"Code","pos":[0,4]}]},{"pos":[7934,7938],"content":"Date","needQuote":true,"nodes":[{"content":"Date","pos":[0,4]}]},{"pos":[9094,9098],"content":"Text","needQuote":true,"nodes":[{"content":"Text","pos":[0,4]}]},{"pos":[10272,10286],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current object.&lt;/p&gt;\\n","pos":[11164,11221],"source":"\\n<p>The object to compare with the current object.</p>\\n"},{"pos":[11991,12004],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[13323,13336],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that represents authentication header value information.&lt;/p&gt;\\n","pos":[14131,14207],"source":"\\n<p>A string that represents authentication header value information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is a &lt;strong&gt;null&lt;/strong&gt; reference.&lt;/p&gt;\\n","pos":[14549,14614],"source":"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is not valid authentication header value information.&lt;/p&gt;\\n","pos":[14707,14788],"source":"\\n<p>\\n<em>input</em> is not valid authentication header value information.</p>\\n"},{"pos":[15148,15158],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16625,16665],"content":"TryParse(String, out WarningHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, out WarningHeaderValue)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The string to validate.&lt;/p&gt;\\n","pos":[17588,17622],"source":"\\n<p>The string to validate.</p>\\n"},{"pos":[18722,18745],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[18927,18933],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19120,19142],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[19290,19296],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19363,19364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19414,19420],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19481,19482]},{"pos":[19537,19543],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19603,19604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19701,19707],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19774,19775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19825,19831],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19892,19893]},{"pos":[19948,19954],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20014,20015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20260,20291],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[20457,20472],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20548,20549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20599,20605],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20666,20667]},{"pos":[20722,20728],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20788,20789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20895,20910],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20986,20987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21037,21043],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21104,21105]},{"pos":[21160,21166],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21226,21227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21453,21462],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[21555,21562],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21630,21631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21658,21659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21728,21735],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21803,21804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21831,21832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22007,22024],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[22133,22148],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22224,22225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22252,22253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22330,22345],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22421,22422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22449,22450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22595,22601],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[22731,22736],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22878,22884],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23037,23051],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[23257,23281],"content":"Nullable<DateTimeOffset>","needQuote":true,"nodes":[{"content":"Nullable&lt;DateTimeOffset&gt;","pos":[0,24],"source":"Nullable<DateTimeOffset>"}]},{"pos":[23481,23489],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[23551,23552],"content":"<","needQuote":true,"nodes":[]},{"pos":[23610,23624],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[23762,23770],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[23833,23836]},{"pos":[23901,23915],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[23983,23984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24213,24224],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[24371,24379],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[24420,24421],"content":"<","needQuote":true,"nodes":[]},{"pos":[24448,24449],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[24546,24554],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[24596,24599]},{"pos":[24633,24634],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[24661,24662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24868,24882],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[25001,25007],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25074,25075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25125,25131],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25191,25192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25275,25281],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25348,25349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25399,25405],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25465,25466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25639,25646],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25812,25825],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[25926,25937],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26009,26010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26037,26038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26111,26122],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26194,26195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26222,26223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26430,26448],"content":"WarningHeaderValue","needQuote":true,"nodes":[{"content":"WarningHeaderValue","pos":[0,18]}]},{"pos":[26678,26688],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[26783,26791],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26860,26861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26888,26889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26959,26967],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27036,27037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27064,27065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27218,27239],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[27438,27453],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.Net.Http.Headers.WarningHeaderValue\n  commentId: T:System.Net.Http.Headers.WarningHeaderValue\n  id: WarningHeaderValue\n  parent: System.Net.Http.Headers\n  children:\n  - System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)\n  - System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)\n  - System.Net.Http.Headers.WarningHeaderValue.Agent\n  - System.Net.Http.Headers.WarningHeaderValue.Code\n  - System.Net.Http.Headers.WarningHeaderValue.Date\n  - System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.WarningHeaderValue.GetHashCode\n  - System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.WarningHeaderValue.Text\n  - System.Net.Http.Headers.WarningHeaderValue.ToString\n  - System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)\n  langs:\n  - csharp\n  - vb\n  name: WarningHeaderValue\n  fullName: System.Net.Http.Headers.WarningHeaderValue\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WarningHeaderValue\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 600\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Represents a warning value used by the Warning header.</p>\\n\"\n  syntax:\n    content: public class WarningHeaderValue\n    content.vb: Public Class WarningHeaderValue\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: WarningHeaderValue\n- uid: System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)\n  commentId: M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)\n  id: '#ctor(System.Int32,System.String,System.String)'\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: WarningHeaderValue(Int32, String, String)\n  fullName: System.Net.Http.Headers.WarningHeaderValue.WarningHeaderValue(System.Int32, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 602\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public WarningHeaderValue(int code, string agent, string text)\n    content.vb: Public Sub New(code As Integer, agent As String, text As String)\n    parameters:\n    - id: code\n      type: System.Int32\n      description: \"\\n<p>The specific warning code.</p>\\n\"\n    - id: agent\n      type: System.String\n      description: \"\\n<p>The host that attached the warning.</p>\\n\"\n    - id: text\n      type: System.String\n      description: \"\\n<p>A quoted-string containing the warning text.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: WarningHeaderValue.WarningHeaderValue(Int32, String, String)\n- uid: System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)\n  commentId: M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)\n  id: '#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)'\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: WarningHeaderValue(Int32, String, String, DateTimeOffset)\n  fullName: System.Net.Http.Headers.WarningHeaderValue.WarningHeaderValue(System.Int32, System.String, System.String, System.DateTimeOffset)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 603\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public WarningHeaderValue(int code, string agent, string text, DateTimeOffset date)\n    content.vb: Public Sub New(code As Integer, agent As String, text As String, date As DateTimeOffset)\n    parameters:\n    - id: code\n      type: System.Int32\n      description: \"\\n<p>The specific warning code.</p>\\n\"\n    - id: agent\n      type: System.String\n      description: \"\\n<p>The host that attached the warning.</p>\\n\"\n    - id: text\n      type: System.String\n      description: \"\\n<p>A quoted-string containing the warning text.</p>\\n\"\n    - id: date\n      type: System.DateTimeOffset\n      description: \"\\n<p>The date/time stamp of the warning.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: WarningHeaderValue.WarningHeaderValue(Int32, String, String, DateTimeOffset)\n- uid: System.Net.Http.Headers.WarningHeaderValue.Agent\n  commentId: P:System.Net.Http.Headers.WarningHeaderValue.Agent\n  id: Agent\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Agent\n  fullName: System.Net.Http.Headers.WarningHeaderValue.Agent\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Agent\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 604\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the host that attached the warning.</p>\\n\"\n  syntax:\n    content: public string Agent { get; }\n    content.vb: Public ReadOnly Property Agent As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The host that attached the warning.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: WarningHeaderValue.Agent\n- uid: System.Net.Http.Headers.WarningHeaderValue.Code\n  commentId: P:System.Net.Http.Headers.WarningHeaderValue.Code\n  id: Code\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Code\n  fullName: System.Net.Http.Headers.WarningHeaderValue.Code\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Code\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 605\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the specific warning code.</p>\\n\"\n  syntax:\n    content: public int Code { get; }\n    content.vb: Public ReadOnly Property Code As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The specific warning code.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: WarningHeaderValue.Code\n- uid: System.Net.Http.Headers.WarningHeaderValue.Date\n  commentId: P:System.Net.Http.Headers.WarningHeaderValue.Date\n  id: Date\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Date\n  fullName: System.Net.Http.Headers.WarningHeaderValue.Date\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Date\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 606\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the date/time stamp of the warning.</p>\\n\"\n  syntax:\n    content: public DateTimeOffset? Date { get; }\n    content.vb: Public ReadOnly Property Date As DateTimeOffset?\n    parameters: []\n    return:\n      type: System.Nullable{System.DateTimeOffset}\n      description: \"\\n<p>Returns <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The date/time stamp of the warning.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: WarningHeaderValue.Date\n- uid: System.Net.Http.Headers.WarningHeaderValue.Text\n  commentId: P:System.Net.Http.Headers.WarningHeaderValue.Text\n  id: Text\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Text\n  fullName: System.Net.Http.Headers.WarningHeaderValue.Text\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Text\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 607\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets a quoted-string containing the warning text.</p>\\n\"\n  syntax:\n    content: public string Text { get; }\n    content.vb: Public ReadOnly Property Text As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A quoted-string containing the warning text.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: WarningHeaderValue.Text\n- uid: System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)\n  commentId: M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 608\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: WarningHeaderValue.Equals(Object)\n- uid: System.Net.Http.Headers.WarningHeaderValue.GetHashCode\n  commentId: M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.WarningHeaderValue.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 609\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Serves as a hash function for an <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A hash code for the current object.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: WarningHeaderValue.GetHashCode()\n- uid: System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)\n  commentId: M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 610\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Converts a string to an <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static WarningHeaderValue Parse(string input)\n    content.vb: Public Shared Function Parse(input As String) As WarningHeaderValue\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that represents authentication header value information.</p>\\n\"\n    return:\n      type: System.Net.Http.Headers.WarningHeaderValue\n      description: \"\\n<p>Returns an <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> is not valid authentication header value information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WarningHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.WarningHeaderValue.ToString\n  commentId: M:System.Net.Http.Headers.WarningHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.Headers.WarningHeaderValue.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 611\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Returns a string that represents the current <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string that represents the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: WarningHeaderValue.ToString()\n- uid: System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)\n  commentId: M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)\n  parent: System.Net.Http.Headers.WarningHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out WarningHeaderValue)\n  fullName: System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String, out System.Net.Http.Headers.WarningHeaderValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryParse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 612\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether a string is valid <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string input, out WarningHeaderValue parsedValue)\n    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As WarningHeaderValue) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>The string to validate.</p>\\n\"\n    - id: parsedValue\n      type: System.Net.Http.Headers.WarningHeaderValue\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> version of the string.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>input</em> is valid <xref href=\\\"System.Net.Http.Headers.WarningHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.WarningHeaderValue)\n  name.vb: TryParse(String, ByRef WarningHeaderValue)\n  nameWithType: WarningHeaderValue.TryParse(String, out WarningHeaderValue)\n  nameWithType.vb: WarningHeaderValue.TryParse(String, ByRef WarningHeaderValue)\nreferences:\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  fullName: System.DateTimeOffset\n  commentId: T:System.DateTimeOffset\n  nameWithType: DateTimeOffset\n- uid: System.Nullable{System.DateTimeOffset}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<DateTimeOffset>\n  fullName: System.Nullable<System.DateTimeOffset>\n  fullname.vb: System.Nullable(Of System.DateTimeOffset)\n  name.vb: Nullable(Of DateTimeOffset)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    fullName: System.DateTimeOffset\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    fullName: System.DateTimeOffset\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.DateTimeOffset}\n  nameWithType: Nullable<DateTimeOffset>\n  nameWithType.vb: Nullable(Of DateTimeOffset)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Net.Http.Headers.WarningHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: WarningHeaderValue\n  fullName: System.Net.Http.Headers.WarningHeaderValue\n  commentId: T:System.Net.Http.Headers.WarningHeaderValue\n  nameWithType: WarningHeaderValue\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}