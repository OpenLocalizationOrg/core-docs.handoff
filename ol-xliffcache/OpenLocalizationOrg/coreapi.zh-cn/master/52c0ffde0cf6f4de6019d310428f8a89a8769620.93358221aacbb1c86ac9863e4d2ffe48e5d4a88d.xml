{"nodes":[{"pos":[563,589],"content":"IdentityNotMappedException","needQuote":true,"nodes":[{"content":"IdentityNotMappedException","pos":[0,26]}]},{"pos":[2787,2815],"content":"IdentityNotMappedException()","needQuote":true,"nodes":[{"content":"IdentityNotMappedException()","pos":[0,28]}]},{"pos":[4020,4054],"content":"IdentityNotMappedException(String)","needQuote":true,"nodes":[{"content":"IdentityNotMappedException(String)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.&lt;/p&gt;\\n","pos":[4995,5067],"source":"\\n<p>The error message that explains the reason for the exception.</p>\\n"},{"pos":[5553,5598],"content":"IdentityNotMappedException(String, Exception)","needQuote":true,"nodes":[{"content":"IdentityNotMappedException(String, Exception)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.&lt;/p&gt;\\n","pos":[6614,6686],"source":"\\n<p>The error message that explains the reason for the exception.</p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[6753,6815],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If &lt;em&gt;inner&lt;/em&gt; is not null, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.&lt;/p&gt;\\n","pos":[6816,6952],"source":" If <em>inner</em> is not null, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n"},{"pos":[7390,7408],"content":"UnmappedIdentities","needQuote":true,"nodes":[{"content":"UnmappedIdentities","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The collection of unmapped identities.&lt;/p&gt;\\n","pos":[8416,8465],"source":"\\n<p>The collection of unmapped identities.</p>\\n"},{"pos":[8825,8850],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[9038,9044],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9192,9201],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[9406,9419],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[9680,9690],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[9925,9943],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[10060,10076],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[10135,10136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10163,10164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10245,10261],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[10320,10321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10348,10349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10548,10558],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10659,10667],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10718,10719],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10746,10747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10820,10828],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10879,10880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10907,10908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11189,11239],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[11537,11550],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[11627,11628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11711,11728],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[11822,11823]},{"pos":[11910,11926],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[12018,12019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12191,12204],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[12281,12282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12365,12382],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[12476,12477]},{"pos":[12564,12580],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[12672,12673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12993,13002],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13101,13108],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13179,13180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13207,13208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13280,13287],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13358,13359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13386,13387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13567,13574],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[13770,13774],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[13971,13985],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[14207,14217],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[14428,14438],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[14647,14655],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[14856,14862],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[15058,15065],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[15276,15296],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[15541,15555],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15674,15680],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15747,15748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15798,15804],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15864,15865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15948,15954],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16021,16022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16072,16078],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16138,16139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16353,16375],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16523,16529],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16596,16597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16647,16653],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16714,16715]},{"pos":[16770,16776],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16836,16837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16934,16940],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17007,17008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17058,17064],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17125,17126]},{"pos":[17181,17187],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17247,17248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17493,17524],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17690,17705],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17781,17782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17832,17838],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17899,17900]},{"pos":[17955,17961],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18021,18022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18128,18143],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18219,18220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18270,18276],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18337,18338]},{"pos":[18393,18399],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18459,18460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18690,18703],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18804,18815],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18887,18888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18915,18916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18989,19000],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19072,19073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19100,19101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19284,19301],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19410,19425],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19501,19502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19529,19530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19607,19622],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19698,19699],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19726,19727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19872,19878],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20007,20035],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[20232,20262],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[20465,20471],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20675,20702],"content":"IdentityReferenceCollection","needQuote":true,"nodes":[{"content":"IdentityReferenceCollection","pos":[0,27]}]}],"content":"items:\n- uid: System.Security.Principal.IdentityNotMappedException\n  commentId: T:System.Security.Principal.IdentityNotMappedException\n  id: IdentityNotMappedException\n  parent: System.Security.Principal\n  children:\n  - System.Security.Principal.IdentityNotMappedException.#ctor\n  - System.Security.Principal.IdentityNotMappedException.#ctor(System.String)\n  - System.Security.Principal.IdentityNotMappedException.#ctor(System.String,System.Exception)\n  - System.Security.Principal.IdentityNotMappedException.UnmappedIdentities\n  langs:\n  - csharp\n  - vb\n  name: IdentityNotMappedException\n  fullName: System.Security.Principal.IdentityNotMappedException\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IdentityNotMappedException\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 22\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Represents an exception for a principal whose identity could not be mapped to a known identity.</p>\\n\"\n  syntax:\n    content: 'public sealed class IdentityNotMappedException : Exception, ISerializable, _Exception'\n    content.vb: >-\n      Public NotInheritable Class IdentityNotMappedException\n          Inherits Exception\n          Implements ISerializable, _Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: IdentityNotMappedException\n- uid: System.Security.Principal.IdentityNotMappedException.#ctor\n  commentId: M:System.Security.Principal.IdentityNotMappedException.#ctor\n  id: '#ctor'\n  parent: System.Security.Principal.IdentityNotMappedException\n  langs:\n  - csharp\n  - vb\n  name: IdentityNotMappedException()\n  fullName: System.Security.Principal.IdentityNotMappedException.IdentityNotMappedException()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 24\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Principal.IdentityNotMappedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public IdentityNotMappedException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: IdentityNotMappedException.IdentityNotMappedException()\n- uid: System.Security.Principal.IdentityNotMappedException.#ctor(System.String)\n  commentId: M:System.Security.Principal.IdentityNotMappedException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Principal.IdentityNotMappedException\n  langs:\n  - csharp\n  - vb\n  name: IdentityNotMappedException(String)\n  fullName: System.Security.Principal.IdentityNotMappedException.IdentityNotMappedException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 25\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Principal.IdentityNotMappedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified error message.</p>\\n\"\n  syntax:\n    content: public IdentityNotMappedException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: IdentityNotMappedException.IdentityNotMappedException(String)\n- uid: System.Security.Principal.IdentityNotMappedException.#ctor(System.String,System.Exception)\n  commentId: M:System.Security.Principal.IdentityNotMappedException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Security.Principal.IdentityNotMappedException\n  langs:\n  - csharp\n  - vb\n  name: IdentityNotMappedException(String, Exception)\n  fullName: System.Security.Principal.IdentityNotMappedException.IdentityNotMappedException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 26\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Principal.IdentityNotMappedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified error message and inner exception.</p>\\n\"\n  syntax:\n    content: public IdentityNotMappedException(string message, Exception inner)\n    content.vb: Public Sub New(message As String, inner As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception.</p>\\n\"\n    - id: inner\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If <em>inner</em> is not null, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: IdentityNotMappedException.IdentityNotMappedException(String, Exception)\n- uid: System.Security.Principal.IdentityNotMappedException.UnmappedIdentities\n  commentId: P:System.Security.Principal.IdentityNotMappedException.UnmappedIdentities\n  id: UnmappedIdentities\n  parent: System.Security.Principal.IdentityNotMappedException\n  langs:\n  - csharp\n  - vb\n  name: UnmappedIdentities\n  fullName: System.Security.Principal.IdentityNotMappedException.UnmappedIdentities\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnmappedIdentities\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 27\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Represents the collection of unmapped identities for an <xref href=\\\"System.Security.Principal.IdentityNotMappedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> exception.</p>\\n\"\n  syntax:\n    content: public IdentityReferenceCollection UnmappedIdentities { get; }\n    content.vb: Public ReadOnly Property UnmappedIdentities As IdentityReferenceCollection\n    parameters: []\n    return:\n      type: System.Security.Principal.IdentityReferenceCollection\n      description: \"\\n<p>The collection of unmapped identities.</p>\\n\"\n  seealso:\n  - type: System.Security.Principal.IdentityNotMappedException\n    commentId: T:System.Security.Principal.IdentityNotMappedException\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: IdentityNotMappedException.UnmappedIdentities\nreferences:\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.GetBaseException\n  nameWithType: Exception.GetBaseException()\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.ToString\n  nameWithType: Exception.ToString()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.GetType\n  nameWithType: Exception.GetType()\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  commentId: P:System.Exception.Message\n  nameWithType: Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  commentId: P:System.Exception.Data\n  nameWithType: Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  commentId: P:System.Exception.InnerException\n  nameWithType: Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  commentId: P:System.Exception.Source\n  nameWithType: Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  commentId: P:System.Exception.HResult\n  nameWithType: Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.Principal.IdentityReferenceCollection\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReferenceCollection\n  fullName: System.Security.Principal.IdentityReferenceCollection\n  commentId: T:System.Security.Principal.IdentityReferenceCollection\n  nameWithType: IdentityReferenceCollection\n"}