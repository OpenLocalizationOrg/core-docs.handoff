{"nodes":[{"pos":[2660,2683],"content":"UnmanagedMemoryAccessor","needQuote":true,"nodes":[{"content":"UnmanagedMemoryAccessor","pos":[0,23]}]},{"pos":[4034,4059],"content":"UnmanagedMemoryAccessor()","needQuote":true,"nodes":[{"content":"UnmanagedMemoryAccessor()","pos":[0,25]}]},{"pos":[5265,5314],"content":"UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)","needQuote":true,"nodes":[{"content":"UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)","pos":[0,49]}]},{"content":"\\n&lt;p&gt;The buffer to contain the accessor.&lt;/p&gt;\\n","pos":[6382,6428],"source":"\\n<p>The buffer to contain the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The byte at which to start the accessor.&lt;/p&gt;\\n","pos":[6492,6543],"source":"\\n<p>The byte at which to start the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The size, in bytes, of memory to allocate.&lt;/p&gt;\\n","pos":[6609,6662],"source":"\\n<p>The size, in bytes, of memory to allocate.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;capacity&lt;/em&gt; is greater than &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n","pos":[6773,6857],"source":"\\n<p>\\n<em>offset</em> plus <em>capacity</em> is greater than <em>buffer</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6962,7016],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;capacity&lt;/em&gt; is less than zero.&lt;/p&gt;\\n","pos":[7133,7201],"source":"\\n<p>\\n<em>offset</em> or <em>capacity</em> is less than zero.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;capacity&lt;/em&gt; would wrap around the high end of the address space.&lt;/p&gt;\\n","pos":[7314,7418],"source":"\\n<p>\\n<em>offset</em> plus <em>capacity</em> would wrap around the high end of the address space.</p>\\n"},{"pos":[8033,8094],"content":"UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)","needQuote":true,"nodes":[{"content":"UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)","pos":[0,61]}]},{"content":"\\n&lt;p&gt;The buffer to contain the accessor.&lt;/p&gt;\\n","pos":[9239,9285],"source":"\\n<p>The buffer to contain the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The byte at which to start the accessor.&lt;/p&gt;\\n","pos":[9349,9400],"source":"\\n<p>The byte at which to start the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The size, in bytes, of memory to allocate.&lt;/p&gt;\\n","pos":[9466,9519],"source":"\\n<p>The size, in bytes, of memory to allocate.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;capacity&lt;/em&gt; is greater than &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n","pos":[9891,9975],"source":"\\n<p>\\n<em>offset</em> plus <em>capacity</em> is greater than <em>buffer</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10080,10134],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;capacity&lt;/em&gt; would wrap around the high end of the address space.&lt;/p&gt;\\n","pos":[10616,10720],"source":"\\n<p>\\n<em>offset</em> plus <em>capacity</em> would wrap around the high end of the address space.</p>\\n"},{"pos":[11081,11088],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the accessor is readable; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[11750,11842],"source":"\\n<p>\\n<strong>true</strong> if the accessor is readable; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[11843,11849],"source":" </p>\\n"},{"pos":[12180,12188],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the accessor is writable; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[12855,12947],"source":"\\n<p>\\n<strong>true</strong> if the accessor is writable; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12948,12954],"source":" </p>\\n"},{"pos":[13286,13294],"content":"Capacity","needQuote":true,"nodes":[{"content":"Capacity","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The capacity of the accessor.&lt;/p&gt;\\n","pos":[13945,13985],"source":"\\n<p>The capacity of the accessor.</p>\\n"},{"pos":[14311,14317],"content":"IsOpen","needQuote":true,"nodes":[{"content":"IsOpen","pos":[0,6]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the accessor is open; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[15000,15088],"source":"\\n<p>\\n<strong>true</strong> if the accessor is open; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[15089,15095],"source":" </p>\\n"},{"pos":[15428,15437],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[16475,16491],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.","pos":[17344,17481],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources."},{"content":"&lt;/p&gt;\\n","pos":[17482,17488],"source":" </p>\\n"},{"pos":[18117,18165],"content":"Initialize(SafeBuffer, Int64, Int64, FileAccess)","needQuote":true,"nodes":[{"content":"Initialize(SafeBuffer, Int64, Int64, FileAccess)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The buffer to contain the accessor.&lt;/p&gt;\\n","pos":[19342,19388],"source":"\\n<p>The buffer to contain the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The byte at which to start the accessor.&lt;/p&gt;\\n","pos":[19452,19503],"source":"\\n<p>The byte at which to start the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The size, in bytes, of memory to allocate.&lt;/p&gt;\\n","pos":[19569,19622],"source":"\\n<p>The size, in bytes, of memory to allocate.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;capacity&lt;/em&gt; is greater than &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n","pos":[19994,20078],"source":"\\n<p>\\n<em>offset</em> plus <em>capacity</em> is greater than <em>buffer</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[20183,20237],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;capacity&lt;/em&gt; would wrap around the high end of the address space.&lt;/p&gt;\\n","pos":[20719,20823],"source":"\\n<p>\\n<em>offset</em> plus <em>capacity</em> would wrap around the high end of the address space.</p>\\n"},{"pos":[21359,21377],"content":"ReadBoolean(Int64)","needQuote":true,"nodes":[{"content":"ReadBoolean(Int64)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.","pos":[22080,22149],"source":"\\n<p>The number of bytes into the accessor at which to begin reading."},{"content":"&lt;/p&gt;\\n","pos":[22150,22156],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22217,22278],"source":"\\n<p>\\n<strong>true</strong> or <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[22389,22467],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[22584,22678],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[22783,22832],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[22941,22983],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[23346,23361],"content":"ReadByte(Int64)","needQuote":true,"nodes":[{"content":"ReadByte(Int64)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[24046,24121],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[24179,24214],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[24325,24403],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[24520,24614],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[24719,24768],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[24877,24919],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[25279,25294],"content":"ReadChar(Int64)","needQuote":true,"nodes":[{"content":"ReadChar(Int64)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[26056,26131],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[26189,26224],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[26335,26413],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[26530,26624],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[26729,26778],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[26887,26929],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[27298,27316],"content":"ReadDecimal(Int64)","needQuote":true,"nodes":[{"content":"ReadDecimal(Int64)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[28100,28175],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[28236,28271],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The decimal to read is invalid.&lt;/p&gt;\\n","pos":[28382,28513],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n<p>-or-</p>\\n<p>The decimal to read is invalid.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[28630,28724],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[28829,28878],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[28987,29029],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[29398,29415],"content":"ReadDouble(Int64)","needQuote":true,"nodes":[{"content":"ReadDouble(Int64)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[30217,30292],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[30352,30387],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[30498,30576],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[30693,30787],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[30892,30941],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[31050,31092],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[31457,31473],"content":"ReadInt16(Int64)","needQuote":true,"nodes":[{"content":"ReadInt16(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[32246,32321],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[32380,32415],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[32526,32604],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[32721,32815],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[32920,32969],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[33078,33120],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[33484,33500],"content":"ReadInt32(Int64)","needQuote":true,"nodes":[{"content":"ReadInt32(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[34273,34348],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[34407,34442],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[34553,34631],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[34748,34842],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[34947,34996],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[35105,35147],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[35511,35527],"content":"ReadInt64(Int64)","needQuote":true,"nodes":[{"content":"ReadInt64(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[36298,36373],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[36432,36467],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[36578,36656],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[36773,36867],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[36972,37021],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[37130,37172],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[37536,37552],"content":"ReadSByte(Int64)","needQuote":true,"nodes":[{"content":"ReadSByte(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[38390,38465],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[38524,38559],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[38670,38748],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[38865,38959],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[39064,39113],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[39222,39264],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[39806,39823],"content":"ReadSingle(Int64)","needQuote":true,"nodes":[{"content":"ReadSingle(Int64)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[40624,40699],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[40759,40794],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[40905,40983],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[41100,41194],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[41299,41348],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[41457,41499],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[41867,41884],"content":"ReadUInt16(Int64)","needQuote":true,"nodes":[{"content":"ReadUInt16(Int64)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[42731,42806],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[42866,42901],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[43012,43090],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[43207,43301],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[43406,43455],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[43564,43606],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[44149,44166],"content":"ReadUInt32(Int64)","needQuote":true,"nodes":[{"content":"ReadUInt32(Int64)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[45013,45088],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[45148,45183],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[45294,45372],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[45489,45583],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[45688,45737],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[45846,45888],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[46431,46448],"content":"ReadUInt64(Int64)","needQuote":true,"nodes":[{"content":"ReadUInt64(Int64)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin reading.&lt;/p&gt;\\n","pos":[47293,47368],"source":"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n"},{"content":"\\n&lt;p&gt;The value that was read.&lt;/p&gt;\\n","pos":[47428,47463],"source":"\\n<p>The value that was read.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to read a value.&lt;/p&gt;\\n","pos":[47574,47652],"source":"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[47769,47863],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support reading.&lt;/p&gt;\\n","pos":[47968,48017],"source":"\\n<p>The accessor does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[48126,48168],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[48741,48762],"content":"Write(Int64, Boolean)","needQuote":true,"nodes":[{"content":"Write(Int64, Boolean)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[49472,49547],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[49612,49642],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[49753,49832],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[49949,50043],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[50148,50197],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[50306,50348],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[50741,50759],"content":"Write(Int64, Byte)","needQuote":true,"nodes":[{"content":"Write(Int64, Byte)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[51460,51535],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[51597,51627],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[51738,51817],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[51934,52028],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[52133,52182],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[52291,52333],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[52723,52741],"content":"Write(Int64, Char)","needQuote":true,"nodes":[{"content":"Write(Int64, Char)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[53519,53594],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[53656,53686],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[53797,53876],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[53993,54087],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[54192,54241],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[54350,54392],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[54791,54812],"content":"Write(Int64, Decimal)","needQuote":true,"nodes":[{"content":"Write(Int64, Decimal)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[55603,55678],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[55743,55773],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The decimal is invalid.&lt;/p&gt;\\n","pos":[55884,56008],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n<p>-or-</p>\\n<p>The decimal is invalid.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[56125,56219],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[56324,56373],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[56482,56524],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[56923,56943],"content":"Write(Int64, Double)","needQuote":true,"nodes":[{"content":"Write(Int64, Double)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[57747,57822],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[57886,57916],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[58027,58106],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[58223,58317],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[58422,58471],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[58580,58622],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[59017,59036],"content":"Write(Int64, Int16)","needQuote":true,"nodes":[{"content":"Write(Int64, Int16)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[59822,59897],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[59960,59990],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[60101,60180],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[60297,60391],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[60496,60545],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[60654,60696],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[61090,61109],"content":"Write(Int64, Int32)","needQuote":true,"nodes":[{"content":"Write(Int64, Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[61895,61970],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[62033,62063],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[62174,62253],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[62370,62464],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[62569,62618],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[62727,62769],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[63163,63182],"content":"Write(Int64, Int64)","needQuote":true,"nodes":[{"content":"Write(Int64, Int64)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[63966,64041],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[64104,64134],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after position to write a value.&lt;/p&gt;\\n","pos":[64245,64315],"source":"\\n<p>There are not enough bytes after position to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[64432,64526],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[64631,64680],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[64789,64831],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[65225,65244],"content":"Write(Int64, SByte)","needQuote":true,"nodes":[{"content":"Write(Int64, SByte)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[66088,66163],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[66226,66256],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[66367,66446],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[66563,66657],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[66762,66811],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[66920,66962],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[67534,67554],"content":"Write(Int64, Single)","needQuote":true,"nodes":[{"content":"Write(Int64, Single)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[68351,68426],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[68490,68520],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[68631,68710],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[68827,68921],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[69026,69075],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[69184,69226],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[69624,69644],"content":"Write(Int64, UInt16)","needQuote":true,"nodes":[{"content":"Write(Int64, UInt16)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[70501,70576],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[70640,70670],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[70781,70860],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[70977,71071],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[71176,71225],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[71334,71376],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[71949,71969],"content":"Write(Int64, UInt32)","needQuote":true,"nodes":[{"content":"Write(Int64, UInt32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[72826,72901],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[72965,72995],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[73106,73185],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[73302,73396],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[73501,73550],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[73659,73701],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[74274,74294],"content":"Write(Int64, UInt64)","needQuote":true,"nodes":[{"content":"Write(Int64, UInt64)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The number of bytes into the accessor at which to begin writing.&lt;/p&gt;\\n","pos":[75149,75224],"source":"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n"},{"content":"\\n&lt;p&gt;The value to write.&lt;/p&gt;\\n","pos":[75288,75318],"source":"\\n<p>The value to write.</p>\\n"},{"content":"\\n&lt;p&gt;There are not enough bytes after &lt;em&gt;position&lt;/em&gt; to write a value.&lt;/p&gt;\\n","pos":[75429,75508],"source":"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero or greater than the capacity of the accessor.&lt;/p&gt;\\n","pos":[75625,75719],"source":"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor does not support writing.&lt;/p&gt;\\n","pos":[75824,75873],"source":"\\n<p>The accessor does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The accessor has been disposed.&lt;/p&gt;\\n","pos":[75982,76024],"source":"\\n<p>The accessor has been disposed.</p>\\n"},{"pos":[76377,76386],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[76526,76532],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76682,76693],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[76868,76878],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[76973,76981],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[77050,77051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77078,77079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77149,77157],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[77226,77227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77254,77255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77438,77452],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[77571,77577],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[77644,77645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77695,77701],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[77761,77762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77845,77851],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[77918,77919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77969,77975],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78035,78036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78250,78272],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[78420,78426],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[78493,78494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78544,78550],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[78611,78612]},{"pos":[78667,78673],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78733,78734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78831,78837],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[78904,78905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78955,78961],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[79022,79023]},{"pos":[79078,79084],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79144,79145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79390,79421],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[79587,79602],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[79678,79679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79729,79735],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[79796,79797]},{"pos":[79852,79858],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79918,79919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80025,80040],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[80116,80117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80167,80173],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[80234,80235]},{"pos":[80290,80296],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[80356,80357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80587,80600],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[80701,80712],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[80784,80785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80812,80813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80886,80897],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[80969,80970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80997,80998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81173,81182],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[81275,81282],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[81350,81351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81378,81379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81448,81455],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[81523,81524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81551,81552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81727,81744],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[81853,81868],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[81944,81945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81972,81973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82050,82065],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[82141,82142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82169,82170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82315,82321],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[82504,82514],"content":"SafeBuffer","needQuote":true,"nodes":[{"content":"SafeBuffer","pos":[0,10]}]},{"pos":[82718,82723],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[82865,82895],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[83108,83118],"content":"FileAccess","needQuote":true,"nodes":[{"content":"FileAccess","pos":[0,10]}]},{"pos":[83282,83289],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[83462,83471],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[83574,83581],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[83633,83634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83661,83662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83736,83743],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[83795,83796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83823,83824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83985,83989],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[84126,84130],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[84270,84277],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[84425,84431],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[84575,84580],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[84721,84726],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84867,84872],"content":"SByte","needQuote":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[85014,85020],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[85165,85171],"content":"UInt16","needQuote":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[85316,85322],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[85467,85473],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[85629,85646],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[85822,85843],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[86037,86064],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[86291,86316],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[86533,86554],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[86744,86767],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]}],"content":"items:\n- uid: System.IO.UnmanagedMemoryAccessor\n  commentId: T:System.IO.UnmanagedMemoryAccessor\n  id: UnmanagedMemoryAccessor\n  parent: System.IO\n  children:\n  - System.IO.UnmanagedMemoryAccessor.#ctor\n  - System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryAccessor.CanRead\n  - System.IO.UnmanagedMemoryAccessor.CanWrite\n  - System.IO.UnmanagedMemoryAccessor.Capacity\n  - System.IO.UnmanagedMemoryAccessor.Dispose\n  - System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)\n  - System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryAccessor.IsOpen\n  - System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryAccessor\n  fullName: System.IO.UnmanagedMemoryAccessor\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UnmanagedMemoryAccessor\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 28\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Provides random access to unmanaged blocks of memory from managed code.</p>\\n\"\n  syntax:\n    content: 'public class UnmanagedMemoryAccessor : IDisposable'\n    content.vb: >-\n      Public Class UnmanagedMemoryAccessor\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: UnmanagedMemoryAccessor\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor\n  commentId: M:System.IO.UnmanagedMemoryAccessor.#ctor\n  id: '#ctor'\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryAccessor()\n  fullName: System.IO.UnmanagedMemoryAccessor.UnmanagedMemoryAccessor()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 40\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryAccessor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: protected UnmanagedMemoryAccessor()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor()\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  id: '#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)'\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(System.Runtime.InteropServices.SafeBuffer, System.Int64, System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 48\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryAccessor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified buffer, offset, and capacity.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public UnmanagedMemoryAccessor(SafeBuffer buffer, long offset, long capacity)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(buffer As SafeBuffer, offset As Long, capacity As Long)\n    parameters:\n    - id: buffer\n      type: System.Runtime.InteropServices.SafeBuffer\n      description: \"\\n<p>The buffer to contain the accessor.</p>\\n\"\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The byte at which to start the accessor.</p>\\n\"\n    - id: capacity\n      type: System.Int64\n      description: \"\\n<p>The size, in bytes, of memory to allocate.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>offset</em> plus <em>capacity</em> is greater than <em>buffer</em>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>capacity</em> is less than zero.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>offset</em> plus <em>capacity</em> would wrap around the high end of the address space.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  id: '#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)'\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)\n  fullName: System.IO.UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(System.Runtime.InteropServices.SafeBuffer, System.Int64, System.Int64, System.IO.FileAccess)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 53\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.UnmanagedMemoryAccessor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified buffer, offset, capacity, and access right.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public UnmanagedMemoryAccessor(SafeBuffer buffer, long offset, long capacity, FileAccess access)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(buffer As SafeBuffer, offset As Long, capacity As Long, access As FileAccess)\n    parameters:\n    - id: buffer\n      type: System.Runtime.InteropServices.SafeBuffer\n      description: \"\\n<p>The buffer to contain the accessor.</p>\\n\"\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The byte at which to start the accessor.</p>\\n\"\n    - id: capacity\n      type: System.Int64\n      description: \"\\n<p>The size, in bytes, of memory to allocate.</p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>The type of access allowed to the memory. The default is <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>offset</em> plus <em>capacity</em> is greater than <em>buffer</em>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>capacity</em> is less than zero.</p>\\n<p>-or-</p>\\n<p>\\n<em>access</em> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration value.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>offset</em> plus <em>capacity</em> would wrap around the high end of the address space.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)\n- uid: System.IO.UnmanagedMemoryAccessor.CanRead\n  commentId: P:System.IO.UnmanagedMemoryAccessor.CanRead\n  id: CanRead\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: CanRead\n  fullName: System.IO.UnmanagedMemoryAccessor.CanRead\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CanRead\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 117\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Determines whether the accessor is readable.</p>\\n\"\n  syntax:\n    content: public bool CanRead { get; }\n    content.vb: Public ReadOnly Property CanRead As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the accessor is readable; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: UnmanagedMemoryAccessor.CanRead\n- uid: System.IO.UnmanagedMemoryAccessor.CanWrite\n  commentId: P:System.IO.UnmanagedMemoryAccessor.CanWrite\n  id: CanWrite\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: CanWrite\n  fullName: System.IO.UnmanagedMemoryAccessor.CanWrite\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CanWrite\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 123\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Determines whether the accessory is writable.</p>\\n\"\n  syntax:\n    content: public bool CanWrite { get; }\n    content.vb: Public ReadOnly Property CanWrite As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the accessor is writable; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: UnmanagedMemoryAccessor.CanWrite\n- uid: System.IO.UnmanagedMemoryAccessor.Capacity\n  commentId: P:System.IO.UnmanagedMemoryAccessor.Capacity\n  id: Capacity\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Capacity\n  fullName: System.IO.UnmanagedMemoryAccessor.Capacity\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Capacity\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 111\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Gets the capacity of the accessor.</p>\\n\"\n  syntax:\n    content: public long Capacity { get; }\n    content.vb: Public ReadOnly Property Capacity As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The capacity of the accessor.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: UnmanagedMemoryAccessor.Capacity\n- uid: System.IO.UnmanagedMemoryAccessor.IsOpen\n  commentId: P:System.IO.UnmanagedMemoryAccessor.IsOpen\n  id: IsOpen\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: IsOpen\n  fullName: System.IO.UnmanagedMemoryAccessor.IsOpen\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsOpen\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 138\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Determines whether the accessor is currently open by a process.</p>\\n\"\n  syntax:\n    content: protected bool IsOpen { get; }\n    content.vb: Protected ReadOnly Property IsOpen As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the accessor is open; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - protected\n  - get\n  modifiers.vb:\n  - Protected\n  - ReadOnly\n  nameWithType: UnmanagedMemoryAccessor.IsOpen\n- uid: System.IO.UnmanagedMemoryAccessor.Dispose\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Dispose\n  id: Dispose\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.IO.UnmanagedMemoryAccessor.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 133\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Releases all resources used by the <xref href=\\\"System.IO.UnmanagedMemoryAccessor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Dispose()\n- uid: System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 129\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.UnmanagedMemoryAccessor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources. </p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: UnmanagedMemoryAccessor.Dispose(Boolean)\n- uid: System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  id: Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Initialize(SafeBuffer, Int64, Int64, FileAccess)\n  fullName: System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer, System.Int64, System.Int64, System.IO.FileAccess)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Initialize\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 58\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Sets the initial values for the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.UnmanagedCode)]\n\n      protected void Initialize(SafeBuffer buffer, long offset, long capacity, FileAccess access)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <SecurityPermission(SecurityAction.Demand, Flags:=SecurityPermissionFlag.UnmanagedCode)>\n\n      Protected Sub Initialize(buffer As SafeBuffer, offset As Long, capacity As Long, access As FileAccess)\n    parameters:\n    - id: buffer\n      type: System.Runtime.InteropServices.SafeBuffer\n      description: \"\\n<p>The buffer to contain the accessor.</p>\\n\"\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The byte at which to start the accessor.</p>\\n\"\n    - id: capacity\n      type: System.Int64\n      description: \"\\n<p>The size, in bytes, of memory to allocate.</p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>The type of access allowed to the memory. The default is <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>offset</em> plus <em>capacity</em> is greater than <em>buffer</em>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>capacity</em> is less than zero.</p>\\n<p>-or-</p>\\n<p>\\n<em>access</em> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration value.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>offset</em> plus <em>capacity</em> would wrap around the high end of the address space.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: UnmanagedMemoryAccessor.Initialize(SafeBuffer, Int64, Int64, FileAccess)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)\n  id: ReadBoolean(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadBoolean(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadBoolean\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 142\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a Boolean value from the accessor.</p>\\n\"\n  syntax:\n    content: public bool ReadBoolean(long position)\n    content.vb: Public Function ReadBoolean(position As Long) As Boolean\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> or <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadBoolean(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)\n  id: ReadByte(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadByte(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadByte\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 150\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a byte value from the accessor.</p>\\n\"\n  syntax:\n    content: public byte ReadByte(long position)\n    content.vb: Public Function ReadByte(position As Long) As Byte\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.Byte\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadByte(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)\n  id: ReadChar(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadChar(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadChar\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 157\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a character from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public char ReadChar(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ReadChar(position As Long) As Char\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadChar(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)\n  id: ReadDecimal(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadDecimal(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadDecimal\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 303\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a decimal value from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public decimal ReadDecimal(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ReadDecimal(position As Long) As Decimal\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n<p>-or-</p>\\n<p>The decimal to read is invalid.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadDecimal(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)\n  id: ReadDouble(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadDouble(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadDouble\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 350\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a double-precision floating-point value from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public double ReadDouble(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ReadDouble(position As Long) As Double\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadDouble(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)\n  id: ReadInt16(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadInt16(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadInt16\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 194\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a 16-bit integer from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public short ReadInt16(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ReadInt16(position As Long) As Short\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.Int16\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadInt16(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)\n  id: ReadInt32(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadInt32(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadInt32\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 231\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a 32-bit integer from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public int ReadInt32(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ReadInt32(position As Long) As Integer\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadInt32(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)\n  id: ReadInt64(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadInt64(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadInt64\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 266\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a 64-bit integer from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public long ReadInt64(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ReadInt64(position As Long) As Long\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadInt64(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)\n  id: ReadSByte(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadSByte(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadSByte\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 390\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads an 8-bit signed integer from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [CLSCompliant(false)]\n\n      public sbyte ReadSByte(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <CLSCompliant(False)>\n\n      Public Function ReadSByte(position As Long) As SByte\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.SByte\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadSByte(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)\n  id: ReadSingle(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadSingle(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadSingle\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 314\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads a single-precision floating-point value from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public float ReadSingle(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ReadSingle(position As Long) As Single\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadSingle(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)\n  id: ReadUInt16(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadUInt16(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadUInt16\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 415\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads an unsigned 16-bit integer from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [CLSCompliant(false)]\n\n      public ushort ReadUInt16(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <CLSCompliant(False)>\n\n      Public Function ReadUInt16(position As Long) As UShort\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.UInt16\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt16(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)\n  id: ReadUInt32(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadUInt32(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadUInt32\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 452\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads an unsigned 32-bit integer from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [CLSCompliant(false)]\n\n      public uint ReadUInt32(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <CLSCompliant(False)>\n\n      Public Function ReadUInt32(position As Long) As UInteger\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.UInt32\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt32(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)\n  id: ReadUInt64(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: ReadUInt64(Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadUInt64\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 489\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Reads an unsigned 64-bit integer from the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [CLSCompliant(false)]\n\n      public ulong ReadUInt64(long position)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <CLSCompliant(False)>\n\n      Public Function ReadUInt64(position As Long) As ULong\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin reading.</p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>The value that was read.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to read a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt64(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)\n  id: Write(System.Int64,System.Boolean)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Boolean)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 634\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a Boolean value into the accessor.</p>\\n\"\n  syntax:\n    content: public void Write(long position, bool value)\n    content.vb: Public Sub Write(position As Long, value As Boolean)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.Boolean\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Boolean)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)\n  id: Write(System.Int64,System.Byte)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Byte)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Byte)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 642\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a byte value into the accessor.</p>\\n\"\n  syntax:\n    content: public void Write(long position, byte value)\n    content.vb: Public Sub Write(position As Long, value As Byte)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.Byte\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Byte)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)\n  id: Write(System.Int64,System.Char)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Char)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 649\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a character into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void Write(long position, char value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub Write(position As Long, value As Char)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Char)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)\n  id: Write(System.Int64,System.Decimal)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Decimal)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Decimal)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 791\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a decimal value into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void Write(long position, decimal value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub Write(position As Long, value As Decimal)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.Decimal\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n<p>-or-</p>\\n<p>The decimal is invalid.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Decimal)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)\n  id: Write(System.Int64,System.Double)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Double)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 848\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a <strong>Double</strong> value into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void Write(long position, double value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub Write(position As Long, value As Double)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.Double\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Double)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)\n  id: Write(System.Int64,System.Int16)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Int16)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Int16)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 684\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a 16-bit integer into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void Write(long position, short value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub Write(position As Long, value As Short)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.Int16\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int16)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)\n  id: Write(System.Int64,System.Int32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Int32)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 718\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a 32-bit integer into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void Write(long position, int value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub Write(position As Long, value As Integer)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.Int32\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int32)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)\n  id: Write(System.Int64,System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Int64)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 753\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a 64-bit integer into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void Write(long position, long value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub Write(position As Long, value As Long)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after position to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)\n  id: Write(System.Int64,System.SByte)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, SByte)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.SByte)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 888\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes an 8-bit integer into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [CLSCompliant(false)]\n\n      public void Write(long position, sbyte value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <CLSCompliant(False)>\n\n      Public Sub Write(position As Long, value As SByte)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.SByte\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, SByte)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)\n  id: Write(System.Int64,System.Single)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Single)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 812\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes a <strong>Single</strong> into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void Write(long position, float value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub Write(position As Long, value As Single)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.Single\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Single)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)\n  id: Write(System.Int64,System.UInt16)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, UInt16)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.UInt16)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 910\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes an unsigned 16-bit integer into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [CLSCompliant(false)]\n\n      public void Write(long position, ushort value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <CLSCompliant(False)>\n\n      Public Sub Write(position As Long, value As UShort)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.UInt16\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt16)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)\n  id: Write(System.Int64,System.UInt32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, UInt32)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.UInt32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 944\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes an unsigned 32-bit integer into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [CLSCompliant(false)]\n\n      public void Write(long position, uint value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <CLSCompliant(False)>\n\n      Public Sub Write(position As Long, value As UInteger)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.UInt32\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt32)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)\n  id: Write(System.Int64,System.UInt64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, UInt64)\n  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.UInt64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/UnmanagedMemoryAccessor.cs\n    startLine: 981\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  namespace: System.IO\n  summary: \"\\n<p>Writes an unsigned 64-bit integer into the accessor.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [CLSCompliant(false)]\n\n      public void Write(long position, ulong value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <CLSCompliant(False)>\n\n      Public Sub Write(position As Long, value As ULong)\n    parameters:\n    - id: position\n      type: System.Int64\n      description: \"\\n<p>The number of bytes into the accessor at which to begin writing.</p>\\n\"\n    - id: value\n      type: System.UInt64\n      description: \"\\n<p>The value to write.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are not enough bytes after <em>position</em> to write a value.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>position</em> is less than zero or greater than the capacity of the accessor.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The accessor does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The accessor has been disposed.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt64)\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.InteropServices.SafeBuffer\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeBuffer\n  fullName: System.Runtime.InteropServices.SafeBuffer\n  nameWithType: SafeBuffer\n  commentId: T:System.Runtime.InteropServices.SafeBuffer\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  fullName: System.IO.FileAccess\n  nameWithType: FileAccess\n  commentId: T:System.IO.FileAccess\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  nameWithType: Int16\n  commentId: T:System.Int16\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  fullName: System.SByte\n  nameWithType: SByte\n  commentId: T:System.SByte\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  fullName: System.UInt16\n  nameWithType: UInt16\n  commentId: T:System.UInt16\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  nameWithType: UInt32\n  commentId: T:System.UInt32\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  fullName: System.UInt64\n  nameWithType: UInt64\n  commentId: T:System.UInt64\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n"}