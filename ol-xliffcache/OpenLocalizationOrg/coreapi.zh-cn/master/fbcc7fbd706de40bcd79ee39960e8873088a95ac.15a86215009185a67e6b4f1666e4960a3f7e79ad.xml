{"nodes":[{"pos":[2253,2279],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[2501,2515],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[2802,2813],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[2907,2908],"content":"<","needQuote":true,"nodes":[]},{"pos":[2955,2956],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[3118,3129],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[3224,3227]},{"pos":[3286,3287],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[3334,3335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3502,3514],"content":"IComparer<T>","needQuote":true,"nodes":[{"content":"IComparer&lt;T&gt;","pos":[0,12],"source":"IComparer<T>"}]},{"pos":[3789,3798],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[3888,3889],"content":"<","needQuote":true,"nodes":[]},{"pos":[3936,3937],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4097,4106],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[4197,4200]},{"pos":[4259,4260],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4307,4308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4475,4500],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[4842,4853],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[4947,4948],"content":"<","needQuote":true,"nodes":[]},{"pos":[4995,4999],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[5053,5054]},{"pos":[5109,5115],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[5287,5298],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[5393,5396]},{"pos":[5455,5459],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[5513,5514]},{"pos":[5569,5575],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[5632,5633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5802,5816],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[6103,6114],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[6208,6209],"content":"<","needQuote":true,"nodes":[]},{"pos":[6256,6257],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[6419,6430],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[6525,6528]},{"pos":[6587,6588],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[6635,6636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6805,6819],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[7106,7117],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[7211,7212],"content":"<","needQuote":true,"nodes":[]},{"pos":[7259,7260],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[7422,7433],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[7528,7531]},{"pos":[7590,7591],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[7638,7639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7814,7834],"content":"IEqualityComparer<T>","needQuote":true,"nodes":[{"content":"IEqualityComparer&lt;T&gt;","pos":[0,20],"source":"IEqualityComparer<T>"}]},{"pos":[8157,8174],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[8280,8281],"content":"<","needQuote":true,"nodes":[]},{"pos":[8328,8329],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[8497,8514],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[8621,8624]},{"pos":[8683,8684],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[8731,8732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8901,8909],"content":"IList<T>","needQuote":true,"nodes":[{"content":"IList&lt;T&gt;","pos":[0,8],"source":"IList<T>"}]},{"pos":[9160,9165],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[9247,9248],"content":"<","needQuote":true,"nodes":[]},{"pos":[9295,9296],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[9452,9457],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[9540,9543]},{"pos":[9602,9603],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[9650,9651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9822,9844],"content":"IReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;T&gt;","pos":[0,22],"source":"IReadOnlyCollection<T>"}]},{"pos":[10179,10198],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[10308,10309],"content":"<","needQuote":true,"nodes":[]},{"pos":[10356,10357],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[10527,10546],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[10657,10660]},{"pos":[10719,10720],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[10767,10768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10953,10986],"content":"IReadOnlyDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;","pos":[0,33],"source":"IReadOnlyDictionary<TKey, TValue>"}]},{"pos":[11376,11395],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"pos":[11505,11506],"content":"<","needQuote":true,"nodes":[]},{"pos":[11553,11557],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[11611,11612]},{"pos":[11667,11673],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[11853,11872],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"content":"(Of","pos":[11983,11986]},{"pos":[12045,12049],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[12103,12104]},{"pos":[12159,12165],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[12222,12223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12402,12418],"content":"IReadOnlyList<T>","needQuote":true,"nodes":[{"content":"IReadOnlyList&lt;T&gt;","pos":[0,16],"source":"IReadOnlyList<T>"}]},{"pos":[12717,12730],"content":"IReadOnlyList","needQuote":true,"nodes":[{"content":"IReadOnlyList","pos":[0,13]}]},{"pos":[12828,12829],"content":"<","needQuote":true,"nodes":[]},{"pos":[12876,12877],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13041,13054],"content":"IReadOnlyList","needQuote":true,"nodes":[{"content":"IReadOnlyList","pos":[0,13]}]},{"content":"(Of","pos":[13153,13156]},{"pos":[13215,13216],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13263,13264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13428,13435],"content":"ISet<T>","needQuote":true,"nodes":[{"content":"ISet&lt;T&gt;","pos":[0,7],"source":"ISet<T>"}]},{"pos":[13680,13684],"content":"ISet","needQuote":true,"nodes":[{"content":"ISet","pos":[0,4]}]},{"pos":[13764,13765],"content":"<","needQuote":true,"nodes":[]},{"pos":[13812,13813],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13968,13972],"content":"ISet","needQuote":true,"nodes":[{"content":"ISet","pos":[0,4]}]},{"content":"(Of","pos":[14053,14056]},{"pos":[14115,14116],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[14163,14164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14333,14353],"content":"KeyNotFoundException","needQuote":true,"nodes":[{"content":"KeyNotFoundException","pos":[0,20]}]},{"pos":[14591,14617],"content":"KeyValuePair<TKey, TValue>","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;","pos":[0,26],"source":"KeyValuePair<TKey, TValue>"}]},{"pos":[14965,14977],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[15073,15074],"content":"<","needQuote":true,"nodes":[]},{"pos":[15121,15125],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[15179,15180]},{"pos":[15235,15241],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[15414,15426],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[15523,15526]},{"pos":[15585,15589],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[15643,15644]},{"pos":[15699,15705],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[15762,15763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15967,15978],"content":"Comparer<T>","needQuote":true,"nodes":[{"content":"Comparer&lt;T&gt;","pos":[0,11],"source":"Comparer<T>"}]},{"pos":[16247,16255],"content":"Comparer","needQuote":true,"nodes":[{"content":"Comparer","pos":[0,8]}]},{"pos":[16343,16344],"content":"<","needQuote":true,"nodes":[]},{"pos":[16391,16392],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[16551,16559],"content":"Comparer","needQuote":true,"nodes":[{"content":"Comparer","pos":[0,8]}]},{"content":"(Of","pos":[16648,16651]},{"pos":[16710,16711],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[16758,16759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16961,16985],"content":"Dictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"Dictionary&lt;TKey, TValue&gt;","pos":[0,24],"source":"Dictionary<TKey, TValue>"}]},{"pos":[17321,17331],"content":"Dictionary","needQuote":true,"nodes":[{"content":"Dictionary","pos":[0,10]}]},{"pos":[17423,17424],"content":"<","needQuote":true,"nodes":[]},{"pos":[17471,17475],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[17529,17530]},{"pos":[17585,17591],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[17762,17772],"content":"Dictionary","needQuote":true,"nodes":[{"content":"Dictionary","pos":[0,10]}]},{"content":"(Of","pos":[17865,17868]},{"pos":[17927,17931],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[17985,17986]},{"pos":[18041,18047],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[18104,18105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18320,18343],"content":"Dictionary.Enumerator<>","needQuote":true,"nodes":[{"content":"Dictionary.Enumerator&lt;&gt;","pos":[0,23],"source":"Dictionary.Enumerator<>"}]},{"pos":[18685,18706],"content":"Dictionary.Enumerator","needQuote":true,"nodes":[{"content":"Dictionary.Enumerator","pos":[0,21]}]},{"pos":[18820,18821],"content":"<","needQuote":true,"nodes":[]},{"pos":[18993,19014],"content":"Dictionary.Enumerator","needQuote":true,"nodes":[{"content":"Dictionary.Enumerator","pos":[0,21]}]},{"content":"(Of","pos":[19129,19132]},{"pos":[19191,19192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19421,19447],"content":"Dictionary.KeyCollection<>","needQuote":true,"nodes":[{"content":"Dictionary.KeyCollection&lt;&gt;","pos":[0,26],"source":"Dictionary.KeyCollection<>"}]},{"pos":[19807,19831],"content":"Dictionary.KeyCollection","needQuote":true,"nodes":[{"content":"Dictionary.KeyCollection","pos":[0,24]}]},{"pos":[19951,19952],"content":"<","needQuote":true,"nodes":[]},{"pos":[20127,20151],"content":"Dictionary.KeyCollection","needQuote":true,"nodes":[{"content":"Dictionary.KeyCollection","pos":[0,24]}]},{"content":"(Of","pos":[20272,20275]},{"pos":[20334,20335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20578,20615],"content":"Dictionary.KeyCollection.Enumerator<>","needQuote":true,"nodes":[{"content":"Dictionary.KeyCollection.Enumerator&lt;&gt;","pos":[0,37],"source":"Dictionary.KeyCollection.Enumerator<>"}]},{"pos":[21041,21076],"content":"Dictionary.KeyCollection.Enumerator","needQuote":true,"nodes":[{"content":"Dictionary.KeyCollection.Enumerator","pos":[0,35]}]},{"pos":[21218,21219],"content":"<","needQuote":true,"nodes":[]},{"pos":[21405,21440],"content":"Dictionary.KeyCollection.Enumerator","needQuote":true,"nodes":[{"content":"Dictionary.KeyCollection.Enumerator","pos":[0,35]}]},{"content":"(Of","pos":[21583,21586]},{"pos":[21645,21646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21891,21919],"content":"Dictionary.ValueCollection<>","needQuote":true,"nodes":[{"content":"Dictionary.ValueCollection&lt;&gt;","pos":[0,28],"source":"Dictionary.ValueCollection<>"}]},{"pos":[22291,22317],"content":"Dictionary.ValueCollection","needQuote":true,"nodes":[{"content":"Dictionary.ValueCollection","pos":[0,26]}]},{"pos":[22441,22442],"content":"<","needQuote":true,"nodes":[]},{"pos":[22619,22645],"content":"Dictionary.ValueCollection","needQuote":true,"nodes":[{"content":"Dictionary.ValueCollection","pos":[0,26]}]},{"content":"(Of","pos":[22770,22773]},{"pos":[22832,22833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23080,23119],"content":"Dictionary.ValueCollection.Enumerator<>","needQuote":true,"nodes":[{"content":"Dictionary.ValueCollection.Enumerator&lt;&gt;","pos":[0,39],"source":"Dictionary.ValueCollection.Enumerator<>"}]},{"pos":[23557,23594],"content":"Dictionary.ValueCollection.Enumerator","needQuote":true,"nodes":[{"content":"Dictionary.ValueCollection.Enumerator","pos":[0,37]}]},{"pos":[23740,23741],"content":"<","needQuote":true,"nodes":[]},{"pos":[23929,23966],"content":"Dictionary.ValueCollection.Enumerator","needQuote":true,"nodes":[{"content":"Dictionary.ValueCollection.Enumerator","pos":[0,37]}]},{"content":"(Of","pos":[24113,24116]},{"pos":[24175,24176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24413,24432],"content":"EqualityComparer<T>","needQuote":true,"nodes":[{"content":"EqualityComparer&lt;T&gt;","pos":[0,19],"source":"EqualityComparer<T>"}]},{"pos":[24749,24765],"content":"EqualityComparer","needQuote":true,"nodes":[{"content":"EqualityComparer","pos":[0,16]}]},{"pos":[24869,24870],"content":"<","needQuote":true,"nodes":[]},{"pos":[24917,24918],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[25085,25101],"content":"EqualityComparer","needQuote":true,"nodes":[{"content":"EqualityComparer","pos":[0,16]}]},{"content":"(Of","pos":[25206,25209]},{"pos":[25268,25269],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[25316,25317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25487,25497],"content":"HashSet<T>","needQuote":true,"nodes":[{"content":"HashSet&lt;T&gt;","pos":[0,10],"source":"HashSet<T>"}]},{"pos":[25760,25767],"content":"HashSet","needQuote":true,"nodes":[{"content":"HashSet","pos":[0,7]}]},{"pos":[25853,25854],"content":"<","needQuote":true,"nodes":[]},{"pos":[25901,25902],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26060,26067],"content":"HashSet","needQuote":true,"nodes":[{"content":"HashSet","pos":[0,7]}]},{"content":"(Of","pos":[26154,26157]},{"pos":[26216,26217],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26264,26265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26474,26494],"content":"HashSet.Enumerator<>","needQuote":true,"nodes":[{"content":"HashSet.Enumerator&lt;&gt;","pos":[0,20],"source":"HashSet.Enumerator<>"}]},{"pos":[26818,26836],"content":"HashSet.Enumerator","needQuote":true,"nodes":[{"content":"HashSet.Enumerator","pos":[0,18]}]},{"pos":[26944,26945],"content":"<","needQuote":true,"nodes":[]},{"pos":[27114,27132],"content":"HashSet.Enumerator","needQuote":true,"nodes":[{"content":"HashSet.Enumerator","pos":[0,18]}]},{"content":"(Of","pos":[27241,27244]},{"pos":[27303,27304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27479,27492],"content":"LinkedList<T>","needQuote":true,"nodes":[{"content":"LinkedList&lt;T&gt;","pos":[0,13],"source":"LinkedList<T>"}]},{"pos":[27773,27783],"content":"LinkedList","needQuote":true,"nodes":[{"content":"LinkedList","pos":[0,10]}]},{"pos":[27875,27876],"content":"<","needQuote":true,"nodes":[]},{"pos":[27923,27924],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28085,28095],"content":"LinkedList","needQuote":true,"nodes":[{"content":"LinkedList","pos":[0,10]}]},{"content":"(Of","pos":[28188,28191]},{"pos":[28250,28251],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28298,28299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28514,28537],"content":"LinkedList.Enumerator<>","needQuote":true,"nodes":[{"content":"LinkedList.Enumerator&lt;&gt;","pos":[0,23],"source":"LinkedList.Enumerator<>"}]},{"pos":[28879,28900],"content":"LinkedList.Enumerator","needQuote":true,"nodes":[{"content":"LinkedList.Enumerator","pos":[0,21]}]},{"pos":[29014,29015],"content":"<","needQuote":true,"nodes":[]},{"pos":[29187,29208],"content":"LinkedList.Enumerator","needQuote":true,"nodes":[{"content":"LinkedList.Enumerator","pos":[0,21]}]},{"content":"(Of","pos":[29323,29326]},{"pos":[29385,29386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29605,29622],"content":"LinkedListNode<T>","needQuote":true,"nodes":[{"content":"LinkedListNode&lt;T&gt;","pos":[0,17],"source":"LinkedListNode<T>"}]},{"pos":[29927,29941],"content":"LinkedListNode","needQuote":true,"nodes":[{"content":"LinkedListNode","pos":[0,14]}]},{"pos":[30041,30042],"content":"<","needQuote":true,"nodes":[]},{"pos":[30089,30090],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[30255,30269],"content":"LinkedListNode","needQuote":true,"nodes":[{"content":"LinkedListNode","pos":[0,14]}]},{"content":"(Of","pos":[30370,30373]},{"pos":[30432,30433],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[30480,30481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30683,30690],"content":"List<T>","needQuote":true,"nodes":[{"content":"List&lt;T&gt;","pos":[0,7],"source":"List<T>"}]},{"pos":[30935,30939],"content":"List","needQuote":true,"nodes":[{"content":"List","pos":[0,4]}]},{"pos":[31019,31020],"content":"<","needQuote":true,"nodes":[]},{"pos":[31067,31068],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[31223,31227],"content":"List","needQuote":true,"nodes":[{"content":"List","pos":[0,4]}]},{"content":"(Of","pos":[31308,31311]},{"pos":[31370,31371],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[31418,31419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31622,31639],"content":"List.Enumerator<>","needQuote":true,"nodes":[{"content":"List.Enumerator&lt;&gt;","pos":[0,17],"source":"List.Enumerator<>"}]},{"pos":[31945,31960],"content":"List.Enumerator","needQuote":true,"nodes":[{"content":"List.Enumerator","pos":[0,15]}]},{"pos":[32062,32063],"content":"<","needQuote":true,"nodes":[]},{"pos":[32229,32244],"content":"List.Enumerator","needQuote":true,"nodes":[{"content":"List.Enumerator","pos":[0,15]}]},{"content":"(Of","pos":[32347,32350]},{"pos":[32409,32410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32577,32585],"content":"Queue<T>","needQuote":true,"nodes":[{"content":"Queue&lt;T&gt;","pos":[0,8],"source":"Queue<T>"}]},{"pos":[32836,32841],"content":"Queue","needQuote":true,"nodes":[{"content":"Queue","pos":[0,5]}]},{"pos":[32923,32924],"content":"<","needQuote":true,"nodes":[]},{"pos":[32971,32972],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33128,33133],"content":"Queue","needQuote":true,"nodes":[{"content":"Queue","pos":[0,5]}]},{"content":"(Of","pos":[33216,33219]},{"pos":[33278,33279],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33326,33327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33532,33550],"content":"Queue.Enumerator<>","needQuote":true,"nodes":[{"content":"Queue.Enumerator&lt;&gt;","pos":[0,18],"source":"Queue.Enumerator<>"}]},{"pos":[33862,33878],"content":"Queue.Enumerator","needQuote":true,"nodes":[{"content":"Queue.Enumerator","pos":[0,16]}]},{"pos":[33982,33983],"content":"<","needQuote":true,"nodes":[]},{"pos":[34150,34166],"content":"Queue.Enumerator","needQuote":true,"nodes":[{"content":"Queue.Enumerator","pos":[0,16]}]},{"content":"(Of","pos":[34271,34274]},{"pos":[34333,34334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34550,34580],"content":"SortedDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"SortedDictionary&lt;TKey, TValue&gt;","pos":[0,30],"source":"SortedDictionary<TKey, TValue>"}]},{"pos":[34952,34968],"content":"SortedDictionary","needQuote":true,"nodes":[{"content":"SortedDictionary","pos":[0,16]}]},{"pos":[35072,35073],"content":"<","needQuote":true,"nodes":[]},{"pos":[35120,35124],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[35178,35179]},{"pos":[35234,35240],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[35417,35433],"content":"SortedDictionary","needQuote":true,"nodes":[{"content":"SortedDictionary","pos":[0,16]}]},{"content":"(Of","pos":[35538,35541]},{"pos":[35600,35604],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[35658,35659]},{"pos":[35714,35720],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[35777,35778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36005,36034],"content":"SortedDictionary.Enumerator<>","needQuote":true,"nodes":[{"content":"SortedDictionary.Enumerator&lt;&gt;","pos":[0,29],"source":"SortedDictionary.Enumerator<>"}]},{"pos":[36412,36439],"content":"SortedDictionary.Enumerator","needQuote":true,"nodes":[{"content":"SortedDictionary.Enumerator","pos":[0,27]}]},{"pos":[36565,36566],"content":"<","needQuote":true,"nodes":[]},{"pos":[36744,36771],"content":"SortedDictionary.Enumerator","needQuote":true,"nodes":[{"content":"SortedDictionary.Enumerator","pos":[0,27]}]},{"content":"(Of","pos":[36898,36901]},{"pos":[36960,36961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37202,37234],"content":"SortedDictionary.KeyCollection<>","needQuote":true,"nodes":[{"content":"SortedDictionary.KeyCollection&lt;&gt;","pos":[0,32],"source":"SortedDictionary.KeyCollection<>"}]},{"pos":[37630,37660],"content":"SortedDictionary.KeyCollection","needQuote":true,"nodes":[{"content":"SortedDictionary.KeyCollection","pos":[0,30]}]},{"pos":[37792,37793],"content":"<","needQuote":true,"nodes":[]},{"pos":[37974,38004],"content":"SortedDictionary.KeyCollection","needQuote":true,"nodes":[{"content":"SortedDictionary.KeyCollection","pos":[0,30]}]},{"content":"(Of","pos":[38137,38140]},{"pos":[38199,38200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38455,38498],"content":"SortedDictionary.KeyCollection.Enumerator<>","needQuote":true,"nodes":[{"content":"SortedDictionary.KeyCollection.Enumerator&lt;&gt;","pos":[0,43],"source":"SortedDictionary.KeyCollection.Enumerator<>"}]},{"pos":[38960,39001],"content":"SortedDictionary.KeyCollection.Enumerator","needQuote":true,"nodes":[{"content":"SortedDictionary.KeyCollection.Enumerator","pos":[0,41]}]},{"pos":[39155,39156],"content":"<","needQuote":true,"nodes":[]},{"pos":[39348,39389],"content":"SortedDictionary.KeyCollection.Enumerator","needQuote":true,"nodes":[{"content":"SortedDictionary.KeyCollection.Enumerator","pos":[0,41]}]},{"content":"(Of","pos":[39544,39547]},{"pos":[39606,39607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39864,39898],"content":"SortedDictionary.ValueCollection<>","needQuote":true,"nodes":[{"content":"SortedDictionary.ValueCollection&lt;&gt;","pos":[0,34],"source":"SortedDictionary.ValueCollection<>"}]},{"pos":[40306,40338],"content":"SortedDictionary.ValueCollection","needQuote":true,"nodes":[{"content":"SortedDictionary.ValueCollection","pos":[0,32]}]},{"pos":[40474,40475],"content":"<","needQuote":true,"nodes":[]},{"pos":[40658,40690],"content":"SortedDictionary.ValueCollection","needQuote":true,"nodes":[{"content":"SortedDictionary.ValueCollection","pos":[0,32]}]},{"content":"(Of","pos":[40827,40830]},{"pos":[40889,40890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41149,41194],"content":"SortedDictionary.ValueCollection.Enumerator<>","needQuote":true,"nodes":[{"content":"SortedDictionary.ValueCollection.Enumerator&lt;&gt;","pos":[0,45],"source":"SortedDictionary.ValueCollection.Enumerator<>"}]},{"pos":[41668,41711],"content":"SortedDictionary.ValueCollection.Enumerator","needQuote":true,"nodes":[{"content":"SortedDictionary.ValueCollection.Enumerator","pos":[0,43]}]},{"pos":[41869,41870],"content":"<","needQuote":true,"nodes":[]},{"pos":[42064,42107],"content":"SortedDictionary.ValueCollection.Enumerator","needQuote":true,"nodes":[{"content":"SortedDictionary.ValueCollection.Enumerator","pos":[0,43]}]},{"content":"(Of","pos":[42266,42269]},{"pos":[42328,42329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42529,42553],"content":"SortedList<TKey, TValue>","needQuote":true,"nodes":[{"content":"SortedList&lt;TKey, TValue&gt;","pos":[0,24],"source":"SortedList<TKey, TValue>"}]},{"pos":[42889,42899],"content":"SortedList","needQuote":true,"nodes":[{"content":"SortedList","pos":[0,10]}]},{"pos":[42991,42992],"content":"<","needQuote":true,"nodes":[]},{"pos":[43039,43043],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[43097,43098]},{"pos":[43153,43159],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[43330,43340],"content":"SortedList","needQuote":true,"nodes":[{"content":"SortedList","pos":[0,10]}]},{"content":"(Of","pos":[43433,43436]},{"pos":[43495,43499],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[43553,43554]},{"pos":[43609,43615],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[43672,43673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43876,43888],"content":"SortedSet<T>","needQuote":true,"nodes":[{"content":"SortedSet&lt;T&gt;","pos":[0,12],"source":"SortedSet<T>"}]},{"pos":[44163,44172],"content":"SortedSet","needQuote":true,"nodes":[{"content":"SortedSet","pos":[0,9]}]},{"pos":[44262,44263],"content":"<","needQuote":true,"nodes":[]},{"pos":[44310,44311],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[44471,44480],"content":"SortedSet","needQuote":true,"nodes":[{"content":"SortedSet","pos":[0,9]}]},{"content":"(Of","pos":[44571,44574]},{"pos":[44633,44634],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[44681,44682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44895,44917],"content":"SortedSet.Enumerator<>","needQuote":true,"nodes":[{"content":"SortedSet.Enumerator&lt;&gt;","pos":[0,22],"source":"SortedSet.Enumerator<>"}]},{"pos":[45253,45273],"content":"SortedSet.Enumerator","needQuote":true,"nodes":[{"content":"SortedSet.Enumerator","pos":[0,20]}]},{"pos":[45385,45386],"content":"<","needQuote":true,"nodes":[]},{"pos":[45557,45577],"content":"SortedSet.Enumerator","needQuote":true,"nodes":[{"content":"SortedSet.Enumerator","pos":[0,20]}]},{"content":"(Of","pos":[45690,45693]},{"pos":[45752,45753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45925,45933],"content":"Stack<T>","needQuote":true,"nodes":[{"content":"Stack&lt;T&gt;","pos":[0,8],"source":"Stack<T>"}]},{"pos":[46184,46189],"content":"Stack","needQuote":true,"nodes":[{"content":"Stack","pos":[0,5]}]},{"pos":[46271,46272],"content":"<","needQuote":true,"nodes":[]},{"pos":[46319,46320],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[46476,46481],"content":"Stack","needQuote":true,"nodes":[{"content":"Stack","pos":[0,5]}]},{"content":"(Of","pos":[46564,46567]},{"pos":[46626,46627],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[46674,46675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46880,46898],"content":"Stack.Enumerator<>","needQuote":true,"nodes":[{"content":"Stack.Enumerator&lt;&gt;","pos":[0,18],"source":"Stack.Enumerator<>"}]},{"pos":[47210,47226],"content":"Stack.Enumerator","needQuote":true,"nodes":[{"content":"Stack.Enumerator","pos":[0,16]}]},{"pos":[47330,47331],"content":"<","needQuote":true,"nodes":[]},{"pos":[47498,47514],"content":"Stack.Enumerator","needQuote":true,"nodes":[{"content":"Stack.Enumerator","pos":[0,16]}]},{"content":"(Of","pos":[47619,47622]},{"pos":[47681,47682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47842,47868],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]}],"content":"items:\n- uid: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  id: System.Collections.Generic\n  children:\n  - System.Collections.Generic.Comparer`1\n  - System.Collections.Generic.Dictionary`2\n  - System.Collections.Generic.Dictionary`2.Enumerator\n  - System.Collections.Generic.Dictionary`2.KeyCollection\n  - System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator\n  - System.Collections.Generic.Dictionary`2.ValueCollection\n  - System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  - System.Collections.Generic.EqualityComparer`1\n  - System.Collections.Generic.HashSet`1\n  - System.Collections.Generic.HashSet`1.Enumerator\n  - System.Collections.Generic.ICollection`1\n  - System.Collections.Generic.IComparer`1\n  - System.Collections.Generic.IDictionary`2\n  - System.Collections.Generic.IEnumerable`1\n  - System.Collections.Generic.IEnumerator`1\n  - System.Collections.Generic.IEqualityComparer`1\n  - System.Collections.Generic.IList`1\n  - System.Collections.Generic.IReadOnlyCollection`1\n  - System.Collections.Generic.IReadOnlyDictionary`2\n  - System.Collections.Generic.IReadOnlyList`1\n  - System.Collections.Generic.ISet`1\n  - System.Collections.Generic.KeyNotFoundException\n  - System.Collections.Generic.KeyValuePair`2\n  - System.Collections.Generic.LinkedList`1\n  - System.Collections.Generic.LinkedList`1.Enumerator\n  - System.Collections.Generic.LinkedListNode`1\n  - System.Collections.Generic.List`1\n  - System.Collections.Generic.List`1.Enumerator\n  - System.Collections.Generic.Queue`1\n  - System.Collections.Generic.Queue`1.Enumerator\n  - System.Collections.Generic.SortedDictionary`2\n  - System.Collections.Generic.SortedDictionary`2.Enumerator\n  - System.Collections.Generic.SortedDictionary`2.KeyCollection\n  - System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  - System.Collections.Generic.SortedList`2\n  - System.Collections.Generic.SortedSet`1\n  - System.Collections.Generic.SortedSet`1.Enumerator\n  - System.Collections.Generic.Stack`1\n  - System.Collections.Generic.Stack`1.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  fullName: System.Collections.Generic\n  type: Namespace\n  assemblies:\n  - System.Runtime\nreferences:\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection`1\n- uid: System.Collections.Generic.IComparer`1\n  isExternal: false\n  name: IComparer<T>\n  nameWithType: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n  nameWithType.vb: IComparer(Of T)\n  fullname.vb: System.Collections.Generic.IComparer(Of T)\n  name.vb: IComparer(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    nameWithType: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    nameWithType: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IComparer`1\n- uid: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: IDictionary<TKey, TValue>\n  nameWithType: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IDictionary`2\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerator`1\n- uid: System.Collections.Generic.IEqualityComparer`1\n  isExternal: false\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n  nameWithType.vb: IEqualityComparer(Of T)\n  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)\n  name.vb: IEqualityComparer(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    nameWithType: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    nameWithType: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEqualityComparer`1\n- uid: System.Collections.Generic.IList`1\n  isExternal: false\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n  nameWithType.vb: IList(Of T)\n  fullname.vb: System.Collections.Generic.IList(Of T)\n  name.vb: IList(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IList`1\n- uid: System.Collections.Generic.IReadOnlyCollection`1\n  isExternal: false\n  name: IReadOnlyCollection<T>\n  nameWithType: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n  nameWithType.vb: IReadOnlyCollection(Of T)\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)\n  name.vb: IReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    nameWithType: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    nameWithType: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IReadOnlyCollection`1\n- uid: System.Collections.Generic.IReadOnlyDictionary`2\n  isExternal: false\n  name: IReadOnlyDictionary<TKey, TValue>\n  nameWithType: IReadOnlyDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)\n  name.vb: IReadOnlyDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    nameWithType: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    nameWithType: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2\n- uid: System.Collections.Generic.IReadOnlyList`1\n  isExternal: false\n  name: IReadOnlyList<T>\n  nameWithType: IReadOnlyList<T>\n  fullName: System.Collections.Generic.IReadOnlyList<T>\n  nameWithType.vb: IReadOnlyList(Of T)\n  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)\n  name.vb: IReadOnlyList(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyList`1\n    name: IReadOnlyList\n    nameWithType: IReadOnlyList\n    fullName: System.Collections.Generic.IReadOnlyList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyList`1\n    name: IReadOnlyList\n    nameWithType: IReadOnlyList\n    fullName: System.Collections.Generic.IReadOnlyList\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IReadOnlyList`1\n- uid: System.Collections.Generic.ISet`1\n  isExternal: false\n  name: ISet<T>\n  nameWithType: ISet<T>\n  fullName: System.Collections.Generic.ISet<T>\n  nameWithType.vb: ISet(Of T)\n  fullname.vb: System.Collections.Generic.ISet(Of T)\n  name.vb: ISet(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ISet`1\n    name: ISet\n    nameWithType: ISet\n    fullName: System.Collections.Generic.ISet\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ISet`1\n    name: ISet\n    nameWithType: ISet\n    fullName: System.Collections.Generic.ISet\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ISet`1\n- uid: System.Collections.Generic.KeyNotFoundException\n  isExternal: false\n  name: KeyNotFoundException\n  nameWithType: KeyNotFoundException\n  fullName: System.Collections.Generic.KeyNotFoundException\n  commentId: T:System.Collections.Generic.KeyNotFoundException\n- uid: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: KeyValuePair<TKey, TValue>\n  nameWithType: KeyValuePair<TKey, TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)\n  name.vb: KeyValuePair(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.KeyValuePair`2\n- uid: System.Collections.Generic.Comparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Comparer<T>\n  nameWithType: Comparer<T>\n  fullName: System.Collections.Generic.Comparer<T>\n  nameWithType.vb: Comparer(Of T)\n  fullname.vb: System.Collections.Generic.Comparer(Of T)\n  name.vb: Comparer(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.Comparer`1\n    name: Comparer\n    nameWithType: Comparer\n    fullName: System.Collections.Generic.Comparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Comparer`1\n    name: Comparer\n    nameWithType: Comparer\n    fullName: System.Collections.Generic.Comparer\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Comparer`1\n- uid: System.Collections.Generic.Dictionary`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<TKey, TValue>\n  nameWithType: Dictionary<TKey, TValue>\n  fullName: System.Collections.Generic.Dictionary<TKey, TValue>\n  nameWithType.vb: Dictionary(Of TKey, TValue)\n  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)\n  name.vb: Dictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: System.Collections.Generic.Dictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: System.Collections.Generic.Dictionary\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Dictionary`2\n- uid: System.Collections.Generic.Dictionary`2.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary.Enumerator<>\n  nameWithType: Dictionary.Enumerator<>\n  fullName: System.Collections.Generic.Dictionary.Enumerator<>\n  nameWithType.vb: Dictionary.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.Dictionary.Enumerator(Of )\n  name.vb: Dictionary.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2.Enumerator\n    name: Dictionary.Enumerator\n    nameWithType: Dictionary.Enumerator\n    fullName: System.Collections.Generic.Dictionary.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Dictionary`2.Enumerator\n    name: Dictionary.Enumerator\n    nameWithType: Dictionary.Enumerator\n    fullName: System.Collections.Generic.Dictionary.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Dictionary`2.Enumerator\n- uid: System.Collections.Generic.Dictionary`2.KeyCollection\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary.KeyCollection<>\n  nameWithType: Dictionary.KeyCollection<>\n  fullName: System.Collections.Generic.Dictionary.KeyCollection<>\n  nameWithType.vb: Dictionary.KeyCollection(Of )\n  fullname.vb: System.Collections.Generic.Dictionary.KeyCollection(Of )\n  name.vb: Dictionary.KeyCollection(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2.KeyCollection\n    name: Dictionary.KeyCollection\n    nameWithType: Dictionary.KeyCollection\n    fullName: System.Collections.Generic.Dictionary.KeyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Dictionary`2.KeyCollection\n    name: Dictionary.KeyCollection\n    nameWithType: Dictionary.KeyCollection\n    fullName: System.Collections.Generic.Dictionary.KeyCollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Dictionary`2.KeyCollection\n- uid: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary.KeyCollection.Enumerator<>\n  nameWithType: Dictionary.KeyCollection.Enumerator<>\n  fullName: System.Collections.Generic.Dictionary.KeyCollection.Enumerator<>\n  nameWithType.vb: Dictionary.KeyCollection.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.Dictionary.KeyCollection.Enumerator(Of )\n  name.vb: Dictionary.KeyCollection.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator\n    name: Dictionary.KeyCollection.Enumerator\n    nameWithType: Dictionary.KeyCollection.Enumerator\n    fullName: System.Collections.Generic.Dictionary.KeyCollection.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator\n    name: Dictionary.KeyCollection.Enumerator\n    nameWithType: Dictionary.KeyCollection.Enumerator\n    fullName: System.Collections.Generic.Dictionary.KeyCollection.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary.ValueCollection<>\n  nameWithType: Dictionary.ValueCollection<>\n  fullName: System.Collections.Generic.Dictionary.ValueCollection<>\n  nameWithType.vb: Dictionary.ValueCollection(Of )\n  fullname.vb: System.Collections.Generic.Dictionary.ValueCollection(Of )\n  name.vb: Dictionary.ValueCollection(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2.ValueCollection\n    name: Dictionary.ValueCollection\n    nameWithType: Dictionary.ValueCollection\n    fullName: System.Collections.Generic.Dictionary.ValueCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Dictionary`2.ValueCollection\n    name: Dictionary.ValueCollection\n    nameWithType: Dictionary.ValueCollection\n    fullName: System.Collections.Generic.Dictionary.ValueCollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Dictionary`2.ValueCollection\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary.ValueCollection.Enumerator<>\n  nameWithType: Dictionary.ValueCollection.Enumerator<>\n  fullName: System.Collections.Generic.Dictionary.ValueCollection.Enumerator<>\n  nameWithType.vb: Dictionary.ValueCollection.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.Dictionary.ValueCollection.Enumerator(Of )\n  name.vb: Dictionary.ValueCollection.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n    name: Dictionary.ValueCollection.Enumerator\n    nameWithType: Dictionary.ValueCollection.Enumerator\n    fullName: System.Collections.Generic.Dictionary.ValueCollection.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n    name: Dictionary.ValueCollection.Enumerator\n    nameWithType: Dictionary.ValueCollection.Enumerator\n    fullName: System.Collections.Generic.Dictionary.ValueCollection.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n- uid: System.Collections.Generic.EqualityComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: EqualityComparer<T>\n  nameWithType: EqualityComparer<T>\n  fullName: System.Collections.Generic.EqualityComparer<T>\n  nameWithType.vb: EqualityComparer(Of T)\n  fullname.vb: System.Collections.Generic.EqualityComparer(Of T)\n  name.vb: EqualityComparer(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.EqualityComparer`1\n    name: EqualityComparer\n    nameWithType: EqualityComparer\n    fullName: System.Collections.Generic.EqualityComparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.EqualityComparer`1\n    name: EqualityComparer\n    nameWithType: EqualityComparer\n    fullName: System.Collections.Generic.EqualityComparer\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.EqualityComparer`1\n- uid: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: HashSet<T>\n  nameWithType: HashSet<T>\n  fullName: System.Collections.Generic.HashSet<T>\n  nameWithType.vb: HashSet(Of T)\n  fullname.vb: System.Collections.Generic.HashSet(Of T)\n  name.vb: HashSet(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.HashSet`1\n    name: HashSet\n    nameWithType: HashSet\n    fullName: System.Collections.Generic.HashSet\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.HashSet`1\n    name: HashSet\n    nameWithType: HashSet\n    fullName: System.Collections.Generic.HashSet\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.HashSet`1\n- uid: System.Collections.Generic.HashSet`1.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: HashSet.Enumerator<>\n  nameWithType: HashSet.Enumerator<>\n  fullName: System.Collections.Generic.HashSet.Enumerator<>\n  nameWithType.vb: HashSet.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.HashSet.Enumerator(Of )\n  name.vb: HashSet.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.HashSet`1.Enumerator\n    name: HashSet.Enumerator\n    nameWithType: HashSet.Enumerator\n    fullName: System.Collections.Generic.HashSet.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.HashSet`1.Enumerator\n    name: HashSet.Enumerator\n    nameWithType: HashSet.Enumerator\n    fullName: System.Collections.Generic.HashSet.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.HashSet`1.Enumerator\n- uid: System.Collections.Generic.LinkedList`1\n  isExternal: false\n  name: LinkedList<T>\n  nameWithType: LinkedList<T>\n  fullName: System.Collections.Generic.LinkedList<T>\n  nameWithType.vb: LinkedList(Of T)\n  fullname.vb: System.Collections.Generic.LinkedList(Of T)\n  name.vb: LinkedList(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.LinkedList`1\n    name: LinkedList\n    nameWithType: LinkedList\n    fullName: System.Collections.Generic.LinkedList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.LinkedList`1\n    name: LinkedList\n    nameWithType: LinkedList\n    fullName: System.Collections.Generic.LinkedList\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.LinkedList`1\n- uid: System.Collections.Generic.LinkedList`1.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: LinkedList.Enumerator<>\n  nameWithType: LinkedList.Enumerator<>\n  fullName: System.Collections.Generic.LinkedList.Enumerator<>\n  nameWithType.vb: LinkedList.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.LinkedList.Enumerator(Of )\n  name.vb: LinkedList.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.LinkedList`1.Enumerator\n    name: LinkedList.Enumerator\n    nameWithType: LinkedList.Enumerator\n    fullName: System.Collections.Generic.LinkedList.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.LinkedList`1.Enumerator\n    name: LinkedList.Enumerator\n    nameWithType: LinkedList.Enumerator\n    fullName: System.Collections.Generic.LinkedList.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.LinkedList`1.Enumerator\n- uid: System.Collections.Generic.LinkedListNode`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: LinkedListNode<T>\n  nameWithType: LinkedListNode<T>\n  fullName: System.Collections.Generic.LinkedListNode<T>\n  nameWithType.vb: LinkedListNode(Of T)\n  fullname.vb: System.Collections.Generic.LinkedListNode(Of T)\n  name.vb: LinkedListNode(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.LinkedListNode`1\n    name: LinkedListNode\n    nameWithType: LinkedListNode\n    fullName: System.Collections.Generic.LinkedListNode\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.LinkedListNode`1\n    name: LinkedListNode\n    nameWithType: LinkedListNode\n    fullName: System.Collections.Generic.LinkedListNode\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.LinkedListNode`1\n- uid: System.Collections.Generic.List`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: List<T>\n  nameWithType: List<T>\n  fullName: System.Collections.Generic.List<T>\n  nameWithType.vb: List(Of T)\n  fullname.vb: System.Collections.Generic.List(Of T)\n  name.vb: List(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: System.Collections.Generic.List\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: System.Collections.Generic.List\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.List`1\n- uid: System.Collections.Generic.List`1.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: List.Enumerator<>\n  nameWithType: List.Enumerator<>\n  fullName: System.Collections.Generic.List.Enumerator<>\n  nameWithType.vb: List.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.List.Enumerator(Of )\n  name.vb: List.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1.Enumerator\n    name: List.Enumerator\n    nameWithType: List.Enumerator\n    fullName: System.Collections.Generic.List.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.List`1.Enumerator\n    name: List.Enumerator\n    nameWithType: List.Enumerator\n    fullName: System.Collections.Generic.List.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.List`1.Enumerator\n- uid: System.Collections.Generic.Queue`1\n  isExternal: false\n  name: Queue<T>\n  nameWithType: Queue<T>\n  fullName: System.Collections.Generic.Queue<T>\n  nameWithType.vb: Queue(Of T)\n  fullname.vb: System.Collections.Generic.Queue(Of T)\n  name.vb: Queue(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.Queue`1\n    name: Queue\n    nameWithType: Queue\n    fullName: System.Collections.Generic.Queue\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Queue`1\n    name: Queue\n    nameWithType: Queue\n    fullName: System.Collections.Generic.Queue\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Queue`1\n- uid: System.Collections.Generic.Queue`1.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Queue.Enumerator<>\n  nameWithType: Queue.Enumerator<>\n  fullName: System.Collections.Generic.Queue.Enumerator<>\n  nameWithType.vb: Queue.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.Queue.Enumerator(Of )\n  name.vb: Queue.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.Queue`1.Enumerator\n    name: Queue.Enumerator\n    nameWithType: Queue.Enumerator\n    fullName: System.Collections.Generic.Queue.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Queue`1.Enumerator\n    name: Queue.Enumerator\n    nameWithType: Queue.Enumerator\n    fullName: System.Collections.Generic.Queue.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Queue`1.Enumerator\n- uid: System.Collections.Generic.SortedDictionary`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary<TKey, TValue>\n  nameWithType: SortedDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>\n  nameWithType.vb: SortedDictionary(Of TKey, TValue)\n  fullname.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue)\n  name.vb: SortedDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2\n    name: SortedDictionary\n    nameWithType: SortedDictionary\n    fullName: System.Collections.Generic.SortedDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedDictionary`2\n    name: SortedDictionary\n    nameWithType: SortedDictionary\n    fullName: System.Collections.Generic.SortedDictionary\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.SortedDictionary`2\n- uid: System.Collections.Generic.SortedDictionary`2.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary.Enumerator<>\n  nameWithType: SortedDictionary.Enumerator<>\n  fullName: System.Collections.Generic.SortedDictionary.Enumerator<>\n  nameWithType.vb: SortedDictionary.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.SortedDictionary.Enumerator(Of )\n  name.vb: SortedDictionary.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2.Enumerator\n    name: SortedDictionary.Enumerator\n    nameWithType: SortedDictionary.Enumerator\n    fullName: System.Collections.Generic.SortedDictionary.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedDictionary`2.Enumerator\n    name: SortedDictionary.Enumerator\n    nameWithType: SortedDictionary.Enumerator\n    fullName: System.Collections.Generic.SortedDictionary.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.SortedDictionary`2.Enumerator\n- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary.KeyCollection<>\n  nameWithType: SortedDictionary.KeyCollection<>\n  fullName: System.Collections.Generic.SortedDictionary.KeyCollection<>\n  nameWithType.vb: SortedDictionary.KeyCollection(Of )\n  fullname.vb: System.Collections.Generic.SortedDictionary.KeyCollection(Of )\n  name.vb: SortedDictionary.KeyCollection(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2.KeyCollection\n    name: SortedDictionary.KeyCollection\n    nameWithType: SortedDictionary.KeyCollection\n    fullName: System.Collections.Generic.SortedDictionary.KeyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedDictionary`2.KeyCollection\n    name: SortedDictionary.KeyCollection\n    nameWithType: SortedDictionary.KeyCollection\n    fullName: System.Collections.Generic.SortedDictionary.KeyCollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.SortedDictionary`2.KeyCollection\n- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary.KeyCollection.Enumerator<>\n  nameWithType: SortedDictionary.KeyCollection.Enumerator<>\n  fullName: System.Collections.Generic.SortedDictionary.KeyCollection.Enumerator<>\n  nameWithType.vb: SortedDictionary.KeyCollection.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.SortedDictionary.KeyCollection.Enumerator(Of )\n  name.vb: SortedDictionary.KeyCollection.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator\n    name: SortedDictionary.KeyCollection.Enumerator\n    nameWithType: SortedDictionary.KeyCollection.Enumerator\n    fullName: System.Collections.Generic.SortedDictionary.KeyCollection.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator\n    name: SortedDictionary.KeyCollection.Enumerator\n    nameWithType: SortedDictionary.KeyCollection.Enumerator\n    fullName: System.Collections.Generic.SortedDictionary.KeyCollection.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary.ValueCollection<>\n  nameWithType: SortedDictionary.ValueCollection<>\n  fullName: System.Collections.Generic.SortedDictionary.ValueCollection<>\n  nameWithType.vb: SortedDictionary.ValueCollection(Of )\n  fullname.vb: System.Collections.Generic.SortedDictionary.ValueCollection(Of )\n  name.vb: SortedDictionary.ValueCollection(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2.ValueCollection\n    name: SortedDictionary.ValueCollection\n    nameWithType: SortedDictionary.ValueCollection\n    fullName: System.Collections.Generic.SortedDictionary.ValueCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedDictionary`2.ValueCollection\n    name: SortedDictionary.ValueCollection\n    nameWithType: SortedDictionary.ValueCollection\n    fullName: System.Collections.Generic.SortedDictionary.ValueCollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.SortedDictionary`2.ValueCollection\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary.ValueCollection.Enumerator<>\n  nameWithType: SortedDictionary.ValueCollection.Enumerator<>\n  fullName: System.Collections.Generic.SortedDictionary.ValueCollection.Enumerator<>\n  nameWithType.vb: SortedDictionary.ValueCollection.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.SortedDictionary.ValueCollection.Enumerator(Of )\n  name.vb: SortedDictionary.ValueCollection.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n    name: SortedDictionary.ValueCollection.Enumerator\n    nameWithType: SortedDictionary.ValueCollection.Enumerator\n    fullName: System.Collections.Generic.SortedDictionary.ValueCollection.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n    name: SortedDictionary.ValueCollection.Enumerator\n    nameWithType: SortedDictionary.ValueCollection.Enumerator\n    fullName: System.Collections.Generic.SortedDictionary.ValueCollection.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n- uid: System.Collections.Generic.SortedList`2\n  isExternal: false\n  name: SortedList<TKey, TValue>\n  nameWithType: SortedList<TKey, TValue>\n  fullName: System.Collections.Generic.SortedList<TKey, TValue>\n  nameWithType.vb: SortedList(Of TKey, TValue)\n  fullname.vb: System.Collections.Generic.SortedList(Of TKey, TValue)\n  name.vb: SortedList(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedList`2\n    name: SortedList\n    nameWithType: SortedList\n    fullName: System.Collections.Generic.SortedList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedList`2\n    name: SortedList\n    nameWithType: SortedList\n    fullName: System.Collections.Generic.SortedList\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.SortedList`2\n- uid: System.Collections.Generic.SortedSet`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedSet<T>\n  nameWithType: SortedSet<T>\n  fullName: System.Collections.Generic.SortedSet<T>\n  nameWithType.vb: SortedSet(Of T)\n  fullname.vb: System.Collections.Generic.SortedSet(Of T)\n  name.vb: SortedSet(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedSet`1\n    name: SortedSet\n    nameWithType: SortedSet\n    fullName: System.Collections.Generic.SortedSet\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedSet`1\n    name: SortedSet\n    nameWithType: SortedSet\n    fullName: System.Collections.Generic.SortedSet\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.SortedSet`1\n- uid: System.Collections.Generic.SortedSet`1.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedSet.Enumerator<>\n  nameWithType: SortedSet.Enumerator<>\n  fullName: System.Collections.Generic.SortedSet.Enumerator<>\n  nameWithType.vb: SortedSet.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.SortedSet.Enumerator(Of )\n  name.vb: SortedSet.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedSet`1.Enumerator\n    name: SortedSet.Enumerator\n    nameWithType: SortedSet.Enumerator\n    fullName: System.Collections.Generic.SortedSet.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedSet`1.Enumerator\n    name: SortedSet.Enumerator\n    nameWithType: SortedSet.Enumerator\n    fullName: System.Collections.Generic.SortedSet.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.SortedSet`1.Enumerator\n- uid: System.Collections.Generic.Stack`1\n  isExternal: false\n  name: Stack<T>\n  nameWithType: Stack<T>\n  fullName: System.Collections.Generic.Stack<T>\n  nameWithType.vb: Stack(Of T)\n  fullname.vb: System.Collections.Generic.Stack(Of T)\n  name.vb: Stack(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.Stack`1\n    name: Stack\n    nameWithType: Stack\n    fullName: System.Collections.Generic.Stack\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Stack`1\n    name: Stack\n    nameWithType: Stack\n    fullName: System.Collections.Generic.Stack\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Stack`1\n- uid: System.Collections.Generic.Stack`1.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Stack.Enumerator<>\n  nameWithType: Stack.Enumerator<>\n  fullName: System.Collections.Generic.Stack.Enumerator<>\n  nameWithType.vb: Stack.Enumerator(Of )\n  fullname.vb: System.Collections.Generic.Stack.Enumerator(Of )\n  name.vb: Stack.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.Stack`1.Enumerator\n    name: Stack.Enumerator\n    nameWithType: Stack.Enumerator\n    fullName: System.Collections.Generic.Stack.Enumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.Stack`1.Enumerator\n    name: Stack.Enumerator\n    nameWithType: Stack.Enumerator\n    fullName: System.Collections.Generic.Stack.Enumerator\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Generic.Stack`1.Enumerator\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n"}