{"nodes":[{"pos":[411,431],"content":"INotifyDataErrorInfo","needQuote":true,"nodes":[{"content":"INotifyDataErrorInfo","pos":[0,20]}]},{"pos":[1453,1462],"content":"HasErrors","needQuote":true,"nodes":[{"content":"HasErrors","pos":[0,9]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the entity currently has validation errors; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[2141,2257],"source":"\\n<p>\\n<strong>true</strong> if the entity currently has validation errors; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[2607,2620],"content":"ErrorsChanged","needQuote":true,"nodes":[{"content":"ErrorsChanged","pos":[0,13]}]},{"pos":[3731,3748],"content":"GetErrors(String)","needQuote":true,"nodes":[{"content":"GetErrors(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The validation errors for the property or entity.&lt;/p&gt;\\n","pos":[4781,4841],"source":"\\n<p>The validation errors for the property or entity.</p>\\n"},{"pos":[4967,4988],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[5165,5172],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5296,5302],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5505,5545],"content":"EventHandler<DataErrorsChangedEventArgs>","needQuote":true,"nodes":[{"content":"EventHandler&lt;DataErrorsChangedEventArgs&gt;","pos":[0,40],"source":"EventHandler<DataErrorsChangedEventArgs>"}]},{"pos":[5827,5839],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[5905,5906],"content":"<","needQuote":true,"nodes":[]},{"pos":[5991,6017],"content":"DataErrorsChangedEventArgs","needQuote":true,"nodes":[{"content":"DataErrorsChangedEventArgs","pos":[0,26]}]},{"pos":[6165,6177],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"content":"(Of","pos":[6244,6247]},{"pos":[6339,6365],"content":"DataErrorsChangedEventArgs","needQuote":true,"nodes":[{"content":"DataErrorsChangedEventArgs","pos":[0,26]}]},{"pos":[6439,6440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6719,6743],"content":"EventHandler<TEventArgs>","needQuote":true,"nodes":[{"content":"EventHandler&lt;TEventArgs&gt;","pos":[0,24],"source":"EventHandler<TEventArgs>"}]},{"pos":[6933,6945],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[6990,6991],"content":"<","needQuote":true,"nodes":[]},{"pos":[7018,7028],"content":"TEventArgs","needQuote":true,"nodes":[{"content":"TEventArgs","pos":[0,10]}]},{"pos":[7138,7150],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"content":"(Of","pos":[7196,7199]},{"pos":[7233,7243],"content":"TEventArgs","needQuote":true,"nodes":[{"content":"TEventArgs","pos":[0,10]}]},{"pos":[7279,7280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7488,7494],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7668,7679],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[7851,7869],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]}],"content":"items:\n- uid: System.ComponentModel.INotifyDataErrorInfo\n  commentId: T:System.ComponentModel.INotifyDataErrorInfo\n  id: INotifyDataErrorInfo\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\n  - System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)\n  - System.ComponentModel.INotifyDataErrorInfo.HasErrors\n  langs:\n  - csharp\n  - vb\n  name: INotifyDataErrorInfo\n  fullName: System.ComponentModel.INotifyDataErrorInfo\n  type: Interface\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: INotifyDataErrorInfo\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 169\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Defines members that data entity classes can implement to provide custom synchronous and asynchronous validation support.</p>\\n\"\n  syntax:\n    content: public interface INotifyDataErrorInfo\n    content.vb: Public Interface INotifyDataErrorInfo\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: INotifyDataErrorInfo\n- uid: System.ComponentModel.INotifyDataErrorInfo.HasErrors\n  commentId: P:System.ComponentModel.INotifyDataErrorInfo.HasErrors\n  id: HasErrors\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  langs:\n  - csharp\n  - vb\n  name: HasErrors\n  fullName: System.ComponentModel.INotifyDataErrorInfo.HasErrors\n  type: Property\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasErrors\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 171\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets a value that indicates whether the entity has validation errors. </p>\\n\"\n  syntax:\n    content: bool HasErrors { get; }\n    content.vb: ReadOnly Property HasErrors As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the entity currently has validation errors; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: INotifyDataErrorInfo.HasErrors\n- uid: System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\n  commentId: E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\n  id: ErrorsChanged\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  langs:\n  - csharp\n  - vb\n  name: ErrorsChanged\n  fullName: System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\n  type: Event\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ErrorsChanged\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 172\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Occurs when the validation errors have changed for a property or for the entire entity. </p>\\n\"\n  syntax:\n    content: event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged\n    content.vb: Event ErrorsChanged As EventHandler(Of DataErrorsChangedEventArgs)\n    return:\n      type: System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}\n  nameWithType: INotifyDataErrorInfo.ErrorsChanged\n- uid: System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)\n  commentId: M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)\n  id: GetErrors(System.String)\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  langs:\n  - csharp\n  - vb\n  name: GetErrors(String)\n  fullName: System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetErrors\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 173\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the validation errors for a specified property or for the entire entity.</p>\\n\"\n  syntax:\n    content: IEnumerable GetErrors(string propertyName)\n    content.vb: Function GetErrors(propertyName As String) As IEnumerable\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: \"\\n<p>The name of the property to retrieve validation errors for; or <strong>null</strong> or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, to retrieve entity-level errors.</p>\\n\"\n    return:\n      type: System.Collections.IEnumerable\n      description: \"\\n<p>The validation errors for the property or entity.</p>\\n\"\n  nameWithType: INotifyDataErrorInfo.GetErrors(String)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  commentId: N:System.ComponentModel\n  nameWithType: System.ComponentModel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}\n  parent: System\n  definition: System.EventHandler`1\n  name: EventHandler<DataErrorsChangedEventArgs>\n  fullName: System.EventHandler<System.ComponentModel.DataErrorsChangedEventArgs>\n  fullname.vb: System.EventHandler(Of System.ComponentModel.DataErrorsChangedEventArgs)\n  name.vb: EventHandler(Of DataErrorsChangedEventArgs)\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.ComponentModel.DataErrorsChangedEventArgs\n    name: DataErrorsChangedEventArgs\n    fullName: System.ComponentModel.DataErrorsChangedEventArgs\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.ComponentModel.DataErrorsChangedEventArgs\n    name: DataErrorsChangedEventArgs\n    fullName: System.ComponentModel.DataErrorsChangedEventArgs\n  - name: )\n    fullName: )\n  commentId: T:System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}\n  nameWithType: EventHandler<DataErrorsChangedEventArgs>\n  nameWithType.vb: EventHandler(Of DataErrorsChangedEventArgs)\n- uid: System.EventHandler`1\n  isExternal: false\n  name: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n  fullname.vb: System.EventHandler(Of TEventArgs)\n  name.vb: EventHandler(Of TEventArgs)\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    fullName: <\n  - name: TEventArgs\n    fullName: TEventArgs\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TEventArgs\n    fullName: TEventArgs\n  - name: )\n    fullName: )\n  commentId: T:System.EventHandler`1\n  nameWithType: EventHandler<TEventArgs>\n  nameWithType.vb: EventHandler(Of TEventArgs)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n"}