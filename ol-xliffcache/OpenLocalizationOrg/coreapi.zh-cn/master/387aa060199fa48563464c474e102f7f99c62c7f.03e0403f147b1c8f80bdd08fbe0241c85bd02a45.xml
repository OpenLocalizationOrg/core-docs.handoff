{"nodes":[{"pos":[623,632],"content":"OpenFlags","needQuote":true,"nodes":[{"content":"OpenFlags","pos":[0,9]}]},{"pos":[1896,1911],"content":"IncludeArchived","needQuote":true,"nodes":[{"content":"IncludeArchived","pos":[0,15]}]},{"pos":[3104,3114],"content":"MaxAllowed","needQuote":true,"nodes":[{"content":"MaxAllowed","pos":[0,10]}]},{"pos":[4302,4318],"content":"OpenExistingOnly","needQuote":true,"nodes":[{"content":"OpenExistingOnly","pos":[0,16]}]},{"pos":[5707,5715],"content":"ReadOnly","needQuote":true,"nodes":[{"content":"ReadOnly","pos":[0,8]}]},{"pos":[6860,6869],"content":"ReadWrite","needQuote":true,"nodes":[{"content":"ReadWrite","pos":[0,9]}]},{"pos":[7852,7897],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[8226,8235],"content":"OpenFlags","needQuote":true,"nodes":[{"content":"OpenFlags","pos":[0,9]}]}],"content":"items:\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags\n  commentId: T:System.Security.Cryptography.X509Certificates.OpenFlags\n  id: OpenFlags\n  parent: System.Security.Cryptography.X509Certificates\n  children:\n  - System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived\n  - System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed\n  - System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly\n  - System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly\n  - System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite\n  langs:\n  - csharp\n  - vb\n  name: OpenFlags\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags\n  type: Enum\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OpenFlags\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 23\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Specifies the way to open the X.509 certificate store.</p>\\n\"\n  syntax:\n    content: >-\n      [Flags]\n\n      public enum OpenFlags\n    content.vb: >-\n      <Flags>\n\n      Public Enum OpenFlags\n  attributes:\n  - type: System.FlagsAttribute\n    ctor: System.FlagsAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: OpenFlags\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived\n  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived\n  id: IncludeArchived\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  - vb\n  name: IncludeArchived\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IncludeArchived\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 26\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Open the X.509 certificate store and include archived certificates.</p>\\n\"\n  syntax:\n    content: IncludeArchived = 8\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OpenFlags.IncludeArchived\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed\n  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed\n  id: MaxAllowed\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  - vb\n  name: MaxAllowed\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxAllowed\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 27\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Open the X.509 certificate store for the highest access allowed.</p>\\n\"\n  syntax:\n    content: MaxAllowed = 2\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OpenFlags.MaxAllowed\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly\n  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly\n  id: OpenExistingOnly\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  - vb\n  name: OpenExistingOnly\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OpenExistingOnly\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 28\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Opens only existing stores; if no store exists, the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method will not create a new store.</p>\\n\"\n  syntax:\n    content: OpenExistingOnly = 4\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OpenFlags.OpenExistingOnly\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly\n  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly\n  id: ReadOnly\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  - vb\n  name: ReadOnly\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadOnly\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 29\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Open the X.509 certificate store for reading only.</p>\\n\"\n  syntax:\n    content: ReadOnly = 0\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OpenFlags.ReadOnly\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite\n  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite\n  id: ReadWrite\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  - vb\n  name: ReadWrite\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadWrite\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 30\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Open the X.509 certificate store for both reading and writing.</p>\\n\"\n  syntax:\n    content: ReadWrite = 1\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OpenFlags.ReadWrite\nreferences:\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: OpenFlags\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags\n  commentId: T:System.Security.Cryptography.X509Certificates.OpenFlags\n  nameWithType: OpenFlags\n"}