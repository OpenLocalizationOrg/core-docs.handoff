{"nodes":[{"pos":[843,869],"content":"RegexMatchTimeoutException","needQuote":true,"nodes":[{"content":"RegexMatchTimeoutException","pos":[0,26]}]},{"pos":[3131,3159],"content":"RegexMatchTimeoutException()","needQuote":true,"nodes":[{"content":"RegexMatchTimeoutException()","pos":[0,28]}]},{"pos":[4411,4445],"content":"RegexMatchTimeoutException(String)","needQuote":true,"nodes":[{"content":"RegexMatchTimeoutException(String)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;A string that describes the exception.&lt;/p&gt;\\n","pos":[5384,5433],"source":"\\n<p>A string that describes the exception.</p>\\n"},{"pos":[5934,5979],"content":"RegexMatchTimeoutException(String, Exception)","needQuote":true,"nodes":[{"content":"RegexMatchTimeoutException(String, Exception)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;A string that describes the exception.&lt;/p&gt;\\n","pos":[7045,7094],"source":"\\n<p>A string that describes the exception.</p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.&lt;/p&gt;\\n","pos":[7161,7229],"source":"\\n<p>The exception that is the cause of the current exception.</p>\\n"},{"pos":[7780,7832],"content":"RegexMatchTimeoutException(String, String, TimeSpan)","needQuote":true,"nodes":[{"content":"RegexMatchTimeoutException(String, String, TimeSpan)","pos":[0,52]}]},{"content":"\\n&lt;p&gt;The input text processed by the regular expression engine when the time-out occurred.&lt;/p&gt;\\n","pos":[8969,9065],"source":"\\n<p>The input text processed by the regular expression engine when the time-out occurred.</p>\\n"},{"content":"\\n&lt;p&gt;The pattern used by the regular expression engine when the time-out occurred.&lt;/p&gt;\\n","pos":[9136,9224],"source":"\\n<p>The pattern used by the regular expression engine when the time-out occurred.</p>\\n"},{"content":"\\n&lt;p&gt;The time-out interval.&lt;/p&gt;\\n","pos":[9297,9330],"source":"\\n<p>The time-out interval.</p>\\n"},{"pos":[9751,9756],"content":"Input","needQuote":true,"nodes":[{"content":"Input","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The regular expression input text.&lt;/p&gt;\\n","pos":[10544,10589],"source":"\\n<p>The regular expression input text.</p>\\n"},{"pos":[11005,11017],"content":"MatchTimeout","needQuote":true,"nodes":[{"content":"MatchTimeout","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The time-out interval.&lt;/p&gt;\\n","pos":[11800,11833],"source":"\\n<p>The time-out interval.</p>\\n"},{"pos":[12241,12248],"content":"Pattern","needQuote":true,"nodes":[{"content":"Pattern","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The regular expression pattern.&lt;/p&gt;\\n","pos":[13050,13092],"source":"\\n<p>The regular expression pattern.</p>\\n"},{"pos":[13302,13332],"content":"System.Text.RegularExpressions","needQuote":true,"nodes":[{"content":"System.Text.RegularExpressions","pos":[0,30]}]},{"pos":[13535,13541],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13689,13698],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[13860,13875],"content":"SystemException","needQuote":true,"nodes":[{"content":"SystemException","pos":[0,15]}]},{"pos":[14057,14073],"content":"TimeoutException","needQuote":true,"nodes":[{"content":"TimeoutException","pos":[0,16]}]},{"pos":[14299,14312],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[14573,14583],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[14818,14836],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[14953,14969],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[15028,15029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15056,15057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15138,15154],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[15213,15214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15241,15242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15441,15451],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15552,15560],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15611,15612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15639,15640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15713,15721],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15772,15773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15800,15801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16082,16132],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[16430,16443],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[16520,16521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16604,16621],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[16715,16716]},{"pos":[16803,16819],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[16911,16912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17084,17097],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[17174,17175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17258,17275],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[17369,17370]},{"pos":[17457,17473],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[17565,17566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17886,17895],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[17994,18001],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18072,18073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18100,18101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18173,18180],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18251,18252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18279,18280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18460,18467],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[18663,18667],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[18864,18878],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[19100,19110],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[19321,19331],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[19540,19548],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[19749,19755],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[19951,19958],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[20169,20189],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[20434,20448],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[20567,20573],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20640,20641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20691,20697],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20757,20758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20841,20847],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20914,20915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20965,20971],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21031,21032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21246,21268],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[21416,21422],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21489,21490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21540,21546],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21607,21608]},{"pos":[21663,21669],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21729,21730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21827,21833],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21900,21901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21951,21957],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22018,22019]},{"pos":[22074,22080],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22140,22141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22386,22417],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[22583,22598],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22674,22675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22725,22731],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22792,22793]},{"pos":[22848,22854],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22914,22915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23021,23036],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23112,23113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23163,23169],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23230,23231]},{"pos":[23286,23292],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23352,23353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23583,23596],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[23697,23708],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[23780,23781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23808,23809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23882,23893],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[23965,23966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23993,23994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24177,24194],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[24303,24318],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24394,24395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24422,24423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24500,24515],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24591,24592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24619,24620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24765,24771],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[24900,24928],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[25125,25155],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[25358,25364],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25511,25519],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]}],"content":"items:\n- uid: System.Text.RegularExpressions.RegexMatchTimeoutException\n  commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException\n  id: RegexMatchTimeoutException\n  parent: System.Text.RegularExpressions\n  children:\n  - System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor\n  - System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)\n  - System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)\n  - System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)\n  - System.Text.RegularExpressions.RegexMatchTimeoutException.Input\n  - System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout\n  - System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern\n  langs:\n  - csharp\n  - vb\n  name: RegexMatchTimeoutException\n  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException\n  type: Class\n  source:\n    remote:\n      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RegexMatchTimeoutException\n    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n    startLine: 133\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: \"\\n<p>The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.</p>\\n\"\n  syntax:\n    content: 'public class RegexMatchTimeoutException : TimeoutException, ISerializable, _Exception'\n    content.vb: >-\n      Public Class RegexMatchTimeoutException\n          Inherits TimeoutException\n          Implements ISerializable, _Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.SystemException\n  - System.TimeoutException\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: RegexMatchTimeoutException\n- uid: System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor\n  commentId: M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor\n  id: '#ctor'\n  parent: System.Text.RegularExpressions.RegexMatchTimeoutException\n  langs:\n  - csharp\n  - vb\n  name: RegexMatchTimeoutException()\n  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException.RegexMatchTimeoutException()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n    startLine: 135\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.RegularExpressions.RegexMatchTimeoutException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a system-supplied message.</p>\\n\"\n  syntax:\n    content: public RegexMatchTimeoutException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegexMatchTimeoutException.RegexMatchTimeoutException()\n- uid: System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)\n  commentId: M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Text.RegularExpressions.RegexMatchTimeoutException\n  langs:\n  - csharp\n  - vb\n  name: RegexMatchTimeoutException(String)\n  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException.RegexMatchTimeoutException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n    startLine: 136\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.RegularExpressions.RegexMatchTimeoutException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified message string.</p>\\n\"\n  syntax:\n    content: public RegexMatchTimeoutException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A string that describes the exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegexMatchTimeoutException.RegexMatchTimeoutException(String)\n- uid: System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)\n  commentId: M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Text.RegularExpressions.RegexMatchTimeoutException\n  langs:\n  - csharp\n  - vb\n  name: RegexMatchTimeoutException(String, Exception)\n  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException.RegexMatchTimeoutException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n    startLine: 137\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.RegularExpressions.RegexMatchTimeoutException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public RegexMatchTimeoutException(string message, Exception inner)\n    content.vb: Public Sub New(message As String, inner As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A string that describes the exception.</p>\\n\"\n    - id: inner\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegexMatchTimeoutException.RegexMatchTimeoutException(String, Exception)\n- uid: System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)\n  commentId: M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)\n  id: '#ctor(System.String,System.String,System.TimeSpan)'\n  parent: System.Text.RegularExpressions.RegexMatchTimeoutException\n  langs:\n  - csharp\n  - vb\n  name: RegexMatchTimeoutException(String, String, TimeSpan)\n  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException.RegexMatchTimeoutException(System.String, System.String, System.TimeSpan)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n    startLine: 138\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.RegularExpressions.RegexMatchTimeoutException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with information about the regular expression pattern, the input text, and the time-out interval.</p>\\n\"\n  syntax:\n    content: public RegexMatchTimeoutException(string regexInput, string regexPattern, TimeSpan matchTimeout)\n    content.vb: Public Sub New(regexInput As String, regexPattern As String, matchTimeout As TimeSpan)\n    parameters:\n    - id: regexInput\n      type: System.String\n      description: \"\\n<p>The input text processed by the regular expression engine when the time-out occurred.</p>\\n\"\n    - id: regexPattern\n      type: System.String\n      description: \"\\n<p>The pattern used by the regular expression engine when the time-out occurred.</p>\\n\"\n    - id: matchTimeout\n      type: System.TimeSpan\n      description: \"\\n<p>The time-out interval.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegexMatchTimeoutException.RegexMatchTimeoutException(String, String, TimeSpan)\n- uid: System.Text.RegularExpressions.RegexMatchTimeoutException.Input\n  commentId: P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input\n  id: Input\n  parent: System.Text.RegularExpressions.RegexMatchTimeoutException\n  langs:\n  - csharp\n  - vb\n  name: Input\n  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException.Input\n  type: Property\n  source:\n    remote:\n      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Input\n    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n    startLine: 139\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: \"\\n<p>Gets the input text that the regular expression engine was processing when the time-out occurred.</p>\\n\"\n  syntax:\n    content: public string Input { get; }\n    content.vb: Public ReadOnly Property Input As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The regular expression input text.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RegexMatchTimeoutException.Input\n- uid: System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout\n  commentId: P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout\n  id: MatchTimeout\n  parent: System.Text.RegularExpressions.RegexMatchTimeoutException\n  langs:\n  - csharp\n  - vb\n  name: MatchTimeout\n  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MatchTimeout\n    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n    startLine: 140\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: \"\\n<p>Gets the time-out interval for a regular expression match.</p>\\n\"\n  syntax:\n    content: public TimeSpan MatchTimeout { get; }\n    content.vb: Public ReadOnly Property MatchTimeout As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>The time-out interval.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RegexMatchTimeoutException.MatchTimeout\n- uid: System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern\n  commentId: P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern\n  id: Pattern\n  parent: System.Text.RegularExpressions.RegexMatchTimeoutException\n  langs:\n  - csharp\n  - vb\n  name: Pattern\n  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern\n  type: Property\n  source:\n    remote:\n      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Pattern\n    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n    startLine: 141\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: \"\\n<p>Gets the regular expression pattern that was used in the matching operation when the time-out occurred.</p>\\n\"\n  syntax:\n    content: public string Pattern { get; }\n    content.vb: Public ReadOnly Property Pattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The regular expression pattern.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RegexMatchTimeoutException.Pattern\nreferences:\n- uid: System.Text.RegularExpressions\n  isExternal: false\n  name: System.Text.RegularExpressions\n  fullName: System.Text.RegularExpressions\n  commentId: N:System.Text.RegularExpressions\n  nameWithType: System.Text.RegularExpressions\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n- uid: System.SystemException\n  parent: System\n  isExternal: true\n  name: SystemException\n  fullName: System.SystemException\n  commentId: T:System.SystemException\n  nameWithType: SystemException\n- uid: System.TimeoutException\n  parent: System\n  isExternal: false\n  name: TimeoutException\n  fullName: System.TimeoutException\n  commentId: T:System.TimeoutException\n  nameWithType: TimeoutException\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.GetBaseException\n  nameWithType: Exception.GetBaseException()\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.ToString\n  nameWithType: Exception.ToString()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.GetType\n  nameWithType: Exception.GetType()\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  commentId: P:System.Exception.Message\n  nameWithType: Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  commentId: P:System.Exception.Data\n  nameWithType: Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  commentId: P:System.Exception.InnerException\n  nameWithType: Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  commentId: P:System.Exception.Source\n  nameWithType: Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  commentId: P:System.Exception.HResult\n  nameWithType: Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  commentId: T:System.TimeSpan\n  nameWithType: TimeSpan\n"}