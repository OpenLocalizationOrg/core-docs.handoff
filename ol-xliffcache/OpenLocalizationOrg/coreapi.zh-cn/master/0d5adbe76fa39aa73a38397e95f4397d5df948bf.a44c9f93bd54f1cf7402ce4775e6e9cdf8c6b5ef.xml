{"nodes":[{"pos":[351,372],"content":"StructuralComparisons","needQuote":true,"nodes":[{"content":"StructuralComparisons","pos":[0,21]}]},{"pos":[1705,1723],"content":"StructuralComparer","needQuote":true,"nodes":[{"content":"StructuralComparer","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A predefined object that is used to perform a structural comparison of two collection objects.&lt;/p&gt;\\n","pos":[2514,2619],"source":"\\n<p>A predefined object that is used to perform a structural comparison of two collection objects.</p>\\n"},{"pos":[3150,3176],"content":"StructuralEqualityComparer","needQuote":true,"nodes":[{"content":"StructuralEqualityComparer","pos":[0,26]}]},{"content":"\\n&lt;p&gt;A predefined object that is used to compare two collection objects for structural equality.&lt;/p&gt;\\n","pos":[4020,4122],"source":"\\n<p>A predefined object that is used to compare two collection objects for structural equality.</p>\\n"},{"pos":[4450,4468],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[4635,4641],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4801,4811],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[4906,4914],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[4983,4984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5011,5012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5082,5090],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5159,5160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5187,5188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5371,5385],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5504,5510],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5577,5578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5628,5634],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5694,5695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5778,5784],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5851,5852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5902,5908],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5968,5969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6183,6205],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6353,6359],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6426,6427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6477,6483],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6544,6545]},{"pos":[6600,6606],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6666,6667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6764,6770],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6837,6838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6888,6894],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6955,6956]},{"pos":[7011,7017],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7077,7078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7323,7354],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7520,7535],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7611,7612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7662,7668],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7729,7730]},{"pos":[7785,7791],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7851,7852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7958,7973],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8049,8050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8100,8106],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8167,8168]},{"pos":[8223,8229],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8289,8290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8520,8533],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8634,8645],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8717,8718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8745,8746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8819,8830],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8902,8903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8930,8931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9106,9115],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9208,9215],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9283,9284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9311,9312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9381,9388],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9456,9457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9484,9485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9660,9677],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[9786,9801],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[9877,9878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9905,9906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9983,9998],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10074,10075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10102,10103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10248,10254],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[10412,10421],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[10634,10651],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]}],"content":"items:\n- uid: System.Collections.StructuralComparisons\n  commentId: T:System.Collections.StructuralComparisons\n  id: StructuralComparisons\n  parent: System.Collections\n  children:\n  - System.Collections.StructuralComparisons.StructuralComparer\n  - System.Collections.StructuralComparisons.StructuralEqualityComparer\n  langs:\n  - csharp\n  - vb\n  name: StructuralComparisons\n  fullName: System.Collections.StructuralComparisons\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/StructuralComparisons.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StructuralComparisons\n    path: src/mscorlib/src/System/Collections/StructuralComparisons.cs\n    startLine: 9\n  assemblies:\n  - System.Collections\n  namespace: System.Collections\n  summary: \"\\n<p>Provides objects for performing a structural comparison of two collection objects.</p>\\n\"\n  syntax:\n    content: public class StructuralComparisons\n    content.vb: Public Class StructuralComparisons\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: StructuralComparisons\n- uid: System.Collections.StructuralComparisons.StructuralComparer\n  commentId: P:System.Collections.StructuralComparisons.StructuralComparer\n  id: StructuralComparer\n  parent: System.Collections.StructuralComparisons\n  langs:\n  - csharp\n  - vb\n  name: StructuralComparer\n  fullName: System.Collections.StructuralComparisons.StructuralComparer\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/StructuralComparisons.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StructuralComparer\n    path: src/mscorlib/src/System/Collections/StructuralComparisons.cs\n    startLine: 14\n  assemblies:\n  - System.Collections\n  namespace: System.Collections\n  summary: \"\\n<p>Gets a predefined object that performs a structural comparison of two objects.</p>\\n\"\n  syntax:\n    content: public static IComparer StructuralComparer { get; }\n    content.vb: Public Shared ReadOnly Property StructuralComparer As IComparer\n    parameters: []\n    return:\n      type: System.Collections.IComparer\n      description: \"\\n<p>A predefined object that is used to perform a structural comparison of two collection objects.</p>\\n\"\n  seealso:\n  - type: System.Collections.Comparer\n    commentId: T:System.Collections.Comparer\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: StructuralComparisons.StructuralComparer\n- uid: System.Collections.StructuralComparisons.StructuralEqualityComparer\n  commentId: P:System.Collections.StructuralComparisons.StructuralEqualityComparer\n  id: StructuralEqualityComparer\n  parent: System.Collections.StructuralComparisons\n  langs:\n  - csharp\n  - vb\n  name: StructuralEqualityComparer\n  fullName: System.Collections.StructuralComparisons.StructuralEqualityComparer\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/StructuralComparisons.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StructuralEqualityComparer\n    path: src/mscorlib/src/System/Collections/StructuralComparisons.cs\n    startLine: 25\n  assemblies:\n  - System.Collections\n  namespace: System.Collections\n  summary: \"\\n<p>Gets a predefined object that compares two objects for structural equality.</p>\\n\"\n  syntax:\n    content: public static IEqualityComparer StructuralEqualityComparer { get; }\n    content.vb: Public Shared ReadOnly Property StructuralEqualityComparer As IEqualityComparer\n    parameters: []\n    return:\n      type: System.Collections.IEqualityComparer\n      description: \"\\n<p>A predefined object that is used to compare two collection objects for structural equality.</p>\\n\"\n  seealso:\n  - type: System.Collections.Comparer\n    commentId: T:System.Collections.Comparer\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: StructuralComparisons.StructuralEqualityComparer\nreferences:\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  fullName: System.Collections.IComparer\n  nameWithType: IComparer\n  commentId: T:System.Collections.IComparer\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n  nameWithType: IEqualityComparer\n  commentId: T:System.Collections.IEqualityComparer\n"}