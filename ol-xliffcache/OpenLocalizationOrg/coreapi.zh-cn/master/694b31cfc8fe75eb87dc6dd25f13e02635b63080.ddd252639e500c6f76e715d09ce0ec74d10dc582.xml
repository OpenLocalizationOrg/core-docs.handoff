{"nodes":[{"pos":[361,368],"content":"IDLDESC","needQuote":true,"nodes":[{"content":"IDLDESC","pos":[0,7]}]},{"pos":[2127,2137],"content":"dwReserved","needQuote":true,"nodes":[{"content":"dwReserved","pos":[0,10]}]},{"pos":[3152,3161],"content":"wIDLFlags","needQuote":true,"nodes":[{"content":"wIDLFlags","pos":[0,9]}]},{"pos":[4146,4185],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[4449,4463],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4588,4594],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[4643,4644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4694,4700],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4760,4761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4847,4853],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[4902,4903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4953,4959],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5019,5020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5223,5236],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5343,5354],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[5408,5409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5436,5437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5513,5524],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[5578,5579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5606,5607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5796,5806],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5907,5915],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5966,5967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5994,5995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6068,6076],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6127,6128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6155,6156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6359,6381],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6529,6535],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6602,6603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6653,6659],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6720,6721]},{"pos":[6776,6782],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6842,6843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6940,6946],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7013,7014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7064,7070],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7131,7132]},{"pos":[7187,7193],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7253,7254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7499,7530],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7696,7711],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7787,7788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7838,7844],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7905,7906]},{"pos":[7961,7967],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8027,8028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8134,8149],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8225,8226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8276,8282],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8343,8344]},{"pos":[8399,8405],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8465,8466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8692,8701],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[8794,8801],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[8869,8870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8897,8898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8967,8974],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9042,9043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9070,9071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9227,9236],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[9390,9396],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9517,9523],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[9654,9660],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[9872,9879],"content":"IDLFLAG","needQuote":true,"nodes":[{"content":"IDLFLAG","pos":[0,7]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.IDLDESC\n  commentId: T:System.Runtime.InteropServices.ComTypes.IDLDESC\n  id: IDLDESC\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.IDLDESC.dwReserved\n  - System.Runtime.InteropServices.ComTypes.IDLDESC.wIDLFlags\n  langs:\n  - csharp\n  - vb\n  name: IDLDESC\n  fullName: System.Runtime.InteropServices.ComTypes.IDLDESC\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IDLDESC\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n    startLine: 119\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Contains information needed for transferring a structure element, parameter, or function return value between processes.</p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]\n\n      public struct IDLDESC\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential, CharSet:=CharSet.Unicode)>\n\n      Public Structure IDLDESC\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: IDLDESC\n- uid: System.Runtime.InteropServices.ComTypes.IDLDESC.dwReserved\n  commentId: F:System.Runtime.InteropServices.ComTypes.IDLDESC.dwReserved\n  id: dwReserved\n  parent: System.Runtime.InteropServices.ComTypes.IDLDESC\n  langs:\n  - csharp\n  - vb\n  name: dwReserved\n  fullName: System.Runtime.InteropServices.ComTypes.IDLDESC.dwReserved\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: dwReserved\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n    startLine: 123\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Reserved; set to <strong>null</strong>.</p>\\n\"\n  syntax:\n    content: public IntPtr dwReserved\n    content.vb: Public dwReserved As IntPtr\n    return:\n      type: System.IntPtr\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: IDLDESC.dwReserved\n- uid: System.Runtime.InteropServices.ComTypes.IDLDESC.wIDLFlags\n  commentId: F:System.Runtime.InteropServices.ComTypes.IDLDESC.wIDLFlags\n  id: wIDLFlags\n  parent: System.Runtime.InteropServices.ComTypes.IDLDESC\n  langs:\n  - csharp\n  - vb\n  name: wIDLFlags\n  fullName: System.Runtime.InteropServices.ComTypes.IDLDESC.wIDLFlags\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: wIDLFlags\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n    startLine: 124\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Indicates an <xref href=\\\"System.Runtime.InteropServices.IDLFLAG\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value describing the type.</p>\\n\"\n  syntax:\n    content: public IDLFLAG wIDLFlags\n    content.vb: Public wIDLFlags As IDLFLAG\n    return:\n      type: System.Runtime.InteropServices.ComTypes.IDLFLAG\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: IDLDESC.wIDLFlags\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n- uid: System.Runtime.InteropServices.ComTypes.IDLFLAG\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IDLFLAG\n  fullName: System.Runtime.InteropServices.ComTypes.IDLFLAG\n  nameWithType: IDLFLAG\n  commentId: T:System.Runtime.InteropServices.ComTypes.IDLFLAG\n"}