{"nodes":[{"pos":[1090,1099],"content":"WebSocket","needQuote":true,"nodes":[{"content":"WebSocket","pos":[0,9]}]},{"pos":[2475,2486],"content":"WebSocket()","needQuote":true,"nodes":[{"content":"WebSocket()","pos":[0,11]}]},{"pos":[3430,3441],"content":"CloseStatus","needQuote":true,"nodes":[{"content":"CloseStatus","pos":[0,11]}]},{"pos":[4757,4779],"content":"CloseStatusDescription","needQuote":true,"nodes":[{"content":"CloseStatusDescription","pos":[0,22]}]},{"pos":[5999,6004],"content":"State","needQuote":true,"nodes":[{"content":"State","pos":[0,5]}]},{"pos":[7193,7204],"content":"SubProtocol","needQuote":true,"nodes":[{"content":"SubProtocol","pos":[0,11]}]},{"pos":[8354,8361],"content":"Abort()","needQuote":true,"nodes":[{"content":"Abort()","pos":[0,7]}]},{"pos":[9556,9615],"content":"CloseAsync(WebSocketCloseStatus, String, CancellationToken)","needQuote":true,"nodes":[{"content":"CloseAsync(WebSocketCloseStatus, String, CancellationToken)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;Indicates the reason for closing the WebSocket connection.&lt;/p&gt;\\n","pos":[10809,10878],"source":"\\n<p>Indicates the reason for closing the WebSocket connection.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies a human readable explanation as to why the connection is closed.&lt;/p&gt;\\n","pos":[10954,11039],"source":"\\n<p>Specifies a human readable explanation as to why the connection is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The token that can be used to propagate notification that operations should be canceled.&lt;/p&gt;\\n","pos":[11136,11235],"source":"\\n<p>The token that can be used to propagate notification that operations should be canceled.</p>\\n"},{"pos":[12157,12222],"content":"CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)","needQuote":true,"nodes":[{"content":"CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)","pos":[0,65]}]},{"content":"\\n&lt;p&gt;Indicates the reason for closing the WebSocket connection.&lt;/p&gt;\\n","pos":[13396,13465],"source":"\\n<p>Indicates the reason for closing the WebSocket connection.</p>\\n"},{"content":"\\n&lt;p&gt;Allows applications to specify a human readable explanation as to why the connection is closed.&lt;/p&gt;\\n","pos":[13541,13647],"source":"\\n<p>Allows applications to specify a human readable explanation as to why the connection is closed.</p>\\n"},{"content":"\\n&lt;p&gt;The token that can be used to propagate notification that operations should be canceled.&lt;/p&gt;\\n","pos":[13744,13843],"source":"\\n<p>The token that can be used to propagate notification that operations should be canceled.</p>\\n"},{"pos":[14465,14474],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[15669,15720],"content":"ReceiveAsync(ArraySegment<Byte>, CancellationToken)","needQuote":true,"nodes":[{"content":"ReceiveAsync(ArraySegment&lt;Byte&gt;, CancellationToken)","pos":[0,51],"source":"ReceiveAsync(ArraySegment<Byte>, CancellationToken)"}]},{"content":"\\n&lt;p&gt;References the application buffer that is the storage location for the received data.&lt;/p&gt;\\n","pos":[16694,16790],"source":"\\n<p>References the application buffer that is the storage location for the received data.</p>\\n"},{"content":"\\n&lt;p&gt;Propagate the notification that operations should be canceled.&lt;/p&gt;\\n","pos":[16887,16960],"source":"\\n<p>Propagate the notification that operations should be canceled.</p>\\n"},{"pos":[18532,18611],"content":"SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)","needQuote":true,"nodes":[{"content":"SendAsync(ArraySegment&lt;Byte&gt;, WebSocketMessageType, Boolean, CancellationToken)","pos":[0,79],"source":"SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)"}]},{"content":"\\n&lt;p&gt;The buffer to be sent over the connection.&lt;/p&gt;\\n","pos":[19694,19747],"source":"\\n<p>The buffer to be sent over the connection.</p>\\n"},{"content":"\\n&lt;p&gt;Indicates whether the application is sending a binary or text message.&lt;/p&gt;\\n","pos":[19846,19927],"source":"\\n<p>Indicates whether the application is sending a binary or text message.</p>\\n"},{"content":"\\n&lt;p&gt;Indicates whether the data in “buffer” is the last part of a message.&lt;/p&gt;\\n","pos":[19999,20079],"source":"\\n<p>Indicates whether the data in “buffer” is the last part of a message.</p>\\n"},{"content":"\\n&lt;p&gt;The token that propagates the notification that operations should be canceled.&lt;/p&gt;\\n","pos":[20176,20265],"source":"\\n<p>The token that propagates the notification that operations should be canceled.</p>\\n"},{"pos":[21173,21194],"content":"System.Net.WebSockets","needQuote":true,"nodes":[{"content":"System.Net.WebSockets","pos":[0,21]}]},{"pos":[21370,21376],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21526,21537],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[21712,21722],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[21817,21825],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21894,21895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21922,21923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21993,22001],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22070,22071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22098,22099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22282,22296],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[22415,22421],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22488,22489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22539,22545],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22605,22606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22689,22695],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22762,22763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22813,22819],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22879,22880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23094,23116],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[23264,23270],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23337,23338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23388,23394],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23455,23456]},{"pos":[23511,23517],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23577,23578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23675,23681],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23748,23749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23799,23805],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23866,23867]},{"pos":[23922,23928],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23988,23989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24234,24265],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[24431,24446],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24522,24523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24573,24579],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24640,24641]},{"pos":[24696,24702],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24762,24763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24869,24884],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24960,24961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25011,25017],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25078,25079]},{"pos":[25134,25140],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25200,25201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25431,25444],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[25545,25556],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25628,25629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25656,25657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25730,25741],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25813,25814],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25841,25842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26017,26026],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[26119,26126],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26194,26195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26222,26223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26292,26299],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26367,26368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26395,26396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26571,26588],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[26697,26712],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26788,26789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26816,26817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26894,26909],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26985,26986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27013,27014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27159,27165],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[27354,27384],"content":"Nullable<WebSocketCloseStatus>","needQuote":true,"nodes":[{"content":"Nullable&lt;WebSocketCloseStatus&gt;","pos":[0,30],"source":"Nullable<WebSocketCloseStatus>"}]},{"pos":[27632,27640],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[27702,27703],"content":"<","needQuote":true,"nodes":[]},{"pos":[27782,27802],"content":"WebSocketCloseStatus","needQuote":true,"nodes":[{"content":"WebSocketCloseStatus","pos":[0,20]}]},{"pos":[27940,27948],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[28011,28014]},{"pos":[28100,28120],"content":"WebSocketCloseStatus","needQuote":true,"nodes":[{"content":"WebSocketCloseStatus","pos":[0,20]}]},{"pos":[28188,28189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28451,28462],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[28609,28617],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[28658,28659],"content":"<","needQuote":true,"nodes":[]},{"pos":[28686,28687],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28784,28792],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[28834,28837]},{"pos":[28871,28872],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28899,28900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29078,29084],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29267,29281],"content":"WebSocketState","needQuote":true,"nodes":[{"content":"WebSocketState","pos":[0,14]}]},{"pos":[29524,29544],"content":"WebSocketCloseStatus","needQuote":true,"nodes":[{"content":"WebSocketCloseStatus","pos":[0,20]}]},{"pos":[29792,29809],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[30037,30041],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[30198,30214],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[30367,30389],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[30593,30602],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[30705,30712],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[30764,30765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30792,30793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30867,30874],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[30926,30927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30954,30955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31153,31171],"content":"ArraySegment<Byte>","needQuote":true,"nodes":[{"content":"ArraySegment&lt;Byte&gt;","pos":[0,18],"source":"ArraySegment<Byte>"}]},{"pos":[31357,31369],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[31435,31436],"content":"<","needQuote":true,"nodes":[]},{"pos":[31484,31488],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[31620,31632],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[31699,31702]},{"pos":[31757,31761],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[31819,31820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32127,32155],"content":"Task<WebSocketReceiveResult>","needQuote":true,"nodes":[{"content":"Task&lt;WebSocketReceiveResult&gt;","pos":[0,28],"source":"Task<WebSocketReceiveResult>"}]},{"pos":[32441,32445],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[32519,32520],"content":"<","needQuote":true,"nodes":[]},{"pos":[32601,32623],"content":"WebSocketReceiveResult","needQuote":true,"nodes":[{"content":"WebSocketReceiveResult","pos":[0,22]}]},{"pos":[32775,32779],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[32854,32857]},{"pos":[32945,32967],"content":"WebSocketReceiveResult","needQuote":true,"nodes":[{"content":"WebSocketReceiveResult","pos":[0,22]}]},{"pos":[33037,33038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33314,33329],"content":"ArraySegment<T>","needQuote":true,"nodes":[{"content":"ArraySegment&lt;T&gt;","pos":[0,15],"source":"ArraySegment<T>"}]},{"pos":[33492,33504],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[33549,33550],"content":"<","needQuote":true,"nodes":[]},{"pos":[33577,33578],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33679,33691],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[33737,33740]},{"pos":[33774,33775],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33802,33803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33992,34005],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[34202,34206],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[34259,34260],"content":"<","needQuote":true,"nodes":[]},{"pos":[34287,34294],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[34409,34413],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[34467,34470]},{"pos":[34504,34511],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[34544,34545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34783,34803],"content":"WebSocketMessageType","needQuote":true,"nodes":[{"content":"WebSocketMessageType","pos":[0,20]}]},{"pos":[35021,35028],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Net.WebSockets.WebSocket\n  commentId: T:System.Net.WebSockets.WebSocket\n  id: WebSocket\n  parent: System.Net.WebSockets\n  children:\n  - System.Net.WebSockets.WebSocket.#ctor\n  - System.Net.WebSockets.WebSocket.Abort\n  - System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  - System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  - System.Net.WebSockets.WebSocket.CloseStatus\n  - System.Net.WebSockets.WebSocket.CloseStatusDescription\n  - System.Net.WebSockets.WebSocket.Dispose\n  - System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)\n  - System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)\n  - System.Net.WebSockets.WebSocket.State\n  - System.Net.WebSockets.WebSocket.SubProtocol\n  langs:\n  - csharp\n  - vb\n  name: WebSocket\n  fullName: System.Net.WebSockets.WebSocket\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WebSocket\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 10\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>The WebSocket class allows applications to send and receive data after the WebSocket upgrade has completed.</p>\\n\"\n  syntax:\n    content: 'public abstract class WebSocket : IDisposable'\n    content.vb: >-\n      Public MustInherit Class WebSocket\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: WebSocket\n- uid: System.Net.WebSockets.WebSocket.#ctor\n  commentId: M:System.Net.WebSockets.WebSocket.#ctor\n  id: '#ctor'\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: WebSocket()\n  fullName: System.Net.WebSockets.WebSocket.WebSocket()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 12\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Creates an instance of the <xref href=\\\"System.Net.WebSockets.WebSocket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected WebSocket()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: WebSocket.WebSocket()\n- uid: System.Net.WebSockets.WebSocket.CloseStatus\n  commentId: P:System.Net.WebSockets.WebSocket.CloseStatus\n  id: CloseStatus\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: CloseStatus\n  fullName: System.Net.WebSockets.WebSocket.CloseStatus\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CloseStatus\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 13\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Indicates the reason why the remote endpoint initiated the close handshake.</p>\\n\"\n  syntax:\n    content: public abstract WebSocketCloseStatus? CloseStatus { get; }\n    content.vb: Public MustOverride ReadOnly Property CloseStatus As WebSocketCloseStatus?\n    parameters: []\n    return:\n      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.WebSockets.WebSocketCloseStatus\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: WebSocket.CloseStatus\n- uid: System.Net.WebSockets.WebSocket.CloseStatusDescription\n  commentId: P:System.Net.WebSockets.WebSocket.CloseStatusDescription\n  id: CloseStatusDescription\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: CloseStatusDescription\n  fullName: System.Net.WebSockets.WebSocket.CloseStatusDescription\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CloseStatusDescription\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 14\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Allows the remote endpoint to describe the reason why the connection was closed.</p>\\n\"\n  syntax:\n    content: public abstract string CloseStatusDescription { get; }\n    content.vb: Public MustOverride ReadOnly Property CloseStatusDescription As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: WebSocket.CloseStatusDescription\n- uid: System.Net.WebSockets.WebSocket.State\n  commentId: P:System.Net.WebSockets.WebSocket.State\n  id: State\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: State\n  fullName: System.Net.WebSockets.WebSocket.State\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: State\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 15\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Returns the current state of the WebSocket connection.</p>\\n\"\n  syntax:\n    content: public abstract WebSocketState State { get; }\n    content.vb: Public MustOverride ReadOnly Property State As WebSocketState\n    parameters: []\n    return:\n      type: System.Net.WebSockets.WebSocketState\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.WebSockets.WebSocketState\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: WebSocket.State\n- uid: System.Net.WebSockets.WebSocket.SubProtocol\n  commentId: P:System.Net.WebSockets.WebSocket.SubProtocol\n  id: SubProtocol\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: SubProtocol\n  fullName: System.Net.WebSockets.WebSocket.SubProtocol\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SubProtocol\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 16\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>The subprotocol that was negotiated during the opening handshake.</p>\\n\"\n  syntax:\n    content: public abstract string SubProtocol { get; }\n    content.vb: Public MustOverride ReadOnly Property SubProtocol As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: WebSocket.SubProtocol\n- uid: System.Net.WebSockets.WebSocket.Abort\n  commentId: M:System.Net.WebSockets.WebSocket.Abort\n  id: Abort\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: Abort()\n  fullName: System.Net.WebSockets.WebSocket.Abort()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Abort\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 17\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Aborts the WebSocket connection and cancels any pending IO operations.</p>\\n\"\n  syntax:\n    content: public abstract void Abort()\n    content.vb: Public MustOverride Sub Abort\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebSocket.Abort()\n- uid: System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  commentId: M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  id: CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: CloseAsync(WebSocketCloseStatus, String, CancellationToken)\n  fullName: System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus, System.String, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CloseAsync\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 18\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Closes the WebSocket connection as an asynchronous operation using the close handshake defined in the <see href=\\\"http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06\\\">WebSocket protocol specification</see> section 7.</p>\\n\"\n  syntax:\n    content: public abstract Task CloseAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)\n    content.vb: Public MustOverride Function CloseAsync(closeStatus As WebSocketCloseStatus, statusDescription As String, cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: closeStatus\n      type: System.Net.WebSockets.WebSocketCloseStatus\n      description: \"\\n<p>Indicates the reason for closing the WebSocket connection.</p>\\n\"\n    - id: statusDescription\n      type: System.String\n      description: \"\\n<p>Specifies a human readable explanation as to why the connection is closed.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token that can be used to propagate notification that operations should be canceled.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)\n- uid: System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  commentId: M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  id: CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)\n  fullName: System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus, System.String, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CloseOutputAsync\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 19\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Initiates or completes the close handshake defined in the <see href=\\\"http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06\\\">WebSocket protocol specification section 7</see>.</p>\\n\"\n  syntax:\n    content: public abstract Task CloseOutputAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)\n    content.vb: Public MustOverride Function CloseOutputAsync(closeStatus As WebSocketCloseStatus, statusDescription As String, cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: closeStatus\n      type: System.Net.WebSockets.WebSocketCloseStatus\n      description: \"\\n<p>Indicates the reason for closing the WebSocket connection.</p>\\n\"\n    - id: statusDescription\n      type: System.String\n      description: \"\\n<p>Allows applications to specify a human readable explanation as to why the connection is closed.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token that can be used to propagate notification that operations should be canceled.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)\n- uid: System.Net.WebSockets.WebSocket.Dispose\n  commentId: M:System.Net.WebSockets.WebSocket.Dispose\n  id: Dispose\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Net.WebSockets.WebSocket.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 20\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Used to clean up unmanaged resources for ASP.NET and self-hosted implementations.</p>\\n\"\n  syntax:\n    content: public abstract void Dispose()\n    content.vb: Public MustOverride Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebSocket.Dispose()\n- uid: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)\n  commentId: M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)\n  id: ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveAsync(ArraySegment<Byte>, CancellationToken)\n  fullName: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment<System.Byte>, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveAsync\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 21\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Receives data from the WebSocket connection asynchronously.</p>\\n\"\n  syntax:\n    content: public abstract Task<WebSocketReceiveResult> ReceiveAsync(ArraySegment<byte> buffer, CancellationToken cancellationToken)\n    content.vb: Public MustOverride Function ReceiveAsync(buffer As ArraySegment(Of Byte), cancellationToken As CancellationToken) As Task(Of WebSocketReceiveResult)\n    parameters:\n    - id: buffer\n      type: System.ArraySegment{System.Byte}\n      description: \"\\n<p>References the application buffer that is the storage location for the received data.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>Propagate the notification that operations should be canceled.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation. The <xref href=\\\"System.Threading.Tasks.Task`1.Result\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property on the task object returns a <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array containing the received data.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  fullName.vb: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment(Of System.Byte), System.Threading.CancellationToken)\n  name.vb: ReceiveAsync(ArraySegment(Of Byte), CancellationToken)\n  nameWithType: WebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)\n  nameWithType.vb: WebSocket.ReceiveAsync(ArraySegment(Of Byte), CancellationToken)\n- uid: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)\n  commentId: M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)\n  id: SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)\n  parent: System.Net.WebSockets.WebSocket\n  langs:\n  - csharp\n  - vb\n  name: SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)\n  fullName: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment<System.Byte>, System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendAsync\n    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs\n    startLine: 22\n  assemblies:\n  - System.Net.WebSockets\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Sends data over the WebSocket connection asynchronously.</p>\\n\"\n  syntax:\n    content: public abstract Task SendAsync(ArraySegment<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)\n    content.vb: Public MustOverride Function SendAsync(buffer As ArraySegment(Of Byte), messageType As WebSocketMessageType, endOfMessage As Boolean, cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: buffer\n      type: System.ArraySegment{System.Byte}\n      description: \"\\n<p>The buffer to be sent over the connection.</p>\\n\"\n    - id: messageType\n      type: System.Net.WebSockets.WebSocketMessageType\n      description: \"\\n<p>Indicates whether the application is sending a binary or text message.</p>\\n\"\n    - id: endOfMessage\n      type: System.Boolean\n      description: \"\\n<p>Indicates whether the data in “buffer” is the last part of a message.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token that propagates the notification that operations should be canceled.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  fullName.vb: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment(Of System.Byte), System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Threading.CancellationToken)\n  name.vb: SendAsync(ArraySegment(Of Byte), WebSocketMessageType, Boolean, CancellationToken)\n  nameWithType: WebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)\n  nameWithType.vb: WebSocket.SendAsync(ArraySegment(Of Byte), WebSocketMessageType, Boolean, CancellationToken)\nreferences:\n- uid: System.Net.WebSockets\n  isExternal: false\n  name: System.Net.WebSockets\n  fullName: System.Net.WebSockets\n  commentId: N:System.Net.WebSockets\n  nameWithType: System.Net.WebSockets\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<WebSocketCloseStatus>\n  fullName: System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>\n  fullname.vb: System.Nullable(Of System.Net.WebSockets.WebSocketCloseStatus)\n  name.vb: Nullable(Of WebSocketCloseStatus)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.WebSockets.WebSocketCloseStatus\n    name: WebSocketCloseStatus\n    fullName: System.Net.WebSockets.WebSocketCloseStatus\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.WebSockets.WebSocketCloseStatus\n    name: WebSocketCloseStatus\n    fullName: System.Net.WebSockets.WebSocketCloseStatus\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}\n  nameWithType: Nullable<WebSocketCloseStatus>\n  nameWithType.vb: Nullable(Of WebSocketCloseStatus)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Net.WebSockets.WebSocketState\n  parent: System.Net.WebSockets\n  isExternal: false\n  name: WebSocketState\n  fullName: System.Net.WebSockets.WebSocketState\n  commentId: T:System.Net.WebSockets.WebSocketState\n  nameWithType: WebSocketState\n- uid: System.Net.WebSockets.WebSocketCloseStatus\n  parent: System.Net.WebSockets\n  isExternal: false\n  name: WebSocketCloseStatus\n  fullName: System.Net.WebSockets.WebSocketCloseStatus\n  commentId: T:System.Net.WebSockets.WebSocketCloseStatus\n  nameWithType: WebSocketCloseStatus\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  nameWithType: CancellationToken\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  commentId: T:System.Threading.Tasks.Task\n  nameWithType: Task\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  commentId: N:System.Threading\n  nameWithType: System.Threading\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.ArraySegment{System.Byte}\n  parent: System\n  definition: System.ArraySegment`1\n  name: ArraySegment<Byte>\n  fullName: System.ArraySegment<System.Byte>\n  fullname.vb: System.ArraySegment(Of System.Byte)\n  name.vb: ArraySegment(Of Byte)\n  spec.csharp:\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.ArraySegment{System.Byte}\n  nameWithType: ArraySegment<Byte>\n  nameWithType.vb: ArraySegment(Of Byte)\n- uid: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<WebSocketReceiveResult>\n  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Net.WebSockets.WebSocketReceiveResult)\n  name.vb: Task(Of WebSocketReceiveResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.WebSockets.WebSocketReceiveResult\n    name: WebSocketReceiveResult\n    fullName: System.Net.WebSockets.WebSocketReceiveResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.WebSockets.WebSocketReceiveResult\n    name: WebSocketReceiveResult\n    fullName: System.Net.WebSockets.WebSocketReceiveResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}\n  nameWithType: Task<WebSocketReceiveResult>\n  nameWithType.vb: Task(Of WebSocketReceiveResult)\n- uid: System.ArraySegment`1\n  parent: System\n  isExternal: false\n  name: ArraySegment<T>\n  fullName: System.ArraySegment<T>\n  fullname.vb: System.ArraySegment(Of T)\n  name.vb: ArraySegment(Of T)\n  spec.csharp:\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.ArraySegment`1\n  nameWithType: ArraySegment<T>\n  nameWithType.vb: ArraySegment(Of T)\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Net.WebSockets.WebSocketMessageType\n  parent: System.Net.WebSockets\n  isExternal: false\n  name: WebSocketMessageType\n  fullName: System.Net.WebSockets.WebSocketMessageType\n  commentId: T:System.Net.WebSockets.WebSocketMessageType\n  nameWithType: WebSocketMessageType\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n"}