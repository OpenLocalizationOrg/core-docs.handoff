{"nodes":[{"pos":[3404,3413],"content":"SystemAcl","needQuote":true,"nodes":[{"content":"SystemAcl","pos":[0,9]}]},{"pos":[6771,6811],"content":"SystemAcl(Boolean, Boolean, Byte, Int32)","needQuote":true,"nodes":[{"content":"SystemAcl(Boolean, Boolean, Byte, Int32)","pos":[0,40]}]},{"pos":[9223,9257],"content":"SystemAcl(Boolean, Boolean, Int32)","needQuote":true,"nodes":[{"content":"SystemAcl(Boolean, Boolean, Int32)","pos":[0,34]}]},{"pos":[11476,11511],"content":"SystemAcl(Boolean, Boolean, RawAcl)","needQuote":true,"nodes":[{"content":"SystemAcl(Boolean, Boolean, RawAcl)","pos":[0,35]}]},{"pos":[14365,14448],"content":"AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)","needQuote":true,"nodes":[{"content":"AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)","pos":[0,83]}]},{"content":"\\n&lt;p&gt;The type of audit rule to add.&lt;/p&gt;\\n","pos":[15747,15788],"source":"\\n<p>The type of audit rule to add.</p>\\n"},{"content":"\\n&lt;p&gt;The access mask for the new audit rule.&lt;/p&gt;\\n","pos":[16100,16150],"source":"\\n<p>The access mask for the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance properties of the new audit rule.&lt;/p&gt;\\n","pos":[16258,16337],"source":"\\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance propagation properties for the new audit rule.&lt;/p&gt;\\n","pos":[16445,16537],"source":"\\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\\n"},{"pos":[17716,17827],"content":"AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)","needQuote":true,"nodes":[{"content":"AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)","pos":[0,111]}]},{"content":"\\n&lt;p&gt;The type of audit rule to add.&lt;/p&gt;\\n","pos":[19527,19568],"source":"\\n<p>The type of audit rule to add.</p>\\n"},{"content":"\\n&lt;p&gt;The access mask for the new audit rule.&lt;/p&gt;\\n","pos":[19880,19930],"source":"\\n<p>The access mask for the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance properties of the new audit rule.&lt;/p&gt;\\n","pos":[20038,20117],"source":"\\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance propagation properties for the new audit rule.&lt;/p&gt;\\n","pos":[20225,20317],"source":"\\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify if the &lt;em&gt;objectType&lt;/em&gt; and &lt;em&gt;inheritedObjectType&lt;/em&gt; parameters contain non-&lt;strong&gt;null&lt;/strong&gt; values.&lt;/p&gt;\\n","pos":[20418,20560],"source":"\\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of objects to which the new audit rule applies.&lt;/p&gt;\\n","pos":[20627,20711],"source":"\\n<p>The identity of the class of objects to which the new audit rule applies.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of child objects which can inherit the new audit rule.&lt;/p&gt;\\n","pos":[20787,20878],"source":"\\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\\n"},{"pos":[21572,21617],"content":"AddAudit(SecurityIdentifier, ObjectAuditRule)","needQuote":true,"nodes":[{"content":"AddAudit(SecurityIdentifier, ObjectAuditRule)","pos":[0,45]}]},{"pos":[23953,24039],"content":"RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)","needQuote":true,"nodes":[{"content":"RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)","pos":[0,86]}]},{"content":"\\n&lt;p&gt;The type of audit rule to remove.&lt;/p&gt;\\n","pos":[25382,25426],"source":"\\n<p>The type of audit rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;The access mask for the rule to be removed.&lt;/p&gt;\\n","pos":[25741,25795],"source":"\\n<p>The access mask for the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance properties of the rule to be removed.&lt;/p&gt;\\n","pos":[25903,25986],"source":"\\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance propagation properties for the rule to be removed.&lt;/p&gt;\\n","pos":[26094,26190],"source":"\\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this method successfully removes the specified audit rule; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[26251,26382],"source":"\\n<p>\\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[27573,27687],"content":"RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)","needQuote":true,"nodes":[{"content":"RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)","pos":[0,114]}]},{"content":"\\n&lt;p&gt;The type of audit rule to remove.&lt;/p&gt;\\n","pos":[29380,29424],"source":"\\n<p>The type of audit rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;The access mask for the rule to be removed.&lt;/p&gt;\\n","pos":[29739,29793],"source":"\\n<p>The access mask for the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance properties of the rule to be removed.&lt;/p&gt;\\n","pos":[29901,29984],"source":"\\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance propagation properties for the rule to be removed.&lt;/p&gt;\\n","pos":[30092,30188],"source":"\\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify if the &lt;em&gt;objectType&lt;/em&gt; and &lt;em&gt;inheritedObjectType&lt;/em&gt; parameters contain non-&lt;strong&gt;null&lt;/strong&gt; values.&lt;/p&gt;\\n","pos":[30289,30431],"source":"\\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of objects to which the removed audit control rule applies.&lt;/p&gt;\\n","pos":[30498,30594],"source":"\\n<p>The identity of the class of objects to which the removed audit control rule applies.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of child objects which can inherit the removed audit rule.&lt;/p&gt;\\n","pos":[30670,30765],"source":"\\n<p>The identity of the class of child objects which can inherit the removed audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this method successfully removes the specified audit rule; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[30826,30957],"source":"\\n<p>\\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[31663,31711],"content":"RemoveAudit(SecurityIdentifier, ObjectAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAudit(SecurityIdentifier, ObjectAuditRule)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this method successfully removes the specified audit rule; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[33224,33355],"source":"\\n<p>\\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[34325,34419],"content":"RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)","needQuote":true,"nodes":[{"content":"RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)","pos":[0,94]}]},{"content":"\\n&lt;p&gt;The type of audit rule to remove.&lt;/p&gt;\\n","pos":[35785,35829],"source":"\\n<p>The type of audit rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;The access mask for the rule to be removed.&lt;/p&gt;\\n","pos":[36144,36198],"source":"\\n<p>The access mask for the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance properties of the rule to be removed.&lt;/p&gt;\\n","pos":[36306,36389],"source":"\\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance propagation properties for the rule to be removed.&lt;/p&gt;\\n","pos":[36497,36593],"source":"\\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\\n"},{"pos":[37816,37938],"content":"RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)","needQuote":true,"nodes":[{"content":"RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)","pos":[0,122]}]},{"content":"\\n&lt;p&gt;The type of audit rule to remove.&lt;/p&gt;\\n","pos":[39654,39698],"source":"\\n<p>The type of audit rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;The access mask for the rule to be removed.&lt;/p&gt;\\n","pos":[40013,40067],"source":"\\n<p>The access mask for the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance properties of the rule to be removed.&lt;/p&gt;\\n","pos":[40175,40258],"source":"\\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance propagation properties for the rule to be removed.&lt;/p&gt;\\n","pos":[40366,40462],"source":"\\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify if the &lt;em&gt;objectType&lt;/em&gt; and &lt;em&gt;inheritedObjectType&lt;/em&gt; parameters contain non-&lt;strong&gt;null&lt;/strong&gt; values.&lt;/p&gt;\\n","pos":[40563,40705],"source":"\\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of objects to which the removed audit control rule applies.&lt;/p&gt;\\n","pos":[40772,40868],"source":"\\n<p>The identity of the class of objects to which the removed audit control rule applies.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of child objects which can inherit the removed audit rule.&lt;/p&gt;\\n","pos":[40944,41039],"source":"\\n<p>The identity of the class of child objects which can inherit the removed audit rule.</p>\\n"},{"pos":[41777,41833],"content":"RemoveAuditSpecific(SecurityIdentifier, ObjectAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditSpecific(SecurityIdentifier, ObjectAuditRule)","pos":[0,56]}]},{"pos":[44246,44329],"content":"SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)","needQuote":true,"nodes":[{"content":"SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)","pos":[0,83]}]},{"content":"\\n&lt;p&gt;The audit condition to set.&lt;/p&gt;\\n","pos":[45647,45685],"source":"\\n<p>The audit condition to set.</p>\\n"},{"content":"\\n&lt;p&gt;The access mask for the new audit rule.&lt;/p&gt;\\n","pos":[45997,46047],"source":"\\n<p>The access mask for the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance properties of the new audit rule.&lt;/p&gt;\\n","pos":[46155,46234],"source":"\\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance propagation properties for the new audit rule.&lt;/p&gt;\\n","pos":[46342,46434],"source":"\\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\\n"},{"pos":[47613,47724],"content":"SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)","needQuote":true,"nodes":[{"content":"SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)","pos":[0,111]}]},{"content":"\\n&lt;p&gt;The audit condition to set.&lt;/p&gt;\\n","pos":[49392,49430],"source":"\\n<p>The audit condition to set.</p>\\n"},{"content":"\\n&lt;p&gt;The access mask for the new audit rule.&lt;/p&gt;\\n","pos":[49742,49792],"source":"\\n<p>The access mask for the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance properties of the new audit rule.&lt;/p&gt;\\n","pos":[49900,49979],"source":"\\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify the inheritance propagation properties for the new audit rule.&lt;/p&gt;\\n","pos":[50087,50179],"source":"\\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Flags that specify if the &lt;em&gt;objectType&lt;/em&gt; and &lt;em&gt;inheritedObjectType&lt;/em&gt; parameters contain non-&lt;strong&gt;null&lt;/strong&gt; values.&lt;/p&gt;\\n","pos":[50280,50422],"source":"\\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of objects to which the new audit rule applies.&lt;/p&gt;\\n","pos":[50489,50573],"source":"\\n<p>The identity of the class of objects to which the new audit rule applies.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of child objects which can inherit the new audit rule.&lt;/p&gt;\\n","pos":[50649,50740],"source":"\\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\\n"},{"pos":[51434,51479],"content":"SetAudit(SecurityIdentifier, ObjectAuditRule)","needQuote":true,"nodes":[{"content":"SetAudit(SecurityIdentifier, ObjectAuditRule)","pos":[0,45]}]},{"pos":[53108,53137],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[53337,53343],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53538,53548],"content":"GenericAcl","needQuote":true,"nodes":[{"content":"GenericAcl","pos":[0,10]}]},{"pos":[53800,53809],"content":"CommonAcl","needQuote":true,"nodes":[{"content":"CommonAcl","pos":[0,9]}]},{"pos":[54038,54049],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[54262,54273],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[54529,54541],"content":"BinaryLength","needQuote":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[54845,54850],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[55139,55150],"content":"IsCanonical","needQuote":true,"nodes":[{"content":"IsCanonical","pos":[0,11]}]},{"pos":[55457,55468],"content":"IsContainer","needQuote":true,"nodes":[{"content":"IsContainer","pos":[0,11]}]},{"pos":[55768,55772],"content":"IsDS","needQuote":true,"nodes":[{"content":"IsDS","pos":[0,4]}]},{"pos":[56064,56075],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"pos":[56337,56341],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[56412,56413]},{"pos":[56465,56470],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":"]","pos":[56530,56531]},{"pos":[56640,56644],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[56714,56715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56764,56769],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56828,56829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57133,57141],"content":"Revision","needQuote":true,"nodes":[{"content":"Revision","pos":[0,8]}]},{"pos":[57468,57496],"content":"GetBinaryForm(Byte[], Int32)","needQuote":true,"nodes":[{"content":"GetBinaryForm(Byte[], Int32)","pos":[0,28]}]},{"pos":[57846,57859],"content":"GetBinaryForm","needQuote":true,"nodes":[{"content":"GetBinaryForm","pos":[0,13]}]},{"pos":[57938,57939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57987,57991],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[58050,58052]},{"content":",","pos":[58084,58085]},{"pos":[58139,58144],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58203,58204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58333,58346],"content":"GetBinaryForm","needQuote":true,"nodes":[{"content":"GetBinaryForm","pos":[0,13]}]},{"pos":[58425,58426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58474,58478],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[58536,58538],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[58567,58568]},{"pos":[58622,58627],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58686,58687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59090,59115],"content":"Purge(SecurityIdentifier)","needQuote":true,"nodes":[{"content":"Purge(SecurityIdentifier)","pos":[0,25]}]},{"pos":[59346,59351],"content":"Purge","needQuote":true,"nodes":[{"content":"Purge","pos":[0,5]}]},{"pos":[59422,59423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59504,59522],"content":"SecurityIdentifier","needQuote":true,"nodes":[{"content":"SecurityIdentifier","pos":[0,18]}]},{"pos":[59613,59614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59753,59758],"content":"Purge","needQuote":true,"nodes":[{"content":"Purge","pos":[0,5]}]},{"pos":[59829,59830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59911,59929],"content":"SecurityIdentifier","needQuote":true,"nodes":[{"content":"SecurityIdentifier","pos":[0,18]}]},{"pos":[60020,60021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60342,60363],"content":"RemoveInheritedAces()","needQuote":true,"nodes":[{"content":"RemoveInheritedAces()","pos":[0,21]}]},{"pos":[60532,60551],"content":"RemoveInheritedAces","needQuote":true,"nodes":[{"content":"RemoveInheritedAces","pos":[0,19]}]},{"pos":[60636,60637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60664,60665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60772,60791],"content":"RemoveInheritedAces","needQuote":true,"nodes":[{"content":"RemoveInheritedAces","pos":[0,19]}]},{"pos":[60876,60877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60904,60905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61184,61195],"content":"AclRevision","needQuote":true,"nodes":[{"content":"AclRevision","pos":[0,11]}]},{"pos":[61509,61522],"content":"AclRevisionDS","needQuote":true,"nodes":[{"content":"AclRevisionDS","pos":[0,13]}]},{"pos":[61844,61859],"content":"MaxBinaryLength","needQuote":true,"nodes":[{"content":"MaxBinaryLength","pos":[0,15]}]},{"pos":[62186,62200],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[62518,62526],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[62880,62907],"content":"CopyTo(GenericAce[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(GenericAce[], Int32)","pos":[0,27]}]},{"pos":[63325,63331],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[63404,63405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63482,63492],"content":"GenericAce","needQuote":true,"nodes":[{"content":"GenericAce","pos":[0,10]}]},{"content":"[]","pos":[63559,63561]},{"content":",","pos":[63593,63594]},{"pos":[63648,63653],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63712,63713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63865,63871],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[63944,63945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64022,64032],"content":"GenericAce","needQuote":true,"nodes":[{"content":"GenericAce","pos":[0,10]}]},{"pos":[64098,64100],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[64129,64130]},{"pos":[64184,64189],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64248,64249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64640,64655],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[64814,64827],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[64907,64908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64935,64936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65038,65051],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[65131,65132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65159,65160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65481,65513],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"pos":[65836,65854],"content":"ICollection.CopyTo","needQuote":true,"nodes":[{"content":"ICollection.CopyTo","pos":[0,18]}]},{"pos":[65958,65959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66008,66013],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[66073,66074]},{"pos":[66128,66133],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66192,66193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66346,66383],"content":"System.Collections.ICollection.CopyTo","needQuote":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo","pos":[0,37]}]},{"pos":[66487,66488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66537,66542],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[66602,66603]},{"pos":[66657,66662],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66721,66722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67174,67201],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[67480,67505],"content":"IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator","pos":[0,25]}]},{"pos":[67616,67617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67644,67645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67778,67822],"content":"System.Collections.IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator","pos":[0,44]}]},{"pos":[67933,67934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67961,67962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68293,68303],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[68398,68406],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[68475,68476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68503,68504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68574,68582],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[68651,68652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68679,68680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68863,68877],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[68996,69002],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69069,69070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69120,69126],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69186,69187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69270,69276],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69343,69344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69394,69400],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69460,69461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69675,69697],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[69845,69851],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69918,69919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69969,69975],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[70036,70037]},{"pos":[70092,70098],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70158,70159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70256,70262],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[70329,70330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70380,70386],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[70447,70448]},{"pos":[70503,70509],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70569,70570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70815,70846],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[71012,71027],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[71103,71104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71154,71160],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[71221,71222]},{"pos":[71277,71283],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71343,71344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71450,71465],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[71541,71542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71592,71598],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[71659,71660]},{"pos":[71715,71721],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71781,71782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72012,72025],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[72126,72137],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[72209,72210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72237,72238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72311,72322],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[72394,72395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72422,72423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72598,72607],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[72700,72707],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[72775,72776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72803,72804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72873,72880],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[72948,72949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72976,72977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73152,73169],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[73278,73293],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[73369,73370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73397,73398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73475,73490],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[73566,73567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73594,73595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73890,73903],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[74020,74031],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[74090,74091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74118,74119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74200,74211],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[74270,74271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74298,74299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74654,74666],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[74799,74809],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[74876,74877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74904,74905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74994,75004],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[75071,75072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75099,75100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75441,75456],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[75660,75673],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[75735,75736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75763,75764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75842,75858],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[75923,75924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75951,75952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76330,76347],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[76559,76574],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[76638,76639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76666,76667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76747,76765],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[76832,76833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76860,76861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77096,77102],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[77221,77239],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[77440,77464],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[77643,77654],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[77713,77714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77781,77792],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[77869,77870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77983,77994],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[78053,78054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78121,78132],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[78209,78210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78438,78447],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[78653,78676],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[78871,78881],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[78948,78949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79016,79027],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[79104,79105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79226,79236],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[79303,79304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79371,79382],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[79459,79460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79713,79731],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[79953,79979],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[80286,80299],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[80361,80362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80429,80440],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[80517,80518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80628,80644],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[80709,80710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80777,80788],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[80865,80866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81155,81165],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[81365,81393],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[81708,81723],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[81787,81788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81855,81866],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[81943,81944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82056,82074],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[82141,82142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82209,82220],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[82297,82298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82560,82571],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[82718,82725],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[82871,82875],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[83013,83018],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83206,83212],"content":"RawAcl","needQuote":true,"nodes":[{"content":"RawAcl","pos":[0,6]}]},{"pos":[83453,83463],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[83716,83734],"content":"SecurityIdentifier","needQuote":true,"nodes":[{"content":"SecurityIdentifier","pos":[0,18]}]},{"pos":[84009,84025],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[84302,84318],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[84534,84559],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[84801,84815],"content":"ObjectAceFlags","needQuote":true,"nodes":[{"content":"ObjectAceFlags","pos":[0,14]}]},{"pos":[85028,85032],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[85226,85241],"content":"ObjectAuditRule","needQuote":true,"nodes":[{"content":"ObjectAuditRule","pos":[0,15]}]}],"content":"items:\n- uid: System.Security.AccessControl.SystemAcl\n  commentId: T:System.Security.AccessControl.SystemAcl\n  id: SystemAcl\n  parent: System.Security.AccessControl\n  children:\n  - System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  - System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  - System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  - System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  langs:\n  - csharp\n  - vb\n  name: SystemAcl\n  fullName: System.Security.AccessControl.SystemAcl\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SystemAcl\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 513\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Represents a System Access Control List (SACL).</p>\\n\"\n  syntax:\n    content: 'public sealed class SystemAcl : CommonAcl, ICollection, IEnumerable'\n    content.vb: >-\n      Public NotInheritable Class SystemAcl\n          Inherits CommonAcl\n          Implements ICollection, IEnumerable\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAcl\n  - System.Security.AccessControl.CommonAcl\n  implements:\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Security.AccessControl.CommonAcl.BinaryLength\n  - System.Security.AccessControl.CommonAcl.Count\n  - System.Security.AccessControl.CommonAcl.IsCanonical\n  - System.Security.AccessControl.CommonAcl.IsContainer\n  - System.Security.AccessControl.CommonAcl.IsDS\n  - System.Security.AccessControl.CommonAcl.Item(System.Int32)\n  - System.Security.AccessControl.CommonAcl.Revision\n  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)\n  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n  - System.Security.AccessControl.GenericAcl.AclRevision\n  - System.Security.AccessControl.GenericAcl.AclRevisionDS\n  - System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  - System.Security.AccessControl.GenericAcl.IsSynchronized\n  - System.Security.AccessControl.GenericAcl.SyncRoot\n  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  - System.Security.AccessControl.GenericAcl.GetEnumerator\n  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SystemAcl\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  commentId: M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  id: '#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)'\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: SystemAcl(Boolean, Boolean, Byte, Int32)\n  fullName: System.Security.AccessControl.SystemAcl.SystemAcl(System.Boolean, System.Boolean, System.Byte, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 515\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified values.</p>\\n\"\n  syntax:\n    content: public SystemAcl(bool isContainer, bool isDS, byte revision, int capacity)\n    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, revision As Byte, capacity As Integer)\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a container.</p>\\n\"\n    - id: isDS\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a directory object Access Control List (ACL).</p>\\n\"\n    - id: revision\n      type: System.Byte\n      description: \"\\n<p>The revision level of the new <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    - id: capacity\n      type: System.Int32\n      description: \"\\n<p>The number of Access Control Entries (ACEs) this <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object can contain. This number is to be used only as a hint.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.SystemAcl(Boolean, Boolean, Byte, Int32)\n- uid: System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  commentId: M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  id: '#ctor(System.Boolean,System.Boolean,System.Int32)'\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: SystemAcl(Boolean, Boolean, Int32)\n  fullName: System.Security.AccessControl.SystemAcl.SystemAcl(System.Boolean, System.Boolean, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 516\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified values.</p>\\n\"\n  syntax:\n    content: public SystemAcl(bool isContainer, bool isDS, int capacity)\n    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, capacity As Integer)\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a container.</p>\\n\"\n    - id: isDS\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a directory object Access Control List (ACL).</p>\\n\"\n    - id: capacity\n      type: System.Int32\n      description: \"\\n<p>The number of Access Control Entries (ACEs) this <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object can contain. This number is to be used only as a hint.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.SystemAcl(Boolean, Boolean, Int32)\n- uid: System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  commentId: M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)'\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: SystemAcl(Boolean, Boolean, RawAcl)\n  fullName: System.Security.AccessControl.SystemAcl.SystemAcl(System.Boolean, System.Boolean, System.Security.AccessControl.RawAcl)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 517\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified values from the specified <xref href=\\\"System.Security.AccessControl.RawAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public SystemAcl(bool isContainer, bool isDS, RawAcl rawAcl)\n    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, rawAcl As RawAcl)\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a container.</p>\\n\"\n    - id: isDS\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the new <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is a directory object Access Control List (ACL).</p>\\n\"\n    - id: rawAcl\n      type: System.Security.AccessControl.RawAcl\n      description: \"\\n<p>The underlying <xref href=\\\"System.Security.AccessControl.RawAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the new <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. Specify <strong>null</strong> to create an empty ACL.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.SystemAcl(Boolean, Boolean, RawAcl)\n- uid: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  commentId: M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAudit\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 518\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Adds an audit rule to the current <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void AddAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)\n    content.vb: Public Sub AddAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)\n    parameters:\n    - id: auditFlags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>The type of audit rule to add.</p>\\n\"\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to add an audit rule.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask for the new audit rule.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n- uid: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAudit\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 519\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Adds an audit rule with the specified settings to the current <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new audit rule.</p>\\n\"\n  syntax:\n    content: public void AddAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)\n    content.vb: Public Sub AddAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)\n    parameters:\n    - id: auditFlags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>The type of audit rule to add.</p>\\n\"\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to add an audit rule.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask for the new audit rule.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\\n\"\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: \"\\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\\n\"\n    - id: objectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of objects to which the new audit rule applies.</p>\\n\"\n    - id: inheritedObjectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n- uid: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  id: AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: AddAudit(SecurityIdentifier, ObjectAuditRule)\n  fullName: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAudit\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 520\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Adds an audit rule to the current <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void AddAudit(SecurityIdentifier sid, ObjectAuditRule rule)\n    content.vb: Public Sub AddAudit(sid As SecurityIdentifier, rule As ObjectAuditRule)\n    parameters:\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to add an audit rule.</p>\\n\"\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.ObjectAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>for the new audit rule.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.AddAudit(SecurityIdentifier, ObjectAuditRule)\n- uid: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAudit\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 521\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes the specified audit rule from the current <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool RemoveAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)\n    content.vb: Public Function RemoveAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags) As Boolean\n    parameters:\n    - id: auditFlags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>The type of audit rule to remove.</p>\\n\"\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to remove an audit rule.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask for the rule to be removed.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n- uid: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAudit\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 522\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes the specified audit rule from the current <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</p>\\n\"\n  syntax:\n    content: public bool RemoveAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)\n    content.vb: Public Function RemoveAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid) As Boolean\n    parameters:\n    - id: auditFlags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>The type of audit rule to remove.</p>\\n\"\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to remove an audit rule.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask for the rule to be removed.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\\n\"\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: \"\\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\\n\"\n    - id: objectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of objects to which the removed audit control rule applies.</p>\\n\"\n    - id: inheritedObjectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of child objects which can inherit the removed audit rule.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n- uid: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: RemoveAudit(SecurityIdentifier, ObjectAuditRule)\n  fullName: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAudit\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 523\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes the specified audit rule from the current <xref href=\\\"System.Security.AccessControl.SystemAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool RemoveAudit(SecurityIdentifier sid, ObjectAuditRule rule)\n    content.vb: Public Function RemoveAudit(sid As SecurityIdentifier, rule As ObjectAuditRule) As Boolean\n    parameters:\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to remove an audit rule.</p>\\n\"\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.ObjectAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to remove an audit rule.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.RemoveAudit(SecurityIdentifier, ObjectAuditRule)\n- uid: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditSpecific\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 524\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes the specified audit rule from the current <xref href=\\\"System.Security.AccessControl.DiscretionaryAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void RemoveAuditSpecific(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)\n    content.vb: Public Sub RemoveAuditSpecific(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)\n    parameters:\n    - id: auditFlags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>The type of audit rule to remove.</p>\\n\"\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to remove an audit rule.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask for the rule to be removed.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n- uid: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditSpecific\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 525\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes the specified audit rule from the current <xref href=\\\"System.Security.AccessControl.DiscretionaryAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</p>\\n\"\n  syntax:\n    content: public void RemoveAuditSpecific(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)\n    content.vb: Public Sub RemoveAuditSpecific(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)\n    parameters:\n    - id: auditFlags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>The type of audit rule to remove.</p>\\n\"\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to remove an audit rule.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask for the rule to be removed.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\\n\"\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: \"\\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\\n\"\n    - id: objectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of objects to which the removed audit control rule applies.</p>\\n\"\n    - id: inheritedObjectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of child objects which can inherit the removed audit rule.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n- uid: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditSpecific(SecurityIdentifier, ObjectAuditRule)\n  fullName: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditSpecific\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 526\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes the specified audit rule from the current <xref href=\\\"System.Security.AccessControl.DiscretionaryAcl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void RemoveAuditSpecific(SecurityIdentifier sid, ObjectAuditRule rule)\n    content.vb: Public Sub RemoveAuditSpecific(sid As SecurityIdentifier, rule As ObjectAuditRule)\n    parameters:\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to remove an audit rule.</p>\\n\"\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.ObjectAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the rule to be removed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.RemoveAuditSpecific(SecurityIdentifier, ObjectAuditRule)\n- uid: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  commentId: M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAudit\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 527\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Sets the specified audit rule for the specified <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void SetAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)\n    content.vb: Public Sub SetAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)\n    parameters:\n    - id: auditFlags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>The audit condition to set.</p>\\n\"\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to set an audit rule.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask for the new audit rule.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n- uid: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAudit\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 528\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Sets the specified audit rule for the specified <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</p>\\n\"\n  syntax:\n    content: public void SetAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)\n    content.vb: Public Sub SetAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)\n    parameters:\n    - id: auditFlags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>The audit condition to set.</p>\\n\"\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to set an audit rule.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask for the new audit rule.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\\n\"\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: \"\\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\\n\"\n    - id: objectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of objects to which the new audit rule applies.</p>\\n\"\n    - id: inheritedObjectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n- uid: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  id: SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.SystemAcl\n  langs:\n  - csharp\n  - vb\n  name: SetAudit(SecurityIdentifier, ObjectAuditRule)\n  fullName: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAudit\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 529\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Sets the specified audit rule for the specified <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void SetAudit(SecurityIdentifier sid, ObjectAuditRule rule)\n    content.vb: Public Sub SetAudit(sid As SecurityIdentifier, rule As ObjectAuditRule)\n    parameters:\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to set an audit rule.</p>\\n\"\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.ObjectAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>for which to set an audit rule.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SystemAcl.SetAudit(SecurityIdentifier, ObjectAuditRule)\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.AccessControl.GenericAcl\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: GenericAcl\n  fullName: System.Security.AccessControl.GenericAcl\n  commentId: T:System.Security.AccessControl.GenericAcl\n  nameWithType: GenericAcl\n- uid: System.Security.AccessControl.CommonAcl\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonAcl\n  fullName: System.Security.AccessControl.CommonAcl\n  commentId: T:System.Security.AccessControl.CommonAcl\n  nameWithType: CommonAcl\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  commentId: T:System.Collections.ICollection\n  nameWithType: ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Security.AccessControl.CommonAcl.BinaryLength\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: BinaryLength\n  fullName: System.Security.AccessControl.CommonAcl.BinaryLength\n  commentId: P:System.Security.AccessControl.CommonAcl.BinaryLength\n  nameWithType: CommonAcl.BinaryLength\n- uid: System.Security.AccessControl.CommonAcl.Count\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: Count\n  fullName: System.Security.AccessControl.CommonAcl.Count\n  commentId: P:System.Security.AccessControl.CommonAcl.Count\n  nameWithType: CommonAcl.Count\n- uid: System.Security.AccessControl.CommonAcl.IsCanonical\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: IsCanonical\n  fullName: System.Security.AccessControl.CommonAcl.IsCanonical\n  commentId: P:System.Security.AccessControl.CommonAcl.IsCanonical\n  nameWithType: CommonAcl.IsCanonical\n- uid: System.Security.AccessControl.CommonAcl.IsContainer\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: IsContainer\n  fullName: System.Security.AccessControl.CommonAcl.IsContainer\n  commentId: P:System.Security.AccessControl.CommonAcl.IsContainer\n  nameWithType: CommonAcl.IsContainer\n- uid: System.Security.AccessControl.CommonAcl.IsDS\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: IsDS\n  fullName: System.Security.AccessControl.CommonAcl.IsDS\n  commentId: P:System.Security.AccessControl.CommonAcl.IsDS\n  nameWithType: CommonAcl.IsDS\n- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: true\n  name: Item[Int32]\n  fullName: System.Security.AccessControl.CommonAcl.Item[System.Int32]\n  fullname.vb: System.Security.AccessControl.CommonAcl.Item(System.Int32)\n  name.vb: Item(Int32)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)\n    name: Item\n    fullName: System.Security.AccessControl.CommonAcl.Item\n  - name: '['\n    fullName: '['\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)\n    name: Item\n    fullName: System.Security.AccessControl.CommonAcl.Item\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Security.AccessControl.CommonAcl.Item(System.Int32)\n  nameWithType: CommonAcl.Item[Int32]\n  nameWithType.vb: CommonAcl.Item(Int32)\n- uid: System.Security.AccessControl.CommonAcl.Revision\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: Revision\n  fullName: System.Security.AccessControl.CommonAcl.Revision\n  commentId: P:System.Security.AccessControl.CommonAcl.Revision\n  nameWithType: CommonAcl.Revision\n- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: true\n  name: GetBinaryForm(Byte[], Int32)\n  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[], System.Int32)\n  fullname.vb: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte(), System.Int32)\n  name.vb: GetBinaryForm(Byte(), Int32)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)\n    name: GetBinaryForm\n    fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)\n    name: GetBinaryForm\n    fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)\n  nameWithType: CommonAcl.GetBinaryForm(Byte[], Int32)\n  nameWithType.vb: CommonAcl.GetBinaryForm(Byte(), Int32)\n- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: true\n  name: Purge(SecurityIdentifier)\n  fullName: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)\n    name: Purge\n    fullName: System.Security.AccessControl.CommonAcl.Purge\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.SecurityIdentifier\n    name: SecurityIdentifier\n    fullName: System.Security.Principal.SecurityIdentifier\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)\n    name: Purge\n    fullName: System.Security.AccessControl.CommonAcl.Purge\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.SecurityIdentifier\n    name: SecurityIdentifier\n    fullName: System.Security.Principal.SecurityIdentifier\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)\n  nameWithType: CommonAcl.Purge(SecurityIdentifier)\n- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: RemoveInheritedAces()\n  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n    name: RemoveInheritedAces\n    fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n    name: RemoveInheritedAces\n    fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n  nameWithType: CommonAcl.RemoveInheritedAces()\n- uid: System.Security.AccessControl.GenericAcl.AclRevision\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: AclRevision\n  fullName: System.Security.AccessControl.GenericAcl.AclRevision\n  commentId: F:System.Security.AccessControl.GenericAcl.AclRevision\n  nameWithType: GenericAcl.AclRevision\n- uid: System.Security.AccessControl.GenericAcl.AclRevisionDS\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: AclRevisionDS\n  fullName: System.Security.AccessControl.GenericAcl.AclRevisionDS\n  commentId: F:System.Security.AccessControl.GenericAcl.AclRevisionDS\n  nameWithType: GenericAcl.AclRevisionDS\n- uid: System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: MaxBinaryLength\n  fullName: System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  commentId: F:System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  nameWithType: GenericAcl.MaxBinaryLength\n- uid: System.Security.AccessControl.GenericAcl.IsSynchronized\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Security.AccessControl.GenericAcl.IsSynchronized\n  commentId: P:System.Security.AccessControl.GenericAcl.IsSynchronized\n  nameWithType: GenericAcl.IsSynchronized\n- uid: System.Security.AccessControl.GenericAcl.SyncRoot\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Security.AccessControl.GenericAcl.SyncRoot\n  commentId: P:System.Security.AccessControl.GenericAcl.SyncRoot\n  nameWithType: GenericAcl.SyncRoot\n- uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: true\n  name: CopyTo(GenericAce[], Int32)\n  fullName: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[], System.Int32)\n  fullname.vb: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce(), System.Int32)\n  name.vb: CopyTo(GenericAce(), Int32)\n  spec.csharp:\n  - uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n    name: CopyTo\n    fullName: System.Security.AccessControl.GenericAcl.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.GenericAce\n    name: GenericAce\n    fullName: System.Security.AccessControl.GenericAce\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n    name: CopyTo\n    fullName: System.Security.AccessControl.GenericAcl.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.GenericAce\n    name: GenericAce\n    fullName: System.Security.AccessControl.GenericAce\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  nameWithType: GenericAcl.CopyTo(GenericAce[], Int32)\n  nameWithType.vb: GenericAcl.CopyTo(GenericAce(), Int32)\n- uid: System.Security.AccessControl.GenericAcl.GetEnumerator\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Security.AccessControl.GenericAcl.GetEnumerator()\n  spec.csharp:\n  - uid: System.Security.AccessControl.GenericAcl.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Security.AccessControl.GenericAcl.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.GenericAcl.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Security.AccessControl.GenericAcl.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.GenericAcl.GetEnumerator\n  nameWithType: GenericAcl.GetEnumerator()\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: true\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Security.AccessControl.GenericAcl.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  spec.csharp:\n  - uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n    name: ICollection.CopyTo\n    fullName: System.Security.AccessControl.GenericAcl.System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n    name: System.Collections.ICollection.CopyTo\n    fullName: System.Security.AccessControl.GenericAcl.System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  nameWithType: GenericAcl.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: GenericAcl.System.Collections.ICollection.CopyTo(Array, Int32)\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Security.AccessControl.GenericAcl.System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n    name: IEnumerable.GetEnumerator\n    fullName: System.Security.AccessControl.GenericAcl.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n    name: System.Collections.IEnumerable.GetEnumerator\n    fullName: System.Security.AccessControl.GenericAcl.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  nameWithType: GenericAcl.IEnumerable.GetEnumerator()\n  nameWithType.vb: GenericAcl.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  commentId: T:System.Byte\n  nameWithType: Byte\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Security.AccessControl.RawAcl\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: RawAcl\n  fullName: System.Security.AccessControl.RawAcl\n  commentId: T:System.Security.AccessControl.RawAcl\n  nameWithType: RawAcl\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n  commentId: T:System.Security.AccessControl.AuditFlags\n  nameWithType: AuditFlags\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n  commentId: T:System.Security.Principal.SecurityIdentifier\n  nameWithType: SecurityIdentifier\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n  commentId: T:System.Security.AccessControl.InheritanceFlags\n  nameWithType: InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n  commentId: T:System.Security.AccessControl.PropagationFlags\n  nameWithType: PropagationFlags\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Security.AccessControl.ObjectAceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAceFlags\n  fullName: System.Security.AccessControl.ObjectAceFlags\n  commentId: T:System.Security.AccessControl.ObjectAceFlags\n  nameWithType: ObjectAceFlags\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  fullName: System.Guid\n  commentId: T:System.Guid\n  nameWithType: Guid\n- uid: System.Security.AccessControl.ObjectAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAuditRule\n  fullName: System.Security.AccessControl.ObjectAuditRule\n  commentId: T:System.Security.AccessControl.ObjectAuditRule\n  nameWithType: ObjectAuditRule\n"}