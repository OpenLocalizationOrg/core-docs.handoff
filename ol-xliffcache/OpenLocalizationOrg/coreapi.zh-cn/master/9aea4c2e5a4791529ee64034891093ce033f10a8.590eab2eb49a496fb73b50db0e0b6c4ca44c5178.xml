{"nodes":[{"pos":[2373,2386],"content":"MutexSecurity","needQuote":true,"nodes":[{"content":"MutexSecurity","pos":[0,13]}]},{"pos":[10268,10283],"content":"MutexSecurity()","needQuote":true,"nodes":[{"content":"MutexSecurity()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;This class is not supported on Windows 98 or Windows Millennium Edition.&lt;/p&gt;\\n","pos":[11143,11226],"source":"\\n<p>This class is not supported on Windows 98 or Windows Millennium Edition.</p>\\n"},{"pos":[11758,11802],"content":"MutexSecurity(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"MutexSecurity(String, AccessControlSections)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The name of the system mutex whose access control security rules are to be retrieved.&lt;/p&gt;\\n","pos":[12887,12983],"source":"\\n<p>The name of the system mutex whose access control security rules are to be retrieved.</p>\\n"},{"content":"\\n&lt;p&gt;There is no system object with the specified name.&lt;/p&gt;\\n","pos":[13402,13463],"source":"\\n<p>There is no system object with the specified name.</p>\\n"},{"content":"\\n&lt;p&gt;This class is not supported on Windows 98 or Windows Millennium Edition.&lt;/p&gt;\\n","pos":[13568,13651],"source":"\\n<p>This class is not supported on Windows 98 or Windows Millennium Edition.</p>\\n"},{"pos":[14039,14054],"content":"AccessRightType","needQuote":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[15656,15670],"content":"AccessRuleType","needQuote":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[17253,17266],"content":"AuditRuleType","needQuote":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[19498,19605],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,107]}]},{"content":"\\n&lt;p&gt;Meaningless for named mutexes, because they have no hierarchy.&lt;/p&gt;\\n","pos":[21593,21666],"source":"\\n<p>Meaningless for named mutexes, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;Meaningless for named mutexes, because they have no hierarchy.&lt;/p&gt;\\n","pos":[21774,21847],"source":"\\n<p>Meaningless for named mutexes, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;Meaningless for named mutexes, because they have no hierarchy.&lt;/p&gt;\\n","pos":[21955,22028],"source":"\\n<p>Meaningless for named mutexes, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt;, &lt;em&gt;inheritanceFlags&lt;/em&gt;, &lt;em&gt;propagationFlags&lt;/em&gt;, or &lt;em&gt;type&lt;/em&gt; specifies an invalid value.&lt;/p&gt;\\n","pos":[23007,23139],"source":"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>type</em> specifies an invalid value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;identityReference&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[23244,23303],"source":"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt; is zero.&lt;/p&gt;\\n","pos":[23304,23362],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n"},{"pos":[24490,24520],"content":"AddAccessRule(MutexAccessRule)","needQuote":true,"nodes":[{"content":"AddAccessRule(MutexAccessRule)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The access control rule to add.&lt;/p&gt;\\n","pos":[25436,25478],"source":"\\n<p>The access control rule to add.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[25597,25649],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule &lt;/em&gt;cannot be mapped to a known identity.&lt;/p&gt;\\n","pos":[25802,25866],"source":"\\n<p>\\n<em>rule </em>cannot be mapped to a known identity.</p>\\n"},{"pos":[26369,26397],"content":"AddAuditRule(MutexAuditRule)","needQuote":true,"nodes":[{"content":"AddAuditRule(MutexAuditRule)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The audit rule to add.","pos":[27288,27315],"source":"\\n<p>The audit rule to add."},{"content":"The user specified by this rule determines the search.&lt;/p&gt;\\n","pos":[27316,27376],"source":" The user specified by this rule determines the search.</p>\\n"},{"pos":[28375,28474],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,99]}]},{"content":"\\n&lt;p&gt;Meaningless for named wait handles, because they have no hierarchy.&lt;/p&gt;\\n","pos":[30451,30529],"source":"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;Meaningless for named wait handles, because they have no hierarchy.&lt;/p&gt;\\n","pos":[30637,30715],"source":"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;Meaningless for named wait handles, because they have no hierarchy.&lt;/p&gt;\\n","pos":[30823,30901],"source":"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt;, &lt;em&gt;inheritanceFlags&lt;/em&gt;, &lt;em&gt;propagationFlags&lt;/em&gt;, or &lt;em&gt;flags&lt;/em&gt; specifies an invalid value.&lt;/p&gt;\\n","pos":[32107,32240],"source":"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>flags</em> specifies an invalid value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;identityReference&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[32345,32404],"source":"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt; is zero.&lt;/p&gt;\\n","pos":[32405,32463],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n"},{"pos":[33592,33625],"content":"RemoveAccessRule(MutexAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRule(MutexAccessRule)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a compatible rule is found; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35306,35405],"source":"\\n<p>\\n<strong>true</strong> if a compatible rule is found; otherwise <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35524,35576],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[36106,36142],"content":"RemoveAccessRuleAll(MutexAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll(MutexAccessRule)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[37632,37684],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[38232,38273],"content":"RemoveAccessRuleSpecific(MutexAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific(MutexAccessRule)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39465,39517],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[40040,40071],"content":"RemoveAuditRule(MutexAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRule(MutexAuditRule)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a compatible rule is found; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[41501,41601],"source":"\\n<p>\\n<strong>true</strong> if a compatible rule is found; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[41720,41772],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[42294,42328],"content":"RemoveAuditRuleAll(MutexAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll(MutexAuditRule)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[43560,43612],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[44152,44191],"content":"RemoveAuditRuleSpecific(MutexAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific(MutexAuditRule)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[45369,45421],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[45945,45977],"content":"ResetAccessRule(MutexAccessRule)","needQuote":true,"nodes":[{"content":"ResetAccessRule(MutexAccessRule)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[47349,47401],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[47912,47942],"content":"SetAccessRule(MutexAccessRule)","needQuote":true,"nodes":[{"content":"SetAccessRule(MutexAccessRule)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[49412,49464],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[49967,49995],"content":"SetAuditRule(MutexAuditRule)","needQuote":true,"nodes":[{"content":"SetAuditRule(MutexAuditRule)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rule&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[51344,51396],"source":"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n"},{"pos":[51592,51621],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[51821,51827],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52026,52040],"content":"ObjectSecurity","needQuote":true,"nodes":[{"content":"ObjectSecurity","pos":[0,14]}]},{"pos":[52315,52335],"content":"CommonObjectSecurity","needQuote":true,"nodes":[{"content":"CommonObjectSecurity","pos":[0,20]}]},{"pos":[52628,52648],"content":"NativeObjectSecurity","needQuote":true,"nodes":[{"content":"NativeObjectSecurity","pos":[0,20]}]},{"pos":[53036,53074],"content":"Persist(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(String, AccessControlSections)","pos":[0,38]}]},{"pos":[53374,53381],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[53465,53466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53516,53522],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[53583,53584]},{"pos":[53677,53698],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[53775,53776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53949,53956],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[54040,54041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54091,54097],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[54158,54159]},{"pos":[54252,54273],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[54350,54351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54820,54866],"content":"Persist(String, AccessControlSections, Object)","needQuote":true,"nodes":[{"content":"Persist(String, AccessControlSections, Object)","pos":[0,46]}]},{"pos":[55195,55202],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[55286,55287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55337,55343],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[55404,55405]},{"pos":[55498,55519],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[55597,55598]},{"pos":[55653,55659],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55719,55720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55907,55914],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[55998,55999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56049,56055],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[56116,56117]},{"pos":[56210,56231],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[56309,56310]},{"pos":[56365,56371],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56431,56432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56937,56979],"content":"Persist(SafeHandle, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle, AccessControlSections)","pos":[0,42]}]},{"pos":[57335,57342],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[57426,57427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57505,57515],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[57604,57605]},{"pos":[57698,57719],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[57796,57797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57998,58005],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[58089,58090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58168,58178],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[58267,58268]},{"pos":[58361,58382],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[58459,58460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58989,59039],"content":"Persist(SafeHandle, AccessControlSections, Object)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle, AccessControlSections, Object)","pos":[0,50]}]},{"pos":[59424,59431],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[59515,59516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59594,59604],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[59693,59694]},{"pos":[59787,59808],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[59886,59887]},{"pos":[59942,59948],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60008,60009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60224,60231],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[60315,60316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60394,60404],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[60493,60494]},{"pos":[60587,60608],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[60686,60687]},{"pos":[60742,60748],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60808,60809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61370,61430],"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","pos":[0,60]}]},{"pos":[61834,61846],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[61935,61936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62028,62053],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[62135,62136]},{"pos":[62218,62228],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[62295,62296]},{"pos":[62352,62359],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[62420,62421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62646,62658],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[62747,62748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62840,62865],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[62947,62948]},{"pos":[63030,63040],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[63107,63108]},{"pos":[63164,63171],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63232,63233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63812,63870],"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","pos":[0,58]}]},{"pos":[64270,64281],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[64369,64370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64462,64487],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[64569,64570]},{"pos":[64651,64660],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[64726,64727]},{"pos":[64783,64790],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[64851,64852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65075,65086],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[65174,65175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65267,65292],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[65374,65375]},{"pos":[65456,65465],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[65531,65532]},{"pos":[65588,65595],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[65656,65657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66164,66189],"content":"AddAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"AddAccessRule(AccessRule)","pos":[0,25]}]},{"pos":[66450,66463],"content":"AddAccessRule","needQuote":true,"nodes":[{"content":"AddAccessRule","pos":[0,13]}]},{"pos":[66553,66554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66631,66641],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[66707,66708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66862,66875],"content":"AddAccessRule","needQuote":true,"nodes":[{"content":"AddAccessRule","pos":[0,13]}]},{"pos":[66965,66966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67043,67053],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[67119,67120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67525,67550],"content":"SetAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"SetAccessRule(AccessRule)","pos":[0,25]}]},{"pos":[67811,67824],"content":"SetAccessRule","needQuote":true,"nodes":[{"content":"SetAccessRule","pos":[0,13]}]},{"pos":[67914,67915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67992,68002],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[68068,68069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68223,68236],"content":"SetAccessRule","needQuote":true,"nodes":[{"content":"SetAccessRule","pos":[0,13]}]},{"pos":[68326,68327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68404,68414],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[68480,68481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68888,68915],"content":"ResetAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"ResetAccessRule(AccessRule)","pos":[0,27]}]},{"pos":[69180,69195],"content":"ResetAccessRule","needQuote":true,"nodes":[{"content":"ResetAccessRule","pos":[0,15]}]},{"pos":[69287,69288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69365,69375],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[69441,69442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69598,69613],"content":"ResetAccessRule","needQuote":true,"nodes":[{"content":"ResetAccessRule","pos":[0,15]}]},{"pos":[69705,69706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69783,69793],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[69859,69860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70272,70300],"content":"RemoveAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRule(AccessRule)","pos":[0,28]}]},{"pos":[70567,70583],"content":"RemoveAccessRule","needQuote":true,"nodes":[{"content":"RemoveAccessRule","pos":[0,16]}]},{"pos":[70676,70677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70754,70764],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[70830,70831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70988,71004],"content":"RemoveAccessRule","needQuote":true,"nodes":[{"content":"RemoveAccessRule","pos":[0,16]}]},{"pos":[71097,71098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71175,71185],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[71251,71252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71669,71700],"content":"RemoveAccessRuleAll(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll(AccessRule)","pos":[0,31]}]},{"pos":[71973,71992],"content":"RemoveAccessRuleAll","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll","pos":[0,19]}]},{"pos":[72088,72089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72166,72176],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[72242,72243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72403,72422],"content":"RemoveAccessRuleAll","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll","pos":[0,19]}]},{"pos":[72518,72519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72596,72606],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[72672,72673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73101,73137],"content":"RemoveAccessRuleSpecific(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific(AccessRule)","pos":[0,36]}]},{"pos":[73420,73444],"content":"RemoveAccessRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific","pos":[0,24]}]},{"pos":[73545,73546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73623,73633],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[73699,73700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73865,73889],"content":"RemoveAccessRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific","pos":[0,24]}]},{"pos":[73990,73991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74068,74078],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[74144,74145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74570,74593],"content":"AddAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"AddAuditRule(AuditRule)","pos":[0,23]}]},{"pos":[74850,74862],"content":"AddAuditRule","needQuote":true,"nodes":[{"content":"AddAuditRule","pos":[0,12]}]},{"pos":[74951,74952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75028,75037],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[75102,75103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75255,75267],"content":"AddAuditRule","needQuote":true,"nodes":[{"content":"AddAuditRule","pos":[0,12]}]},{"pos":[75356,75357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75433,75442],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[75507,75508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75907,75930],"content":"SetAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"SetAuditRule(AuditRule)","pos":[0,23]}]},{"pos":[76187,76199],"content":"SetAuditRule","needQuote":true,"nodes":[{"content":"SetAuditRule","pos":[0,12]}]},{"pos":[76288,76289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76365,76374],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[76439,76440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76592,76604],"content":"SetAuditRule","needQuote":true,"nodes":[{"content":"SetAuditRule","pos":[0,12]}]},{"pos":[76693,76694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76770,76779],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[76844,76845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77247,77273],"content":"RemoveAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRule(AuditRule)","pos":[0,26]}]},{"pos":[77536,77551],"content":"RemoveAuditRule","needQuote":true,"nodes":[{"content":"RemoveAuditRule","pos":[0,15]}]},{"pos":[77643,77644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77720,77729],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[77794,77795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77950,77965],"content":"RemoveAuditRule","needQuote":true,"nodes":[{"content":"RemoveAuditRule","pos":[0,15]}]},{"pos":[78057,78058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78134,78143],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[78208,78209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78620,78649],"content":"RemoveAuditRuleAll(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll(AuditRule)","pos":[0,29]}]},{"pos":[78918,78936],"content":"RemoveAuditRuleAll","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll","pos":[0,18]}]},{"pos":[79031,79032],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79108,79117],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[79182,79183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79341,79359],"content":"RemoveAuditRuleAll","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll","pos":[0,18]}]},{"pos":[79454,79455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79531,79540],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[79605,79606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80028,80062],"content":"RemoveAuditRuleSpecific(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific(AuditRule)","pos":[0,34]}]},{"pos":[80341,80364],"content":"RemoveAuditRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific","pos":[0,23]}]},{"pos":[80464,80465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80541,80550],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[80615,80616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80779,80802],"content":"RemoveAuditRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific","pos":[0,23]}]},{"pos":[80902,80903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80979,80988],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[81053,81054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81478,81516],"content":"GetAccessRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAccessRules(Boolean, Boolean, Type)","pos":[0,38]}]},{"pos":[81783,81797],"content":"GetAccessRules","needQuote":true,"nodes":[{"content":"GetAccessRules","pos":[0,14]}]},{"pos":[81888,81889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81940,81947],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[82009,82010]},{"pos":[82066,82073],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[82135,82136]},{"pos":[82189,82193],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[82251,82252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82408,82422],"content":"GetAccessRules","needQuote":true,"nodes":[{"content":"GetAccessRules","pos":[0,14]}]},{"pos":[82513,82514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82565,82572],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[82634,82635]},{"pos":[82691,82698],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[82760,82761]},{"pos":[82814,82818],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[82876,82877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83297,83334],"content":"GetAuditRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAuditRules(Boolean, Boolean, Type)","pos":[0,37]}]},{"pos":[83599,83612],"content":"GetAuditRules","needQuote":true,"nodes":[{"content":"GetAuditRules","pos":[0,13]}]},{"pos":[83702,83703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83754,83761],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[83823,83824]},{"pos":[83880,83887],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[83949,83950]},{"pos":[84003,84007],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[84065,84066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84221,84234],"content":"GetAuditRules","needQuote":true,"nodes":[{"content":"GetAuditRules","pos":[0,13]}]},{"pos":[84324,84325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84376,84383],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[84445,84446]},{"pos":[84502,84509],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[84571,84572]},{"pos":[84625,84629],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[84687,84688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85047,85057],"content":"ReadLock()","needQuote":true,"nodes":[{"content":"ReadLock()","pos":[0,10]}]},{"pos":[85214,85222],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[85301,85302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85329,85330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85431,85439],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[85518,85519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85546,85547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85821,85833],"content":"ReadUnlock()","needQuote":true,"nodes":[{"content":"ReadUnlock()","pos":[0,12]}]},{"pos":[85994,86004],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[86085,86086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86113,86114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86217,86227],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[86308,86309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86336,86337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86614,86625],"content":"WriteLock()","needQuote":true,"nodes":[{"content":"WriteLock()","pos":[0,11]}]},{"pos":[86784,86793],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[86873,86874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86901,86902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87004,87013],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[87093,87094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87121,87122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87399,87412],"content":"WriteUnlock()","needQuote":true,"nodes":[{"content":"WriteUnlock()","pos":[0,13]}]},{"pos":[87575,87586],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[87668,87669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87696,87697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87801,87812],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[87894,87895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87922,87923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88281,88328],"content":"Persist(Boolean, String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(Boolean, String, AccessControlSections)","pos":[0,47]}]},{"pos":[88647,88654],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[88732,88733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88784,88791],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[88853,88854]},{"pos":[88909,88915],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[88976,88977]},{"pos":[89070,89091],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[89168,89169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89351,89358],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[89436,89437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89488,89495],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[89557,89558]},{"pos":[89613,89619],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[89680,89681]},{"pos":[89774,89795],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[89872,89873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90275,90289],"content":"GetOwner(Type)","needQuote":true,"nodes":[{"content":"GetOwner(Type)","pos":[0,14]}]},{"pos":[90470,90478],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[90557,90558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90606,90610],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[90668,90669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90783,90791],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[90870,90871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90919,90923],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[90981,90982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91315,91342],"content":"SetOwner(IdentityReference)","needQuote":true,"nodes":[{"content":"SetOwner(IdentityReference)","pos":[0,27]}]},{"pos":[91587,91595],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[91674,91675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91755,91772],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[91862,91863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92009,92017],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[92096,92097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92177,92194],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[92284,92285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92631,92645],"content":"GetGroup(Type)","needQuote":true,"nodes":[{"content":"GetGroup(Type)","pos":[0,14]}]},{"pos":[92826,92834],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[92913,92914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92962,92966],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[93024,93025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93139,93147],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[93226,93227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93275,93279],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[93337,93338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93671,93698],"content":"SetGroup(IdentityReference)","needQuote":true,"nodes":[{"content":"SetGroup(IdentityReference)","pos":[0,27]}]},{"pos":[93943,93951],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[94030,94031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94111,94128],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[94218,94219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94365,94373],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[94452,94453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94533,94550],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[94640,94641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95027,95062],"content":"PurgeAccessRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAccessRules(IdentityReference)","pos":[0,35]}]},{"pos":[95323,95339],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[95426,95427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95507,95524],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[95614,95615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95769,95785],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[95872,95873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95953,95970],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[96060,96061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96462,96496],"content":"PurgeAuditRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAuditRules(IdentityReference)","pos":[0,34]}]},{"pos":[96755,96770],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[96856,96857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96937,96954],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[97044,97045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97198,97213],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[97299,97300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97380,97397],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[97487,97488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97881,97922],"content":"SetAccessRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection(Boolean, Boolean)","pos":[0,41]}]},{"pos":[98170,98193],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[98287,98288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98339,98346],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[98408,98409]},{"pos":[98465,98472],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[98533,98534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98681,98704],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[98798,98799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98850,98857],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[98919,98920]},{"pos":[98976,98983],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[99044,99045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99438,99478],"content":"SetAuditRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection(Boolean, Boolean)","pos":[0,40]}]},{"pos":[99724,99746],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[99839,99840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99891,99898],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[99960,99961]},{"pos":[100017,100024],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[100085,100086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100232,100254],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[100347,100348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100399,100406],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[100468,100469]},{"pos":[100525,100532],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[100593,100594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100958,100985],"content":"IsSddlConversionSupported()","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported()","pos":[0,27]}]},{"pos":[101176,101201],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[101297,101298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101325,101326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101444,101469],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[101565,101566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101593,101594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101974,102026],"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","pos":[0,52]}]},{"pos":[102329,102358],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[102458,102459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102547,102568],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[102645,102646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102821,102850],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[102950,102951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103039,103060],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[103137,103138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103561,103598],"content":"SetSecurityDescriptorSddlForm(String)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String)","pos":[0,37]}]},{"pos":[103825,103854],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[103954,103955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104005,104011],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[104071,104072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104209,104238],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[104338,104339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104389,104395],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[104455,104456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104878,104938],"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","pos":[0,60]}]},{"pos":[105270,105299],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[105399,105400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105450,105456],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[105517,105518]},{"pos":[105611,105632],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[105709,105710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105899,105928],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[106028,106029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106079,106085],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[106146,106147]},{"pos":[106240,106261],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[106338,106339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106772,106805],"content":"GetSecurityDescriptorBinaryForm()","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm()","pos":[0,33]}]},{"pos":[107008,107039],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[107141,107142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107169,107170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107294,107325],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[107427,107428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107455,107456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107811,107850],"content":"SetSecurityDescriptorBinaryForm(Byte[])","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[])","pos":[0,39]}]},{"pos":[108239,108270],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[108372,108373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108421,108425],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[108484,108486]},{"pos":[108517,108518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108657,108688],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[108790,108791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108839,108843],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[108901,108903],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[108931,108932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109434,109496],"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","pos":[0,62]}]},{"pos":[110066,110097],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[110199,110200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110248,110252],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[110311,110313]},{"content":",","pos":[110345,110346]},{"pos":[110439,110460],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[110537,110538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110729,110760],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[110862,110863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110911,110915],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[110973,110975],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[111004,111005]},{"pos":[111098,111119],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[111196,111197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111829,111893],"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","pos":[0,64]}]},{"pos":[112293,112309],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[112396,112397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112489,112514],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[112596,112597]},{"pos":[112679,112689],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[112756,112757]},{"pos":[112813,112820],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[112881,112882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113105,113121],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[113208,113209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113301,113326],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[113408,113409]},{"pos":[113491,113501],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[113568,113569]},{"pos":[113625,113632],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[113693,113694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114261,114323],"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","pos":[0,62]}]},{"pos":[114719,114734],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[114820,114821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114913,114938],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[115020,115021]},{"pos":[115102,115111],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[115177,115178]},{"pos":[115234,115241],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[115302,115303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115524,115539],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[115625,115626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115718,115743],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[115825,115826]},{"pos":[115907,115916],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[115982,115983]},{"pos":[116039,116046],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[116107,116108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116557,116570],"content":"OwnerModified","needQuote":true,"nodes":[{"content":"OwnerModified","pos":[0,13]}]},{"pos":[116910,116923],"content":"GroupModified","needQuote":true,"nodes":[{"content":"GroupModified","pos":[0,13]}]},{"pos":[117268,117286],"content":"AuditRulesModified","needQuote":true,"nodes":[{"content":"AuditRulesModified","pos":[0,18]}]},{"pos":[117647,117666],"content":"AccessRulesModified","needQuote":true,"nodes":[{"content":"AccessRulesModified","pos":[0,19]}]},{"pos":[118022,118033],"content":"IsContainer","needQuote":true,"nodes":[{"content":"IsContainer","pos":[0,11]}]},{"pos":[118358,118362],"content":"IsDS","needQuote":true,"nodes":[{"content":"IsDS","pos":[0,4]}]},{"pos":[118685,118708],"content":"AreAccessRulesProtected","needQuote":true,"nodes":[{"content":"AreAccessRulesProtected","pos":[0,23]}]},{"pos":[119087,119109],"content":"AreAuditRulesProtected","needQuote":true,"nodes":[{"content":"AreAuditRulesProtected","pos":[0,22]}]},{"pos":[119486,119509],"content":"AreAccessRulesCanonical","needQuote":true,"nodes":[{"content":"AreAccessRulesCanonical","pos":[0,23]}]},{"pos":[119888,119910],"content":"AreAuditRulesCanonical","needQuote":true,"nodes":[{"content":"AreAuditRulesCanonical","pos":[0,22]}]},{"pos":[120209,120219],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[120314,120322],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[120391,120392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120419,120420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120490,120498],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[120567,120568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120595,120596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120779,120793],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[120912,120918],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[120985,120986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121036,121042],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[121102,121103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121186,121192],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[121259,121260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121310,121316],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[121376,121377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121591,121613],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[121761,121767],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[121834,121835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121885,121891],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[121952,121953]},{"pos":[122008,122014],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[122074,122075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122172,122178],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[122245,122246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122296,122302],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[122363,122364]},{"pos":[122419,122425],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[122485,122486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122731,122762],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[122928,122943],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[123019,123020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123070,123076],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[123137,123138]},{"pos":[123193,123199],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[123259,123260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123366,123381],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[123457,123458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123508,123514],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[123575,123576]},{"pos":[123631,123637],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[123697,123698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123928,123941],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[124042,124053],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[124125,124126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124153,124154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124227,124238],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[124310,124311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124338,124339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124514,124523],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[124616,124623],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[124691,124692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124719,124720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124789,124796],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[124864,124865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124892,124893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125068,125085],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[125194,125209],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[125285,125286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125313,125314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125391,125406],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[125482,125483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125510,125511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125656,125662],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[125793,125799],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[126005,126026],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[126347,126362],"content":"AccessRightType","needQuote":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[126623,126627],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[126850,126864],"content":"AccessRuleType","needQuote":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[127207,127220],"content":"AuditRuleType","needQuote":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[127778,127885],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,107]}]},{"pos":[128493,128510],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[128598,128599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128679,128696],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[128787,128788]},{"pos":[128842,128847],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[128907,128908]},{"pos":[128964,128971],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[129033,129034]},{"pos":[129122,129138],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[129211,129212]},{"pos":[129300,129316],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[129389,129390]},{"pos":[129479,129496],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[129569,129570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129895,129912],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[130000,130001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130081,130098],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[130189,130190]},{"pos":[130244,130249],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[130309,130310]},{"pos":[130366,130373],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[130435,130436]},{"pos":[130524,130540],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[130613,130614]},{"pos":[130702,130718],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[130791,130792]},{"pos":[130881,130898],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[130971,130972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131536,131553],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[131768,131773],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[131916,131923],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[132127,132143],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[132420,132436],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[132714,132731],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[133005,133015],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[133213,133238],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[133481,133496],"content":"MutexAccessRule","needQuote":true,"nodes":[{"content":"MutexAccessRule","pos":[0,15]}]},{"pos":[133768,133782],"content":"MutexAuditRule","needQuote":true,"nodes":[{"content":"MutexAuditRule","pos":[0,14]}]},{"pos":[134290,134389],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,99]}]},{"pos":[134981,134997],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[135084,135085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135165,135182],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[135273,135274]},{"pos":[135328,135333],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[135393,135394]},{"pos":[135450,135457],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[135519,135520]},{"pos":[135608,135624],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[135697,135698]},{"pos":[135786,135802],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[135875,135876]},{"pos":[135958,135968],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[136034,136035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136352,136368],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[136455,136456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136536,136553],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[136644,136645]},{"pos":[136699,136704],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[136764,136765]},{"pos":[136821,136828],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[136890,136891]},{"pos":[136979,136995],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[137068,137069]},{"pos":[137157,137173],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[137246,137247]},{"pos":[137329,137339],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[137405,137406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137955,137965],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[138217,138226],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[138441,138462],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[138653,138674],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]},{"pos":[138874,138901],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[139107,139128],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[139329,139346],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[139546,139572],"content":"IdentityNotMappedException","needQuote":true,"nodes":[{"content":"IdentityNotMappedException","pos":[0,26]}]}],"content":"items:\n- uid: System.Security.AccessControl.MutexSecurity\n  commentId: T:System.Security.AccessControl.MutexSecurity\n  id: MutexSecurity\n  parent: System.Security.AccessControl\n  children:\n  - System.Security.AccessControl.MutexSecurity.#ctor\n  - System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.MutexSecurity.AccessRightType\n  - System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.MutexSecurity.AccessRuleType\n  - System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)\n  - System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)\n  - System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.MutexSecurity.AuditRuleType\n  - System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)\n  - System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)\n  - System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)\n  - System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)\n  - System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)\n  - System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)\n  - System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  - System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  - System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)\n  langs:\n  - csharp\n  - vb\n  name: MutexSecurity\n  fullName: System.Security.AccessControl.MutexSecurity\n  type: Class\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MutexSecurity\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 48\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Represents the Windows access control security for a named mutex. This class cannot be inherited. </p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public sealed class MutexSecurity : NativeObjectSecurity\n    content.vb: >-\n      <SecurityCritical>\n\n      Public NotInheritable Class MutexSecurity\n          Inherits NativeObjectSecurity\n  seealso:\n  - type: System.Security.AccessControl.MutexAccessRule\n    commentId: T:System.Security.AccessControl.MutexAccessRule\n  - type: System.Security.AccessControl.MutexAuditRule\n    commentId: T:System.Security.AccessControl.MutexAuditRule\n  - type: System.Security.AccessControl.MutexRights\n    commentId: T:System.Security.AccessControl.MutexRights\n  - type: System.Threading.Mutex.GetAccessControl\n    commentId: M:System.Threading.Mutex.GetAccessControl\n  - type: System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)\n    commentId: M:System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  inheritedMembers:\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: MutexSecurity\n- uid: System.Security.AccessControl.MutexSecurity.#ctor\n  commentId: M:System.Security.AccessControl.MutexSecurity.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: MutexSecurity()\n  fullName: System.Security.AccessControl.MutexSecurity.MutexSecurity()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 51\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.MutexSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with default values.</p>\\n\"\n  syntax:\n    content: public MutexSecurity()\n    content.vb: Public Sub New\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This class is not supported on Windows 98 or Windows Millennium Edition.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.MutexSecurity()\n- uid: System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)\n  id: '#ctor(System.String,System.Security.AccessControl.AccessControlSections)'\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: MutexSecurity(String, AccessControlSections)\n  fullName: System.Security.AccessControl.MutexSecurity.MutexSecurity(System.String, System.Security.AccessControl.AccessControlSections)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 52\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.MutexSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified sections of the access control security rules from the system mutex with the specified name.</p>\\n\"\n  syntax:\n    content: public MutexSecurity(string name, AccessControlSections includeSections)\n    content.vb: Public Sub New(name As String, includeSections As AccessControlSections)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the system mutex whose access control security rules are to be retrieved.</p>\\n\"\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: \"\\n<p>A combination of <xref href=\\\"System.Security.AccessControl.AccessControlSections\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags specifying the sections to retrieve.</p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>There is no system object with the specified name.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This class is not supported on Windows 98 or Windows Millennium Edition.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.MutexSecurity(String, AccessControlSections)\n- uid: System.Security.AccessControl.MutexSecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.MutexSecurity.AccessRightType\n  id: AccessRightType\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRightType\n  fullName: System.Security.AccessControl.MutexSecurity.AccessRightType\n  type: Property\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRightType\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 53\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the enumeration that the <xref href=\\\"System.Security.AccessControl.MutexSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class uses to represent access rights.</p>\\n\"\n  syntax:\n    content: public override Type AccessRightType { get; }\n    content.vb: Public Overrides ReadOnly Property AccessRightType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the <xref href=\\\"System.Security.AccessControl.MutexRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MutexSecurity.AccessRightType\n- uid: System.Security.AccessControl.MutexSecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.MutexSecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRuleType\n  fullName: System.Security.AccessControl.MutexSecurity.AccessRuleType\n  type: Property\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRuleType\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 54\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the type that the <xref href=\\\"System.Security.AccessControl.MutexSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class uses to represent access rules.</p>\\n\"\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    content.vb: Public Overrides ReadOnly Property AccessRuleType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the <xref href=\\\"System.Security.AccessControl.MutexAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MutexSecurity.AccessRuleType\n- uid: System.Security.AccessControl.MutexSecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.MutexSecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: AuditRuleType\n  fullName: System.Security.AccessControl.MutexSecurity.AuditRuleType\n  type: Property\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuditRuleType\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 55\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the type that the <xref href=\\\"System.Security.AccessControl.MutexSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class uses to represent audit rules.</p>\\n\"\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    content.vb: Public Overrides ReadOnly Property AuditRuleType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the <xref href=\\\"System.Security.AccessControl.MutexAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MutexSecurity.AuditRuleType\n- uid: System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRuleFactory\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 56\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</p>\\n\"\n  syntax:\n    content: public override AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)\n    content.vb: Public Overrides Function AccessRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType) As AccessRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>An <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that identifies the user or group the rule applies to.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Security.AccessControl.MutexRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying the access rights to allow or deny, cast to an integer.</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>Meaningless for named mutexes, because they have no hierarchy.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Meaningless for named mutexes, because they have no hierarchy.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Meaningless for named mutexes, because they have no hierarchy.</p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying whether the rights are allowed or denied.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.MutexAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the specified rights for the specified user.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>type</em> specifies an invalid value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>identityReference</em> is neither of type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, nor of a type such as <xref href=\\\"System.Security.Principal.NTAccount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be converted to type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MutexSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)\n  id: AddAccessRule(System.Security.AccessControl.MutexAccessRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: AddAccessRule(MutexAccessRule)\n  fullName: System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAccessRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 57\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for a matching access control rule with which the new rule can be merged. If none are found, adds the new rule.</p>\\n\"\n  syntax:\n    content: public void AddAccessRule(MutexAccessRule rule)\n    content.vb: Public Sub AddAccessRule(rule As MutexAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAccessRule\n      description: \"\\n<p>The access control rule to add.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Security.Principal.IdentityNotMappedException\n    commentId: T:System.Security.Principal.IdentityNotMappedException\n    description: \"\\n<p>\\n<em>rule </em>cannot be mapped to a known identity.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.AddAccessRule(MutexAccessRule)\n- uid: System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)\n  id: AddAuditRule(System.Security.AccessControl.MutexAuditRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: AddAuditRule(MutexAuditRule)\n  fullName: System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAuditRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 58\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.</p>\\n\"\n  syntax:\n    content: public void AddAuditRule(MutexAuditRule rule)\n    content.vb: Public Sub AddAuditRule(rule As MutexAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAuditRule\n      description: \"\\n<p>The audit rule to add. The user specified by this rule determines the search.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.AddAuditRule(MutexAuditRule)\n- uid: System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuditRuleFactory\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 59\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</p>\\n\"\n  syntax:\n    content: public override AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)\n    content.vb: Public Overrides Function AuditRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags) As AuditRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>An <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that identifies the user or group the rule applies to.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Security.AccessControl.MutexRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values specifying the access rights to audit, cast to an integer.</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Meaningless for named wait handles, because they have no hierarchy.</p>\\n\"\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Security.AccessControl.AuditFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specify whether to audit successful access, failed access, or both.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.MutexAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the specified audit rule for the specified user. The return type of the method is the base class, <xref href=\\\"System.Security.AccessControl.AuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, but the return value can be cast safely to the derived class.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>flags</em> specifies an invalid value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>identityReference</em> is neither of type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, nor of a type such as <xref href=\\\"System.Security.Principal.NTAccount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be converted to type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MutexSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)\n  id: RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRule(MutexAccessRule)\n  fullName: System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 60\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an access control rule with the same user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</p>\\n\"\n  syntax:\n    content: public bool RemoveAccessRule(MutexAccessRule rule)\n    content.vb: Public Function RemoveAccessRule(rule As MutexAccessRule) As Boolean\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAccessRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.MutexAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a compatible rule is found; otherwise <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.RemoveAccessRule(MutexAccessRule)\n- uid: System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)\n  id: RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRuleAll(MutexAccessRule)\n  fullName: System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRuleAll\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 61\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for all access control rules with the same user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> (allow or deny) as the specified rule and, if found, removes them.</p>\\n\"\n  syntax:\n    content: public void RemoveAccessRuleAll(MutexAccessRule rule)\n    content.vb: Public Sub RemoveAccessRuleAll(rule As MutexAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAccessRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.MutexAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to search for. Any rights specified by this rule are ignored.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.RemoveAccessRuleAll(MutexAccessRule)\n- uid: System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRuleSpecific(MutexAccessRule)\n  fullName: System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRuleSpecific\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 62\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</p>\\n\"\n  syntax:\n    content: public void RemoveAccessRuleSpecific(MutexAccessRule rule)\n    content.vb: Public Sub RemoveAccessRuleSpecific(rule As MutexAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAccessRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.MutexAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.RemoveAccessRuleSpecific(MutexAccessRule)\n- uid: System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)\n  id: RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRule(MutexAuditRule)\n  fullName: System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 63\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</p>\\n\"\n  syntax:\n    content: public bool RemoveAuditRule(MutexAuditRule rule)\n    content.vb: Public Function RemoveAuditRule(rule As MutexAuditRule) As Boolean\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAuditRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.MutexAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a compatible rule is found; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.RemoveAuditRule(MutexAuditRule)\n- uid: System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)\n  id: RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleAll(MutexAuditRule)\n  fullName: System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleAll\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 64\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</p>\\n\"\n  syntax:\n    content: public void RemoveAuditRuleAll(MutexAuditRule rule)\n    content.vb: Public Sub RemoveAuditRuleAll(rule As MutexAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAuditRule\n      description: \"\\n<p>A <xref href=\\\"System.Security.AccessControl.MutexAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the user to search for. Any rights specified by this rule are ignored.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.RemoveAuditRuleAll(MutexAuditRule)\n- uid: System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleSpecific(MutexAuditRule)\n  fullName: System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleSpecific\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 65\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</p>\\n\"\n  syntax:\n    content: public void RemoveAuditRuleSpecific(MutexAuditRule rule)\n    content.vb: Public Sub RemoveAuditRuleSpecific(rule As MutexAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.MutexAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be removed.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.RemoveAuditRuleSpecific(MutexAuditRule)\n- uid: System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  id: ResetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: ResetAccessRule(MutexAccessRule)\n  fullName: System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetAccessRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 66\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access control rules with the same user as the specified rule, regardless of <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and then adds the specified rule.</p>\\n\"\n  syntax:\n    content: public void ResetAccessRule(MutexAccessRule rule)\n    content.vb: Public Sub ResetAccessRule(rule As MutexAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAccessRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.MutexAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. The user specified by this rule determines the rules to remove before this rule is added.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.ResetAccessRule(MutexAccessRule)\n- uid: System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  id: SetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: SetAccessRule(MutexAccessRule)\n  fullName: System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 67\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access control rules with the same user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> (allow or deny) as the specified rule, and then adds the specified rule.</p>\\n\"\n  syntax:\n    content: public void SetAccessRule(MutexAccessRule rule)\n    content.vb: Public Sub SetAccessRule(rule As MutexAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAccessRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.MutexAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. The user and <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this rule determine the rules to remove before this rule is added.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.SetAccessRule(MutexAccessRule)\n- uid: System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)\n  commentId: M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)\n  id: SetAuditRule(System.Security.AccessControl.MutexAuditRule)\n  parent: System.Security.AccessControl.MutexSecurity\n  langs:\n  - csharp\n  - vb\n  name: SetAuditRule(MutexAuditRule)\n  fullName: System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAuditRule\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 68\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all audit rules with the same user as the specified rule, regardless of the <xref href=\\\"System.Security.AccessControl.AuditFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value, and then adds the specified rule.</p>\\n\"\n  syntax:\n    content: public void SetAuditRule(MutexAuditRule rule)\n    content.vb: Public Sub SetAuditRule(rule As MutexAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.MutexAuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.MutexAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. The user specified by this rule determines the rules to remove before this rule is added.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>rule</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MutexSecurity.SetAuditRule(MutexAuditRule)\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.AccessControl.ObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectSecurity\n  fullName: System.Security.AccessControl.ObjectSecurity\n  commentId: T:System.Security.AccessControl.ObjectSecurity\n  nameWithType: ObjectSecurity\n- uid: System.Security.AccessControl.CommonObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonObjectSecurity\n  fullName: System.Security.AccessControl.CommonObjectSecurity\n  commentId: T:System.Security.AccessControl.CommonObjectSecurity\n  nameWithType: CommonObjectSecurity\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: NativeObjectSecurity\n  fullName: System.Security.AccessControl.NativeObjectSecurity\n  commentId: T:System.Security.AccessControl.NativeObjectSecurity\n  nameWithType: NativeObjectSecurity\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(String, AccessControlSections)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(String, AccessControlSections, Object)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections, System.Object)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(SafeHandle, AccessControlSections)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(SafeHandle, AccessControlSections, Object)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections, System.Object)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n    name: AddAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n    name: AddAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n    name: SetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n    name: SetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n    name: ResetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n    name: ResetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n    name: AddAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n    name: AddAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n    name: SetAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n    name: SetAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: GetAccessRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean, System.Boolean, System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAccessRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAccessRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: GetAuditRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean, System.Boolean, System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAuditRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAuditRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadLock\n  nameWithType: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  nameWithType: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteLock\n  nameWithType: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  nameWithType: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: Persist(Boolean, String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean, System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetOwner(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetOwner(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetGroup(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetGroup(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAccessRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAuditRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte())\n  name.vb: SetSecurityDescriptorBinaryForm(Byte())\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte())\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[], System.Security.AccessControl.AccessControlSections)\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte(), System.Security.AccessControl.AccessControlSections)\n  name.vb: SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  fullName: System.Security.AccessControl.ObjectSecurity.IsDS\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsDS\n  nameWithType: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.AccessControl.AccessControlSections\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlSections\n  fullName: System.Security.AccessControl.AccessControlSections\n  commentId: T:System.Security.AccessControl.AccessControlSections\n  nameWithType: AccessControlSections\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n  commentId: T:System.Security.Principal.IdentityReference\n  nameWithType: IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n  commentId: T:System.Security.AccessControl.InheritanceFlags\n  nameWithType: InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n  commentId: T:System.Security.AccessControl.PropagationFlags\n  nameWithType: PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n  commentId: T:System.Security.AccessControl.AccessControlType\n  nameWithType: AccessControlType\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n  commentId: T:System.Security.AccessControl.AccessRule\n  nameWithType: AccessRule\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Security.AccessControl.MutexAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: MutexAccessRule\n  fullName: System.Security.AccessControl.MutexAccessRule\n  commentId: T:System.Security.AccessControl.MutexAccessRule\n  nameWithType: MutexAccessRule\n- uid: System.Security.AccessControl.MutexAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: MutexAuditRule\n  fullName: System.Security.AccessControl.MutexAuditRule\n  commentId: T:System.Security.AccessControl.MutexAuditRule\n  nameWithType: MutexAuditRule\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n  commentId: T:System.Security.AccessControl.AuditFlags\n  nameWithType: AuditFlags\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n  commentId: T:System.Security.AccessControl.AuditRule\n  nameWithType: AuditRule\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.Security.Principal.IdentityNotMappedException\n  isExternal: false\n  name: IdentityNotMappedException\n  fullName: System.Security.Principal.IdentityNotMappedException\n  nameWithType: IdentityNotMappedException\n  commentId: T:System.Security.Principal.IdentityNotMappedException\n"}