{"nodes":[{"pos":[1509,1548],"content":"MulticastIPAddressInformationCollection","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformationCollection","pos":[0,39]}]},{"pos":[35183,35224],"content":"MulticastIPAddressInformationCollection()","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformationCollection()","pos":[0,41]}]},{"pos":[36516,36521],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[38276,38286],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; in all cases.&lt;/p&gt;\\n","pos":[39098,39146],"source":"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n"},{"pos":[39791,39802],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The index of interest.&lt;/p&gt;\\n","pos":[40775,40808],"source":"\\n<p>The index of interest.</p>\\n"},{"pos":[41942,41976],"content":"Add(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Add(MulticastIPAddressInformation)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The object to be added to the collection.&lt;/p&gt;\\n","pos":[43020,43072],"source":"\\n<p>The object to be added to the collection.</p>\\n"},{"pos":[43735,43742],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[45281,45320],"content":"Contains(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[47768,47814],"content":"CopyTo(MulticastIPAddressInformation[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(MulticastIPAddressInformation[], Int32)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;A one-dimensional array that receives a copy of the collection.&lt;/p&gt;\\n","pos":[48930,49004],"source":"\\n<p>A one-dimensional array that receives a copy of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which the copy begins.&lt;/p&gt;\\n","pos":[49068,49143],"source":"\\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[49262,49309],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[49310,49316],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;count&lt;/em&gt; is less than zero.","pos":[49433,49473],"source":"\\n<p>\\n<em>count</em> is less than zero."},{"content":"&lt;/p&gt;\\n","pos":[49474,49480],"source":" </p>\\n"},{"pos":[51282,51297],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[53333,53370],"content":"Remove(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Remove(MulticastIPAddressInformation)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The object to be removed.&lt;/p&gt;\\n","pos":[54426,54462],"source":"\\n<p>The object to be removed.</p>\\n"},{"pos":[55439,55466],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[57087,57116],"content":"System.Net.NetworkInformation","needQuote":true,"nodes":[{"content":"System.Net.NetworkInformation","pos":[0,29]}]},{"pos":[57316,57322],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57608,57650],"content":"ICollection<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ICollection&lt;MulticastIPAddressInformation&gt;","pos":[0,42],"source":"ICollection<MulticastIPAddressInformation>"}]},{"pos":[58013,58024],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[58109,58110],"content":"<","needQuote":true,"nodes":[]},{"pos":[58206,58235],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[58413,58424],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[58510,58513]},{"pos":[58616,58645],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[58730,58731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59194,59236],"content":"IEnumerable<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;MulticastIPAddressInformation&gt;","pos":[0,42],"source":"IEnumerable<MulticastIPAddressInformation>"}]},{"pos":[59599,59610],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[59695,59696],"content":"<","needQuote":true,"nodes":[]},{"pos":[59792,59821],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[59999,60010],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[60096,60099]},{"pos":[60202,60231],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[60316,60317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60668,60679],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[60878,60888],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[60983,60991],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[61060,61061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61088,61089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61159,61167],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[61236,61237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61264,61265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61448,61462],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[61581,61587],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[61654,61655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61705,61711],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61771,61772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61855,61861],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[61928,61929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61979,61985],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62045,62046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62260,62282],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[62430,62436],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[62503,62504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62554,62560],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[62621,62622]},{"pos":[62677,62683],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62743,62744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62841,62847],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[62914,62915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62965,62971],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[63032,63033]},{"pos":[63088,63094],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63154,63155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63400,63431],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[63597,63612],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[63688,63689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63739,63745],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[63806,63807]},{"pos":[63862,63868],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63928,63929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64035,64050],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[64126,64127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64177,64183],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[64244,64245]},{"pos":[64300,64306],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64366,64367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64597,64610],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[64711,64722],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64794,64795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64822,64823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64896,64907],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64979,64980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65007,65008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65183,65192],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[65285,65292],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[65360,65361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65388,65389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65458,65465],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[65533,65534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65561,65562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65737,65754],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[65863,65878],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[65954,65955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65982,65983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66060,66075],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[66151,66152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66179,66180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66475,66488],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[66605,66616],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[66675,66676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66703,66704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66785,66796],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[66855,66856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66883,66884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67302,67346],"content":"AsQueryable<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsQueryable&lt;MulticastIPAddressInformation&gt;()","pos":[0,44],"source":"AsQueryable<MulticastIPAddressInformation>()"}]},{"pos":[67701,67743],"content":"AsQueryable<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;MulticastIPAddressInformation&gt;","pos":[0,42],"source":"AsQueryable<MulticastIPAddressInformation>"}]},{"pos":[67863,67864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67891,67892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67976,68021],"content":"AsQueryable(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"AsQueryable(Of MulticastIPAddressInformation)","pos":[0,45]}]},{"pos":[68144,68145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68172,68173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68652,68664],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[68797,68807],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[68874,68875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68902,68903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68992,69002],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[69069,69070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69097,69098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69557,69600],"content":"AsParallel<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsParallel&lt;MulticastIPAddressInformation&gt;()","pos":[0,43],"source":"AsParallel<MulticastIPAddressInformation>()"}]},{"pos":[69978,70019],"content":"AsParallel<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"AsParallel&lt;MulticastIPAddressInformation&gt;","pos":[0,41],"source":"AsParallel<MulticastIPAddressInformation>"}]},{"pos":[70147,70148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70175,70176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70268,70312],"content":"AsParallel(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"AsParallel(Of MulticastIPAddressInformation)","pos":[0,44]}]},{"pos":[70443,70444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70471,70472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71256,71395],"content":"Aggregate<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, MulticastIPAddressInformation, MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, MulticastIPAddressInformation, MulticastIPAddressInformation&gt;)","pos":[0,139],"source":"Aggregate<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, MulticastIPAddressInformation, MulticastIPAddressInformation>)"}]},{"pos":[72262,72302],"content":"Aggregate<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Aggregate&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"Aggregate<MulticastIPAddressInformation>"}]},{"pos":[72421,72422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72472,72476],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[72534,72535],"content":"<","needQuote":true,"nodes":[]},{"pos":[72631,72660],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[72746,72747]},{"pos":[72848,72877],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[72963,72964]},{"pos":[73065,73094],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[73211,73212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73321,73364],"content":"Aggregate(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Aggregate(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[73486,73487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73537,73541],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[73600,73603]},{"pos":[73706,73735],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[73821,73822]},{"pos":[73923,73952],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[74038,74039]},{"pos":[74140,74169],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[74254,74255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74282,74283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75188,75317],"content":"Aggregate<MulticastIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, MulticastIPAddressInformation, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;MulticastIPAddressInformation, TAccumulate&gt;(TAccumulate, Func&lt;TAccumulate, MulticastIPAddressInformation, TAccumulate&gt;)","pos":[0,129],"source":"Aggregate<MulticastIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, MulticastIPAddressInformation, TAccumulate>)"}]},{"pos":[76038,76091],"content":"Aggregate<MulticastIPAddressInformation, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;MulticastIPAddressInformation, TAccumulate&gt;","pos":[0,53],"source":"Aggregate<MulticastIPAddressInformation, TAccumulate>"}]},{"pos":[76223,76224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76251,76262],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[76300,76301]},{"pos":[76356,76360],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[76418,76419],"content":"<","needQuote":true,"nodes":[]},{"pos":[76446,76457],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[76495,76496]},{"pos":[76597,76626],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[76712,76713]},{"pos":[76745,76756],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[76825,76826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76939,76995],"content":"Aggregate(Of MulticastIPAddressInformation, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of MulticastIPAddressInformation, TAccumulate)","pos":[0,56]}]},{"pos":[77130,77131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77158,77169],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[77207,77208]},{"pos":[77263,77267],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[77326,77329]},{"pos":[77363,77374],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[77412,77413]},{"pos":[77514,77543],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[77629,77630]},{"pos":[77662,77673],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[77710,77711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77738,77739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78686,78852],"content":"Aggregate<MulticastIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, MulticastIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;MulticastIPAddressInformation, TAccumulate, TResult&gt;(TAccumulate, Func&lt;TAccumulate, MulticastIPAddressInformation, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,166],"source":"Aggregate<MulticastIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, MulticastIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[79725,79787],"content":"Aggregate<MulticastIPAddressInformation, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;MulticastIPAddressInformation, TAccumulate, TResult&gt;","pos":[0,62],"source":"Aggregate<MulticastIPAddressInformation, TAccumulate, TResult>"}]},{"pos":[79928,79929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79956,79967],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80005,80006]},{"pos":[80061,80065],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[80123,80124],"content":"<","needQuote":true,"nodes":[]},{"pos":[80151,80162],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80200,80201]},{"pos":[80302,80331],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[80417,80418]},{"pos":[80450,80461],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80531,80532]},{"pos":[80587,80591],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[80649,80650],"content":"<","needQuote":true,"nodes":[]},{"pos":[80677,80688],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80726,80727]},{"pos":[80759,80766],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[80831,80832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80966,81031],"content":"Aggregate(Of MulticastIPAddressInformation, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of MulticastIPAddressInformation, TAccumulate, TResult)","pos":[0,65]}]},{"pos":[81175,81176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81203,81214],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[81252,81253]},{"pos":[81308,81312],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[81371,81374]},{"pos":[81408,81419],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[81457,81458]},{"pos":[81559,81588],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[81674,81675]},{"pos":[81707,81718],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[81755,81756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[81784,81785]},{"pos":[81840,81844],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[81903,81906]},{"pos":[81940,81951],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[81989,81990]},{"pos":[82022,82029],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[82062,82063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82090,82091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83042,83122],"content":"All<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,80],"source":"All<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[83707,83741],"content":"All<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"All&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"All<MulticastIPAddressInformation>"}]},{"pos":[83854,83855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83905,83909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[83967,83968],"content":"<","needQuote":true,"nodes":[]},{"pos":[84064,84093],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[84179,84180]},{"pos":[84236,84243],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[84336,84337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84447,84484],"content":"All(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"All(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[84600,84601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84651,84655],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[84714,84717]},{"pos":[84820,84849],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[84935,84936]},{"pos":[84992,84999],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[85060,85061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85088,85089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85720,85756],"content":"Any<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Any&lt;MulticastIPAddressInformation&gt;()","pos":[0,36],"source":"Any<MulticastIPAddressInformation>()"}]},{"pos":[86082,86116],"content":"Any<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Any&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Any<MulticastIPAddressInformation>"}]},{"pos":[86229,86230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86257,86258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86335,86372],"content":"Any(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Any(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[86488,86489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86516,86517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87146,87226],"content":"Any<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,80],"source":"Any<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[87811,87845],"content":"Any<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Any&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Any<MulticastIPAddressInformation>"}]},{"pos":[87958,87959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88009,88013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[88071,88072],"content":"<","needQuote":true,"nodes":[]},{"pos":[88168,88197],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[88283,88284]},{"pos":[88340,88347],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[88440,88441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88551,88588],"content":"Any(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Any(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[88704,88705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88755,88759],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[88818,88821]},{"pos":[88924,88953],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[89039,89040]},{"pos":[89096,89103],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89164,89165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89192,89193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89842,89887],"content":"AsEnumerable<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;MulticastIPAddressInformation&gt;()","pos":[0,45],"source":"AsEnumerable<MulticastIPAddressInformation>()"}]},{"pos":[90249,90292],"content":"AsEnumerable<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;MulticastIPAddressInformation&gt;","pos":[0,43],"source":"AsEnumerable<MulticastIPAddressInformation>"}]},{"pos":[90414,90415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90442,90443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90529,90575],"content":"AsEnumerable(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of MulticastIPAddressInformation)","pos":[0,46]}]},{"pos":[90700,90701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90728,90729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91393,91477],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Decimal&gt;)","pos":[0,84],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)"}]},{"pos":[92078,92116],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[92233,92234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92284,92288],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[92346,92347],"content":"<","needQuote":true,"nodes":[]},{"pos":[92443,92472],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[92558,92559]},{"pos":[92615,92622],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[92715,92716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92830,92871],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[92991,92992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93042,93046],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[93105,93108]},{"pos":[93211,93240],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[93326,93327]},{"pos":[93383,93390],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[93451,93452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93479,93480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94250,94333],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Double&gt;)","pos":[0,83],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)"}]},{"pos":[94930,94968],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[95085,95086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95136,95140],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[95198,95199],"content":"<","needQuote":true,"nodes":[]},{"pos":[95295,95324],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[95410,95411]},{"pos":[95466,95472],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[95564,95565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95678,95719],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[95839,95840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95890,95894],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[95953,95956]},{"pos":[96059,96088],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[96174,96175]},{"pos":[96230,96236],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[96296,96297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96324,96325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97090,97172],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int32&gt;)","pos":[0,82],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)"}]},{"pos":[97765,97803],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[97920,97921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97971,97975],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[98033,98034],"content":"<","needQuote":true,"nodes":[]},{"pos":[98130,98159],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[98245,98246]},{"pos":[98300,98305],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[98396,98397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98509,98550],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[98670,98671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98721,98725],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[98784,98787]},{"pos":[98890,98919],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[99005,99006]},{"pos":[99060,99065],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[99124,99125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99152,99153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99915,99997],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int64&gt;)","pos":[0,82],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)"}]},{"pos":[100590,100628],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[100745,100746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100796,100800],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[100858,100859],"content":"<","needQuote":true,"nodes":[]},{"pos":[100955,100984],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[101070,101071]},{"pos":[101125,101130],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[101221,101222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101334,101375],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[101495,101496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101546,101550],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[101609,101612]},{"pos":[101715,101744],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[101830,101831]},{"pos":[101885,101890],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[101949,101950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101977,101978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102778,102872],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,94],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[103540,103578],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[103695,103696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103746,103750],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[103808,103809],"content":"<","needQuote":true,"nodes":[]},{"pos":[103905,103934],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[104020,104021]},{"pos":[104080,104088],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[104150,104151],"content":"<","needQuote":true,"nodes":[]},{"pos":[104202,104209],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[104334,104335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104466,104507],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[104627,104628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104678,104682],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[104741,104744]},{"pos":[104847,104876],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[104962,104963]},{"pos":[105022,105030],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[105093,105096]},{"pos":[105154,105161],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[105222,105223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105250,105251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105278,105279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106123,106216],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,93],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)"}]},{"pos":[106880,106918],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[107035,107036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107086,107090],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[107148,107149],"content":"<","needQuote":true,"nodes":[]},{"pos":[107245,107274],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[107360,107361]},{"pos":[107420,107428],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[107490,107491],"content":"<","needQuote":true,"nodes":[]},{"pos":[107541,107547],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[107671,107672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107802,107843],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[107963,107964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108014,108018],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[108077,108080]},{"pos":[108183,108212],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[108298,108299]},{"pos":[108358,108366],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[108429,108432]},{"pos":[108489,108495],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[108555,108556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108583,108584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108611,108612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109451,109543],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,92],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[110203,110241],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[110358,110359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110409,110413],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[110471,110472],"content":"<","needQuote":true,"nodes":[]},{"pos":[110568,110597],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[110683,110684]},{"pos":[110743,110751],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[110813,110814],"content":"<","needQuote":true,"nodes":[]},{"pos":[110863,110868],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[110991,110992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111121,111162],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[111282,111283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111333,111337],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[111396,111399]},{"pos":[111502,111531],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[111617,111618]},{"pos":[111677,111685],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[111748,111751]},{"pos":[111807,111812],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[111871,111872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111899,111900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111927,111928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112764,112856],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,92],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[113516,113554],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[113671,113672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113722,113726],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[113784,113785],"content":"<","needQuote":true,"nodes":[]},{"pos":[113881,113910],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[113996,113997]},{"pos":[114056,114064],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[114126,114127],"content":"<","needQuote":true,"nodes":[]},{"pos":[114176,114181],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[114304,114305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114434,114475],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[114595,114596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114646,114650],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[114709,114712]},{"pos":[114815,114844],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[114930,114931]},{"pos":[114990,114998],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[115061,115064]},{"pos":[115120,115125],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[115184,115185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115212,115213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115240,115241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116079,116172],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,93],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)"}]},{"pos":[116836,116874],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[116991,116992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117042,117046],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[117104,117105],"content":"<","needQuote":true,"nodes":[]},{"pos":[117201,117230],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[117316,117317]},{"pos":[117376,117384],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[117446,117447],"content":"<","needQuote":true,"nodes":[]},{"pos":[117497,117503],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[117627,117628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117758,117799],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[117919,117920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117970,117974],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[118033,118036]},{"pos":[118139,118168],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[118254,118255]},{"pos":[118314,118322],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[118385,118388]},{"pos":[118445,118451],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[118511,118512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118539,118540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118567,118568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119375,119458],"content":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Single&gt;)","pos":[0,83],"source":"Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)"}]},{"pos":[120055,120093],"content":"Average<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Average<MulticastIPAddressInformation>"}]},{"pos":[120210,120211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120261,120265],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[120323,120324],"content":"<","needQuote":true,"nodes":[]},{"pos":[120420,120449],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[120535,120536]},{"pos":[120591,120597],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[120689,120690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120803,120844],"content":"Average(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[120964,120965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121015,121019],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[121078,121081]},{"pos":[121184,121213],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[121299,121300]},{"pos":[121355,121361],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[121421,121422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121449,121450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122010,122025],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[122229,122242],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[122304,122305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122332,122333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122411,122427],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[122492,122493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122520,122521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123126,123207],"content":"Concat<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Concat&lt;MulticastIPAddressInformation&gt;(IEnumerable&lt;MulticastIPAddressInformation&gt;)","pos":[0,81],"source":"Concat<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)"}]},{"pos":[123836,123873],"content":"Concat<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Concat&lt;MulticastIPAddressInformation&gt;","pos":[0,37],"source":"Concat<MulticastIPAddressInformation>"}]},{"pos":[123989,123990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124067,124078],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[124163,124164],"content":"<","needQuote":true,"nodes":[]},{"pos":[124260,124289],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[124406,124407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124532,124572],"content":"Concat(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Concat(Of MulticastIPAddressInformation)","pos":[0,40]}]},{"pos":[124691,124692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124769,124780],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[124866,124869]},{"pos":[124972,125001],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[125086,125087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125114,125115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125834,125902],"content":"Append<MulticastIPAddressInformation>(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Append&lt;MulticastIPAddressInformation&gt;(MulticastIPAddressInformation)","pos":[0,68],"source":"Append<MulticastIPAddressInformation>(MulticastIPAddressInformation)"}]},{"pos":[126392,126429],"content":"Append<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Append&lt;MulticastIPAddressInformation&gt;","pos":[0,37],"source":"Append<MulticastIPAddressInformation>"}]},{"pos":[126545,126546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126642,126671],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[126756,126757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126842,126882],"content":"Append(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Append(Of MulticastIPAddressInformation)","pos":[0,40]}]},{"pos":[127001,127002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127098,127127],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[127212,127213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127865,127934],"content":"Prepend<MulticastIPAddressInformation>(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Prepend&lt;MulticastIPAddressInformation&gt;(MulticastIPAddressInformation)","pos":[0,69],"source":"Prepend<MulticastIPAddressInformation>(MulticastIPAddressInformation)"}]},{"pos":[128428,128466],"content":"Prepend<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Prepend&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Prepend<MulticastIPAddressInformation>"}]},{"pos":[128583,128584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128680,128709],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[128794,128795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128881,128922],"content":"Prepend(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Prepend(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[129042,129043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129139,129168],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[129253,129254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129911,129981],"content":"Contains<MulticastIPAddressInformation>(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains&lt;MulticastIPAddressInformation&gt;(MulticastIPAddressInformation)","pos":[0,70],"source":"Contains<MulticastIPAddressInformation>(MulticastIPAddressInformation)"}]},{"pos":[130479,130518],"content":"Contains<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Contains&lt;MulticastIPAddressInformation&gt;","pos":[0,39],"source":"Contains<MulticastIPAddressInformation>"}]},{"pos":[130636,130637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130733,130762],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[130847,130848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130935,130977],"content":"Contains(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(Of MulticastIPAddressInformation)","pos":[0,42]}]},{"pos":[131098,131099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131195,131224],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[131309,131310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132126,132246],"content":"Contains<MulticastIPAddressInformation>(MulticastIPAddressInformation, IEqualityComparer<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Contains&lt;MulticastIPAddressInformation&gt;(MulticastIPAddressInformation, IEqualityComparer&lt;MulticastIPAddressInformation&gt;)","pos":[0,120],"source":"Contains<MulticastIPAddressInformation>(MulticastIPAddressInformation, IEqualityComparer<MulticastIPAddressInformation>)"}]},{"pos":[133064,133103],"content":"Contains<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Contains&lt;MulticastIPAddressInformation&gt;","pos":[0,39],"source":"Contains<MulticastIPAddressInformation>"}]},{"pos":[133221,133222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133318,133347],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[133433,133434]},{"pos":[133522,133539],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[133630,133631],"content":"<","needQuote":true,"nodes":[]},{"pos":[133727,133756],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[133873,133874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134011,134053],"content":"Contains(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(Of MulticastIPAddressInformation)","pos":[0,42]}]},{"pos":[134174,134175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134271,134300],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[134386,134387]},{"pos":[134475,134492],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[134584,134587]},{"pos":[134690,134719],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[134804,134805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134832,134833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135575,135613],"content":"Count<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Count&lt;MulticastIPAddressInformation&gt;()","pos":[0,38],"source":"Count<MulticastIPAddressInformation>()"}]},{"pos":[135947,135983],"content":"Count<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Count&lt;MulticastIPAddressInformation&gt;","pos":[0,36],"source":"Count<MulticastIPAddressInformation>"}]},{"pos":[136098,136099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136126,136127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136206,136245],"content":"Count(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Count(Of MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[136363,136364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136391,136392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137031,137113],"content":"Count<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,82],"source":"Count<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[137706,137742],"content":"Count<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Count&lt;MulticastIPAddressInformation&gt;","pos":[0,36],"source":"Count<MulticastIPAddressInformation>"}]},{"pos":[137857,137858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137908,137912],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[137970,137971],"content":"<","needQuote":true,"nodes":[]},{"pos":[138067,138096],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[138182,138183]},{"pos":[138239,138246],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[138339,138340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138452,138491],"content":"Count(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Count(Of MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[138609,138610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138660,138664],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[138723,138726]},{"pos":[138829,138858],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[138944,138945]},{"pos":[139001,139008],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[139069,139070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139097,139098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139757,139804],"content":"DefaultIfEmpty<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;MulticastIPAddressInformation&gt;()","pos":[0,47],"source":"DefaultIfEmpty<MulticastIPAddressInformation>()"}]},{"pos":[140174,140219],"content":"DefaultIfEmpty<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;MulticastIPAddressInformation&gt;","pos":[0,45],"source":"DefaultIfEmpty<MulticastIPAddressInformation>"}]},{"pos":[140343,140344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140371,140372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140460,140508],"content":"DefaultIfEmpty(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of MulticastIPAddressInformation)","pos":[0,48]}]},{"pos":[140635,140636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140663,140664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141292,141368],"content":"DefaultIfEmpty<MulticastIPAddressInformation>(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;MulticastIPAddressInformation&gt;(MulticastIPAddressInformation)","pos":[0,76],"source":"DefaultIfEmpty<MulticastIPAddressInformation>(MulticastIPAddressInformation)"}]},{"pos":[141890,141935],"content":"DefaultIfEmpty<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;MulticastIPAddressInformation&gt;","pos":[0,45],"source":"DefaultIfEmpty<MulticastIPAddressInformation>"}]},{"pos":[142059,142060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142156,142185],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[142270,142271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142364,142412],"content":"DefaultIfEmpty(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of MulticastIPAddressInformation)","pos":[0,48]}]},{"pos":[142539,142540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142636,142665],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[142750,142751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143364,143405],"content":"Distinct<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Distinct&lt;MulticastIPAddressInformation&gt;()","pos":[0,41],"source":"Distinct<MulticastIPAddressInformation>()"}]},{"pos":[143751,143790],"content":"Distinct<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Distinct&lt;MulticastIPAddressInformation&gt;","pos":[0,39],"source":"Distinct<MulticastIPAddressInformation>"}]},{"pos":[143908,143909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143936,143937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144019,144061],"content":"Distinct(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Distinct(Of MulticastIPAddressInformation)","pos":[0,42]}]},{"pos":[144182,144183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144210,144211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144901,144990],"content":"Distinct<MulticastIPAddressInformation>(IEqualityComparer<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Distinct&lt;MulticastIPAddressInformation&gt;(IEqualityComparer&lt;MulticastIPAddressInformation&gt;)","pos":[0,89],"source":"Distinct<MulticastIPAddressInformation>(IEqualityComparer<MulticastIPAddressInformation>)"}]},{"pos":[145651,145690],"content":"Distinct<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Distinct&lt;MulticastIPAddressInformation&gt;","pos":[0,39],"source":"Distinct<MulticastIPAddressInformation>"}]},{"pos":[145808,145809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145892,145909],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[146000,146001],"content":"<","needQuote":true,"nodes":[]},{"pos":[146097,146126],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[146243,146244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146377,146419],"content":"Distinct(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Distinct(Of MulticastIPAddressInformation)","pos":[0,42]}]},{"pos":[146540,146541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146624,146641],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[146733,146736]},{"pos":[146839,146868],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[146953,146954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146981,146982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147693,147740],"content":"ElementAt<MulticastIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;MulticastIPAddressInformation&gt;(Int32)","pos":[0,47],"source":"ElementAt<MulticastIPAddressInformation>(Int32)"}]},{"pos":[148133,148173],"content":"ElementAt<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ElementAt&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"ElementAt<MulticastIPAddressInformation>"}]},{"pos":[148292,148293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148342,148347],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[148406,148407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148504,148547],"content":"ElementAt(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"ElementAt(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[148669,148670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148719,148724],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[148783,148784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149390,149446],"content":"ElementAtOrDefault<MulticastIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;MulticastIPAddressInformation&gt;(Int32)","pos":[0,56],"source":"ElementAtOrDefault<MulticastIPAddressInformation>(Int32)"}]},{"pos":[149875,149924],"content":"ElementAtOrDefault<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;MulticastIPAddressInformation&gt;","pos":[0,49],"source":"ElementAtOrDefault<MulticastIPAddressInformation>"}]},{"pos":[150052,150053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150102,150107],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[150166,150167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150273,150325],"content":"ElementAtOrDefault(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of MulticastIPAddressInformation)","pos":[0,52]}]},{"pos":[150456,150457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150506,150511],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[150570,150571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151298,151379],"content":"Except<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Except&lt;MulticastIPAddressInformation&gt;(IEnumerable&lt;MulticastIPAddressInformation&gt;)","pos":[0,81],"source":"Except<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)"}]},{"pos":[152008,152045],"content":"Except<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Except&lt;MulticastIPAddressInformation&gt;","pos":[0,37],"source":"Except<MulticastIPAddressInformation>"}]},{"pos":[152161,152162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152239,152250],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[152335,152336],"content":"<","needQuote":true,"nodes":[]},{"pos":[152432,152461],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[152578,152579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152704,152744],"content":"Except(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Except(Of MulticastIPAddressInformation)","pos":[0,40]}]},{"pos":[152863,152864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152941,152952],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[153038,153041]},{"pos":[153144,153173],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[153258,153259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153286,153287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154242,154373],"content":"Except<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Except&lt;MulticastIPAddressInformation&gt;(IEnumerable&lt;MulticastIPAddressInformation&gt;, IEqualityComparer&lt;MulticastIPAddressInformation&gt;)","pos":[0,131],"source":"Except<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)"}]},{"pos":[155322,155359],"content":"Except<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Except&lt;MulticastIPAddressInformation&gt;","pos":[0,37],"source":"Except<MulticastIPAddressInformation>"}]},{"pos":[155475,155476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155553,155564],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[155649,155650],"content":"<","needQuote":true,"nodes":[]},{"pos":[155746,155775],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[155893,155894]},{"pos":[155982,155999],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[156090,156091],"content":"<","needQuote":true,"nodes":[]},{"pos":[156187,156216],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[156333,156334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156509,156549],"content":"Except(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Except(Of MulticastIPAddressInformation)","pos":[0,40]}]},{"pos":[156668,156669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156746,156757],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[156843,156846]},{"pos":[156949,156978],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[157063,157064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[157092,157093]},{"pos":[157181,157198],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[157290,157293]},{"pos":[157396,157425],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[157510,157511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157538,157539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158344,158382],"content":"First<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"First&lt;MulticastIPAddressInformation&gt;()","pos":[0,38],"source":"First<MulticastIPAddressInformation>()"}]},{"pos":[158716,158752],"content":"First<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"First&lt;MulticastIPAddressInformation&gt;","pos":[0,36],"source":"First<MulticastIPAddressInformation>"}]},{"pos":[158867,158868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158895,158896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158975,159014],"content":"First(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"First(Of MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[159132,159133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159160,159161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159800,159882],"content":"First<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,82],"source":"First<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[160475,160511],"content":"First<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"First&lt;MulticastIPAddressInformation&gt;","pos":[0,36],"source":"First<MulticastIPAddressInformation>"}]},{"pos":[160626,160627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160677,160681],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[160739,160740],"content":"<","needQuote":true,"nodes":[]},{"pos":[160836,160865],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[160951,160952]},{"pos":[161008,161015],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[161108,161109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161221,161260],"content":"First(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"First(Of MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[161378,161379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161429,161433],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[161492,161495]},{"pos":[161598,161627],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[161713,161714]},{"pos":[161770,161777],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[161838,161839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161866,161867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162526,162573],"content":"FirstOrDefault<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;MulticastIPAddressInformation&gt;()","pos":[0,47],"source":"FirstOrDefault<MulticastIPAddressInformation>()"}]},{"pos":[162943,162988],"content":"FirstOrDefault<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;MulticastIPAddressInformation&gt;","pos":[0,45],"source":"FirstOrDefault<MulticastIPAddressInformation>"}]},{"pos":[163112,163113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163140,163141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163229,163277],"content":"FirstOrDefault(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of MulticastIPAddressInformation)","pos":[0,48]}]},{"pos":[163404,163405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163432,163433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164117,164208],"content":"FirstOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,91],"source":"FirstOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[164837,164882],"content":"FirstOrDefault<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;MulticastIPAddressInformation&gt;","pos":[0,45],"source":"FirstOrDefault<MulticastIPAddressInformation>"}]},{"pos":[165006,165007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165057,165061],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[165119,165120],"content":"<","needQuote":true,"nodes":[]},{"pos":[165216,165245],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[165331,165332]},{"pos":[165388,165395],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[165488,165489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165610,165658],"content":"FirstOrDefault(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of MulticastIPAddressInformation)","pos":[0,48]}]},{"pos":[165785,165786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165836,165840],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[165899,165902]},{"pos":[166005,166034],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[166120,166121]},{"pos":[166177,166184],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[166245,166246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166273,166274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167048,167135],"content":"GroupBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;)","pos":[0,87],"source":"GroupBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)"}]},{"pos":[167720,167764],"content":"GroupBy<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,44],"source":"GroupBy<MulticastIPAddressInformation, TKey>"}]},{"pos":[167887,167888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167938,167942],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[168000,168001],"content":"<","needQuote":true,"nodes":[]},{"pos":[168097,168126],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[168212,168213]},{"pos":[168245,168249],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[168311,168312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168415,168462],"content":"GroupBy(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of MulticastIPAddressInformation, TKey)","pos":[0,47]}]},{"pos":[168588,168589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168639,168643],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[168702,168705]},{"pos":[168808,168837],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[168923,168924]},{"pos":[168956,168960],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[168990,168991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169018,169019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169870,169982],"content":"GroupBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,112],"source":"GroupBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[170752,170796],"content":"GroupBy<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,44],"source":"GroupBy<MulticastIPAddressInformation, TKey>"}]},{"pos":[170919,170920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170970,170974],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[171032,171033],"content":"<","needQuote":true,"nodes":[]},{"pos":[171129,171158],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[171244,171245]},{"pos":[171277,171281],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[171344,171345]},{"pos":[171433,171450],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[171541,171542],"content":"<","needQuote":true,"nodes":[]},{"pos":[171569,171573],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[171635,171636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171789,171836],"content":"GroupBy(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of MulticastIPAddressInformation, TKey)","pos":[0,47]}]},{"pos":[171962,171963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172013,172017],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[172076,172079]},{"pos":[172182,172211],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[172297,172298]},{"pos":[172330,172334],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[172364,172365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[172393,172394]},{"pos":[172482,172499],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[172591,172594]},{"pos":[172628,172632],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[172662,172663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172690,172691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173647,173791],"content":"GroupBy<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TElement&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;MulticastIPAddressInformation, TElement&gt;)","pos":[0,144],"source":"GroupBy<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)"}]},{"pos":[174648,174702],"content":"GroupBy<MulticastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TElement&gt;","pos":[0,54],"source":"GroupBy<MulticastIPAddressInformation, TKey, TElement>"}]},{"pos":[174835,174836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174886,174890],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[174948,174949],"content":"<","needQuote":true,"nodes":[]},{"pos":[175045,175074],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[175160,175161]},{"pos":[175193,175197],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[175260,175261]},{"pos":[175316,175320],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[175378,175379],"content":"<","needQuote":true,"nodes":[]},{"pos":[175475,175504],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[175590,175591]},{"pos":[175623,175631],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[175697,175698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175822,175879],"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TElement)","pos":[0,57]}]},{"pos":[176015,176016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176066,176070],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[176129,176132]},{"pos":[176235,176264],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[176350,176351]},{"pos":[176383,176387],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[176417,176418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[176446,176447]},{"pos":[176502,176506],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[176565,176568]},{"pos":[176671,176700],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[176786,176787]},{"pos":[176819,176827],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[176861,176862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176889,176890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177984,178153],"content":"GroupBy<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TElement&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;MulticastIPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,169],"source":"GroupBy<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[179195,179249],"content":"GroupBy<MulticastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TElement&gt;","pos":[0,54],"source":"GroupBy<MulticastIPAddressInformation, TKey, TElement>"}]},{"pos":[179382,179383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179433,179437],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[179495,179496],"content":"<","needQuote":true,"nodes":[]},{"pos":[179592,179621],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[179707,179708]},{"pos":[179740,179744],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[179807,179808]},{"pos":[179863,179867],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[179925,179926],"content":"<","needQuote":true,"nodes":[]},{"pos":[180022,180051],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[180137,180138]},{"pos":[180170,180178],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[180245,180246]},{"pos":[180334,180351],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[180442,180443],"content":"<","needQuote":true,"nodes":[]},{"pos":[180470,180474],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[180536,180537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180711,180768],"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TElement)","pos":[0,57]}]},{"pos":[180904,180905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180955,180959],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[181018,181021]},{"pos":[181124,181153],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[181239,181240]},{"pos":[181272,181276],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[181306,181307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[181335,181336]},{"pos":[181391,181395],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[181454,181457]},{"pos":[181560,181589],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[181675,181676]},{"pos":[181708,181716],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[181750,181751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[181779,181780]},{"pos":[181868,181885],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[181977,181980]},{"pos":[182014,182018],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[182048,182049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182076,182077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183261,183422],"content":"GroupBy<MulticastIPAddressInformation, TKey, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<TKey, IEnumerable<MulticastIPAddressInformation>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TResult&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;TKey, IEnumerable&lt;MulticastIPAddressInformation&gt;, TResult&gt;)","pos":[0,161],"source":"GroupBy<MulticastIPAddressInformation, TKey, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<TKey, IEnumerable<MulticastIPAddressInformation>, TResult>)"}]},{"pos":[184434,184487],"content":"GroupBy<MulticastIPAddressInformation, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TResult&gt;","pos":[0,53],"source":"GroupBy<MulticastIPAddressInformation, TKey, TResult>"}]},{"pos":[184619,184620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184670,184674],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[184732,184733],"content":"<","needQuote":true,"nodes":[]},{"pos":[184829,184858],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[184944,184945]},{"pos":[184977,184981],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[185044,185045]},{"pos":[185100,185104],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[185162,185163],"content":"<","needQuote":true,"nodes":[]},{"pos":[185190,185194],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[185225,185226]},{"pos":[185308,185319],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[185404,185405],"content":"<","needQuote":true,"nodes":[]},{"pos":[185501,185530],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[185648,185649]},{"pos":[185681,185688],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[185753,185754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185922,185978],"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TResult)","pos":[0,56]}]},{"pos":[186113,186114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186164,186168],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[186227,186230]},{"pos":[186333,186362],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[186448,186449]},{"pos":[186481,186485],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[186515,186516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[186544,186545]},{"pos":[186600,186604],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[186663,186666]},{"pos":[186700,186704],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[186735,186736]},{"pos":[186818,186829],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[186915,186918]},{"pos":[187021,187050],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[187135,187136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[187164,187165]},{"pos":[187197,187204],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[187237,187238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187265,187266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188531,188717],"content":"GroupBy<MulticastIPAddressInformation, TKey, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<TKey, IEnumerable<MulticastIPAddressInformation>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TResult&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;TKey, IEnumerable&lt;MulticastIPAddressInformation&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,186],"source":"GroupBy<MulticastIPAddressInformation, TKey, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<TKey, IEnumerable<MulticastIPAddressInformation>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[189914,189967],"content":"GroupBy<MulticastIPAddressInformation, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TResult&gt;","pos":[0,53],"source":"GroupBy<MulticastIPAddressInformation, TKey, TResult>"}]},{"pos":[190099,190100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190150,190154],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[190212,190213],"content":"<","needQuote":true,"nodes":[]},{"pos":[190309,190338],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[190424,190425]},{"pos":[190457,190461],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[190524,190525]},{"pos":[190580,190584],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[190642,190643],"content":"<","needQuote":true,"nodes":[]},{"pos":[190670,190674],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[190705,190706]},{"pos":[190788,190799],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[190884,190885],"content":"<","needQuote":true,"nodes":[]},{"pos":[190981,191010],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[191128,191129]},{"pos":[191161,191168],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[191234,191235]},{"pos":[191323,191340],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[191431,191432],"content":"<","needQuote":true,"nodes":[]},{"pos":[191459,191463],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[191525,191526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191744,191800],"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TResult)","pos":[0,56]}]},{"pos":[191935,191936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191986,191990],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[192049,192052]},{"pos":[192155,192184],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[192270,192271]},{"pos":[192303,192307],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[192337,192338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[192366,192367]},{"pos":[192422,192426],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[192485,192488]},{"pos":[192522,192526],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[192557,192558]},{"pos":[192640,192651],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[192737,192740]},{"pos":[192843,192872],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[192957,192958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[192986,192987]},{"pos":[193019,193026],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[193059,193060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[193088,193089]},{"pos":[193177,193194],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[193286,193289]},{"pos":[193323,193327],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[193357,193358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193385,193386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194707,194904],"content":"GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TElement, TResult&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;MulticastIPAddressInformation, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,197],"source":"GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[196065,196128],"content":"GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TElement, TResult&gt;","pos":[0,63],"source":"GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>"}]},{"pos":[196270,196271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196321,196325],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[196383,196384],"content":"<","needQuote":true,"nodes":[]},{"pos":[196480,196509],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[196595,196596]},{"pos":[196628,196632],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[196695,196696]},{"pos":[196751,196755],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[196813,196814],"content":"<","needQuote":true,"nodes":[]},{"pos":[196910,196939],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[197025,197026]},{"pos":[197058,197066],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[197133,197134]},{"pos":[197189,197193],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[197251,197252],"content":"<","needQuote":true,"nodes":[]},{"pos":[197279,197283],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[197314,197315]},{"pos":[197397,197408],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[197493,197494],"content":"<","needQuote":true,"nodes":[]},{"pos":[197521,197529],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[197596,197597]},{"pos":[197629,197636],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[197701,197702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197891,197957],"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)","pos":[0,66]}]},{"pos":[198102,198103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198153,198157],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[198216,198219]},{"pos":[198322,198351],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[198437,198438]},{"pos":[198470,198474],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[198504,198505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[198533,198534]},{"pos":[198589,198593],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[198652,198655]},{"pos":[198758,198787],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[198873,198874]},{"pos":[198906,198914],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[198948,198949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[198977,198978]},{"pos":[199033,199037],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[199096,199099]},{"pos":[199133,199137],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[199168,199169]},{"pos":[199251,199262],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[199348,199351]},{"pos":[199385,199393],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[199427,199428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[199456,199457]},{"pos":[199489,199496],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[199529,199530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199557,199558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200975,201197],"content":"GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TElement, TResult&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;MulticastIPAddressInformation, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,222],"source":"GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[202543,202606],"content":"GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;MulticastIPAddressInformation, TKey, TElement, TResult&gt;","pos":[0,63],"source":"GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>"}]},{"pos":[202748,202749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202799,202803],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[202861,202862],"content":"<","needQuote":true,"nodes":[]},{"pos":[202958,202987],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[203073,203074]},{"pos":[203106,203110],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[203173,203174]},{"pos":[203229,203233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[203291,203292],"content":"<","needQuote":true,"nodes":[]},{"pos":[203388,203417],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[203503,203504]},{"pos":[203536,203544],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[203611,203612]},{"pos":[203667,203671],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[203729,203730],"content":"<","needQuote":true,"nodes":[]},{"pos":[203757,203761],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[203792,203793]},{"pos":[203875,203886],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[203971,203972],"content":"<","needQuote":true,"nodes":[]},{"pos":[203999,204007],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[204074,204075]},{"pos":[204107,204114],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[204180,204181]},{"pos":[204269,204286],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[204377,204378],"content":"<","needQuote":true,"nodes":[]},{"pos":[204405,204409],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[204471,204472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204711,204777],"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)","pos":[0,66]}]},{"pos":[204922,204923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204973,204977],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[205036,205039]},{"pos":[205142,205171],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[205257,205258]},{"pos":[205290,205294],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[205324,205325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[205353,205354]},{"pos":[205409,205413],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[205472,205475]},{"pos":[205578,205607],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[205693,205694]},{"pos":[205726,205734],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[205768,205769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[205797,205798]},{"pos":[205853,205857],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[205916,205919]},{"pos":[205953,205957],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[205988,205989]},{"pos":[206071,206082],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[206168,206171]},{"pos":[206205,206213],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[206247,206248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[206276,206277]},{"pos":[206309,206316],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[206349,206350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[206378,206379]},{"pos":[206467,206484],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[206576,206579]},{"pos":[206613,206617],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[206647,206648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206675,206676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208186,208400],"content":"GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;MulticastIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;MulticastIPAddressInformation, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,214],"source":"GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, IEnumerable<TInner>, TResult>)"}]},{"pos":[209718,209781],"content":"GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;MulticastIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,63],"source":"GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[209923,209924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210001,210012],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[210097,210098],"content":"<","needQuote":true,"nodes":[]},{"pos":[210125,210131],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[210196,210197]},{"pos":[210252,210256],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[210314,210315],"content":"<","needQuote":true,"nodes":[]},{"pos":[210411,210440],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[210526,210527]},{"pos":[210559,210563],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[210626,210627]},{"pos":[210682,210686],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[210744,210745],"content":"<","needQuote":true,"nodes":[]},{"pos":[210772,210778],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[210811,210812]},{"pos":[210844,210848],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[210911,210912]},{"pos":[210967,210971],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[211029,211030],"content":"<","needQuote":true,"nodes":[]},{"pos":[211126,211155],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[211241,211242]},{"pos":[211324,211335],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[211420,211421],"content":"<","needQuote":true,"nodes":[]},{"pos":[211448,211454],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[211519,211520]},{"pos":[211552,211559],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[211624,211625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211860,211926],"content":"GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)","pos":[0,66]}]},{"pos":[212071,212072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212149,212160],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[212246,212249]},{"pos":[212283,212289],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[212321,212322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[212350,212351]},{"pos":[212406,212410],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[212469,212472]},{"pos":[212575,212604],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[212690,212691]},{"pos":[212723,212727],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[212757,212758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[212786,212787]},{"pos":[212842,212846],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[212905,212908]},{"pos":[212942,212948],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[212981,212982]},{"pos":[213014,213018],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[213048,213049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[213077,213078]},{"pos":[213133,213137],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[213196,213199]},{"pos":[213302,213331],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[213417,213418]},{"pos":[213500,213511],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[213597,213600]},{"pos":[213634,213640],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[213672,213673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[213701,213702]},{"pos":[213734,213741],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[213774,213775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213802,213803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215396,215635],"content":"GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;MulticastIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;MulticastIPAddressInformation, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,239],"source":"GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[217138,217201],"content":"GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;MulticastIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,63],"source":"GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[217343,217344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217421,217432],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[217517,217518],"content":"<","needQuote":true,"nodes":[]},{"pos":[217545,217551],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[217616,217617]},{"pos":[217672,217676],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[217734,217735],"content":"<","needQuote":true,"nodes":[]},{"pos":[217831,217860],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[217946,217947]},{"pos":[217979,217983],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[218046,218047]},{"pos":[218102,218106],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[218164,218165],"content":"<","needQuote":true,"nodes":[]},{"pos":[218192,218198],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[218231,218232]},{"pos":[218264,218268],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[218331,218332]},{"pos":[218387,218391],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[218449,218450],"content":"<","needQuote":true,"nodes":[]},{"pos":[218546,218575],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[218661,218662]},{"pos":[218744,218755],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[218840,218841],"content":"<","needQuote":true,"nodes":[]},{"pos":[218868,218874],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[218939,218940]},{"pos":[218972,218979],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[219045,219046]},{"pos":[219134,219151],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[219242,219243],"content":"<","needQuote":true,"nodes":[]},{"pos":[219270,219274],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[219336,219337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219622,219688],"content":"GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)","pos":[0,66]}]},{"pos":[219833,219834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219911,219922],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[220008,220011]},{"pos":[220045,220051],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[220083,220084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[220112,220113]},{"pos":[220168,220172],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[220231,220234]},{"pos":[220337,220366],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[220452,220453]},{"pos":[220485,220489],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[220519,220520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[220548,220549]},{"pos":[220604,220608],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[220667,220670]},{"pos":[220704,220710],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[220743,220744]},{"pos":[220776,220780],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[220810,220811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[220839,220840]},{"pos":[220895,220899],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[220958,220961]},{"pos":[221064,221093],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[221179,221180]},{"pos":[221262,221273],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[221359,221362]},{"pos":[221396,221402],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[221434,221435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[221463,221464]},{"pos":[221496,221503],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[221536,221537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[221565,221566]},{"pos":[221654,221671],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[221763,221766]},{"pos":[221800,221804],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[221834,221835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221862,221863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223159,223243],"content":"Intersect<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Intersect&lt;MulticastIPAddressInformation&gt;(IEnumerable&lt;MulticastIPAddressInformation&gt;)","pos":[0,84],"source":"Intersect<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)"}]},{"pos":[223884,223924],"content":"Intersect<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Intersect&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"Intersect<MulticastIPAddressInformation>"}]},{"pos":[224043,224044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224121,224132],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[224217,224218],"content":"<","needQuote":true,"nodes":[]},{"pos":[224314,224343],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[224460,224461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224589,224632],"content":"Intersect(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Intersect(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[224754,224755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224832,224843],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[224929,224932]},{"pos":[225035,225064],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[225149,225150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225177,225178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226148,226282],"content":"Intersect<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Intersect&lt;MulticastIPAddressInformation&gt;(IEnumerable&lt;MulticastIPAddressInformation&gt;, IEqualityComparer&lt;MulticastIPAddressInformation&gt;)","pos":[0,134],"source":"Intersect<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)"}]},{"pos":[227243,227283],"content":"Intersect<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Intersect&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"Intersect<MulticastIPAddressInformation>"}]},{"pos":[227402,227403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227480,227491],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[227576,227577],"content":"<","needQuote":true,"nodes":[]},{"pos":[227673,227702],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[227820,227821]},{"pos":[227909,227926],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[228017,228018],"content":"<","needQuote":true,"nodes":[]},{"pos":[228114,228143],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[228260,228261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228439,228482],"content":"Intersect(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Intersect(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[228604,228605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228682,228693],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[228779,228782]},{"pos":[228885,228914],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[228999,229000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[229028,229029]},{"pos":[229117,229134],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[229226,229229]},{"pos":[229332,229361],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[229446,229447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229474,229475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230649,230845],"content":"Join<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;MulticastIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;MulticastIPAddressInformation, TInner, TResult&gt;)","pos":[0,196],"source":"Join<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, TInner, TResult>)"}]},{"pos":[232004,232062],"content":"Join<MulticastIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;MulticastIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,58],"source":"Join<MulticastIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[232199,232200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232277,232288],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[232373,232374],"content":"<","needQuote":true,"nodes":[]},{"pos":[232401,232407],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[232472,232473]},{"pos":[232528,232532],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[232590,232591],"content":"<","needQuote":true,"nodes":[]},{"pos":[232687,232716],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[232802,232803]},{"pos":[232835,232839],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[232902,232903]},{"pos":[232958,232962],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[233020,233021],"content":"<","needQuote":true,"nodes":[]},{"pos":[233048,233054],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[233087,233088]},{"pos":[233120,233124],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[233187,233188]},{"pos":[233243,233247],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[233305,233306],"content":"<","needQuote":true,"nodes":[]},{"pos":[233402,233431],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[233517,233518]},{"pos":[233550,233556],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[233589,233590]},{"pos":[233622,233629],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[233694,233695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233885,233946],"content":"Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)","pos":[0,61]}]},{"pos":[234086,234087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[234164,234175],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[234261,234264]},{"pos":[234298,234304],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[234336,234337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[234365,234366]},{"pos":[234421,234425],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[234484,234487]},{"pos":[234590,234619],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[234705,234706]},{"pos":[234738,234742],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[234772,234773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[234801,234802]},{"pos":[234857,234861],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[234920,234923]},{"pos":[234957,234963],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[234996,234997]},{"pos":[235029,235033],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[235063,235064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[235092,235093]},{"pos":[235148,235152],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[235211,235214]},{"pos":[235317,235346],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[235432,235433]},{"pos":[235465,235471],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[235504,235505]},{"pos":[235537,235544],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[235577,235578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235605,235606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237025,237246],"content":"Join<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;MulticastIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;MulticastIPAddressInformation, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,221],"source":"Join<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[238590,238648],"content":"Join<MulticastIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;MulticastIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,58],"source":"Join<MulticastIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[238785,238786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238863,238874],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[238959,238960],"content":"<","needQuote":true,"nodes":[]},{"pos":[238987,238993],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[239058,239059]},{"pos":[239114,239118],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[239176,239177],"content":"<","needQuote":true,"nodes":[]},{"pos":[239273,239302],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[239388,239389]},{"pos":[239421,239425],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[239488,239489]},{"pos":[239544,239548],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[239606,239607],"content":"<","needQuote":true,"nodes":[]},{"pos":[239634,239640],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[239673,239674]},{"pos":[239706,239710],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[239773,239774]},{"pos":[239829,239833],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[239891,239892],"content":"<","needQuote":true,"nodes":[]},{"pos":[239988,240017],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[240103,240104]},{"pos":[240136,240142],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[240175,240176]},{"pos":[240208,240215],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[240281,240282]},{"pos":[240370,240387],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[240478,240479],"content":"<","needQuote":true,"nodes":[]},{"pos":[240506,240510],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[240572,240573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240813,240874],"content":"Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)","pos":[0,61]}]},{"pos":[241014,241015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241092,241103],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[241189,241192]},{"pos":[241226,241232],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[241264,241265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[241293,241294]},{"pos":[241349,241353],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[241412,241415]},{"pos":[241518,241547],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[241633,241634]},{"pos":[241666,241670],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[241700,241701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[241729,241730]},{"pos":[241785,241789],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[241848,241851]},{"pos":[241885,241891],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[241924,241925]},{"pos":[241957,241961],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[241991,241992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[242020,242021]},{"pos":[242076,242080],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[242139,242142]},{"pos":[242245,242274],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[242360,242361]},{"pos":[242393,242399],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[242432,242433]},{"pos":[242465,242472],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[242505,242506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[242534,242535]},{"pos":[242623,242640],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[242732,242735]},{"pos":[242769,242773],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[242803,242804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242831,242832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243889,243926],"content":"Last<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Last&lt;MulticastIPAddressInformation&gt;()","pos":[0,37],"source":"Last<MulticastIPAddressInformation>()"}]},{"pos":[244256,244291],"content":"Last<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Last&lt;MulticastIPAddressInformation&gt;","pos":[0,35],"source":"Last<MulticastIPAddressInformation>"}]},{"pos":[244405,244406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244433,244434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244512,244550],"content":"Last(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Last(Of MulticastIPAddressInformation)","pos":[0,38]}]},{"pos":[244667,244668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244695,244696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245330,245411],"content":"Last<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,81],"source":"Last<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[246000,246035],"content":"Last<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Last&lt;MulticastIPAddressInformation&gt;","pos":[0,35],"source":"Last<MulticastIPAddressInformation>"}]},{"pos":[246149,246150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246200,246204],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[246262,246263],"content":"<","needQuote":true,"nodes":[]},{"pos":[246359,246388],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[246474,246475]},{"pos":[246531,246538],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[246631,246632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246743,246781],"content":"Last(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Last(Of MulticastIPAddressInformation)","pos":[0,38]}]},{"pos":[246898,246899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246949,246953],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[247012,247015]},{"pos":[247118,247147],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[247233,247234]},{"pos":[247290,247297],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[247358,247359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247386,247387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248041,248087],"content":"LastOrDefault<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;MulticastIPAddressInformation&gt;()","pos":[0,46],"source":"LastOrDefault<MulticastIPAddressInformation>()"}]},{"pos":[248453,248497],"content":"LastOrDefault<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;MulticastIPAddressInformation&gt;","pos":[0,44],"source":"LastOrDefault<MulticastIPAddressInformation>"}]},{"pos":[248620,248621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248648,248649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248736,248783],"content":"LastOrDefault(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of MulticastIPAddressInformation)","pos":[0,47]}]},{"pos":[248909,248910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248937,248938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249617,249707],"content":"LastOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,90],"source":"LastOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[250332,250376],"content":"LastOrDefault<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;MulticastIPAddressInformation&gt;","pos":[0,44],"source":"LastOrDefault<MulticastIPAddressInformation>"}]},{"pos":[250499,250500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250550,250554],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[250612,250613],"content":"<","needQuote":true,"nodes":[]},{"pos":[250709,250738],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[250824,250825]},{"pos":[250881,250888],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[250981,250982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251102,251149],"content":"LastOrDefault(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of MulticastIPAddressInformation)","pos":[0,47]}]},{"pos":[251275,251276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251326,251330],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[251389,251392]},{"pos":[251495,251524],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[251610,251611]},{"pos":[251667,251674],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[251735,251736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251763,251764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252437,252479],"content":"LongCount<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"LongCount&lt;MulticastIPAddressInformation&gt;()","pos":[0,42],"source":"LongCount<MulticastIPAddressInformation>()"}]},{"pos":[252829,252869],"content":"LongCount<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"LongCount&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"LongCount<MulticastIPAddressInformation>"}]},{"pos":[252988,252989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253016,253017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253100,253143],"content":"LongCount(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"LongCount(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[253265,253266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253293,253294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253953,254039],"content":"LongCount<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,86],"source":"LongCount<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[254648,254688],"content":"LongCount<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"LongCount&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"LongCount<MulticastIPAddressInformation>"}]},{"pos":[254807,254808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254858,254862],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[254920,254921],"content":"<","needQuote":true,"nodes":[]},{"pos":[255017,255046],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[255132,255133]},{"pos":[255189,255196],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[255289,255290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255406,255449],"content":"LongCount(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"LongCount(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[255571,255572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255622,255626],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[255685,255688]},{"pos":[255791,255820],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[255906,255907]},{"pos":[255963,255970],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[256031,256032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256059,256060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256709,256745],"content":"Max<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;()","pos":[0,36],"source":"Max<MulticastIPAddressInformation>()"}]},{"pos":[257071,257105],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[257218,257219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257246,257247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257324,257361],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[257477,257478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257505,257506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258135,258215],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Decimal&gt;)","pos":[0,80],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)"}]},{"pos":[258800,258834],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[258947,258948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258998,259002],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[259060,259061],"content":"<","needQuote":true,"nodes":[]},{"pos":[259157,259186],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[259272,259273]},{"pos":[259329,259336],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[259429,259430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259540,259577],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[259693,259694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259744,259748],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[259807,259810]},{"pos":[259913,259942],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[260028,260029]},{"pos":[260085,260092],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[260153,260154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260181,260182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260932,261011],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Double&gt;)","pos":[0,79],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)"}]},{"pos":[261592,261626],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[261739,261740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261790,261794],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[261852,261853],"content":"<","needQuote":true,"nodes":[]},{"pos":[261949,261978],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[262064,262065]},{"pos":[262120,262126],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[262218,262219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262328,262365],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[262481,262482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262532,262536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[262595,262598]},{"pos":[262701,262730],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[262816,262817]},{"pos":[262872,262878],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[262938,262939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262966,262967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263712,263790],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int32&gt;)","pos":[0,78],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)"}]},{"pos":[264367,264401],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[264514,264515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264565,264569],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[264627,264628],"content":"<","needQuote":true,"nodes":[]},{"pos":[264724,264753],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[264839,264840]},{"pos":[264894,264899],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[264990,264991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265099,265136],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[265252,265253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265303,265307],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[265366,265369]},{"pos":[265472,265501],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[265587,265588]},{"pos":[265642,265647],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[265706,265707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265734,265735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266477,266555],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int64&gt;)","pos":[0,78],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)"}]},{"pos":[267132,267166],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[267279,267280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[267330,267334],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[267392,267393],"content":"<","needQuote":true,"nodes":[]},{"pos":[267489,267518],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[267604,267605]},{"pos":[267659,267664],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[267755,267756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267864,267901],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[268017,268018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268068,268072],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[268131,268134]},{"pos":[268237,268266],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[268352,268353]},{"pos":[268407,268412],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[268471,268472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268499,268500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269280,269370],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,90],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[270022,270056],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[270169,270170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270220,270224],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[270282,270283],"content":"<","needQuote":true,"nodes":[]},{"pos":[270379,270408],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[270494,270495]},{"pos":[270554,270562],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[270624,270625],"content":"<","needQuote":true,"nodes":[]},{"pos":[270676,270683],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[270808,270809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270936,270973],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[271089,271090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271140,271144],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[271203,271206]},{"pos":[271309,271338],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[271424,271425]},{"pos":[271484,271492],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[271555,271558]},{"pos":[271616,271623],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[271684,271685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271712,271713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271740,271741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272565,272654],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,89],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)"}]},{"pos":[273302,273336],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[273449,273450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273500,273504],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[273562,273563],"content":"<","needQuote":true,"nodes":[]},{"pos":[273659,273688],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[273774,273775]},{"pos":[273834,273842],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[273904,273905],"content":"<","needQuote":true,"nodes":[]},{"pos":[273955,273961],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[274085,274086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274212,274249],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[274365,274366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274416,274420],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[274479,274482]},{"pos":[274585,274614],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[274700,274701]},{"pos":[274760,274768],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[274831,274834]},{"pos":[274891,274897],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[274957,274958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274985,274986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275013,275014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275833,275921],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,88],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[276565,276599],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[276712,276713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276763,276767],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[276825,276826],"content":"<","needQuote":true,"nodes":[]},{"pos":[276922,276951],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[277037,277038]},{"pos":[277097,277105],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[277167,277168],"content":"<","needQuote":true,"nodes":[]},{"pos":[277217,277222],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[277345,277346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277471,277508],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[277624,277625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277675,277679],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[277738,277741]},{"pos":[277844,277873],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[277959,277960]},{"pos":[278019,278027],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[278090,278093]},{"pos":[278149,278154],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[278213,278214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278241,278242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278269,278270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279086,279174],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,88],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[279818,279852],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[279965,279966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280016,280020],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[280078,280079],"content":"<","needQuote":true,"nodes":[]},{"pos":[280175,280204],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[280290,280291]},{"pos":[280350,280358],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[280420,280421],"content":"<","needQuote":true,"nodes":[]},{"pos":[280470,280475],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[280598,280599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280724,280761],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[280877,280878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280928,280932],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[280991,280994]},{"pos":[281097,281126],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[281212,281213]},{"pos":[281272,281280],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[281343,281346]},{"pos":[281402,281407],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[281466,281467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281494,281495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281522,281523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282341,282430],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,89],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)"}]},{"pos":[283078,283112],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[283225,283226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283276,283280],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[283338,283339],"content":"<","needQuote":true,"nodes":[]},{"pos":[283435,283464],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[283550,283551]},{"pos":[283610,283618],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[283680,283681],"content":"<","needQuote":true,"nodes":[]},{"pos":[283731,283737],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[283861,283862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283988,284025],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[284141,284142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284192,284196],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[284255,284258]},{"pos":[284361,284390],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[284476,284477]},{"pos":[284536,284544],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[284607,284610]},{"pos":[284667,284673],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[284733,284734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284761,284762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284789,284790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285577,285656],"content":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Single&gt;)","pos":[0,79],"source":"Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)"}]},{"pos":[286237,286271],"content":"Max<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Max<MulticastIPAddressInformation>"}]},{"pos":[286384,286385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286435,286439],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[286497,286498],"content":"<","needQuote":true,"nodes":[]},{"pos":[286594,286623],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[286709,286710]},{"pos":[286765,286771],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[286863,286864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286973,287010],"content":"Max(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[287126,287127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287177,287181],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[287240,287243]},{"pos":[287346,287375],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[287461,287462]},{"pos":[287517,287523],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[287583,287584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287611,287612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288345,288434],"content":"Max<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation, TResult&gt;(Func&lt;MulticastIPAddressInformation, TResult&gt;)","pos":[0,89],"source":"Max<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)"}]},{"pos":[289021,289064],"content":"Max<MulticastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;MulticastIPAddressInformation, TResult&gt;","pos":[0,43],"source":"Max<MulticastIPAddressInformation, TResult>"}]},{"pos":[289186,289187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289237,289241],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[289299,289300],"content":"<","needQuote":true,"nodes":[]},{"pos":[289396,289425],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[289511,289512]},{"pos":[289544,289551],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[289616,289617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289716,289762],"content":"Max(Of MulticastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Max(Of MulticastIPAddressInformation, TResult)","pos":[0,46]}]},{"pos":[289887,289888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289938,289942],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[290001,290004]},{"pos":[290107,290136],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[290222,290223]},{"pos":[290255,290262],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[290295,290296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290323,290324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290962,290998],"content":"Min<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;()","pos":[0,36],"source":"Min<MulticastIPAddressInformation>()"}]},{"pos":[291324,291358],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[291471,291472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291499,291500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291577,291614],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[291730,291731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291758,291759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292388,292468],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Decimal&gt;)","pos":[0,80],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)"}]},{"pos":[293053,293087],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[293200,293201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293251,293255],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[293313,293314],"content":"<","needQuote":true,"nodes":[]},{"pos":[293410,293439],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[293525,293526]},{"pos":[293582,293589],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[293682,293683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293793,293830],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[293946,293947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293997,294001],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[294060,294063]},{"pos":[294166,294195],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[294281,294282]},{"pos":[294338,294345],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[294406,294407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294434,294435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295185,295264],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Double&gt;)","pos":[0,79],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)"}]},{"pos":[295845,295879],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[295992,295993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296043,296047],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[296105,296106],"content":"<","needQuote":true,"nodes":[]},{"pos":[296202,296231],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[296317,296318]},{"pos":[296373,296379],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[296471,296472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296581,296618],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[296734,296735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296785,296789],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[296848,296851]},{"pos":[296954,296983],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[297069,297070]},{"pos":[297125,297131],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[297191,297192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297219,297220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297965,298043],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int32&gt;)","pos":[0,78],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)"}]},{"pos":[298620,298654],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[298767,298768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298818,298822],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[298880,298881],"content":"<","needQuote":true,"nodes":[]},{"pos":[298977,299006],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[299092,299093]},{"pos":[299147,299152],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[299243,299244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299352,299389],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[299505,299506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299556,299560],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[299619,299622]},{"pos":[299725,299754],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[299840,299841]},{"pos":[299895,299900],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[299959,299960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299987,299988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300730,300808],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int64&gt;)","pos":[0,78],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)"}]},{"pos":[301385,301419],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[301532,301533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301583,301587],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[301645,301646],"content":"<","needQuote":true,"nodes":[]},{"pos":[301742,301771],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[301857,301858]},{"pos":[301912,301917],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[302008,302009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302117,302154],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[302270,302271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302321,302325],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[302384,302387]},{"pos":[302490,302519],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[302605,302606]},{"pos":[302660,302665],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[302724,302725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302752,302753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303533,303623],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,90],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[304275,304309],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[304422,304423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304473,304477],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[304535,304536],"content":"<","needQuote":true,"nodes":[]},{"pos":[304632,304661],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[304747,304748]},{"pos":[304807,304815],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[304877,304878],"content":"<","needQuote":true,"nodes":[]},{"pos":[304929,304936],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[305061,305062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305189,305226],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[305342,305343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[305393,305397],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[305456,305459]},{"pos":[305562,305591],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[305677,305678]},{"pos":[305737,305745],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[305808,305811]},{"pos":[305869,305876],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[305937,305938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305965,305966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305993,305994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306818,306907],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,89],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)"}]},{"pos":[307555,307589],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[307702,307703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307753,307757],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[307815,307816],"content":"<","needQuote":true,"nodes":[]},{"pos":[307912,307941],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[308027,308028]},{"pos":[308087,308095],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[308157,308158],"content":"<","needQuote":true,"nodes":[]},{"pos":[308208,308214],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[308338,308339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308465,308502],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[308618,308619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308669,308673],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[308732,308735]},{"pos":[308838,308867],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[308953,308954]},{"pos":[309013,309021],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[309084,309087]},{"pos":[309144,309150],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[309210,309211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309238,309239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309266,309267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310086,310174],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,88],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[310818,310852],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[310965,310966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[311016,311020],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[311078,311079],"content":"<","needQuote":true,"nodes":[]},{"pos":[311175,311204],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[311290,311291]},{"pos":[311350,311358],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[311420,311421],"content":"<","needQuote":true,"nodes":[]},{"pos":[311470,311475],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[311598,311599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311724,311761],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[311877,311878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[311928,311932],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[311991,311994]},{"pos":[312097,312126],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[312212,312213]},{"pos":[312272,312280],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[312343,312346]},{"pos":[312402,312407],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[312466,312467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312494,312495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312522,312523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313339,313427],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,88],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[314071,314105],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[314218,314219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[314269,314273],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[314331,314332],"content":"<","needQuote":true,"nodes":[]},{"pos":[314428,314457],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[314543,314544]},{"pos":[314603,314611],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[314673,314674],"content":"<","needQuote":true,"nodes":[]},{"pos":[314723,314728],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[314851,314852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314977,315014],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[315130,315131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315181,315185],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[315244,315247]},{"pos":[315350,315379],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[315465,315466]},{"pos":[315525,315533],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[315596,315599]},{"pos":[315655,315660],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[315719,315720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315747,315748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315775,315776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316594,316683],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,89],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)"}]},{"pos":[317331,317365],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[317478,317479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317529,317533],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[317591,317592],"content":"<","needQuote":true,"nodes":[]},{"pos":[317688,317717],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[317803,317804]},{"pos":[317863,317871],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[317933,317934],"content":"<","needQuote":true,"nodes":[]},{"pos":[317984,317990],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[318114,318115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318241,318278],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[318394,318395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318445,318449],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[318508,318511]},{"pos":[318614,318643],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[318729,318730]},{"pos":[318789,318797],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[318860,318863]},{"pos":[318920,318926],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[318986,318987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319014,319015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319042,319043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319830,319909],"content":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Single&gt;)","pos":[0,79],"source":"Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)"}]},{"pos":[320490,320524],"content":"Min<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Min<MulticastIPAddressInformation>"}]},{"pos":[320637,320638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320688,320692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[320750,320751],"content":"<","needQuote":true,"nodes":[]},{"pos":[320847,320876],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[320962,320963]},{"pos":[321018,321024],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[321116,321117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321226,321263],"content":"Min(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[321379,321380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321430,321434],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[321493,321496]},{"pos":[321599,321628],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[321714,321715]},{"pos":[321770,321776],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[321836,321837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321864,321865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322598,322687],"content":"Min<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation, TResult&gt;(Func&lt;MulticastIPAddressInformation, TResult&gt;)","pos":[0,89],"source":"Min<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)"}]},{"pos":[323274,323317],"content":"Min<MulticastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;MulticastIPAddressInformation, TResult&gt;","pos":[0,43],"source":"Min<MulticastIPAddressInformation, TResult>"}]},{"pos":[323439,323440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323490,323494],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[323552,323553],"content":"<","needQuote":true,"nodes":[]},{"pos":[323649,323678],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[323764,323765]},{"pos":[323797,323804],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[323869,323870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323969,324015],"content":"Min(Of MulticastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Min(Of MulticastIPAddressInformation, TResult)","pos":[0,46]}]},{"pos":[324140,324141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324191,324195],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[324254,324257]},{"pos":[324360,324389],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[324475,324476]},{"pos":[324508,324515],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[324548,324549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324576,324577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325139,325156],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[325368,325383],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[325447,325448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325475,325476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325556,325574],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[325641,325642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325669,325670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326240,326327],"content":"OrderBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;)","pos":[0,87],"source":"OrderBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)"}]},{"pos":[326912,326956],"content":"OrderBy<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,44],"source":"OrderBy<MulticastIPAddressInformation, TKey>"}]},{"pos":[327079,327080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327130,327134],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[327192,327193],"content":"<","needQuote":true,"nodes":[]},{"pos":[327289,327318],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[327404,327405]},{"pos":[327437,327441],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[327503,327504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327607,327654],"content":"OrderBy(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of MulticastIPAddressInformation, TKey)","pos":[0,47]}]},{"pos":[327780,327781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327831,327835],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[327894,327897]},{"pos":[328000,328029],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[328115,328116]},{"pos":[328148,328152],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[328182,328183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328210,328211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329046,329150],"content":"OrderBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,104],"source":"OrderBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IComparer<TKey>)"}]},{"pos":[329888,329932],"content":"OrderBy<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,44],"source":"OrderBy<MulticastIPAddressInformation, TKey>"}]},{"pos":[330055,330056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330106,330110],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[330168,330169],"content":"<","needQuote":true,"nodes":[]},{"pos":[330265,330294],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[330380,330381]},{"pos":[330413,330417],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[330480,330481]},{"pos":[330561,330570],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[330653,330654],"content":"<","needQuote":true,"nodes":[]},{"pos":[330681,330685],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[330747,330748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330893,330940],"content":"OrderBy(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of MulticastIPAddressInformation, TKey)","pos":[0,47]}]},{"pos":[331066,331067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331117,331121],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[331180,331183]},{"pos":[331286,331315],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[331401,331402]},{"pos":[331434,331438],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[331468,331469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[331497,331498]},{"pos":[331578,331587],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[331671,331674]},{"pos":[331708,331712],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[331742,331743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331770,331771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332618,332715],"content":"OrderByDescending<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;)","pos":[0,97],"source":"OrderByDescending<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)"}]},{"pos":[333340,333394],"content":"OrderByDescending<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,54],"source":"OrderByDescending<MulticastIPAddressInformation, TKey>"}]},{"pos":[333527,333528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[333578,333582],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[333640,333641],"content":"<","needQuote":true,"nodes":[]},{"pos":[333737,333766],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[333852,333853]},{"pos":[333885,333889],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[333951,333952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334065,334122],"content":"OrderByDescending(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of MulticastIPAddressInformation, TKey)","pos":[0,57]}]},{"pos":[334258,334259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334309,334313],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[334372,334375]},{"pos":[334478,334507],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[334593,334594]},{"pos":[334626,334630],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[334660,334661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334688,334689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335574,335688],"content":"OrderByDescending<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,114],"source":"OrderByDescending<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IComparer<TKey>)"}]},{"pos":[336466,336520],"content":"OrderByDescending<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,54],"source":"OrderByDescending<MulticastIPAddressInformation, TKey>"}]},{"pos":[336653,336654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336704,336708],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[336766,336767],"content":"<","needQuote":true,"nodes":[]},{"pos":[336863,336892],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[336978,336979]},{"pos":[337011,337015],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[337078,337079]},{"pos":[337159,337168],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[337251,337252],"content":"<","needQuote":true,"nodes":[]},{"pos":[337279,337283],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[337345,337346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337501,337558],"content":"OrderByDescending(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of MulticastIPAddressInformation, TKey)","pos":[0,57]}]},{"pos":[337694,337695],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337745,337749],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[337808,337811]},{"pos":[337914,337943],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[338029,338030]},{"pos":[338062,338066],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[338096,338097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[338125,338126]},{"pos":[338206,338215],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[338299,338302]},{"pos":[338336,338340],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[338370,338371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338398,338399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339154,339194],"content":"Reverse<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Reverse&lt;MulticastIPAddressInformation&gt;()","pos":[0,40],"source":"Reverse<MulticastIPAddressInformation>()"}]},{"pos":[339536,339574],"content":"Reverse<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Reverse&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"Reverse<MulticastIPAddressInformation>"}]},{"pos":[339691,339692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339719,339720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339801,339842],"content":"Reverse(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Reverse(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[339962,339963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339990,339991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340622,340714],"content":"Select<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;MulticastIPAddressInformation, TResult&gt;(Func&lt;MulticastIPAddressInformation, TResult&gt;)","pos":[0,92],"source":"Select<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)"}]},{"pos":[341313,341359],"content":"Select<MulticastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;MulticastIPAddressInformation, TResult&gt;","pos":[0,46],"source":"Select<MulticastIPAddressInformation, TResult>"}]},{"pos":[341484,341485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[341535,341539],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[341597,341598],"content":"<","needQuote":true,"nodes":[]},{"pos":[341694,341723],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[341809,341810]},{"pos":[341842,341849],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[341914,341915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342017,342066],"content":"Select(Of MulticastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Select(Of MulticastIPAddressInformation, TResult)","pos":[0,49]}]},{"pos":[342194,342195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342245,342249],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[342308,342311]},{"pos":[342414,342443],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[342529,342530]},{"pos":[342562,342569],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[342602,342603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342630,342631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343415,343514],"content":"Select<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;MulticastIPAddressInformation, TResult&gt;(Func&lt;MulticastIPAddressInformation, Int32, TResult&gt;)","pos":[0,99],"source":"Select<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, Int32, TResult>)"}]},{"pos":[344161,344207],"content":"Select<MulticastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;MulticastIPAddressInformation, TResult&gt;","pos":[0,46],"source":"Select<MulticastIPAddressInformation, TResult>"}]},{"pos":[344332,344333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344383,344387],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[344445,344446],"content":"<","needQuote":true,"nodes":[]},{"pos":[344542,344571],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[344657,344658]},{"pos":[344712,344717],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[344777,344778]},{"pos":[344810,344817],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[344882,344883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344998,345047],"content":"Select(Of MulticastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Select(Of MulticastIPAddressInformation, TResult)","pos":[0,49]}]},{"pos":[345175,345176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345226,345230],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[345289,345292]},{"pos":[345395,345424],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[345510,345511]},{"pos":[345565,345570],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[345630,345631]},{"pos":[345663,345670],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[345703,345704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345731,345732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346605,346714],"content":"SelectMany<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;MulticastIPAddressInformation, TResult&gt;(Func&lt;MulticastIPAddressInformation, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,109],"source":"SelectMany<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, IEnumerable<TResult>>)"}]},{"pos":[347468,347518],"content":"SelectMany<MulticastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;MulticastIPAddressInformation, TResult&gt;","pos":[0,50],"source":"SelectMany<MulticastIPAddressInformation, TResult>"}]},{"pos":[347647,347648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347698,347702],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[347760,347761],"content":"<","needQuote":true,"nodes":[]},{"pos":[347857,347886],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[347972,347973]},{"pos":[348055,348066],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[348151,348152],"content":"<","needQuote":true,"nodes":[]},{"pos":[348179,348186],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[348283,348284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348430,348483],"content":"SelectMany(Of MulticastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of MulticastIPAddressInformation, TResult)","pos":[0,53]}]},{"pos":[348615,348616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348666,348670],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[348729,348732]},{"pos":[348835,348864],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[348950,348951]},{"pos":[349033,349044],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[349130,349133]},{"pos":[349167,349174],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[349207,349208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349235,349236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349263,349264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350217,350333],"content":"SelectMany<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;MulticastIPAddressInformation, TResult&gt;(Func&lt;MulticastIPAddressInformation, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,116],"source":"SelectMany<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, Int32, IEnumerable<TResult>>)"}]},{"pos":[351135,351185],"content":"SelectMany<MulticastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;MulticastIPAddressInformation, TResult&gt;","pos":[0,50],"source":"SelectMany<MulticastIPAddressInformation, TResult>"}]},{"pos":[351314,351315],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351365,351369],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[351427,351428],"content":"<","needQuote":true,"nodes":[]},{"pos":[351524,351553],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[351639,351640]},{"pos":[351694,351699],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[351759,351760]},{"pos":[351842,351853],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[351938,351939],"content":"<","needQuote":true,"nodes":[]},{"pos":[351966,351973],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[352070,352071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352230,352283],"content":"SelectMany(Of MulticastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of MulticastIPAddressInformation, TResult)","pos":[0,53]}]},{"pos":[352415,352416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352466,352470],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[352529,352532]},{"pos":[352635,352664],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[352750,352751]},{"pos":[352805,352810],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[352870,352871]},{"pos":[352953,352964],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[353050,353053]},{"pos":[353087,353094],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[353127,353128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353155,353156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353183,353184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354264,354449],"content":"SelectMany<MulticastIPAddressInformation, TCollection, TResult>(Func<MulticastIPAddressInformation, IEnumerable<TCollection>>, Func<MulticastIPAddressInformation, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;MulticastIPAddressInformation, TCollection, TResult&gt;(Func&lt;MulticastIPAddressInformation, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;MulticastIPAddressInformation, TCollection, TResult&gt;)","pos":[0,185],"source":"SelectMany<MulticastIPAddressInformation, TCollection, TResult>(Func<MulticastIPAddressInformation, IEnumerable<TCollection>>, Func<MulticastIPAddressInformation, TCollection, TResult>)"}]},{"pos":[355536,355599],"content":"SelectMany<MulticastIPAddressInformation, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;MulticastIPAddressInformation, TCollection, TResult&gt;","pos":[0,63],"source":"SelectMany<MulticastIPAddressInformation, TCollection, TResult>"}]},{"pos":[355741,355742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355792,355796],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[355854,355855],"content":"<","needQuote":true,"nodes":[]},{"pos":[355951,355980],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[356066,356067]},{"pos":[356149,356160],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[356245,356246],"content":"<","needQuote":true,"nodes":[]},{"pos":[356273,356284],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[356386,356387]},{"pos":[356442,356446],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[356504,356505],"content":"<","needQuote":true,"nodes":[]},{"pos":[356601,356630],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[356716,356717]},{"pos":[356749,356760],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[356798,356799]},{"pos":[356831,356838],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[356903,356904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357075,357141],"content":"SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)","pos":[0,66]}]},{"pos":[357286,357287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357337,357341],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[357400,357403]},{"pos":[357506,357535],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[357621,357622]},{"pos":[357704,357715],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[357801,357804]},{"pos":[357838,357849],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[357886,357887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357914,357915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[357943,357944]},{"pos":[357999,358003],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[358062,358065]},{"pos":[358168,358197],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[358283,358284]},{"pos":[358316,358327],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[358365,358366]},{"pos":[358398,358405],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[358438,358439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358466,358467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359726,359918],"content":"SelectMany<MulticastIPAddressInformation, TCollection, TResult>(Func<MulticastIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<MulticastIPAddressInformation, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;MulticastIPAddressInformation, TCollection, TResult&gt;(Func&lt;MulticastIPAddressInformation, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;MulticastIPAddressInformation, TCollection, TResult&gt;)","pos":[0,192],"source":"SelectMany<MulticastIPAddressInformation, TCollection, TResult>(Func<MulticastIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<MulticastIPAddressInformation, TCollection, TResult>)"}]},{"pos":[361053,361116],"content":"SelectMany<MulticastIPAddressInformation, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;MulticastIPAddressInformation, TCollection, TResult&gt;","pos":[0,63],"source":"SelectMany<MulticastIPAddressInformation, TCollection, TResult>"}]},{"pos":[361258,361259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361309,361313],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[361371,361372],"content":"<","needQuote":true,"nodes":[]},{"pos":[361468,361497],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[361583,361584]},{"pos":[361638,361643],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[361703,361704]},{"pos":[361786,361797],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[361882,361883],"content":"<","needQuote":true,"nodes":[]},{"pos":[361910,361921],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[362023,362024]},{"pos":[362079,362083],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[362141,362142],"content":"<","needQuote":true,"nodes":[]},{"pos":[362238,362267],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[362353,362354]},{"pos":[362386,362397],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[362435,362436]},{"pos":[362468,362475],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[362540,362541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362725,362791],"content":"SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)","pos":[0,66]}]},{"pos":[362936,362937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362987,362991],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[363050,363053]},{"pos":[363156,363185],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[363271,363272]},{"pos":[363326,363331],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[363391,363392]},{"pos":[363474,363485],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[363571,363574]},{"pos":[363608,363619],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[363656,363657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363684,363685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[363713,363714]},{"pos":[363769,363773],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[363832,363835]},{"pos":[363938,363967],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[364053,364054]},{"pos":[364086,364097],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[364135,364136]},{"pos":[364168,364175],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[364208,364209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364236,364237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365337,365425],"content":"SequenceEqual<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;MulticastIPAddressInformation&gt;(IEnumerable&lt;MulticastIPAddressInformation&gt;)","pos":[0,88],"source":"SequenceEqual<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)"}]},{"pos":[366082,366126],"content":"SequenceEqual<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;MulticastIPAddressInformation&gt;","pos":[0,44],"source":"SequenceEqual<MulticastIPAddressInformation>"}]},{"pos":[366249,366250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[366327,366338],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[366423,366424],"content":"<","needQuote":true,"nodes":[]},{"pos":[366520,366549],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[366666,366667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366799,366846],"content":"SequenceEqual(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of MulticastIPAddressInformation)","pos":[0,47]}]},{"pos":[366972,366973],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367050,367061],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[367147,367150]},{"pos":[367253,367282],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[367367,367368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367395,367396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368386,368524],"content":"SequenceEqual<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;MulticastIPAddressInformation&gt;(IEnumerable&lt;MulticastIPAddressInformation&gt;, IEqualityComparer&lt;MulticastIPAddressInformation&gt;)","pos":[0,138],"source":"SequenceEqual<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)"}]},{"pos":[369501,369545],"content":"SequenceEqual<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;MulticastIPAddressInformation&gt;","pos":[0,44],"source":"SequenceEqual<MulticastIPAddressInformation>"}]},{"pos":[369668,369669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369746,369757],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[369842,369843],"content":"<","needQuote":true,"nodes":[]},{"pos":[369939,369968],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[370086,370087]},{"pos":[370175,370192],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[370283,370284],"content":"<","needQuote":true,"nodes":[]},{"pos":[370380,370409],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[370526,370527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370709,370756],"content":"SequenceEqual(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of MulticastIPAddressInformation)","pos":[0,47]}]},{"pos":[370882,370883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370960,370971],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[371057,371060]},{"pos":[371163,371192],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[371277,371278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[371306,371307]},{"pos":[371395,371412],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[371504,371507]},{"pos":[371610,371639],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[371724,371725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371752,371753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372581,372620],"content":"Single<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Single&lt;MulticastIPAddressInformation&gt;()","pos":[0,39],"source":"Single<MulticastIPAddressInformation>()"}]},{"pos":[372958,372995],"content":"Single<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Single&lt;MulticastIPAddressInformation&gt;","pos":[0,37],"source":"Single<MulticastIPAddressInformation>"}]},{"pos":[373111,373112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373139,373140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373220,373260],"content":"Single(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Single(Of MulticastIPAddressInformation)","pos":[0,40]}]},{"pos":[373379,373380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373407,373408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374052,374135],"content":"Single<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,83],"source":"Single<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[374732,374769],"content":"Single<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Single&lt;MulticastIPAddressInformation&gt;","pos":[0,37],"source":"Single<MulticastIPAddressInformation>"}]},{"pos":[374885,374886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374936,374940],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[374998,374999],"content":"<","needQuote":true,"nodes":[]},{"pos":[375095,375124],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[375210,375211]},{"pos":[375267,375274],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[375367,375368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375481,375521],"content":"Single(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Single(Of MulticastIPAddressInformation)","pos":[0,40]}]},{"pos":[375640,375641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375691,375695],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[375754,375757]},{"pos":[375860,375889],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[375975,375976]},{"pos":[376032,376039],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[376100,376101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376128,376129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376793,376841],"content":"SingleOrDefault<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;MulticastIPAddressInformation&gt;()","pos":[0,48],"source":"SingleOrDefault<MulticastIPAddressInformation>()"}]},{"pos":[377215,377261],"content":"SingleOrDefault<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;MulticastIPAddressInformation&gt;","pos":[0,46],"source":"SingleOrDefault<MulticastIPAddressInformation>"}]},{"pos":[377386,377387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377414,377415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377504,377553],"content":"SingleOrDefault(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of MulticastIPAddressInformation)","pos":[0,49]}]},{"pos":[377681,377682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377709,377710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378399,378491],"content":"SingleOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,92],"source":"SingleOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[379124,379170],"content":"SingleOrDefault<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;MulticastIPAddressInformation&gt;","pos":[0,46],"source":"SingleOrDefault<MulticastIPAddressInformation>"}]},{"pos":[379295,379296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379346,379350],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[379408,379409],"content":"<","needQuote":true,"nodes":[]},{"pos":[379505,379534],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[379620,379621]},{"pos":[379677,379684],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[379777,379778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379900,379949],"content":"SingleOrDefault(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of MulticastIPAddressInformation)","pos":[0,49]}]},{"pos":[380077,380078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[380128,380132],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[380191,380194]},{"pos":[380297,380326],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[380412,380413]},{"pos":[380469,380476],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[380537,380538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380565,380566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381262,381304],"content":"Skip<MulticastIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;MulticastIPAddressInformation&gt;(Int32)","pos":[0,42],"source":"Skip<MulticastIPAddressInformation>(Int32)"}]},{"pos":[381677,381712],"content":"Skip<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Skip&lt;MulticastIPAddressInformation&gt;","pos":[0,35],"source":"Skip<MulticastIPAddressInformation>"}]},{"pos":[381826,381827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381876,381881],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[381940,381941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382033,382071],"content":"Skip(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Skip(Of MulticastIPAddressInformation)","pos":[0,38]}]},{"pos":[382188,382189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382238,382243],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[382302,382303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382970,383056],"content":"SkipWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,86],"source":"SkipWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[383665,383705],"content":"SkipWhile<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"SkipWhile<MulticastIPAddressInformation>"}]},{"pos":[383824,383825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[383875,383879],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[383937,383938],"content":"<","needQuote":true,"nodes":[]},{"pos":[384034,384063],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[384149,384150]},{"pos":[384206,384213],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[384306,384307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384423,384466],"content":"SkipWhile(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SkipWhile(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[384588,384589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384639,384643],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[384702,384705]},{"pos":[384808,384837],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[384923,384924]},{"pos":[384980,384987],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[385048,385049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385076,385077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385885,385978],"content":"SkipWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int32, Boolean&gt;)","pos":[0,93],"source":"SkipWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)"}]},{"pos":[386635,386675],"content":"SkipWhile<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"SkipWhile<MulticastIPAddressInformation>"}]},{"pos":[386794,386795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386845,386849],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[386907,386908],"content":"<","needQuote":true,"nodes":[]},{"pos":[387004,387033],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[387119,387120]},{"pos":[387174,387179],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[387239,387240]},{"pos":[387296,387303],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[387396,387397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387526,387569],"content":"SkipWhile(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SkipWhile(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[387691,387692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387742,387746],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[387805,387808]},{"pos":[387911,387940],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[388026,388027]},{"pos":[388081,388086],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[388146,388147]},{"pos":[388203,388210],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[388271,388272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388299,388300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389097,389177],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Decimal&gt;)","pos":[0,80],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)"}]},{"pos":[389762,389796],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[389909,389910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389960,389964],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[390022,390023],"content":"<","needQuote":true,"nodes":[]},{"pos":[390119,390148],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[390234,390235]},{"pos":[390291,390298],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[390391,390392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390502,390539],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[390655,390656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390706,390710],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[390769,390772]},{"pos":[390875,390904],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[390990,390991]},{"pos":[391047,391054],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[391115,391116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391143,391144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391894,391973],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Double&gt;)","pos":[0,79],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)"}]},{"pos":[392554,392588],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[392701,392702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392752,392756],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[392814,392815],"content":"<","needQuote":true,"nodes":[]},{"pos":[392911,392940],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[393026,393027]},{"pos":[393082,393088],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[393180,393181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393290,393327],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[393443,393444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393494,393498],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[393557,393560]},{"pos":[393663,393692],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[393778,393779]},{"pos":[393834,393840],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[393900,393901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393928,393929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394674,394752],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int32&gt;)","pos":[0,78],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)"}]},{"pos":[395329,395363],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[395476,395477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395527,395531],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[395589,395590],"content":"<","needQuote":true,"nodes":[]},{"pos":[395686,395715],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[395801,395802]},{"pos":[395856,395861],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[395952,395953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396061,396098],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[396214,396215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396265,396269],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[396328,396331]},{"pos":[396434,396463],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[396549,396550]},{"pos":[396604,396609],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[396668,396669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396696,396697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397439,397517],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int64&gt;)","pos":[0,78],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)"}]},{"pos":[398094,398128],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[398241,398242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398292,398296],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[398354,398355],"content":"<","needQuote":true,"nodes":[]},{"pos":[398451,398480],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[398566,398567]},{"pos":[398621,398626],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[398717,398718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398826,398863],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[398979,398980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399030,399034],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[399093,399096]},{"pos":[399199,399228],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[399314,399315]},{"pos":[399369,399374],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[399433,399434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399461,399462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400242,400332],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,90],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[400984,401018],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[401131,401132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401182,401186],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[401244,401245],"content":"<","needQuote":true,"nodes":[]},{"pos":[401341,401370],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[401456,401457]},{"pos":[401516,401524],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[401586,401587],"content":"<","needQuote":true,"nodes":[]},{"pos":[401638,401645],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[401770,401771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401898,401935],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[402051,402052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402102,402106],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[402165,402168]},{"pos":[402271,402300],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[402386,402387]},{"pos":[402446,402454],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[402517,402520]},{"pos":[402578,402585],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[402646,402647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402674,402675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402702,402703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403527,403616],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,89],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)"}]},{"pos":[404264,404298],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[404411,404412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404462,404466],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[404524,404525],"content":"<","needQuote":true,"nodes":[]},{"pos":[404621,404650],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[404736,404737]},{"pos":[404796,404804],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[404866,404867],"content":"<","needQuote":true,"nodes":[]},{"pos":[404917,404923],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[405047,405048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405174,405211],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[405327,405328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405378,405382],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[405441,405444]},{"pos":[405547,405576],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[405662,405663]},{"pos":[405722,405730],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[405793,405796]},{"pos":[405853,405859],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[405919,405920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405947,405948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405975,405976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406795,406883],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,88],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[407527,407561],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[407674,407675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[407725,407729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[407787,407788],"content":"<","needQuote":true,"nodes":[]},{"pos":[407884,407913],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[407999,408000]},{"pos":[408059,408067],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[408129,408130],"content":"<","needQuote":true,"nodes":[]},{"pos":[408179,408184],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[408307,408308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[408433,408470],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[408586,408587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408637,408641],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[408700,408703]},{"pos":[408806,408835],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[408921,408922]},{"pos":[408981,408989],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[409052,409055]},{"pos":[409111,409116],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[409175,409176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409203,409204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409231,409232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410048,410136],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,88],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[410780,410814],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[410927,410928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[410978,410982],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[411040,411041],"content":"<","needQuote":true,"nodes":[]},{"pos":[411137,411166],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[411252,411253]},{"pos":[411312,411320],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[411382,411383],"content":"<","needQuote":true,"nodes":[]},{"pos":[411432,411437],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[411560,411561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411686,411723],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[411839,411840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411890,411894],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[411953,411956]},{"pos":[412059,412088],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[412174,412175]},{"pos":[412234,412242],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[412305,412308]},{"pos":[412364,412369],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[412428,412429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412456,412457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412484,412485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413303,413392],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,89],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)"}]},{"pos":[414040,414074],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[414187,414188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414238,414242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[414300,414301],"content":"<","needQuote":true,"nodes":[]},{"pos":[414397,414426],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[414512,414513]},{"pos":[414572,414580],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[414642,414643],"content":"<","needQuote":true,"nodes":[]},{"pos":[414693,414699],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[414823,414824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414950,414987],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[415103,415104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415154,415158],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[415217,415220]},{"pos":[415323,415352],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[415438,415439]},{"pos":[415498,415506],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[415569,415572]},{"pos":[415629,415635],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[415695,415696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415723,415724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415751,415752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416539,416618],"content":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Single&gt;)","pos":[0,79],"source":"Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)"}]},{"pos":[417199,417233],"content":"Sum<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;MulticastIPAddressInformation&gt;","pos":[0,34],"source":"Sum<MulticastIPAddressInformation>"}]},{"pos":[417346,417347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[417397,417401],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[417459,417460],"content":"<","needQuote":true,"nodes":[]},{"pos":[417556,417585],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[417671,417672]},{"pos":[417727,417733],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[417825,417826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417935,417972],"content":"Sum(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[418088,418089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418139,418143],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[418202,418205]},{"pos":[418308,418337],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[418423,418424]},{"pos":[418479,418485],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[418545,418546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418573,418574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419231,419273],"content":"Take<MulticastIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"Take&lt;MulticastIPAddressInformation&gt;(Int32)","pos":[0,42],"source":"Take<MulticastIPAddressInformation>(Int32)"}]},{"pos":[419646,419681],"content":"Take<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Take&lt;MulticastIPAddressInformation&gt;","pos":[0,35],"source":"Take<MulticastIPAddressInformation>"}]},{"pos":[419795,419796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419845,419850],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[419909,419910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420002,420040],"content":"Take(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Take(Of MulticastIPAddressInformation)","pos":[0,38]}]},{"pos":[420157,420158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420207,420212],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[420271,420272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420939,421025],"content":"TakeWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,86],"source":"TakeWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[421634,421674],"content":"TakeWhile<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"TakeWhile<MulticastIPAddressInformation>"}]},{"pos":[421793,421794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421844,421848],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[421906,421907],"content":"<","needQuote":true,"nodes":[]},{"pos":[422003,422032],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[422118,422119]},{"pos":[422175,422182],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[422275,422276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422392,422435],"content":"TakeWhile(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"TakeWhile(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[422557,422558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422608,422612],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[422671,422674]},{"pos":[422777,422806],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[422892,422893]},{"pos":[422949,422956],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[423017,423018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423045,423046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423854,423947],"content":"TakeWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int32, Boolean&gt;)","pos":[0,93],"source":"TakeWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)"}]},{"pos":[424604,424644],"content":"TakeWhile<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;MulticastIPAddressInformation&gt;","pos":[0,40],"source":"TakeWhile<MulticastIPAddressInformation>"}]},{"pos":[424763,424764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424814,424818],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[424876,424877],"content":"<","needQuote":true,"nodes":[]},{"pos":[424973,425002],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[425088,425089]},{"pos":[425143,425148],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[425208,425209]},{"pos":[425265,425272],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[425365,425366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425495,425538],"content":"TakeWhile(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"TakeWhile(Of MulticastIPAddressInformation)","pos":[0,43]}]},{"pos":[425660,425661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425711,425715],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[425774,425777]},{"pos":[425880,425909],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[425995,425996]},{"pos":[426050,426055],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[426115,426116]},{"pos":[426172,426179],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[426240,426241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426268,426269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426953,426993],"content":"ToArray<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"ToArray&lt;MulticastIPAddressInformation&gt;()","pos":[0,40],"source":"ToArray<MulticastIPAddressInformation>()"}]},{"pos":[427335,427373],"content":"ToArray<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ToArray&lt;MulticastIPAddressInformation&gt;","pos":[0,38],"source":"ToArray<MulticastIPAddressInformation>"}]},{"pos":[427490,427491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427518,427519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427600,427641],"content":"ToArray(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"ToArray(Of MulticastIPAddressInformation)","pos":[0,41]}]},{"pos":[427761,427762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427789,427790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428430,428522],"content":"ToDictionary<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;)","pos":[0,92],"source":"ToDictionary<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)"}]},{"pos":[429127,429176],"content":"ToDictionary<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,49],"source":"ToDictionary<MulticastIPAddressInformation, TKey>"}]},{"pos":[429304,429305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429355,429359],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[429417,429418],"content":"<","needQuote":true,"nodes":[]},{"pos":[429514,429543],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[429629,429630]},{"pos":[429662,429666],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[429728,429729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429837,429889],"content":"ToDictionary(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of MulticastIPAddressInformation, TKey)","pos":[0,52]}]},{"pos":[430020,430021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430071,430075],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[430134,430137]},{"pos":[430240,430269],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[430355,430356]},{"pos":[430388,430392],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[430422,430423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430450,430451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431327,431444],"content":"ToDictionary<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,117],"source":"ToDictionary<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[432234,432283],"content":"ToDictionary<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,49],"source":"ToDictionary<MulticastIPAddressInformation, TKey>"}]},{"pos":[432411,432412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432462,432466],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[432524,432525],"content":"<","needQuote":true,"nodes":[]},{"pos":[432621,432650],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[432736,432737]},{"pos":[432769,432773],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[432836,432837]},{"pos":[432925,432942],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[433033,433034],"content":"<","needQuote":true,"nodes":[]},{"pos":[433061,433065],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[433127,433128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433286,433338],"content":"ToDictionary(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of MulticastIPAddressInformation, TKey)","pos":[0,52]}]},{"pos":[433469,433470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433520,433524],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[433583,433586]},{"pos":[433689,433718],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[433804,433805]},{"pos":[433837,433841],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[433871,433872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[433900,433901]},{"pos":[433989,434006],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[434098,434101]},{"pos":[434135,434139],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[434169,434170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434197,434198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435179,435328],"content":"ToDictionary<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;MulticastIPAddressInformation, TKey, TElement&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;MulticastIPAddressInformation, TElement&gt;)","pos":[0,149],"source":"ToDictionary<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)"}]},{"pos":[436205,436264],"content":"ToDictionary<MulticastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;MulticastIPAddressInformation, TKey, TElement&gt;","pos":[0,59],"source":"ToDictionary<MulticastIPAddressInformation, TKey, TElement>"}]},{"pos":[436402,436403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436453,436457],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[436515,436516],"content":"<","needQuote":true,"nodes":[]},{"pos":[436612,436641],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[436727,436728]},{"pos":[436760,436764],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[436827,436828]},{"pos":[436883,436887],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[436945,436946],"content":"<","needQuote":true,"nodes":[]},{"pos":[437042,437071],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[437157,437158]},{"pos":[437190,437198],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[437264,437265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437394,437456],"content":"ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)","pos":[0,62]}]},{"pos":[437597,437598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437648,437652],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[437711,437714]},{"pos":[437817,437846],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[437932,437933]},{"pos":[437965,437969],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[437999,438000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[438028,438029]},{"pos":[438084,438088],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[438147,438150]},{"pos":[438253,438282],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[438368,438369]},{"pos":[438401,438409],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[438443,438444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438471,438472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439591,439765],"content":"ToDictionary<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;MulticastIPAddressInformation, TKey, TElement&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;MulticastIPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,174],"source":"ToDictionary<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[440827,440886],"content":"ToDictionary<MulticastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;MulticastIPAddressInformation, TKey, TElement&gt;","pos":[0,59],"source":"ToDictionary<MulticastIPAddressInformation, TKey, TElement>"}]},{"pos":[441024,441025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441075,441079],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[441137,441138],"content":"<","needQuote":true,"nodes":[]},{"pos":[441234,441263],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[441349,441350]},{"pos":[441382,441386],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[441449,441450]},{"pos":[441505,441509],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[441567,441568],"content":"<","needQuote":true,"nodes":[]},{"pos":[441664,441693],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[441779,441780]},{"pos":[441812,441820],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[441887,441888]},{"pos":[441976,441993],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[442084,442085],"content":"<","needQuote":true,"nodes":[]},{"pos":[442112,442116],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[442178,442179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442358,442420],"content":"ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)","pos":[0,62]}]},{"pos":[442561,442562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[442612,442616],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[442675,442678]},{"pos":[442781,442810],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[442896,442897]},{"pos":[442929,442933],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[442963,442964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[442992,442993]},{"pos":[443048,443052],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[443111,443114]},{"pos":[443217,443246],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[443332,443333]},{"pos":[443365,443373],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[443407,443408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[443436,443437]},{"pos":[443525,443542],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[443634,443637]},{"pos":[443671,443675],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[443705,443706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443733,443734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444634,444673],"content":"ToList<MulticastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"ToList&lt;MulticastIPAddressInformation&gt;()","pos":[0,39],"source":"ToList<MulticastIPAddressInformation>()"}]},{"pos":[445011,445048],"content":"ToList<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ToList&lt;MulticastIPAddressInformation&gt;","pos":[0,37],"source":"ToList<MulticastIPAddressInformation>"}]},{"pos":[445164,445165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445192,445193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445273,445313],"content":"ToList(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"ToList(Of MulticastIPAddressInformation)","pos":[0,40]}]},{"pos":[445432,445433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445460,445461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446090,446178],"content":"ToLookup<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;)","pos":[0,88],"source":"ToLookup<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)"}]},{"pos":[446767,446812],"content":"ToLookup<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,45],"source":"ToLookup<MulticastIPAddressInformation, TKey>"}]},{"pos":[446936,446937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446987,446991],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[447049,447050],"content":"<","needQuote":true,"nodes":[]},{"pos":[447146,447175],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[447261,447262]},{"pos":[447294,447298],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[447360,447361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447465,447513],"content":"ToLookup(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of MulticastIPAddressInformation, TKey)","pos":[0,48]}]},{"pos":[447640,447641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447691,447695],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[447754,447757]},{"pos":[447860,447889],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[447975,447976]},{"pos":[448008,448012],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[448042,448043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448070,448071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448927,449040],"content":"ToLookup<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;MulticastIPAddressInformation, TKey&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,113],"source":"ToLookup<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[449814,449859],"content":"ToLookup<MulticastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;MulticastIPAddressInformation, TKey&gt;","pos":[0,45],"source":"ToLookup<MulticastIPAddressInformation, TKey>"}]},{"pos":[449983,449984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450034,450038],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[450096,450097],"content":"<","needQuote":true,"nodes":[]},{"pos":[450193,450222],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[450308,450309]},{"pos":[450341,450345],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[450408,450409]},{"pos":[450497,450514],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[450605,450606],"content":"<","needQuote":true,"nodes":[]},{"pos":[450633,450637],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[450699,450700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450854,450902],"content":"ToLookup(Of MulticastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of MulticastIPAddressInformation, TKey)","pos":[0,48]}]},{"pos":[451029,451030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451080,451084],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[451143,451146]},{"pos":[451249,451278],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[451364,451365]},{"pos":[451397,451401],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[451431,451432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[451460,451461]},{"pos":[451549,451566],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[451658,451661]},{"pos":[451695,451699],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[451729,451730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451757,451758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452719,452864],"content":"ToLookup<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;MulticastIPAddressInformation, TKey, TElement&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;MulticastIPAddressInformation, TElement&gt;)","pos":[0,145],"source":"ToLookup<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)"}]},{"pos":[453725,453780],"content":"ToLookup<MulticastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;MulticastIPAddressInformation, TKey, TElement&gt;","pos":[0,55],"source":"ToLookup<MulticastIPAddressInformation, TKey, TElement>"}]},{"pos":[453914,453915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453965,453969],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[454027,454028],"content":"<","needQuote":true,"nodes":[]},{"pos":[454124,454153],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[454239,454240]},{"pos":[454272,454276],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[454339,454340]},{"pos":[454395,454399],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[454457,454458],"content":"<","needQuote":true,"nodes":[]},{"pos":[454554,454583],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[454669,454670]},{"pos":[454702,454710],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[454776,454777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454902,454960],"content":"ToLookup(Of MulticastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of MulticastIPAddressInformation, TKey, TElement)","pos":[0,58]}]},{"pos":[455097,455098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455148,455152],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[455211,455214]},{"pos":[455317,455346],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[455432,455433]},{"pos":[455465,455469],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[455499,455500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[455528,455529]},{"pos":[455584,455588],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[455647,455650]},{"pos":[455753,455782],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[455868,455869]},{"pos":[455901,455909],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[455943,455944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455971,455972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457071,457241],"content":"ToLookup<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;MulticastIPAddressInformation, TKey, TElement&gt;(Func&lt;MulticastIPAddressInformation, TKey&gt;, Func&lt;MulticastIPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,170],"source":"ToLookup<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[458287,458342],"content":"ToLookup<MulticastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;MulticastIPAddressInformation, TKey, TElement&gt;","pos":[0,55],"source":"ToLookup<MulticastIPAddressInformation, TKey, TElement>"}]},{"pos":[458476,458477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458527,458531],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[458589,458590],"content":"<","needQuote":true,"nodes":[]},{"pos":[458686,458715],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[458801,458802]},{"pos":[458834,458838],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[458901,458902]},{"pos":[458957,458961],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[459019,459020],"content":"<","needQuote":true,"nodes":[]},{"pos":[459116,459145],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[459231,459232]},{"pos":[459264,459272],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[459339,459340]},{"pos":[459428,459445],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[459536,459537],"content":"<","needQuote":true,"nodes":[]},{"pos":[459564,459568],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[459630,459631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459806,459864],"content":"ToLookup(Of MulticastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of MulticastIPAddressInformation, TKey, TElement)","pos":[0,58]}]},{"pos":[460001,460002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460052,460056],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[460115,460118]},{"pos":[460221,460250],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[460336,460337]},{"pos":[460369,460373],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[460403,460404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[460432,460433]},{"pos":[460488,460492],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[460551,460554]},{"pos":[460657,460686],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[460772,460773]},{"pos":[460805,460813],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[460847,460848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[460876,460877]},{"pos":[460965,460982],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[461074,461077]},{"pos":[461111,461115],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[461145,461146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461173,461174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462205,462285],"content":"Union<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Union&lt;MulticastIPAddressInformation&gt;(IEnumerable&lt;MulticastIPAddressInformation&gt;)","pos":[0,80],"source":"Union<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)"}]},{"pos":[462910,462946],"content":"Union<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Union&lt;MulticastIPAddressInformation&gt;","pos":[0,36],"source":"Union<MulticastIPAddressInformation>"}]},{"pos":[463061,463062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463139,463150],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[463235,463236],"content":"<","needQuote":true,"nodes":[]},{"pos":[463332,463361],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[463478,463479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463603,463642],"content":"Union(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Union(Of MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[463760,463761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463838,463849],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[463935,463938]},{"pos":[464041,464070],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[464155,464156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464183,464184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465134,465264],"content":"Union<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Union&lt;MulticastIPAddressInformation&gt;(IEnumerable&lt;MulticastIPAddressInformation&gt;, IEqualityComparer&lt;MulticastIPAddressInformation&gt;)","pos":[0,130],"source":"Union<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)"}]},{"pos":[466209,466245],"content":"Union<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Union&lt;MulticastIPAddressInformation&gt;","pos":[0,36],"source":"Union<MulticastIPAddressInformation>"}]},{"pos":[466360,466361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466438,466449],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[466534,466535],"content":"<","needQuote":true,"nodes":[]},{"pos":[466631,466660],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[466778,466779]},{"pos":[466867,466884],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[466975,466976],"content":"<","needQuote":true,"nodes":[]},{"pos":[467072,467101],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[467218,467219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467393,467432],"content":"Union(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Union(Of MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[467550,467551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467628,467639],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[467725,467728]},{"pos":[467831,467860],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[467945,467946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[467974,467975]},{"pos":[468063,468080],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[468172,468175]},{"pos":[468278,468307],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[468392,468393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468420,468421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[469344,469426],"content":"Where<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Boolean&gt;)","pos":[0,82],"source":"Where<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)"}]},{"pos":[470019,470055],"content":"Where<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Where&lt;MulticastIPAddressInformation&gt;","pos":[0,36],"source":"Where<MulticastIPAddressInformation>"}]},{"pos":[470170,470171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470221,470225],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[470283,470284],"content":"<","needQuote":true,"nodes":[]},{"pos":[470380,470409],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[470495,470496]},{"pos":[470552,470559],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[470652,470653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470765,470804],"content":"Where(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Where(Of MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[470922,470923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470973,470977],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[471036,471039]},{"pos":[471142,471171],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[471257,471258]},{"pos":[471314,471321],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[471382,471383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471410,471411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472199,472288],"content":"Where<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;MulticastIPAddressInformation&gt;(Func&lt;MulticastIPAddressInformation, Int32, Boolean&gt;)","pos":[0,89],"source":"Where<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)"}]},{"pos":[472929,472965],"content":"Where<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Where&lt;MulticastIPAddressInformation&gt;","pos":[0,36],"source":"Where<MulticastIPAddressInformation>"}]},{"pos":[473080,473081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473131,473135],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[473193,473194],"content":"<","needQuote":true,"nodes":[]},{"pos":[473290,473319],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[473405,473406]},{"pos":[473460,473465],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[473525,473526]},{"pos":[473582,473589],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[473682,473683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473808,473847],"content":"Where(Of MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Where(Of MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[473965,473966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474016,474020],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[474079,474082]},{"pos":[474185,474214],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[474300,474301]},{"pos":[474355,474360],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[474420,474421]},{"pos":[474477,474484],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[474545,474546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474573,474574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475451,475580],"content":"Zip<MulticastIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<MulticastIPAddressInformation, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;MulticastIPAddressInformation, TSecond, TResult&gt;(IEnumerable&lt;TSecond&gt;, Func&lt;MulticastIPAddressInformation, TSecond, TResult&gt;)","pos":[0,129],"source":"Zip<MulticastIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<MulticastIPAddressInformation, TSecond, TResult>)"}]},{"pos":[476395,476447],"content":"Zip<MulticastIPAddressInformation, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;MulticastIPAddressInformation, TSecond, TResult&gt;","pos":[0,52],"source":"Zip<MulticastIPAddressInformation, TSecond, TResult>"}]},{"pos":[476578,476579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476656,476667],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[476752,476753],"content":"<","needQuote":true,"nodes":[]},{"pos":[476780,476787],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[476853,476854]},{"pos":[476909,476913],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[476971,476972],"content":"<","needQuote":true,"nodes":[]},{"pos":[477068,477097],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[477183,477184]},{"pos":[477216,477223],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[477257,477258]},{"pos":[477290,477297],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[477362,477363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477510,477565],"content":"Zip(Of MulticastIPAddressInformation, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of MulticastIPAddressInformation, TSecond, TResult)","pos":[0,55]}]},{"pos":[477699,477700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477777,477788],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[477874,477877]},{"pos":[477911,477918],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[477951,477952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[477980,477981]},{"pos":[478036,478040],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[478099,478102]},{"pos":[478205,478234],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":",","pos":[478320,478321]},{"pos":[478353,478360],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[478394,478395]},{"pos":[478427,478434],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[478467,478468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478495,478496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479040,479046],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[479187,479201],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[479420,479431],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[479495,479496],"content":"<","needQuote":true,"nodes":[]},{"pos":[479523,479524],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[479644,479655],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[479720,479723]},{"pos":[479757,479758],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[479785,479786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479989,480015],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[480216,480230],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[480449,480460],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[480524,480525],"content":"<","needQuote":true,"nodes":[]},{"pos":[480552,480553],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[480673,480684],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[480749,480752]},{"pos":[480786,480787],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[480814,480815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481010,481028],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[481229,481253],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[481432,481443],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[481502,481503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481570,481581],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[481658,481659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481772,481783],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[481842,481843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481910,481921],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[481998,481999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482227,482236],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[482450,482494],"content":"AsQueryable<TElement>(IEnumerable<TElement>)","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;(IEnumerable&lt;TElement&gt;)","pos":[0,44],"source":"AsQueryable<TElement>(IEnumerable<TElement>)"}]},{"pos":[482894,482915],"content":"AsQueryable<TElement>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;","pos":[0,21],"source":"AsQueryable<TElement>"}]},{"pos":[482984,482985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483062,483073],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[483158,483159],"content":"<","needQuote":true,"nodes":[]},{"pos":[483186,483194],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[483260,483261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483390,483414],"content":"AsQueryable(Of TElement)","needQuote":true,"nodes":[{"content":"AsQueryable(Of TElement)","pos":[0,24]}]},{"pos":[483486,483487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483564,483575],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[483661,483664]},{"pos":[483698,483706],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[483740,483741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483768,483769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484142,484165],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[484360,484370],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[484437,484438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484505,484516],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[484593,484594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484715,484725],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[484792,484793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484860,484871],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[484948,484949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485202,485220],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[485469,485510],"content":"AsParallel<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,41],"source":"AsParallel<TSource>(IEnumerable<TSource>)"}]},{"pos":[485927,485946],"content":"AsParallel<TSource>","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;","pos":[0,19],"source":"AsParallel<TSource>"}]},{"pos":[486022,486023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486100,486111],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[486196,486197],"content":"<","needQuote":true,"nodes":[]},{"pos":[486224,486231],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[486296,486297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486434,486456],"content":"AsParallel(Of TSource)","needQuote":true,"nodes":[{"content":"AsParallel(Of TSource)","pos":[0,22]}]},{"pos":[486535,486536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486613,486624],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[486710,486713]},{"pos":[486747,486754],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[486787,486788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486815,486816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487241,487314],"content":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TSource, TSource&gt;)","pos":[0,73],"source":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)"}]},{"pos":[487847,487865],"content":"Aggregate<TSource>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;","pos":[0,18],"source":"Aggregate<TSource>"}]},{"pos":[487932,487933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488010,488021],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[488106,488107],"content":"<","needQuote":true,"nodes":[]},{"pos":[488134,488141],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[488207,488208]},{"pos":[488263,488267],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[488325,488326],"content":"<","needQuote":true,"nodes":[]},{"pos":[488353,488360],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[488394,488395]},{"pos":[488427,488434],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[488468,488469]},{"pos":[488501,488508],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[488573,488574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488727,488748],"content":"Aggregate(Of TSource)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource)","pos":[0,21]}]},{"pos":[488818,488819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488896,488907],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[488993,488996]},{"pos":[489030,489037],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[489070,489071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[489099,489100]},{"pos":[489155,489159],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[489218,489221]},{"pos":[489255,489262],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[489296,489297]},{"pos":[489329,489336],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[489370,489371]},{"pos":[489403,489410],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[489443,489444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489471,489472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489904,489914],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[490159,490266],"content":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;)","pos":[0,107],"source":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)"}]},{"pos":[490905,490936],"content":"Aggregate<TSource, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;","pos":[0,31],"source":"Aggregate<TSource, TAccumulate>"}]},{"pos":[491016,491017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491094,491105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[491190,491191],"content":"<","needQuote":true,"nodes":[]},{"pos":[491218,491225],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491291,491292]},{"pos":[491324,491335],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[491373,491374]},{"pos":[491429,491433],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[491491,491492],"content":"<","needQuote":true,"nodes":[]},{"pos":[491519,491530],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[491568,491569]},{"pos":[491601,491608],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491642,491643]},{"pos":[491675,491686],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[491755,491756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491913,491947],"content":"Aggregate(Of TSource, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate)","pos":[0,34]}]},{"pos":[492030,492031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492108,492119],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[492205,492208]},{"pos":[492242,492249],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[492282,492283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[492311,492312]},{"pos":[492344,492355],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[492393,492394]},{"pos":[492449,492453],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[492512,492515]},{"pos":[492549,492560],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[492598,492599]},{"pos":[492631,492638],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[492672,492673]},{"pos":[492705,492716],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[492753,492754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492781,492782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493371,493515],"content":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,144],"source":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[494306,494346],"content":"Aggregate<TSource, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;","pos":[0,40],"source":"Aggregate<TSource, TAccumulate, TResult>"}]},{"pos":[494435,494436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494513,494524],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[494609,494610],"content":"<","needQuote":true,"nodes":[]},{"pos":[494637,494644],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[494710,494711]},{"pos":[494743,494754],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[494792,494793]},{"pos":[494848,494852],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[494910,494911],"content":"<","needQuote":true,"nodes":[]},{"pos":[494938,494949],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[494987,494988]},{"pos":[495020,495027],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[495061,495062]},{"pos":[495094,495105],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[495175,495176]},{"pos":[495231,495235],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[495293,495294],"content":"<","needQuote":true,"nodes":[]},{"pos":[495321,495332],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[495370,495371]},{"pos":[495403,495410],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[495475,495476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495654,495697],"content":"Aggregate(Of TSource, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate, TResult)","pos":[0,43]}]},{"pos":[495789,495790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495867,495878],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[495964,495967]},{"pos":[496001,496008],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[496041,496042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[496070,496071]},{"pos":[496103,496114],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[496152,496153]},{"pos":[496208,496212],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[496271,496274]},{"pos":[496308,496319],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[496357,496358]},{"pos":[496390,496397],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[496431,496432]},{"pos":[496464,496475],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[496512,496513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[496541,496542]},{"pos":[496597,496601],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[496660,496663]},{"pos":[496697,496708],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[496746,496747]},{"pos":[496779,496786],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[496819,496820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496847,496848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497511,497569],"content":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[498072,498084],"content":"All<TSource>","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;","pos":[0,12],"source":"All<TSource>"}]},{"pos":[498145,498146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498223,498234],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[498319,498320],"content":"<","needQuote":true,"nodes":[]},{"pos":[498347,498354],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[498420,498421]},{"pos":[498476,498480],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[498538,498539],"content":"<","needQuote":true,"nodes":[]},{"pos":[498566,498573],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[498607,498608]},{"pos":[498664,498671],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[498764,498765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498919,498934],"content":"All(Of TSource)","needQuote":true,"nodes":[{"content":"All(Of TSource)","pos":[0,15]}]},{"pos":[498998,498999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499076,499087],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[499173,499176]},{"pos":[499210,499217],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[499250,499251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[499279,499280]},{"pos":[499335,499339],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[499398,499401]},{"pos":[499435,499442],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499476,499477]},{"pos":[499533,499540],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[499601,499602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499629,499630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500062,500096],"content":"Any<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Any<TSource>(IEnumerable<TSource>)"}]},{"pos":[500461,500473],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[500534,500535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500612,500623],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[500708,500709],"content":"<","needQuote":true,"nodes":[]},{"pos":[500736,500743],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[500808,500809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500931,500946],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[501010,501011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501088,501099],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[501185,501188]},{"pos":[501222,501229],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[501262,501263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501290,501291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501672,501730],"content":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[502233,502245],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[502306,502307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502384,502395],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[502480,502481],"content":"<","needQuote":true,"nodes":[]},{"pos":[502508,502515],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[502581,502582]},{"pos":[502637,502641],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[502699,502700],"content":"<","needQuote":true,"nodes":[]},{"pos":[502727,502734],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[502768,502769]},{"pos":[502825,502832],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[502925,502926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503080,503095],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[503159,503160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503237,503248],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[503334,503337]},{"pos":[503371,503378],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[503411,503412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[503440,503441]},{"pos":[503496,503500],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[503559,503562]},{"pos":[503596,503603],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[503637,503638]},{"pos":[503694,503701],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[503762,503763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503790,503791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504232,504275],"content":"AsEnumerable<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,43],"source":"AsEnumerable<TSource>(IEnumerable<TSource>)"}]},{"pos":[504676,504697],"content":"AsEnumerable<TSource>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;","pos":[0,21],"source":"AsEnumerable<TSource>"}]},{"pos":[504767,504768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504845,504856],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[504941,504942],"content":"<","needQuote":true,"nodes":[]},{"pos":[504969,504976],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[505041,505042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505173,505197],"content":"AsEnumerable(Of TSource)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of TSource)","pos":[0,24]}]},{"pos":[505270,505271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505348,505359],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[505445,505448]},{"pos":[505482,505489],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[505522,505523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505550,505551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505963,506025],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,62],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[506544,506560],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[506625,506626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506703,506714],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[506799,506800],"content":"<","needQuote":true,"nodes":[]},{"pos":[506827,506834],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[506900,506901]},{"pos":[506956,506960],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[507018,507019],"content":"<","needQuote":true,"nodes":[]},{"pos":[507046,507053],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[507087,507088]},{"pos":[507144,507151],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[507244,507245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507403,507422],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[507490,507491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507568,507579],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[507665,507668]},{"pos":[507702,507709],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[507742,507743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[507771,507772]},{"pos":[507827,507831],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[507890,507893]},{"pos":[507927,507934],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[507968,507969]},{"pos":[508025,508032],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[508093,508094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508121,508122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508601,508662],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[509177,509193],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[509258,509259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509336,509347],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[509432,509433],"content":"<","needQuote":true,"nodes":[]},{"pos":[509460,509467],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[509533,509534]},{"pos":[509589,509593],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[509651,509652],"content":"<","needQuote":true,"nodes":[]},{"pos":[509679,509686],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[509720,509721]},{"pos":[509776,509782],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[509874,509875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510032,510051],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[510119,510120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510197,510208],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[510294,510297]},{"pos":[510331,510338],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[510371,510372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[510400,510401]},{"pos":[510456,510460],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[510519,510522]},{"pos":[510556,510563],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[510597,510598]},{"pos":[510653,510659],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[510719,510720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510747,510748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511223,511283],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[511794,511810],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[511875,511876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511953,511964],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[512049,512050],"content":"<","needQuote":true,"nodes":[]},{"pos":[512077,512084],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[512150,512151]},{"pos":[512206,512210],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[512268,512269],"content":"<","needQuote":true,"nodes":[]},{"pos":[512296,512303],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[512337,512338]},{"pos":[512392,512397],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[512488,512489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512645,512664],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[512732,512733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512810,512821],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[512907,512910]},{"pos":[512944,512951],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[512984,512985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[513013,513014]},{"pos":[513069,513073],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[513132,513135]},{"pos":[513169,513176],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[513210,513211]},{"pos":[513265,513270],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[513329,513330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513357,513358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513830,513890],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[514401,514417],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[514482,514483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514560,514571],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[514656,514657],"content":"<","needQuote":true,"nodes":[]},{"pos":[514684,514691],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[514757,514758]},{"pos":[514813,514817],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[514875,514876],"content":"<","needQuote":true,"nodes":[]},{"pos":[514903,514910],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[514944,514945]},{"pos":[514999,515004],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[515095,515096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515252,515271],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[515339,515340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515417,515428],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[515514,515517]},{"pos":[515551,515558],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[515591,515592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[515620,515621]},{"pos":[515676,515680],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[515739,515742]},{"pos":[515776,515783],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[515817,515818]},{"pos":[515872,515877],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[515936,515937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515964,515965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516456,516528],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[517114,517130],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[517195,517196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517273,517284],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[517369,517370],"content":"<","needQuote":true,"nodes":[]},{"pos":[517397,517404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[517470,517471]},{"pos":[517526,517530],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[517588,517589],"content":"<","needQuote":true,"nodes":[]},{"pos":[517616,517623],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[517657,517658]},{"pos":[517717,517725],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[517787,517788],"content":"<","needQuote":true,"nodes":[]},{"pos":[517839,517846],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[517971,517972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518147,518166],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[518234,518235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518312,518323],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[518409,518412]},{"pos":[518446,518453],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[518486,518487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[518515,518516]},{"pos":[518571,518575],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[518634,518637]},{"pos":[518671,518678],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[518712,518713]},{"pos":[518772,518780],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[518843,518846]},{"pos":[518904,518911],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[518972,518973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519000,519001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519028,519029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519565,519636],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[520218,520234],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[520299,520300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520377,520388],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[520473,520474],"content":"<","needQuote":true,"nodes":[]},{"pos":[520501,520508],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[520574,520575]},{"pos":[520630,520634],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[520692,520693],"content":"<","needQuote":true,"nodes":[]},{"pos":[520720,520727],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[520761,520762]},{"pos":[520821,520829],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[520891,520892],"content":"<","needQuote":true,"nodes":[]},{"pos":[520942,520948],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[521072,521073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521247,521266],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[521334,521335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521412,521423],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[521509,521512]},{"pos":[521546,521553],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[521586,521587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[521615,521616]},{"pos":[521671,521675],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[521734,521737]},{"pos":[521771,521778],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[521812,521813]},{"pos":[521872,521880],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[521943,521946]},{"pos":[522003,522009],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[522069,522070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522097,522098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522125,522126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522658,522728],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[523306,523322],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[523387,523388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523465,523476],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[523561,523562],"content":"<","needQuote":true,"nodes":[]},{"pos":[523589,523596],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[523662,523663]},{"pos":[523718,523722],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[523780,523781],"content":"<","needQuote":true,"nodes":[]},{"pos":[523808,523815],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[523849,523850]},{"pos":[523909,523917],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[523979,523980],"content":"<","needQuote":true,"nodes":[]},{"pos":[524029,524034],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[524157,524158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524331,524350],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[524418,524419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524496,524507],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[524593,524596]},{"pos":[524630,524637],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[524670,524671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[524699,524700]},{"pos":[524755,524759],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[524818,524821]},{"pos":[524855,524862],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[524896,524897]},{"pos":[524956,524964],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[525027,525030]},{"pos":[525086,525091],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[525150,525151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525178,525179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525206,525207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525736,525806],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[526384,526400],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[526465,526466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526543,526554],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[526639,526640],"content":"<","needQuote":true,"nodes":[]},{"pos":[526667,526674],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[526740,526741]},{"pos":[526796,526800],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[526858,526859],"content":"<","needQuote":true,"nodes":[]},{"pos":[526886,526893],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[526927,526928]},{"pos":[526987,526995],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[527057,527058],"content":"<","needQuote":true,"nodes":[]},{"pos":[527107,527112],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[527235,527236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527409,527428],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[527496,527497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527574,527585],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[527671,527674]},{"pos":[527708,527715],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[527748,527749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[527777,527778]},{"pos":[527833,527837],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[527896,527899]},{"pos":[527933,527940],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[527974,527975]},{"pos":[528034,528042],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[528105,528108]},{"pos":[528164,528169],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[528228,528229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528256,528257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528284,528285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528815,528886],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[529468,529484],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[529549,529550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529627,529638],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[529723,529724],"content":"<","needQuote":true,"nodes":[]},{"pos":[529751,529758],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[529824,529825]},{"pos":[529880,529884],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[529942,529943],"content":"<","needQuote":true,"nodes":[]},{"pos":[529970,529977],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[530011,530012]},{"pos":[530071,530079],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[530141,530142],"content":"<","needQuote":true,"nodes":[]},{"pos":[530192,530198],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[530322,530323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530497,530516],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[530584,530585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530662,530673],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[530759,530762]},{"pos":[530796,530803],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[530836,530837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[530865,530866]},{"pos":[530921,530925],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[530984,530987]},{"pos":[531021,531028],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[531062,531063]},{"pos":[531122,531130],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[531193,531196]},{"pos":[531253,531259],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[531319,531320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531347,531348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531375,531376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531892,531953],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[532468,532484],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[532549,532550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532627,532638],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[532723,532724],"content":"<","needQuote":true,"nodes":[]},{"pos":[532751,532758],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[532824,532825]},{"pos":[532880,532884],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[532942,532943],"content":"<","needQuote":true,"nodes":[]},{"pos":[532970,532977],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[533011,533012]},{"pos":[533067,533073],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[533165,533166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533323,533342],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[533410,533411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533488,533499],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[533585,533588]},{"pos":[533622,533629],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[533662,533663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[533691,533692]},{"pos":[533747,533751],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[533810,533813]},{"pos":[533847,533854],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[533888,533889]},{"pos":[533944,533950],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[534010,534011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534038,534039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534468,534494],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[534801,534814],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[534876,534877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534944,534955],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[535032,535033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535143,535159],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[535224,535225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535292,535303],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[535380,535381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535746,535805],"content":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[536352,536367],"content":"Concat<TSource>","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;","pos":[0,15],"source":"Concat<TSource>"}]},{"pos":[536431,536432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536509,536520],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[536605,536606],"content":"<","needQuote":true,"nodes":[]},{"pos":[536633,536640],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[536706,536707]},{"pos":[536789,536800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[536885,536886],"content":"<","needQuote":true,"nodes":[]},{"pos":[536913,536920],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[536985,536986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537155,537173],"content":"Concat(Of TSource)","needQuote":true,"nodes":[{"content":"Concat(Of TSource)","pos":[0,18]}]},{"pos":[537240,537241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537318,537329],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[537415,537418]},{"pos":[537452,537459],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[537492,537493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[537521,537522]},{"pos":[537604,537615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[537701,537704]},{"pos":[537738,537745],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[537778,537779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537806,537807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538263,538309],"content":"Append<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,46],"source":"Append<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[538717,538732],"content":"Append<TSource>","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;","pos":[0,15],"source":"Append<TSource>"}]},{"pos":[538796,538797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538874,538885],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[538970,538971],"content":"<","needQuote":true,"nodes":[]},{"pos":[538998,539005],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[539071,539072]},{"pos":[539104,539111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[539144,539145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539274,539292],"content":"Append(Of TSource)","needQuote":true,"nodes":[{"content":"Append(Of TSource)","pos":[0,18]}]},{"pos":[539359,539360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539437,539448],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[539534,539537]},{"pos":[539571,539578],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[539611,539612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[539640,539641]},{"pos":[539673,539680],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[539713,539714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540102,540149],"content":"Prepend<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,47],"source":"Prepend<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[540561,540577],"content":"Prepend<TSource>","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;","pos":[0,16],"source":"Prepend<TSource>"}]},{"pos":[540642,540643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540720,540731],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[540816,540817],"content":"<","needQuote":true,"nodes":[]},{"pos":[540844,540851],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[540917,540918]},{"pos":[540950,540957],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[540990,540991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541121,541140],"content":"Prepend(Of TSource)","needQuote":true,"nodes":[{"content":"Prepend(Of TSource)","pos":[0,19]}]},{"pos":[541208,541209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[541286,541297],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[541383,541386]},{"pos":[541420,541427],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[541460,541461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[541489,541490]},{"pos":[541522,541529],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[541562,541563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541955,542003],"content":"Contains<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,48],"source":"Contains<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[542419,542436],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[542502,542503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542580,542591],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[542676,542677],"content":"<","needQuote":true,"nodes":[]},{"pos":[542704,542711],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[542777,542778]},{"pos":[542810,542817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[542850,542851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542982,543002],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[543071,543072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543149,543160],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[543246,543249]},{"pos":[543283,543290],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[543323,543324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[543352,543353]},{"pos":[543385,543392],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[543425,543426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543871,543947],"content":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource, IEqualityComparer&lt;TSource&gt;)","pos":[0,76],"source":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)"}]},{"pos":[544557,544574],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[544640,544641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544718,544729],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[544814,544815],"content":"<","needQuote":true,"nodes":[]},{"pos":[544842,544849],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[544915,544916]},{"pos":[544948,544955],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[544989,544990]},{"pos":[545078,545095],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[545186,545187],"content":"<","needQuote":true,"nodes":[]},{"pos":[545214,545221],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[545286,545287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545468,545488],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[545557,545558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545635,545646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[545732,545735]},{"pos":[545769,545776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[545809,545810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[545838,545839]},{"pos":[545871,545878],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[545912,545913]},{"pos":[546001,546018],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[546110,546113]},{"pos":[546147,546154],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[546187,546188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546215,546216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546713,546749],"content":"Count<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"Count<TSource>(IEnumerable<TSource>)"}]},{"pos":[547122,547136],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[547199,547200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547277,547288],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[547373,547374],"content":"<","needQuote":true,"nodes":[]},{"pos":[547401,547408],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[547473,547474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547598,547615],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[547681,547682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547759,547770],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[547856,547859]},{"pos":[547893,547900],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[547933,547934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547961,547962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548351,548411],"content":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[548922,548936],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[548999,549000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549077,549088],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[549173,549174],"content":"<","needQuote":true,"nodes":[]},{"pos":[549201,549208],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[549274,549275]},{"pos":[549330,549334],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[549392,549393],"content":"<","needQuote":true,"nodes":[]},{"pos":[549420,549427],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[549461,549462]},{"pos":[549518,549525],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[549618,549619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549775,549792],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[549858,549859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549936,549947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[550033,550036]},{"pos":[550070,550077],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[550110,550111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[550139,550140]},{"pos":[550195,550199],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[550258,550261]},{"pos":[550295,550302],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[550336,550337]},{"pos":[550393,550400],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[550461,550462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550489,550490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550939,550984],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)"}]},{"pos":[551393,551416],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[551488,551489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551566,551577],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[551662,551663],"content":"<","needQuote":true,"nodes":[]},{"pos":[551690,551697],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[551762,551763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551896,551922],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[551997,551998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552075,552086],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[552172,552175]},{"pos":[552209,552216],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[552249,552250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552277,552278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552675,552729],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,54],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[553169,553192],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[553264,553265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553342,553353],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[553438,553439],"content":"<","needQuote":true,"nodes":[]},{"pos":[553466,553473],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[553539,553540]},{"pos":[553572,553579],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[553612,553613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553750,553776],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[553851,553852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553929,553940],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[554026,554029]},{"pos":[554063,554070],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[554103,554104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[554132,554133]},{"pos":[554165,554172],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[554205,554206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554615,554654],"content":"Distinct<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,39],"source":"Distinct<TSource>(IEnumerable<TSource>)"}]},{"pos":[555039,555056],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[555122,555123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555200,555211],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[555296,555297],"content":"<","needQuote":true,"nodes":[]},{"pos":[555324,555331],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[555396,555397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555524,555544],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[555613,555614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555691,555702],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[555788,555791]},{"pos":[555825,555832],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[555865,555866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555893,555894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556313,556380],"content":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,67],"source":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[556959,556976],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[557042,557043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557120,557131],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[557216,557217],"content":"<","needQuote":true,"nodes":[]},{"pos":[557244,557251],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[557317,557318]},{"pos":[557406,557423],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[557514,557515],"content":"<","needQuote":true,"nodes":[]},{"pos":[557542,557549],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[557614,557615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557792,557812],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[557881,557882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557959,557970],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[558056,558059]},{"pos":[558093,558100],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[558133,558134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[558162,558163]},{"pos":[558251,558268],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[558360,558363]},{"pos":[558397,558404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[558437,558438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558465,558466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558958,559005],"content":"ElementAt<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,47],"source":"ElementAt<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[559442,559460],"content":"ElementAt<TSource>","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;","pos":[0,18],"source":"ElementAt<TSource>"}]},{"pos":[559527,559528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559605,559616],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[559701,559702],"content":"<","needQuote":true,"nodes":[]},{"pos":[559729,559736],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[559802,559803]},{"pos":[559857,559862],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[559921,559922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560063,560084],"content":"ElementAt(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAt(Of TSource)","pos":[0,21]}]},{"pos":[560154,560155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560232,560243],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[560329,560332]},{"pos":[560366,560373],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[560406,560407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[560435,560436]},{"pos":[560490,560495],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[560554,560555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560977,561033],"content":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,56],"source":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[561506,561533],"content":"ElementAtOrDefault<TSource>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;","pos":[0,27],"source":"ElementAtOrDefault<TSource>"}]},{"pos":[561609,561610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[561687,561698],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[561783,561784],"content":"<","needQuote":true,"nodes":[]},{"pos":[561811,561818],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[561884,561885]},{"pos":[561939,561944],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[562003,562004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562154,562184],"content":"ElementAtOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of TSource)","pos":[0,30]}]},{"pos":[562263,562264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562341,562352],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[562438,562441]},{"pos":[562475,562482],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[562515,562516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[562544,562545]},{"pos":[562599,562604],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[562663,562664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563132,563191],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[563738,563753],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[563817,563818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[563895,563906],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[563991,563992],"content":"<","needQuote":true,"nodes":[]},{"pos":[564019,564026],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564092,564093]},{"pos":[564175,564186],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[564271,564272],"content":"<","needQuote":true,"nodes":[]},{"pos":[564299,564306],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[564371,564372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564541,564559],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[564626,564627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564704,564715],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[564801,564804]},{"pos":[564838,564845],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[564878,564879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[564907,564908]},{"pos":[564990,565001],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[565087,565090]},{"pos":[565124,565131],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[565164,565165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565192,565193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565739,565826],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,87],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[566567,566582],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[566646,566647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566724,566735],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[566820,566821],"content":"<","needQuote":true,"nodes":[]},{"pos":[566848,566855],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[566921,566922]},{"pos":[567004,567015],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[567100,567101],"content":"<","needQuote":true,"nodes":[]},{"pos":[567128,567135],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[567201,567202]},{"pos":[567290,567307],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[567398,567399],"content":"<","needQuote":true,"nodes":[]},{"pos":[567426,567433],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[567498,567499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567718,567736],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[567803,567804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567881,567892],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[567978,567981]},{"pos":[568015,568022],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[568055,568056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[568084,568085]},{"pos":[568167,568178],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[568264,568267]},{"pos":[568301,568308],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[568341,568342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[568370,568371]},{"pos":[568459,568476],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[568568,568571]},{"pos":[568605,568612],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[568645,568646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568673,568674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569234,569270],"content":"First<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"First<TSource>(IEnumerable<TSource>)"}]},{"pos":[569643,569657],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[569720,569721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569798,569809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[569894,569895],"content":"<","needQuote":true,"nodes":[]},{"pos":[569922,569929],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[569994,569995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570119,570136],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[570202,570203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[570280,570291],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[570377,570380]},{"pos":[570414,570421],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[570454,570455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570482,570483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570872,570932],"content":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[571443,571457],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[571520,571521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571598,571609],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[571694,571695],"content":"<","needQuote":true,"nodes":[]},{"pos":[571722,571729],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[571795,571796]},{"pos":[571851,571855],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[571913,571914],"content":"<","needQuote":true,"nodes":[]},{"pos":[571941,571948],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[571982,571983]},{"pos":[572039,572046],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[572139,572140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572296,572313],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[572379,572380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572457,572468],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[572554,572557]},{"pos":[572591,572598],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[572631,572632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[572660,572661]},{"pos":[572716,572720],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[572779,572782]},{"pos":[572816,572823],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[572857,572858]},{"pos":[572914,572921],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[572982,572983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573010,573011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573460,573505],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[573914,573937],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[574009,574010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574087,574098],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[574183,574184],"content":"<","needQuote":true,"nodes":[]},{"pos":[574211,574218],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[574283,574284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574417,574443],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[574518,574519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574596,574607],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[574693,574696]},{"pos":[574730,574737],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[574770,574771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574798,574799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575224,575293],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,69],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[575840,575863],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[575935,575936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[576013,576024],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[576109,576110],"content":"<","needQuote":true,"nodes":[]},{"pos":[576137,576144],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[576210,576211]},{"pos":[576266,576270],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[576328,576329],"content":"<","needQuote":true,"nodes":[]},{"pos":[576356,576363],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[576397,576398]},{"pos":[576454,576461],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[576554,576555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576720,576746],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[576821,576822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[576899,576910],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[576996,576999]},{"pos":[577033,577040],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[577073,577074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[577102,577103]},{"pos":[577158,577162],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[577221,577224]},{"pos":[577258,577265],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577299,577300]},{"pos":[577356,577363],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[577424,577425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577452,577453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577943,578008],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[578511,578533],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[578604,578605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578682,578693],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[578778,578779],"content":"<","needQuote":true,"nodes":[]},{"pos":[578806,578813],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[578879,578880]},{"pos":[578935,578939],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[578997,578998],"content":"<","needQuote":true,"nodes":[]},{"pos":[579025,579032],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[579066,579067]},{"pos":[579099,579103],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[579165,579166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579313,579338],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[579412,579413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[579490,579501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[579587,579590]},{"pos":[579624,579631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[579664,579665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[579693,579694]},{"pos":[579749,579753],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[579812,579815]},{"pos":[579849,579856],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[579890,579891]},{"pos":[579923,579927],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[579957,579958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579985,579986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580500,580590],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[581278,581300],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[581371,581372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[581449,581460],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[581545,581546],"content":"<","needQuote":true,"nodes":[]},{"pos":[581573,581580],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[581646,581647]},{"pos":[581702,581706],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[581764,581765],"content":"<","needQuote":true,"nodes":[]},{"pos":[581792,581799],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[581833,581834]},{"pos":[581866,581870],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[581933,581934]},{"pos":[582022,582039],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[582130,582131],"content":"<","needQuote":true,"nodes":[]},{"pos":[582158,582162],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[582224,582225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582422,582447],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[582521,582522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582599,582610],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[582696,582699]},{"pos":[582733,582740],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[582773,582774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[582802,582803]},{"pos":[582858,582862],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[582921,582924]},{"pos":[582958,582965],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[582999,583000]},{"pos":[583032,583036],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[583066,583067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583095,583096]},{"pos":[583184,583201],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[583293,583296]},{"pos":[583330,583334],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[583364,583365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583392,583393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583981,584081],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,100],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[584730,584762],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[584843,584844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[584921,584932],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[585017,585018],"content":"<","needQuote":true,"nodes":[]},{"pos":[585045,585052],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[585118,585119]},{"pos":[585174,585178],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[585236,585237],"content":"<","needQuote":true,"nodes":[]},{"pos":[585264,585271],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[585305,585306]},{"pos":[585338,585342],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[585405,585406]},{"pos":[585461,585465],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[585523,585524],"content":"<","needQuote":true,"nodes":[]},{"pos":[585551,585558],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[585592,585593]},{"pos":[585625,585633],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[585699,585700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585868,585903],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[585987,585988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[586065,586076],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[586162,586165]},{"pos":[586199,586206],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[586239,586240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[586268,586269]},{"pos":[586324,586328],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[586387,586390]},{"pos":[586424,586431],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586465,586466]},{"pos":[586498,586502],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[586532,586533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[586561,586562]},{"pos":[586617,586621],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[586680,586683]},{"pos":[586717,586724],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586758,586759]},{"pos":[586791,586799],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[586833,586834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586861,586862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[587491,587616],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,125],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[588450,588482],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[588563,588564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[588641,588652],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[588737,588738],"content":"<","needQuote":true,"nodes":[]},{"pos":[588765,588772],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[588838,588839]},{"pos":[588894,588898],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[588956,588957],"content":"<","needQuote":true,"nodes":[]},{"pos":[588984,588991],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[589025,589026]},{"pos":[589058,589062],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[589125,589126]},{"pos":[589181,589185],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[589243,589244],"content":"<","needQuote":true,"nodes":[]},{"pos":[589271,589278],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[589312,589313]},{"pos":[589345,589353],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[589420,589421]},{"pos":[589509,589526],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[589617,589618],"content":"<","needQuote":true,"nodes":[]},{"pos":[589645,589649],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[589711,589712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589930,589965],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[590049,590050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590127,590138],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[590224,590227]},{"pos":[590261,590268],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[590301,590302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[590330,590331]},{"pos":[590386,590390],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[590449,590452]},{"pos":[590486,590493],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[590527,590528]},{"pos":[590560,590564],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[590594,590595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[590623,590624]},{"pos":[590679,590683],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[590742,590745]},{"pos":[590779,590786],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[590820,590821]},{"pos":[590853,590861],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[590895,590896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[590924,590925]},{"pos":[591013,591030],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[591122,591125]},{"pos":[591159,591163],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[591193,591194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591221,591222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591948,592065],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;)","pos":[0,117],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)"}]},{"pos":[592869,592900],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[592980,592981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[593058,593069],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[593154,593155],"content":"<","needQuote":true,"nodes":[]},{"pos":[593182,593189],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[593255,593256]},{"pos":[593311,593315],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[593373,593374],"content":"<","needQuote":true,"nodes":[]},{"pos":[593401,593408],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[593442,593443]},{"pos":[593475,593479],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[593542,593543]},{"pos":[593598,593602],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[593660,593661],"content":"<","needQuote":true,"nodes":[]},{"pos":[593688,593692],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[593723,593724]},{"pos":[593806,593817],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[593902,593903],"content":"<","needQuote":true,"nodes":[]},{"pos":[593930,593937],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[594003,594004]},{"pos":[594036,594043],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[594108,594109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594321,594355],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[594438,594439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594516,594527],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[594613,594616]},{"pos":[594650,594657],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[594690,594691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[594719,594720]},{"pos":[594775,594779],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[594838,594841]},{"pos":[594875,594882],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[594916,594917]},{"pos":[594949,594953],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[594983,594984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[595012,595013]},{"pos":[595068,595072],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[595131,595134]},{"pos":[595168,595172],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[595203,595204]},{"pos":[595286,595297],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[595383,595386]},{"pos":[595420,595427],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[595460,595461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[595489,595490]},{"pos":[595522,595529],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[595562,595563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595590,595591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[596345,596487],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[597476,597507],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[597587,597588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[597665,597676],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[597761,597762],"content":"<","needQuote":true,"nodes":[]},{"pos":[597789,597796],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[597862,597863]},{"pos":[597918,597922],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[597980,597981],"content":"<","needQuote":true,"nodes":[]},{"pos":[598008,598015],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[598049,598050]},{"pos":[598082,598086],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[598149,598150]},{"pos":[598205,598209],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[598267,598268],"content":"<","needQuote":true,"nodes":[]},{"pos":[598295,598299],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[598330,598331]},{"pos":[598413,598424],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[598509,598510],"content":"<","needQuote":true,"nodes":[]},{"pos":[598537,598544],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[598610,598611]},{"pos":[598643,598650],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[598716,598717]},{"pos":[598805,598822],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[598913,598914],"content":"<","needQuote":true,"nodes":[]},{"pos":[598941,598945],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[599007,599008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599270,599304],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[599387,599388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599465,599476],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[599562,599565]},{"pos":[599599,599606],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[599639,599640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[599668,599669]},{"pos":[599724,599728],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[599787,599790]},{"pos":[599824,599831],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[599865,599866]},{"pos":[599898,599902],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[599932,599933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[599961,599962]},{"pos":[600017,600021],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[600080,600083]},{"pos":[600117,600121],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[600152,600153]},{"pos":[600235,600246],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[600332,600335]},{"pos":[600369,600376],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[600409,600410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[600438,600439]},{"pos":[600471,600478],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[600511,600512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[600540,600541]},{"pos":[600629,600646],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[600738,600741]},{"pos":[600775,600779],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[600809,600810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600837,600838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601666,601819],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,153],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[602772,602813],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[602903,602904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602981,602992],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[603077,603078],"content":"<","needQuote":true,"nodes":[]},{"pos":[603105,603112],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[603178,603179]},{"pos":[603234,603238],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[603296,603297],"content":"<","needQuote":true,"nodes":[]},{"pos":[603324,603331],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[603365,603366]},{"pos":[603398,603402],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[603465,603466]},{"pos":[603521,603525],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[603583,603584],"content":"<","needQuote":true,"nodes":[]},{"pos":[603611,603618],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[603652,603653]},{"pos":[603685,603693],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[603760,603761]},{"pos":[603816,603820],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[603878,603879],"content":"<","needQuote":true,"nodes":[]},{"pos":[603906,603910],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[603941,603942]},{"pos":[604024,604035],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[604120,604121],"content":"<","needQuote":true,"nodes":[]},{"pos":[604148,604156],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[604223,604224]},{"pos":[604256,604263],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[604328,604329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604562,604606],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[604699,604700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[604777,604788],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[604874,604877]},{"pos":[604911,604918],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[604951,604952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604980,604981]},{"pos":[605036,605040],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[605099,605102]},{"pos":[605136,605143],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[605177,605178]},{"pos":[605210,605214],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[605244,605245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[605273,605274]},{"pos":[605329,605333],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[605392,605395]},{"pos":[605429,605436],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[605470,605471]},{"pos":[605503,605511],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[605545,605546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[605574,605575]},{"pos":[605630,605634],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[605693,605696]},{"pos":[605730,605734],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[605765,605766]},{"pos":[605848,605859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[605945,605948]},{"pos":[605982,605990],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[606024,606025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[606053,606054]},{"pos":[606086,606093],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[606126,606127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606154,606155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607026,607204],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,178],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[608342,608383],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[608473,608474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608551,608562],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[608647,608648],"content":"<","needQuote":true,"nodes":[]},{"pos":[608675,608682],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[608748,608749]},{"pos":[608804,608808],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[608866,608867],"content":"<","needQuote":true,"nodes":[]},{"pos":[608894,608901],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[608935,608936]},{"pos":[608968,608972],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[609035,609036]},{"pos":[609091,609095],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[609153,609154],"content":"<","needQuote":true,"nodes":[]},{"pos":[609181,609188],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[609222,609223]},{"pos":[609255,609263],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[609330,609331]},{"pos":[609386,609390],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[609448,609449],"content":"<","needQuote":true,"nodes":[]},{"pos":[609476,609480],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[609511,609512]},{"pos":[609594,609605],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[609690,609691],"content":"<","needQuote":true,"nodes":[]},{"pos":[609718,609726],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[609793,609794]},{"pos":[609826,609833],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[609899,609900]},{"pos":[609988,610005],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[610096,610097],"content":"<","needQuote":true,"nodes":[]},{"pos":[610124,610128],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[610190,610191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610474,610518],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[610611,610612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[610689,610700],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[610786,610789]},{"pos":[610823,610830],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[610863,610864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[610892,610893]},{"pos":[610948,610952],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[611011,611014]},{"pos":[611048,611055],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[611089,611090]},{"pos":[611122,611126],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[611156,611157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[611185,611186]},{"pos":[611241,611245],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[611304,611307]},{"pos":[611341,611348],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[611382,611383]},{"pos":[611415,611423],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[611457,611458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[611486,611487]},{"pos":[611542,611546],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[611605,611608]},{"pos":[611642,611646],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[611677,611678]},{"pos":[611760,611771],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[611857,611860]},{"pos":[611894,611902],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[611936,611937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[611965,611966]},{"pos":[611998,612005],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[612038,612039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[612067,612068]},{"pos":[612156,612173],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[612265,612268]},{"pos":[612302,612306],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[612336,612337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612364,612365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613335,613501],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,166],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)"}]},{"pos":[614599,614639],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[614728,614729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614806,614817],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[614902,614903],"content":"<","needQuote":true,"nodes":[]},{"pos":[614930,614936],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[615001,615002]},{"pos":[615084,615095],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[615180,615181],"content":"<","needQuote":true,"nodes":[]},{"pos":[615208,615214],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[615279,615280]},{"pos":[615335,615339],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[615397,615398],"content":"<","needQuote":true,"nodes":[]},{"pos":[615425,615431],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[615464,615465]},{"pos":[615497,615501],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[615564,615565]},{"pos":[615620,615624],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[615682,615683],"content":"<","needQuote":true,"nodes":[]},{"pos":[615710,615716],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[615749,615750]},{"pos":[615782,615786],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[615849,615850]},{"pos":[615905,615909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[615967,615968],"content":"<","needQuote":true,"nodes":[]},{"pos":[615995,616001],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[616034,616035]},{"pos":[616117,616128],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[616213,616214],"content":"<","needQuote":true,"nodes":[]},{"pos":[616241,616247],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[616312,616313]},{"pos":[616345,616352],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[616417,616418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616697,616740],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[616832,616833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616910,616921],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[617007,617010]},{"pos":[617044,617050],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[617082,617083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617111,617112]},{"pos":[617194,617205],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[617291,617294]},{"pos":[617328,617334],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[617366,617367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617395,617396]},{"pos":[617451,617455],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617514,617517]},{"pos":[617551,617557],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[617590,617591]},{"pos":[617623,617627],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[617657,617658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617686,617687]},{"pos":[617742,617746],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617805,617808]},{"pos":[617842,617848],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[617881,617882]},{"pos":[617914,617918],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[617948,617949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617977,617978]},{"pos":[618033,618037],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[618096,618099]},{"pos":[618133,618139],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[618172,618173]},{"pos":[618255,618266],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[618352,618355]},{"pos":[618389,618395],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[618427,618428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[618456,618457]},{"pos":[618489,618496],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[618529,618530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618557,618558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619550,619741],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,191],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[621024,621064],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[621153,621154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621231,621242],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[621327,621328],"content":"<","needQuote":true,"nodes":[]},{"pos":[621355,621361],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[621426,621427]},{"pos":[621509,621520],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[621605,621606],"content":"<","needQuote":true,"nodes":[]},{"pos":[621633,621639],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[621704,621705]},{"pos":[621760,621764],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[621822,621823],"content":"<","needQuote":true,"nodes":[]},{"pos":[621850,621856],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[621889,621890]},{"pos":[621922,621926],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[621989,621990]},{"pos":[622045,622049],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[622107,622108],"content":"<","needQuote":true,"nodes":[]},{"pos":[622135,622141],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[622174,622175]},{"pos":[622207,622211],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[622274,622275]},{"pos":[622330,622334],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[622392,622393],"content":"<","needQuote":true,"nodes":[]},{"pos":[622420,622426],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[622459,622460]},{"pos":[622542,622553],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[622638,622639],"content":"<","needQuote":true,"nodes":[]},{"pos":[622666,622672],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[622737,622738]},{"pos":[622770,622777],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[622843,622844]},{"pos":[622932,622949],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[623040,623041],"content":"<","needQuote":true,"nodes":[]},{"pos":[623068,623072],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[623134,623135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623464,623507],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[623599,623600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623677,623688],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[623774,623777]},{"pos":[623811,623817],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[623849,623850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[623878,623879]},{"pos":[623961,623972],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624058,624061]},{"pos":[624095,624101],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[624133,624134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624162,624163]},{"pos":[624218,624222],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[624281,624284]},{"pos":[624318,624324],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[624357,624358]},{"pos":[624390,624394],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[624424,624425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624453,624454]},{"pos":[624509,624513],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[624572,624575]},{"pos":[624609,624615],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[624648,624649]},{"pos":[624681,624685],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[624715,624716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624744,624745]},{"pos":[624800,624804],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[624863,624866]},{"pos":[624900,624906],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[624939,624940]},{"pos":[625022,625033],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[625119,625122]},{"pos":[625156,625162],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[625194,625195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[625223,625224]},{"pos":[625256,625263],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[625296,625297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[625325,625326]},{"pos":[625414,625431],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[625523,625526]},{"pos":[625560,625564],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[625594,625595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625622,625623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626561,626623],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,62],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[627182,627200],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[627267,627268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[627345,627356],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[627441,627442],"content":"<","needQuote":true,"nodes":[]},{"pos":[627469,627476],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[627542,627543]},{"pos":[627625,627636],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[627721,627722],"content":"<","needQuote":true,"nodes":[]},{"pos":[627749,627756],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[627821,627822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627994,628015],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[628085,628086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628163,628174],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[628260,628263]},{"pos":[628297,628304],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[628337,628338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[628366,628367]},{"pos":[628449,628460],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[628546,628549]},{"pos":[628583,628590],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[628623,628624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628651,628652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629210,629300],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,90],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[630053,630071],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[630138,630139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[630216,630227],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[630312,630313],"content":"<","needQuote":true,"nodes":[]},{"pos":[630340,630347],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[630413,630414]},{"pos":[630496,630507],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[630592,630593],"content":"<","needQuote":true,"nodes":[]},{"pos":[630620,630627],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[630693,630694]},{"pos":[630782,630799],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[630890,630891],"content":"<","needQuote":true,"nodes":[]},{"pos":[630918,630925],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[630990,630991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631213,631234],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[631304,631305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631382,631393],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[631479,631482]},{"pos":[631516,631523],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[631556,631557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[631585,631586]},{"pos":[631668,631679],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[631765,631768]},{"pos":[631802,631809],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[631842,631843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[631871,631872]},{"pos":[631960,631977],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[632069,632072]},{"pos":[632106,632113],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[632146,632147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632174,632175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632854,633002],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;)","pos":[0,148],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)"}]},{"pos":[633941,633976],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[634060,634061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634138,634149],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[634234,634235],"content":"<","needQuote":true,"nodes":[]},{"pos":[634262,634268],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[634333,634334]},{"pos":[634416,634427],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[634512,634513],"content":"<","needQuote":true,"nodes":[]},{"pos":[634540,634546],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[634611,634612]},{"pos":[634667,634671],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[634729,634730],"content":"<","needQuote":true,"nodes":[]},{"pos":[634757,634763],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[634796,634797]},{"pos":[634829,634833],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[634896,634897]},{"pos":[634952,634956],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[635014,635015],"content":"<","needQuote":true,"nodes":[]},{"pos":[635042,635048],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[635081,635082]},{"pos":[635114,635118],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[635181,635182]},{"pos":[635237,635241],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[635299,635300],"content":"<","needQuote":true,"nodes":[]},{"pos":[635327,635333],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[635366,635367]},{"pos":[635399,635405],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[635438,635439]},{"pos":[635471,635478],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[635543,635544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635778,635816],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[635903,635904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635981,635992],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[636078,636081]},{"pos":[636115,636121],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[636153,636154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[636182,636183]},{"pos":[636265,636276],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[636362,636365]},{"pos":[636399,636405],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[636437,636438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[636466,636467]},{"pos":[636522,636526],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[636585,636588]},{"pos":[636622,636628],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[636661,636662]},{"pos":[636694,636698],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[636728,636729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[636757,636758]},{"pos":[636813,636817],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[636876,636879]},{"pos":[636913,636919],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[636952,636953]},{"pos":[636985,636989],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[637019,637020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[637048,637049]},{"pos":[637104,637108],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[637167,637170]},{"pos":[637204,637210],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[637243,637244]},{"pos":[637276,637282],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[637315,637316]},{"pos":[637348,637355],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[637388,637389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637416,637417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638280,638453],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,173],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[639577,639612],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[639696,639697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639774,639785],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[639870,639871],"content":"<","needQuote":true,"nodes":[]},{"pos":[639898,639904],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[639969,639970]},{"pos":[640052,640063],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[640148,640149],"content":"<","needQuote":true,"nodes":[]},{"pos":[640176,640182],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[640247,640248]},{"pos":[640303,640307],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[640365,640366],"content":"<","needQuote":true,"nodes":[]},{"pos":[640393,640399],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[640432,640433]},{"pos":[640465,640469],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[640532,640533]},{"pos":[640588,640592],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[640650,640651],"content":"<","needQuote":true,"nodes":[]},{"pos":[640678,640684],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[640717,640718]},{"pos":[640750,640754],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[640817,640818]},{"pos":[640873,640877],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[640935,640936],"content":"<","needQuote":true,"nodes":[]},{"pos":[640963,640969],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[641002,641003]},{"pos":[641035,641041],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[641074,641075]},{"pos":[641107,641114],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[641180,641181]},{"pos":[641269,641286],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[641377,641378],"content":"<","needQuote":true,"nodes":[]},{"pos":[641405,641409],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[641471,641472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641756,641794],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[641881,641882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641959,641970],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[642056,642059]},{"pos":[642093,642099],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[642131,642132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[642160,642161]},{"pos":[642243,642254],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[642340,642343]},{"pos":[642377,642383],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[642415,642416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[642444,642445]},{"pos":[642500,642504],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[642563,642566]},{"pos":[642600,642606],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[642639,642640]},{"pos":[642672,642676],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[642706,642707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[642735,642736]},{"pos":[642791,642795],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[642854,642857]},{"pos":[642891,642897],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[642930,642931]},{"pos":[642963,642967],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[642997,642998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[643026,643027]},{"pos":[643082,643086],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[643145,643148]},{"pos":[643182,643188],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[643221,643222]},{"pos":[643254,643260],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[643293,643294]},{"pos":[643326,643333],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[643366,643367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[643395,643396]},{"pos":[643484,643501],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[643593,643596]},{"pos":[643630,643634],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[643664,643665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643692,643693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644498,644533],"content":"Last<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,35],"source":"Last<TSource>(IEnumerable<TSource>)"}]},{"pos":[644902,644915],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[644977,644978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645055,645066],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[645151,645152],"content":"<","needQuote":true,"nodes":[]},{"pos":[645179,645186],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[645251,645252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645375,645391],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[645456,645457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645534,645545],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[645631,645634]},{"pos":[645668,645675],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[645708,645709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645736,645737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646122,646181],"content":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,59],"source":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[646688,646701],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[646763,646764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646841,646852],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[646937,646938],"content":"<","needQuote":true,"nodes":[]},{"pos":[646965,646972],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[647038,647039]},{"pos":[647094,647098],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[647156,647157],"content":"<","needQuote":true,"nodes":[]},{"pos":[647184,647191],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[647225,647226]},{"pos":[647282,647289],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[647382,647383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647538,647554],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[647619,647620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647697,647708],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[647794,647797]},{"pos":[647831,647838],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[647871,647872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[647900,647901]},{"pos":[647956,647960],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[648019,648022]},{"pos":[648056,648063],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648097,648098]},{"pos":[648154,648161],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[648222,648223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648250,648251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648696,648740],"content":"LastOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,44],"source":"LastOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[649145,649167],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[649238,649239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649316,649327],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[649412,649413],"content":"<","needQuote":true,"nodes":[]},{"pos":[649440,649447],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649512,649513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649645,649670],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[649744,649745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649822,649833],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[649919,649922]},{"pos":[649956,649963],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649996,649997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650024,650025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650446,650514],"content":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,68],"source":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[651057,651079],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[651150,651151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651228,651239],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[651324,651325],"content":"<","needQuote":true,"nodes":[]},{"pos":[651352,651359],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651425,651426]},{"pos":[651481,651485],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[651543,651544],"content":"<","needQuote":true,"nodes":[]},{"pos":[651571,651578],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651612,651613]},{"pos":[651669,651676],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[651769,651770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651934,651959],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[652033,652034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652111,652122],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[652208,652211]},{"pos":[652245,652252],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[652285,652286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[652314,652315]},{"pos":[652370,652374],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[652433,652436]},{"pos":[652470,652477],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[652511,652512]},{"pos":[652568,652575],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[652636,652637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652664,652665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653133,653173],"content":"LongCount<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,40],"source":"LongCount<TSource>(IEnumerable<TSource>)"}]},{"pos":[653562,653580],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[653647,653648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653725,653736],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[653821,653822],"content":"<","needQuote":true,"nodes":[]},{"pos":[653849,653856],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[653921,653922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654050,654071],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[654141,654142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654219,654230],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[654316,654319]},{"pos":[654353,654360],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[654393,654394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654421,654422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654827,654891],"content":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[655418,655436],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[655503,655504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655581,655592],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[655677,655678],"content":"<","needQuote":true,"nodes":[]},{"pos":[655705,655712],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655778,655779]},{"pos":[655834,655838],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[655896,655897],"content":"<","needQuote":true,"nodes":[]},{"pos":[655924,655931],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655965,655966]},{"pos":[656022,656029],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[656122,656123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656283,656304],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[656374,656375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656452,656463],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[656549,656552]},{"pos":[656586,656593],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[656626,656627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[656655,656656]},{"pos":[656711,656715],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[656774,656777]},{"pos":[656811,656818],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[656852,656853]},{"pos":[656909,656916],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[656977,656978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657005,657006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657456,657490],"content":"Max<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Max<TSource>(IEnumerable<TSource>)"}]},{"pos":[657855,657867],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[657928,657929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658006,658017],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[658102,658103],"content":"<","needQuote":true,"nodes":[]},{"pos":[658130,658137],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[658202,658203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658325,658340],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[658404,658405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658482,658493],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[658579,658582]},{"pos":[658616,658623],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[658656,658657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658684,658685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659066,659124],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[659627,659639],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[659700,659701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659778,659789],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[659874,659875],"content":"<","needQuote":true,"nodes":[]},{"pos":[659902,659909],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[659975,659976]},{"pos":[660031,660035],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[660093,660094],"content":"<","needQuote":true,"nodes":[]},{"pos":[660121,660128],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[660162,660163]},{"pos":[660219,660226],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[660319,660320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660474,660489],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[660553,660554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660631,660642],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[660728,660731]},{"pos":[660765,660772],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[660805,660806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[660834,660835]},{"pos":[660890,660894],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[660953,660956]},{"pos":[660990,660997],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[661031,661032]},{"pos":[661088,661095],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[661156,661157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661184,661185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661648,661705],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[662204,662216],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[662277,662278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[662355,662366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[662451,662452],"content":"<","needQuote":true,"nodes":[]},{"pos":[662479,662486],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[662552,662553]},{"pos":[662608,662612],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[662670,662671],"content":"<","needQuote":true,"nodes":[]},{"pos":[662698,662705],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[662739,662740]},{"pos":[662795,662801],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[662893,662894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663047,663062],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[663126,663127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[663204,663215],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[663301,663304]},{"pos":[663338,663345],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[663378,663379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[663407,663408]},{"pos":[663463,663467],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[663526,663529]},{"pos":[663563,663570],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[663604,663605]},{"pos":[663660,663666],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[663726,663727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663754,663755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664214,664270],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[664765,664777],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[664838,664839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[664916,664927],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[665012,665013],"content":"<","needQuote":true,"nodes":[]},{"pos":[665040,665047],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[665113,665114]},{"pos":[665169,665173],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[665231,665232],"content":"<","needQuote":true,"nodes":[]},{"pos":[665259,665266],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[665300,665301]},{"pos":[665355,665360],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[665451,665452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665604,665619],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[665683,665684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665761,665772],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[665858,665861]},{"pos":[665895,665902],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[665935,665936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[665964,665965]},{"pos":[666020,666024],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[666083,666086]},{"pos":[666120,666127],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[666161,666162]},{"pos":[666216,666221],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[666280,666281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666308,666309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666765,666821],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[667316,667328],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[667389,667390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[667467,667478],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[667563,667564],"content":"<","needQuote":true,"nodes":[]},{"pos":[667591,667598],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[667664,667665]},{"pos":[667720,667724],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[667782,667783],"content":"<","needQuote":true,"nodes":[]},{"pos":[667810,667817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[667851,667852]},{"pos":[667906,667911],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[668002,668003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668155,668170],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[668234,668235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[668312,668323],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[668409,668412]},{"pos":[668446,668453],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[668486,668487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[668515,668516]},{"pos":[668571,668575],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[668634,668637]},{"pos":[668671,668678],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[668712,668713]},{"pos":[668767,668772],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[668831,668832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668859,668860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669335,669403],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[669973,669985],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[670046,670047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[670124,670135],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[670220,670221],"content":"<","needQuote":true,"nodes":[]},{"pos":[670248,670255],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670321,670322]},{"pos":[670377,670381],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[670439,670440],"content":"<","needQuote":true,"nodes":[]},{"pos":[670467,670474],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670508,670509]},{"pos":[670568,670576],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[670638,670639],"content":"<","needQuote":true,"nodes":[]},{"pos":[670690,670697],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[670822,670823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670994,671009],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[671073,671074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[671151,671162],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[671248,671251]},{"pos":[671285,671292],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[671325,671326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[671354,671355]},{"pos":[671410,671414],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[671473,671476]},{"pos":[671510,671517],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[671551,671552]},{"pos":[671611,671619],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[671682,671685]},{"pos":[671743,671750],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[671811,671812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671839,671840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671867,671868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672388,672455],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[673021,673033],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[673094,673095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[673172,673183],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[673268,673269],"content":"<","needQuote":true,"nodes":[]},{"pos":[673296,673303],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[673369,673370]},{"pos":[673425,673429],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[673487,673488],"content":"<","needQuote":true,"nodes":[]},{"pos":[673515,673522],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[673556,673557]},{"pos":[673616,673624],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[673686,673687],"content":"<","needQuote":true,"nodes":[]},{"pos":[673737,673743],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[673867,673868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[674038,674053],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[674117,674118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[674195,674206],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[674292,674295]},{"pos":[674329,674336],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[674369,674370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[674398,674399]},{"pos":[674454,674458],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[674517,674520]},{"pos":[674554,674561],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[674595,674596]},{"pos":[674655,674663],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[674726,674729]},{"pos":[674786,674792],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[674852,674853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[674880,674881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[674908,674909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675425,675491],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[676053,676065],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[676126,676127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[676204,676215],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[676300,676301],"content":"<","needQuote":true,"nodes":[]},{"pos":[676328,676335],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[676401,676402]},{"pos":[676457,676461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[676519,676520],"content":"<","needQuote":true,"nodes":[]},{"pos":[676547,676554],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[676588,676589]},{"pos":[676648,676656],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[676718,676719],"content":"<","needQuote":true,"nodes":[]},{"pos":[676768,676773],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[676896,676897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677066,677081],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[677145,677146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[677223,677234],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[677320,677323]},{"pos":[677357,677364],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[677397,677398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[677426,677427]},{"pos":[677482,677486],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[677545,677548]},{"pos":[677582,677589],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[677623,677624]},{"pos":[677683,677691],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[677754,677757]},{"pos":[677813,677818],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[677877,677878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677905,677906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677933,677934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678447,678513],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[679075,679087],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[679148,679149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[679226,679237],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[679322,679323],"content":"<","needQuote":true,"nodes":[]},{"pos":[679350,679357],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[679423,679424]},{"pos":[679479,679483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[679541,679542],"content":"<","needQuote":true,"nodes":[]},{"pos":[679569,679576],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[679610,679611]},{"pos":[679670,679678],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[679740,679741],"content":"<","needQuote":true,"nodes":[]},{"pos":[679790,679795],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[679918,679919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[680088,680103],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[680167,680168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[680245,680256],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[680342,680345]},{"pos":[680379,680386],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[680419,680420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[680448,680449]},{"pos":[680504,680508],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[680567,680570]},{"pos":[680604,680611],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680645,680646]},{"pos":[680705,680713],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[680776,680779]},{"pos":[680835,680840],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[680899,680900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[680927,680928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[680955,680956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681470,681537],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[682103,682115],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[682176,682177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682254,682265],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[682350,682351],"content":"<","needQuote":true,"nodes":[]},{"pos":[682378,682385],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[682451,682452]},{"pos":[682507,682511],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[682569,682570],"content":"<","needQuote":true,"nodes":[]},{"pos":[682597,682604],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[682638,682639]},{"pos":[682698,682706],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[682768,682769],"content":"<","needQuote":true,"nodes":[]},{"pos":[682819,682825],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[682949,682950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683120,683135],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[683199,683200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[683277,683288],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[683374,683377]},{"pos":[683411,683418],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[683451,683452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[683480,683481]},{"pos":[683536,683540],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[683599,683602]},{"pos":[683636,683643],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[683677,683678]},{"pos":[683737,683745],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[683808,683811]},{"pos":[683868,683874],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[683934,683935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683962,683963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683990,683991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[684491,684548],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[685047,685059],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[685120,685121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[685198,685209],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[685294,685295],"content":"<","needQuote":true,"nodes":[]},{"pos":[685322,685329],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[685395,685396]},{"pos":[685451,685455],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[685513,685514],"content":"<","needQuote":true,"nodes":[]},{"pos":[685541,685548],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[685582,685583]},{"pos":[685638,685644],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[685736,685737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685890,685905],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[685969,685970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[686047,686058],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[686144,686147]},{"pos":[686181,686188],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[686221,686222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[686250,686251]},{"pos":[686306,686310],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[686369,686372]},{"pos":[686406,686413],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[686447,686448]},{"pos":[686503,686509],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[686569,686570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[686597,686598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[687048,687115],"content":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[687620,687641],"content":"Max<TSource, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;","pos":[0,21],"source":"Max<TSource, TResult>"}]},{"pos":[687711,687712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[687789,687800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[687885,687886],"content":"<","needQuote":true,"nodes":[]},{"pos":[687913,687920],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687986,687987]},{"pos":[688042,688046],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[688104,688105],"content":"<","needQuote":true,"nodes":[]},{"pos":[688132,688139],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[688173,688174]},{"pos":[688206,688213],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[688278,688279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688422,688446],"content":"Max(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Max(Of TSource, TResult)","pos":[0,24]}]},{"pos":[688519,688520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[688597,688608],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[688694,688697]},{"pos":[688731,688738],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[688771,688772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[688800,688801]},{"pos":[688856,688860],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[688919,688922]},{"pos":[688956,688963],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[688997,688998]},{"pos":[689030,689037],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[689070,689071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[689098,689099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[689538,689572],"content":"Min<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Min<TSource>(IEnumerable<TSource>)"}]},{"pos":[689937,689949],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[690010,690011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[690088,690099],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[690184,690185],"content":"<","needQuote":true,"nodes":[]},{"pos":[690212,690219],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[690284,690285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690407,690422],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[690486,690487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[690564,690575],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[690661,690664]},{"pos":[690698,690705],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[690738,690739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690766,690767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691148,691206],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[691709,691721],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[691782,691783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[691860,691871],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[691956,691957],"content":"<","needQuote":true,"nodes":[]},{"pos":[691984,691991],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692057,692058]},{"pos":[692113,692117],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[692175,692176],"content":"<","needQuote":true,"nodes":[]},{"pos":[692203,692210],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692244,692245]},{"pos":[692301,692308],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[692401,692402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[692556,692571],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[692635,692636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[692713,692724],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[692810,692813]},{"pos":[692847,692854],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[692887,692888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[692916,692917]},{"pos":[692972,692976],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[693035,693038]},{"pos":[693072,693079],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[693113,693114]},{"pos":[693170,693177],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[693238,693239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693266,693267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693730,693787],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[694286,694298],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[694359,694360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[694437,694448],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[694533,694534],"content":"<","needQuote":true,"nodes":[]},{"pos":[694561,694568],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[694634,694635]},{"pos":[694690,694694],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[694752,694753],"content":"<","needQuote":true,"nodes":[]},{"pos":[694780,694787],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[694821,694822]},{"pos":[694877,694883],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[694975,694976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695129,695144],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[695208,695209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[695286,695297],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[695383,695386]},{"pos":[695420,695427],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[695460,695461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[695489,695490]},{"pos":[695545,695549],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[695608,695611]},{"pos":[695645,695652],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[695686,695687]},{"pos":[695742,695748],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[695808,695809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695836,695837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696296,696352],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[696847,696859],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[696920,696921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[696998,697009],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[697094,697095],"content":"<","needQuote":true,"nodes":[]},{"pos":[697122,697129],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[697195,697196]},{"pos":[697251,697255],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[697313,697314],"content":"<","needQuote":true,"nodes":[]},{"pos":[697341,697348],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[697382,697383]},{"pos":[697437,697442],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[697533,697534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[697686,697701],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[697765,697766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[697843,697854],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[697940,697943]},{"pos":[697977,697984],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[698017,698018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[698046,698047]},{"pos":[698102,698106],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[698165,698168]},{"pos":[698202,698209],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698243,698244]},{"pos":[698298,698303],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[698362,698363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[698390,698391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[698847,698903],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[699398,699410],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[699471,699472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[699549,699560],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[699645,699646],"content":"<","needQuote":true,"nodes":[]},{"pos":[699673,699680],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[699746,699747]},{"pos":[699802,699806],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[699864,699865],"content":"<","needQuote":true,"nodes":[]},{"pos":[699892,699899],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[699933,699934]},{"pos":[699988,699993],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[700084,700085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[700237,700252],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[700316,700317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[700394,700405],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[700491,700494]},{"pos":[700528,700535],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[700568,700569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[700597,700598]},{"pos":[700653,700657],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[700716,700719]},{"pos":[700753,700760],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[700794,700795]},{"pos":[700849,700854],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[700913,700914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[700941,700942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[701417,701485],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[702055,702067],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[702128,702129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[702206,702217],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[702302,702303],"content":"<","needQuote":true,"nodes":[]},{"pos":[702330,702337],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[702403,702404]},{"pos":[702459,702463],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[702521,702522],"content":"<","needQuote":true,"nodes":[]},{"pos":[702549,702556],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[702590,702591]},{"pos":[702650,702658],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[702720,702721],"content":"<","needQuote":true,"nodes":[]},{"pos":[702772,702779],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[702904,702905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[703076,703091],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[703155,703156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[703233,703244],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[703330,703333]},{"pos":[703367,703374],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[703407,703408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[703436,703437]},{"pos":[703492,703496],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[703555,703558]},{"pos":[703592,703599],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[703633,703634]},{"pos":[703693,703701],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[703764,703767]},{"pos":[703825,703832],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[703893,703894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[703921,703922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[703949,703950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[704470,704537],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[705103,705115],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[705176,705177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[705254,705265],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[705350,705351],"content":"<","needQuote":true,"nodes":[]},{"pos":[705378,705385],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[705451,705452]},{"pos":[705507,705511],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[705569,705570],"content":"<","needQuote":true,"nodes":[]},{"pos":[705597,705604],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[705638,705639]},{"pos":[705698,705706],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[705768,705769],"content":"<","needQuote":true,"nodes":[]},{"pos":[705819,705825],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[705949,705950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[706120,706135],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[706199,706200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[706277,706288],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[706374,706377]},{"pos":[706411,706418],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[706451,706452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[706480,706481]},{"pos":[706536,706540],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[706599,706602]},{"pos":[706636,706643],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[706677,706678]},{"pos":[706737,706745],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[706808,706811]},{"pos":[706868,706874],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[706934,706935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[706962,706963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[706990,706991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[707507,707573],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[708135,708147],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[708208,708209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[708286,708297],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[708382,708383],"content":"<","needQuote":true,"nodes":[]},{"pos":[708410,708417],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[708483,708484]},{"pos":[708539,708543],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[708601,708602],"content":"<","needQuote":true,"nodes":[]},{"pos":[708629,708636],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[708670,708671]},{"pos":[708730,708738],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[708800,708801],"content":"<","needQuote":true,"nodes":[]},{"pos":[708850,708855],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[708978,708979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[709148,709163],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[709227,709228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[709305,709316],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[709402,709405]},{"pos":[709439,709446],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[709479,709480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[709508,709509]},{"pos":[709564,709568],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[709627,709630]},{"pos":[709664,709671],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[709705,709706]},{"pos":[709765,709773],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[709836,709839]},{"pos":[709895,709900],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[709959,709960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[709987,709988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[710015,710016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[710529,710595],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[711157,711169],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[711230,711231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[711308,711319],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[711404,711405],"content":"<","needQuote":true,"nodes":[]},{"pos":[711432,711439],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711505,711506]},{"pos":[711561,711565],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[711623,711624],"content":"<","needQuote":true,"nodes":[]},{"pos":[711651,711658],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711692,711693]},{"pos":[711752,711760],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[711822,711823],"content":"<","needQuote":true,"nodes":[]},{"pos":[711872,711877],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[712000,712001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[712170,712185],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[712249,712250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[712327,712338],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[712424,712427]},{"pos":[712461,712468],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[712501,712502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[712530,712531]},{"pos":[712586,712590],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[712649,712652]},{"pos":[712686,712693],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[712727,712728]},{"pos":[712787,712795],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[712858,712861]},{"pos":[712917,712922],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[712981,712982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[713009,713010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[713037,713038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[713552,713619],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[714185,714197],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[714258,714259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[714336,714347],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[714432,714433],"content":"<","needQuote":true,"nodes":[]},{"pos":[714460,714467],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[714533,714534]},{"pos":[714589,714593],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[714651,714652],"content":"<","needQuote":true,"nodes":[]},{"pos":[714679,714686],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[714720,714721]},{"pos":[714780,714788],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[714850,714851],"content":"<","needQuote":true,"nodes":[]},{"pos":[714901,714907],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[715031,715032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715202,715217],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[715281,715282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[715359,715370],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[715456,715459]},{"pos":[715493,715500],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[715533,715534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[715562,715563]},{"pos":[715618,715622],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[715681,715684]},{"pos":[715718,715725],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[715759,715760]},{"pos":[715819,715827],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[715890,715893]},{"pos":[715950,715956],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[716016,716017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[716044,716045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[716072,716073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[716573,716630],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[717129,717141],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[717202,717203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[717280,717291],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[717376,717377],"content":"<","needQuote":true,"nodes":[]},{"pos":[717404,717411],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717477,717478]},{"pos":[717533,717537],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[717595,717596],"content":"<","needQuote":true,"nodes":[]},{"pos":[717623,717630],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717664,717665]},{"pos":[717720,717726],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[717818,717819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[717972,717987],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[718051,718052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[718129,718140],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[718226,718229]},{"pos":[718263,718270],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[718303,718304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[718332,718333]},{"pos":[718388,718392],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[718451,718454]},{"pos":[718488,718495],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[718529,718530]},{"pos":[718585,718591],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[718651,718652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[718679,718680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[719130,719197],"content":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[719702,719723],"content":"Min<TSource, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;","pos":[0,21],"source":"Min<TSource, TResult>"}]},{"pos":[719793,719794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[719871,719882],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[719967,719968],"content":"<","needQuote":true,"nodes":[]},{"pos":[719995,720002],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[720068,720069]},{"pos":[720124,720128],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[720186,720187],"content":"<","needQuote":true,"nodes":[]},{"pos":[720214,720221],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[720255,720256]},{"pos":[720288,720295],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[720360,720361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720504,720528],"content":"Min(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Min(Of TSource, TResult)","pos":[0,24]}]},{"pos":[720601,720602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[720679,720690],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[720776,720779]},{"pos":[720813,720820],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[720853,720854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[720882,720883]},{"pos":[720938,720942],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[721001,721004]},{"pos":[721038,721045],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[721079,721080]},{"pos":[721112,721119],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[721152,721153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721180,721181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721610,721638],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[721953,721968],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[722032,722033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[722100,722111],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[722188,722189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[722301,722319],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[722386,722387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[722454,722465],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[722542,722543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[722892,722957],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[723460,723482],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[723553,723554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[723631,723642],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[723727,723728],"content":"<","needQuote":true,"nodes":[]},{"pos":[723755,723762],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[723828,723829]},{"pos":[723884,723888],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[723946,723947],"content":"<","needQuote":true,"nodes":[]},{"pos":[723974,723981],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[724015,724016]},{"pos":[724048,724052],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[724114,724115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[724262,724287],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[724361,724362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[724439,724450],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[724536,724539]},{"pos":[724573,724580],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[724613,724614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[724642,724643]},{"pos":[724698,724702],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[724761,724764]},{"pos":[724798,724805],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[724839,724840]},{"pos":[724872,724876],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[724906,724907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[724934,724935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[725441,725523],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,82],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[726179,726201],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[726272,726273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[726350,726361],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[726446,726447],"content":"<","needQuote":true,"nodes":[]},{"pos":[726474,726481],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[726547,726548]},{"pos":[726603,726607],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[726665,726666],"content":"<","needQuote":true,"nodes":[]},{"pos":[726693,726700],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[726734,726735]},{"pos":[726767,726771],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[726834,726835]},{"pos":[726915,726924],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[727007,727008],"content":"<","needQuote":true,"nodes":[]},{"pos":[727035,727039],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[727101,727102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727291,727316],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[727390,727391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[727468,727479],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[727565,727568]},{"pos":[727602,727609],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[727642,727643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[727671,727672]},{"pos":[727727,727731],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[727790,727793]},{"pos":[727827,727834],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[727868,727869]},{"pos":[727901,727905],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[727935,727936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[727964,727965]},{"pos":[728045,728054],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[728138,728141]},{"pos":[728175,728179],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[728209,728210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[728237,728238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[728791,728866],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,75],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[729409,729441],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[729522,729523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[729600,729611],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[729696,729697],"content":"<","needQuote":true,"nodes":[]},{"pos":[729724,729731],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[729797,729798]},{"pos":[729853,729857],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[729915,729916],"content":"<","needQuote":true,"nodes":[]},{"pos":[729943,729950],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[729984,729985]},{"pos":[730017,730021],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[730083,730084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[730241,730276],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[730360,730361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[730438,730449],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[730535,730538]},{"pos":[730572,730579],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[730612,730613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[730641,730642]},{"pos":[730697,730701],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[730760,730763]},{"pos":[730797,730804],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730838,730839]},{"pos":[730871,730875],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[730905,730906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[730933,730934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731480,731572],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,92],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[732268,732300],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[732381,732382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[732459,732470],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[732555,732556],"content":"<","needQuote":true,"nodes":[]},{"pos":[732583,732590],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[732656,732657]},{"pos":[732712,732716],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[732774,732775],"content":"<","needQuote":true,"nodes":[]},{"pos":[732802,732809],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[732843,732844]},{"pos":[732876,732880],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[732943,732944]},{"pos":[733024,733033],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[733116,733117],"content":"<","needQuote":true,"nodes":[]},{"pos":[733144,733148],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[733210,733211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[733410,733445],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[733529,733530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[733607,733618],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[733704,733707]},{"pos":[733741,733748],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[733781,733782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[733810,733811]},{"pos":[733866,733870],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[733929,733932]},{"pos":[733966,733973],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[734007,734008]},{"pos":[734040,734044],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[734074,734075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[734103,734104]},{"pos":[734184,734193],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[734277,734280]},{"pos":[734314,734318],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[734348,734349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734376,734377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734929,734967],"content":"Reverse<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"Reverse<TSource>(IEnumerable<TSource>)"}]},{"pos":[735348,735364],"content":"Reverse<TSource>","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;","pos":[0,16],"source":"Reverse<TSource>"}]},{"pos":[735429,735430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[735507,735518],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[735603,735604],"content":"<","needQuote":true,"nodes":[]},{"pos":[735631,735638],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[735703,735704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[735830,735849],"content":"Reverse(Of TSource)","needQuote":true,"nodes":[{"content":"Reverse(Of TSource)","pos":[0,19]}]},{"pos":[735917,735918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[735995,736006],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[736092,736095]},{"pos":[736129,736136],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[736169,736170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736197,736198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736583,736653],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,70],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[737170,737194],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[737267,737268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[737345,737356],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[737441,737442],"content":"<","needQuote":true,"nodes":[]},{"pos":[737469,737476],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[737542,737543]},{"pos":[737598,737602],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[737660,737661],"content":"<","needQuote":true,"nodes":[]},{"pos":[737688,737695],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[737729,737730]},{"pos":[737762,737769],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[737834,737835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737981,738008],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[738084,738085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[738162,738173],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[738259,738262]},{"pos":[738296,738303],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[738336,738337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[738365,738366]},{"pos":[738421,738425],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[738484,738487]},{"pos":[738521,738528],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[738562,738563]},{"pos":[738595,738602],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[738635,738636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[738663,738664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[739149,739226],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, TResult&gt;)","pos":[0,77],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)"}]},{"pos":[739791,739815],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[739888,739889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[739966,739977],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[740062,740063],"content":"<","needQuote":true,"nodes":[]},{"pos":[740090,740097],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[740163,740164]},{"pos":[740219,740223],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[740281,740282],"content":"<","needQuote":true,"nodes":[]},{"pos":[740309,740316],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[740350,740351]},{"pos":[740405,740410],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[740470,740471]},{"pos":[740503,740510],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[740575,740576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[740735,740762],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[740838,740839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[740916,740927],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[741013,741016]},{"pos":[741050,741057],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[741090,741091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[741119,741120]},{"pos":[741175,741179],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[741238,741241]},{"pos":[741275,741282],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[741316,741317]},{"pos":[741371,741376],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[741436,741437]},{"pos":[741469,741476],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[741509,741510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741537,741538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[742081,742168],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,87],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)"}]},{"pos":[742840,742868],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[742945,742946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[743023,743034],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[743119,743120],"content":"<","needQuote":true,"nodes":[]},{"pos":[743147,743154],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[743220,743221]},{"pos":[743276,743280],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[743338,743339],"content":"<","needQuote":true,"nodes":[]},{"pos":[743366,743373],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[743407,743408]},{"pos":[743490,743501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[743586,743587],"content":"<","needQuote":true,"nodes":[]},{"pos":[743614,743621],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[743718,743719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[743909,743940],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[744020,744021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[744098,744109],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[744195,744198]},{"pos":[744232,744239],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[744272,744273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[744301,744302]},{"pos":[744357,744361],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[744420,744423]},{"pos":[744457,744464],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[744498,744499]},{"pos":[744581,744592],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[744678,744681]},{"pos":[744715,744722],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[744755,744756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744783,744784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744811,744812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[745422,745516],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,94],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)"}]},{"pos":[746236,746264],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[746341,746342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[746419,746430],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[746515,746516],"content":"<","needQuote":true,"nodes":[]},{"pos":[746543,746550],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[746616,746617]},{"pos":[746672,746676],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[746734,746735],"content":"<","needQuote":true,"nodes":[]},{"pos":[746762,746769],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[746803,746804]},{"pos":[746858,746863],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[746923,746924]},{"pos":[747006,747017],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[747102,747103],"content":"<","needQuote":true,"nodes":[]},{"pos":[747130,747137],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[747234,747235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[747438,747469],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[747549,747550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[747627,747638],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[747724,747727]},{"pos":[747761,747768],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[747801,747802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[747830,747831]},{"pos":[747886,747890],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[747949,747952]},{"pos":[747986,747993],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[748027,748028]},{"pos":[748082,748087],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[748147,748148]},{"pos":[748230,748241],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[748327,748330]},{"pos":[748364,748371],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[748404,748405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[748432,748433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[748460,748461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[749110,749251],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,141],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[750130,750171],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[750261,750262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[750339,750350],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[750435,750436],"content":"<","needQuote":true,"nodes":[]},{"pos":[750463,750470],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[750536,750537]},{"pos":[750592,750596],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[750654,750655],"content":"<","needQuote":true,"nodes":[]},{"pos":[750682,750689],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[750723,750724]},{"pos":[750806,750817],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[750902,750903],"content":"<","needQuote":true,"nodes":[]},{"pos":[750930,750941],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[751043,751044]},{"pos":[751099,751103],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[751161,751162],"content":"<","needQuote":true,"nodes":[]},{"pos":[751189,751196],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[751230,751231]},{"pos":[751263,751274],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[751312,751313]},{"pos":[751345,751352],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[751417,751418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751633,751677],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[751770,751771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[751848,751859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[751945,751948]},{"pos":[751982,751989],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[752022,752023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[752051,752052]},{"pos":[752107,752111],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[752170,752173]},{"pos":[752207,752214],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[752248,752249]},{"pos":[752331,752342],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[752428,752431]},{"pos":[752465,752476],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[752513,752514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752541,752542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[752570,752571]},{"pos":[752626,752630],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[752689,752692]},{"pos":[752726,752733],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[752767,752768]},{"pos":[752800,752811],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[752849,752850]},{"pos":[752882,752889],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[752922,752923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752950,752951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753722,753870],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,148],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[754797,754838],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[754928,754929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[755006,755017],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[755102,755103],"content":"<","needQuote":true,"nodes":[]},{"pos":[755130,755137],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755203,755204]},{"pos":[755259,755263],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[755321,755322],"content":"<","needQuote":true,"nodes":[]},{"pos":[755349,755356],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755390,755391]},{"pos":[755445,755450],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[755510,755511]},{"pos":[755593,755604],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[755689,755690],"content":"<","needQuote":true,"nodes":[]},{"pos":[755717,755728],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[755830,755831]},{"pos":[755886,755890],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[755948,755949],"content":"<","needQuote":true,"nodes":[]},{"pos":[755976,755983],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[756017,756018]},{"pos":[756050,756061],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[756099,756100]},{"pos":[756132,756139],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[756204,756205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[756433,756477],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[756570,756571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[756648,756659],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[756745,756748]},{"pos":[756782,756789],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[756822,756823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[756851,756852]},{"pos":[756907,756911],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[756970,756973]},{"pos":[757007,757014],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[757048,757049]},{"pos":[757103,757108],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[757168,757169]},{"pos":[757251,757262],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[757348,757351]},{"pos":[757385,757396],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[757433,757434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757461,757462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[757490,757491]},{"pos":[757546,757550],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[757609,757612]},{"pos":[757646,757653],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[757687,757688]},{"pos":[757720,757731],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[757769,757770]},{"pos":[757802,757809],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[757842,757843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757870,757871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758617,758683],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,66],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[759258,759280],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[759351,759352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[759429,759440],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[759525,759526],"content":"<","needQuote":true,"nodes":[]},{"pos":[759553,759560],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[759626,759627]},{"pos":[759709,759720],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[759805,759806],"content":"<","needQuote":true,"nodes":[]},{"pos":[759833,759840],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[759905,759906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760082,760107],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[760181,760182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[760259,760270],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[760356,760359]},{"pos":[760393,760400],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[760433,760434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[760462,760463]},{"pos":[760545,760556],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[760642,760645]},{"pos":[760679,760686],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[760719,760720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760747,760748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761322,761416],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,94],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[762185,762207],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[762278,762279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[762356,762367],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[762452,762453],"content":"<","needQuote":true,"nodes":[]},{"pos":[762480,762487],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[762553,762554]},{"pos":[762636,762647],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[762732,762733],"content":"<","needQuote":true,"nodes":[]},{"pos":[762760,762767],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[762833,762834]},{"pos":[762922,762939],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[763030,763031],"content":"<","needQuote":true,"nodes":[]},{"pos":[763058,763065],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[763130,763131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763357,763382],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[763456,763457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[763534,763545],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[763631,763634]},{"pos":[763668,763675],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[763708,763709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[763737,763738]},{"pos":[763820,763831],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[763917,763920]},{"pos":[763954,763961],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[763994,763995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[764023,764024]},{"pos":[764112,764129],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[764221,764224]},{"pos":[764258,764265],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[764298,764299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[764326,764327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[764909,764946],"content":"Single<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"Single<TSource>(IEnumerable<TSource>)"}]},{"pos":[765323,765338],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[765402,765403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[765480,765491],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[765576,765577],"content":"<","needQuote":true,"nodes":[]},{"pos":[765604,765611],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[765676,765677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[765802,765820],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[765887,765888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[765965,765976],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[766062,766065]},{"pos":[766099,766106],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[766139,766140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766167,766168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766561,766622],"content":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,61],"source":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[767137,767152],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[767216,767217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[767294,767305],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[767390,767391],"content":"<","needQuote":true,"nodes":[]},{"pos":[767418,767425],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[767491,767492]},{"pos":[767547,767551],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[767609,767610],"content":"<","needQuote":true,"nodes":[]},{"pos":[767637,767644],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[767678,767679]},{"pos":[767735,767742],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[767835,767836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767993,768011],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[768078,768079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[768156,768167],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[768253,768256]},{"pos":[768290,768297],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[768330,768331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[768359,768360]},{"pos":[768415,768419],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[768478,768481]},{"pos":[768515,768522],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[768556,768557]},{"pos":[768613,768620],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[768681,768682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[768709,768710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769163,769209],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,46],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[769622,769646],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[769719,769720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[769797,769808],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[769893,769894],"content":"<","needQuote":true,"nodes":[]},{"pos":[769921,769928],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[769993,769994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770128,770155],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[770231,770232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[770309,770320],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[770406,770409]},{"pos":[770443,770450],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[770483,770484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770511,770512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770941,771011],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,70],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[771562,771586],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[771659,771660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[771737,771748],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[771833,771834],"content":"<","needQuote":true,"nodes":[]},{"pos":[771861,771868],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[771934,771935]},{"pos":[771990,771994],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[772052,772053],"content":"<","needQuote":true,"nodes":[]},{"pos":[772080,772087],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[772121,772122]},{"pos":[772178,772185],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[772278,772279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772445,772472],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[772548,772549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[772626,772637],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[772723,772726]},{"pos":[772760,772767],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[772800,772801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[772829,772830]},{"pos":[772885,772889],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[772948,772951]},{"pos":[772985,772992],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[773026,773027]},{"pos":[773083,773090],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[773151,773152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773179,773180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773662,773704],"content":"Skip<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Skip<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[774121,774134],"content":"Skip<TSource>","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;","pos":[0,13],"source":"Skip<TSource>"}]},{"pos":[774196,774197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[774274,774285],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[774370,774371],"content":"<","needQuote":true,"nodes":[]},{"pos":[774398,774405],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[774471,774472]},{"pos":[774526,774531],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[774590,774591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[774727,774743],"content":"Skip(Of TSource)","needQuote":true,"nodes":[{"content":"Skip(Of TSource)","pos":[0,16]}]},{"pos":[774808,774809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[774886,774897],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[774983,774986]},{"pos":[775020,775027],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[775060,775061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[775089,775090]},{"pos":[775144,775149],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[775208,775209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[775626,775690],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[776217,776235],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[776302,776303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[776380,776391],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[776476,776477],"content":"<","needQuote":true,"nodes":[]},{"pos":[776504,776511],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[776577,776578]},{"pos":[776633,776637],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[776695,776696],"content":"<","needQuote":true,"nodes":[]},{"pos":[776723,776730],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[776764,776765]},{"pos":[776821,776828],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[776921,776922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[777082,777103],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[777173,777174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[777251,777262],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[777348,777351]},{"pos":[777385,777392],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[777425,777426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[777454,777455]},{"pos":[777510,777514],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[777573,777576]},{"pos":[777610,777617],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[777651,777652]},{"pos":[777708,777715],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[777776,777777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[777804,777805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[778306,778377],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[778952,778970],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[779037,779038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[779115,779126],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[779211,779212],"content":"<","needQuote":true,"nodes":[]},{"pos":[779239,779246],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[779312,779313]},{"pos":[779368,779372],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[779430,779431],"content":"<","needQuote":true,"nodes":[]},{"pos":[779458,779465],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[779499,779500]},{"pos":[779554,779559],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[779619,779620]},{"pos":[779676,779683],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[779776,779777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779950,779971],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[780041,780042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[780119,780130],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[780216,780219]},{"pos":[780253,780260],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[780293,780294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[780322,780323]},{"pos":[780378,780382],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[780441,780444]},{"pos":[780478,780485],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[780519,780520]},{"pos":[780574,780579],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[780639,780640]},{"pos":[780696,780703],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[780764,780765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[780792,780793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[781302,781360],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[781863,781875],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[781936,781937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[782014,782025],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[782110,782111],"content":"<","needQuote":true,"nodes":[]},{"pos":[782138,782145],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[782211,782212]},{"pos":[782267,782271],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[782329,782330],"content":"<","needQuote":true,"nodes":[]},{"pos":[782357,782364],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[782398,782399]},{"pos":[782455,782462],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[782555,782556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[782710,782725],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[782789,782790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[782867,782878],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[782964,782967]},{"pos":[783001,783008],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[783041,783042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[783070,783071]},{"pos":[783126,783130],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[783189,783192]},{"pos":[783226,783233],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[783267,783268]},{"pos":[783324,783331],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[783392,783393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783420,783421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783884,783941],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[784440,784452],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[784513,784514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[784591,784602],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[784687,784688],"content":"<","needQuote":true,"nodes":[]},{"pos":[784715,784722],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[784788,784789]},{"pos":[784844,784848],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[784906,784907],"content":"<","needQuote":true,"nodes":[]},{"pos":[784934,784941],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[784975,784976]},{"pos":[785031,785037],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[785129,785130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[785283,785298],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[785362,785363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[785440,785451],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[785537,785540]},{"pos":[785574,785581],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[785614,785615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[785643,785644]},{"pos":[785699,785703],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[785762,785765]},{"pos":[785799,785806],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[785840,785841]},{"pos":[785896,785902],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[785962,785963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[785990,785991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786450,786506],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[787001,787013],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[787074,787075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[787152,787163],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[787248,787249],"content":"<","needQuote":true,"nodes":[]},{"pos":[787276,787283],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[787349,787350]},{"pos":[787405,787409],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[787467,787468],"content":"<","needQuote":true,"nodes":[]},{"pos":[787495,787502],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[787536,787537]},{"pos":[787591,787596],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[787687,787688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[787840,787855],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[787919,787920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[787997,788008],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[788094,788097]},{"pos":[788131,788138],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[788171,788172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[788200,788201]},{"pos":[788256,788260],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[788319,788322]},{"pos":[788356,788363],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788397,788398]},{"pos":[788452,788457],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[788516,788517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[788544,788545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789001,789057],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[789552,789564],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[789625,789626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[789703,789714],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[789799,789800],"content":"<","needQuote":true,"nodes":[]},{"pos":[789827,789834],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[789900,789901]},{"pos":[789956,789960],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[790018,790019],"content":"<","needQuote":true,"nodes":[]},{"pos":[790046,790053],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[790087,790088]},{"pos":[790142,790147],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[790238,790239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[790391,790406],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[790470,790471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[790548,790559],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[790645,790648]},{"pos":[790682,790689],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[790722,790723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[790751,790752]},{"pos":[790807,790811],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[790870,790873]},{"pos":[790907,790914],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[790948,790949]},{"pos":[791003,791008],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[791067,791068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[791095,791096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[791571,791639],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[792209,792221],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[792282,792283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[792360,792371],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[792456,792457],"content":"<","needQuote":true,"nodes":[]},{"pos":[792484,792491],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792557,792558]},{"pos":[792613,792617],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[792675,792676],"content":"<","needQuote":true,"nodes":[]},{"pos":[792703,792710],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792744,792745]},{"pos":[792804,792812],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[792874,792875],"content":"<","needQuote":true,"nodes":[]},{"pos":[792926,792933],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[793058,793059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793230,793245],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[793309,793310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[793387,793398],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[793484,793487]},{"pos":[793521,793528],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[793561,793562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[793590,793591]},{"pos":[793646,793650],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[793709,793712]},{"pos":[793746,793753],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[793787,793788]},{"pos":[793847,793855],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[793918,793921]},{"pos":[793979,793986],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[794047,794048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[794075,794076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[794103,794104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[794624,794691],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[795257,795269],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[795330,795331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[795408,795419],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[795504,795505],"content":"<","needQuote":true,"nodes":[]},{"pos":[795532,795539],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[795605,795606]},{"pos":[795661,795665],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[795723,795724],"content":"<","needQuote":true,"nodes":[]},{"pos":[795751,795758],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[795792,795793]},{"pos":[795852,795860],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[795922,795923],"content":"<","needQuote":true,"nodes":[]},{"pos":[795973,795979],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[796103,796104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796274,796289],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[796353,796354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[796431,796442],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[796528,796531]},{"pos":[796565,796572],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[796605,796606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[796634,796635]},{"pos":[796690,796694],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[796753,796756]},{"pos":[796790,796797],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[796831,796832]},{"pos":[796891,796899],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[796962,796965]},{"pos":[797022,797028],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[797088,797089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[797116,797117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[797144,797145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[797661,797727],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[798289,798301],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[798362,798363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[798440,798451],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[798536,798537],"content":"<","needQuote":true,"nodes":[]},{"pos":[798564,798571],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[798637,798638]},{"pos":[798693,798697],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[798755,798756],"content":"<","needQuote":true,"nodes":[]},{"pos":[798783,798790],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[798824,798825]},{"pos":[798884,798892],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[798954,798955],"content":"<","needQuote":true,"nodes":[]},{"pos":[799004,799009],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[799132,799133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799302,799317],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[799381,799382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[799459,799470],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[799556,799559]},{"pos":[799593,799600],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[799633,799634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[799662,799663]},{"pos":[799718,799722],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[799781,799784]},{"pos":[799818,799825],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[799859,799860]},{"pos":[799919,799927],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[799990,799993]},{"pos":[800049,800054],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[800113,800114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[800141,800142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[800169,800170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[800683,800749],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[801311,801323],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[801384,801385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[801462,801473],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[801558,801559],"content":"<","needQuote":true,"nodes":[]},{"pos":[801586,801593],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801659,801660]},{"pos":[801715,801719],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[801777,801778],"content":"<","needQuote":true,"nodes":[]},{"pos":[801805,801812],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801846,801847]},{"pos":[801906,801914],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[801976,801977],"content":"<","needQuote":true,"nodes":[]},{"pos":[802026,802031],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[802154,802155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802324,802339],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[802403,802404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[802481,802492],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[802578,802581]},{"pos":[802615,802622],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[802655,802656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[802684,802685]},{"pos":[802740,802744],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[802803,802806]},{"pos":[802840,802847],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[802881,802882]},{"pos":[802941,802949],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[803012,803015]},{"pos":[803071,803076],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[803135,803136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[803163,803164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[803191,803192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[803706,803773],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[804339,804351],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[804412,804413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[804490,804501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[804586,804587],"content":"<","needQuote":true,"nodes":[]},{"pos":[804614,804621],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[804687,804688]},{"pos":[804743,804747],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[804805,804806],"content":"<","needQuote":true,"nodes":[]},{"pos":[804833,804840],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[804874,804875]},{"pos":[804934,804942],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[805004,805005],"content":"<","needQuote":true,"nodes":[]},{"pos":[805055,805061],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[805185,805186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805356,805371],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[805435,805436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[805513,805524],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[805610,805613]},{"pos":[805647,805654],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[805687,805688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[805716,805717]},{"pos":[805772,805776],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[805835,805838]},{"pos":[805872,805879],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805913,805914]},{"pos":[805973,805981],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[806044,806047]},{"pos":[806104,806110],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[806170,806171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806198,806199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806226,806227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806727,806784],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[807283,807295],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[807356,807357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[807434,807445],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[807530,807531],"content":"<","needQuote":true,"nodes":[]},{"pos":[807558,807565],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807631,807632]},{"pos":[807687,807691],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[807749,807750],"content":"<","needQuote":true,"nodes":[]},{"pos":[807777,807784],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807818,807819]},{"pos":[807874,807880],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[807972,807973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808126,808141],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[808205,808206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[808283,808294],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[808380,808383]},{"pos":[808417,808424],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[808457,808458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[808486,808487]},{"pos":[808542,808546],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[808605,808608]},{"pos":[808642,808649],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[808683,808684]},{"pos":[808739,808745],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[808805,808806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808833,808834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809277,809319],"content":"Take<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Take<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[809736,809749],"content":"Take<TSource>","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;","pos":[0,13],"source":"Take<TSource>"}]},{"pos":[809811,809812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[809889,809900],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[809985,809986],"content":"<","needQuote":true,"nodes":[]},{"pos":[810013,810020],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[810086,810087]},{"pos":[810141,810146],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[810205,810206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[810342,810358],"content":"Take(Of TSource)","needQuote":true,"nodes":[{"content":"Take(Of TSource)","pos":[0,16]}]},{"pos":[810423,810424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[810501,810512],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[810598,810601]},{"pos":[810635,810642],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[810675,810676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[810704,810705]},{"pos":[810759,810764],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[810823,810824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[811241,811305],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[811832,811850],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[811917,811918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[811995,812006],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[812091,812092],"content":"<","needQuote":true,"nodes":[]},{"pos":[812119,812126],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[812192,812193]},{"pos":[812248,812252],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[812310,812311],"content":"<","needQuote":true,"nodes":[]},{"pos":[812338,812345],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[812379,812380]},{"pos":[812436,812443],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[812536,812537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[812697,812718],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[812788,812789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[812866,812877],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[812963,812966]},{"pos":[813000,813007],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[813040,813041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[813069,813070]},{"pos":[813125,813129],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[813188,813191]},{"pos":[813225,813232],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813266,813267]},{"pos":[813323,813330],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[813391,813392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[813419,813420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[813921,813992],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[814567,814585],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[814652,814653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[814730,814741],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[814826,814827],"content":"<","needQuote":true,"nodes":[]},{"pos":[814854,814861],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[814927,814928]},{"pos":[814983,814987],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[815045,815046],"content":"<","needQuote":true,"nodes":[]},{"pos":[815073,815080],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[815114,815115]},{"pos":[815169,815174],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[815234,815235]},{"pos":[815291,815298],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[815391,815392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[815565,815586],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[815656,815657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[815734,815745],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[815831,815834]},{"pos":[815868,815875],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[815908,815909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[815937,815938]},{"pos":[815993,815997],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[816056,816059]},{"pos":[816093,816100],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[816134,816135]},{"pos":[816189,816194],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[816254,816255]},{"pos":[816311,816318],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[816379,816380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[816407,816408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[816889,816927],"content":"ToArray<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"ToArray<TSource>(IEnumerable<TSource>)"}]},{"pos":[817308,817324],"content":"ToArray<TSource>","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;","pos":[0,16],"source":"ToArray<TSource>"}]},{"pos":[817389,817390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[817467,817478],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[817563,817564],"content":"<","needQuote":true,"nodes":[]},{"pos":[817591,817598],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[817663,817664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[817790,817809],"content":"ToArray(Of TSource)","needQuote":true,"nodes":[{"content":"ToArray(Of TSource)","pos":[0,19]}]},{"pos":[817877,817878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[817955,817966],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[818052,818055]},{"pos":[818089,818096],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[818129,818130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[818157,818158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[818549,818619],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,70],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[819142,819169],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[819245,819246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[819323,819334],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[819419,819420],"content":"<","needQuote":true,"nodes":[]},{"pos":[819447,819454],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[819520,819521]},{"pos":[819576,819580],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[819638,819639],"content":"<","needQuote":true,"nodes":[]},{"pos":[819666,819673],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[819707,819708]},{"pos":[819740,819744],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[819806,819807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[819959,819989],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[820068,820069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[820146,820157],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[820243,820246]},{"pos":[820280,820287],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[820320,820321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[820349,820350]},{"pos":[820405,820409],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[820468,820471]},{"pos":[820505,820512],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[820546,820547]},{"pos":[820579,820583],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[820613,820614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820641,820642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[821176,821271],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[821979,822006],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[822082,822083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[822160,822171],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[822256,822257],"content":"<","needQuote":true,"nodes":[]},{"pos":[822284,822291],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822357,822358]},{"pos":[822413,822417],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[822475,822476],"content":"<","needQuote":true,"nodes":[]},{"pos":[822503,822510],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822544,822545]},{"pos":[822577,822581],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[822644,822645]},{"pos":[822733,822750],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[822841,822842],"content":"<","needQuote":true,"nodes":[]},{"pos":[822869,822873],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[822935,822936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[823138,823168],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[823247,823248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[823325,823336],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[823422,823425]},{"pos":[823459,823466],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[823499,823500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[823528,823529]},{"pos":[823584,823588],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[823647,823650]},{"pos":[823684,823691],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[823725,823726]},{"pos":[823758,823762],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[823792,823793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[823821,823822]},{"pos":[823910,823927],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[824019,824022]},{"pos":[824056,824060],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[824090,824091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[824118,824119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[824727,824832],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,105],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[825501,825538],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[825624,825625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[825702,825713],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[825798,825799],"content":"<","needQuote":true,"nodes":[]},{"pos":[825826,825833],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[825899,825900]},{"pos":[825955,825959],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[826017,826018],"content":"<","needQuote":true,"nodes":[]},{"pos":[826045,826052],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[826086,826087]},{"pos":[826119,826123],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[826186,826187]},{"pos":[826242,826246],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[826304,826305],"content":"<","needQuote":true,"nodes":[]},{"pos":[826332,826339],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[826373,826374]},{"pos":[826406,826414],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[826480,826481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[826654,826694],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[826783,826784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[826861,826872],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[826958,826961]},{"pos":[826995,827002],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[827035,827036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[827064,827065]},{"pos":[827120,827124],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[827183,827186]},{"pos":[827220,827227],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[827261,827262]},{"pos":[827294,827298],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[827328,827329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[827357,827358]},{"pos":[827413,827417],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[827476,827479]},{"pos":[827513,827520],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[827554,827555]},{"pos":[827587,827595],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[827629,827630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[827657,827658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[828307,828437],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,130],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[829291,829328],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[829414,829415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[829492,829503],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[829588,829589],"content":"<","needQuote":true,"nodes":[]},{"pos":[829616,829623],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[829689,829690]},{"pos":[829745,829749],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[829807,829808],"content":"<","needQuote":true,"nodes":[]},{"pos":[829835,829842],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[829876,829877]},{"pos":[829909,829913],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[829976,829977]},{"pos":[830032,830036],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[830094,830095],"content":"<","needQuote":true,"nodes":[]},{"pos":[830122,830129],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[830163,830164]},{"pos":[830196,830204],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[830271,830272]},{"pos":[830360,830377],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[830468,830469],"content":"<","needQuote":true,"nodes":[]},{"pos":[830496,830500],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[830562,830563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[830786,830826],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[830915,830916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[830993,831004],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[831090,831093]},{"pos":[831127,831134],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[831167,831168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[831196,831197]},{"pos":[831252,831256],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[831315,831318]},{"pos":[831352,831359],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[831393,831394]},{"pos":[831426,831430],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[831460,831461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[831489,831490]},{"pos":[831545,831549],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[831608,831611]},{"pos":[831645,831652],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[831686,831687]},{"pos":[831719,831727],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[831761,831762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[831790,831791]},{"pos":[831879,831896],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[831988,831991]},{"pos":[832025,832029],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[832059,832060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[832087,832088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[832742,832779],"content":"ToList<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"ToList<TSource>(IEnumerable<TSource>)"}]},{"pos":[833156,833171],"content":"ToList<TSource>","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;","pos":[0,15],"source":"ToList<TSource>"}]},{"pos":[833235,833236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[833313,833324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[833409,833410],"content":"<","needQuote":true,"nodes":[]},{"pos":[833437,833444],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[833509,833510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[833635,833653],"content":"ToList(Of TSource)","needQuote":true,"nodes":[{"content":"ToList(Of TSource)","pos":[0,18]}]},{"pos":[833720,833721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[833798,833809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[833895,833898]},{"pos":[833932,833939],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[833972,833973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834000,834001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834385,834451],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,66],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[834958,834981],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[835053,835054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[835131,835142],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[835227,835228],"content":"<","needQuote":true,"nodes":[]},{"pos":[835255,835262],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[835328,835329]},{"pos":[835384,835388],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[835446,835447],"content":"<","needQuote":true,"nodes":[]},{"pos":[835474,835481],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[835515,835516]},{"pos":[835548,835552],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[835614,835615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[835763,835789],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[835864,835865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[835942,835953],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[836039,836042]},{"pos":[836076,836083],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[836116,836117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[836145,836146]},{"pos":[836201,836205],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[836264,836267]},{"pos":[836301,836308],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[836342,836343]},{"pos":[836375,836379],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[836409,836410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[836437,836438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[836956,837047],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,91],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[837739,837762],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[837834,837835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[837912,837923],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[838008,838009],"content":"<","needQuote":true,"nodes":[]},{"pos":[838036,838043],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838109,838110]},{"pos":[838165,838169],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[838227,838228],"content":"<","needQuote":true,"nodes":[]},{"pos":[838255,838262],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838296,838297]},{"pos":[838329,838333],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[838396,838397]},{"pos":[838485,838502],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[838593,838594],"content":"<","needQuote":true,"nodes":[]},{"pos":[838621,838625],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[838687,838688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[838886,838912],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[838987,838988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[839065,839076],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[839162,839165]},{"pos":[839199,839206],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[839239,839240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[839268,839269]},{"pos":[839324,839328],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[839387,839390]},{"pos":[839424,839431],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[839465,839466]},{"pos":[839498,839502],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[839532,839533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[839561,839562]},{"pos":[839650,839667],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[839759,839762]},{"pos":[839796,839800],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[839830,839831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[839858,839859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[840451,840552],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,101],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[841205,841238],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[841320,841321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[841398,841409],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[841494,841495],"content":"<","needQuote":true,"nodes":[]},{"pos":[841522,841529],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[841595,841596]},{"pos":[841651,841655],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[841713,841714],"content":"<","needQuote":true,"nodes":[]},{"pos":[841741,841748],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[841782,841783]},{"pos":[841815,841819],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[841882,841883]},{"pos":[841938,841942],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[842000,842001],"content":"<","needQuote":true,"nodes":[]},{"pos":[842028,842035],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[842069,842070]},{"pos":[842102,842110],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[842176,842177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[842346,842382],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[842467,842468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[842545,842556],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[842642,842645]},{"pos":[842679,842686],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[842719,842720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[842748,842749]},{"pos":[842804,842808],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[842867,842870]},{"pos":[842904,842911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[842945,842946]},{"pos":[842978,842982],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[843012,843013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[843041,843042]},{"pos":[843097,843101],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[843160,843163]},{"pos":[843197,843204],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[843238,843239]},{"pos":[843271,843279],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[843313,843314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[843341,843342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[843975,844101],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,126],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[844939,844972],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[845054,845055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[845132,845143],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[845228,845229],"content":"<","needQuote":true,"nodes":[]},{"pos":[845256,845263],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845329,845330]},{"pos":[845385,845389],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[845447,845448],"content":"<","needQuote":true,"nodes":[]},{"pos":[845475,845482],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845516,845517]},{"pos":[845549,845553],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[845616,845617]},{"pos":[845672,845676],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[845734,845735],"content":"<","needQuote":true,"nodes":[]},{"pos":[845762,845769],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845803,845804]},{"pos":[845836,845844],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[845911,845912]},{"pos":[846000,846017],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[846108,846109],"content":"<","needQuote":true,"nodes":[]},{"pos":[846136,846140],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[846202,846203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[846422,846458],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[846543,846544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[846621,846632],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[846718,846721]},{"pos":[846755,846762],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[846795,846796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[846824,846825]},{"pos":[846880,846884],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[846943,846946]},{"pos":[846980,846987],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[847021,847022]},{"pos":[847054,847058],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[847088,847089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[847117,847118]},{"pos":[847173,847177],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[847236,847239]},{"pos":[847273,847280],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[847314,847315]},{"pos":[847347,847355],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[847389,847390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[847418,847419]},{"pos":[847507,847524],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[847616,847619]},{"pos":[847653,847657],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[847687,847688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847715,847716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[848401,848459],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,58],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[849002,849016],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[849079,849080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[849157,849168],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[849253,849254],"content":"<","needQuote":true,"nodes":[]},{"pos":[849281,849288],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[849354,849355]},{"pos":[849437,849448],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[849533,849534],"content":"<","needQuote":true,"nodes":[]},{"pos":[849561,849568],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[849633,849634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849802,849819],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[849885,849886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[849963,849974],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[850060,850063]},{"pos":[850097,850104],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[850137,850138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[850166,850167]},{"pos":[850249,850260],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[850346,850349]},{"pos":[850383,850390],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[850423,850424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[850451,850452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[850994,851080],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,86],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[851817,851831],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[851894,851895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[851972,851983],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[852068,852069],"content":"<","needQuote":true,"nodes":[]},{"pos":[852096,852103],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[852169,852170]},{"pos":[852252,852263],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[852348,852349],"content":"<","needQuote":true,"nodes":[]},{"pos":[852376,852383],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[852449,852450]},{"pos":[852538,852555],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[852646,852647],"content":"<","needQuote":true,"nodes":[]},{"pos":[852674,852681],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[852746,852747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852965,852982],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[853048,853049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[853126,853137],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[853223,853226]},{"pos":[853260,853267],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[853300,853301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[853329,853330]},{"pos":[853412,853423],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[853509,853512]},{"pos":[853546,853553],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[853586,853587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[853615,853616]},{"pos":[853704,853721],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[853813,853816]},{"pos":[853850,853857],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[853890,853891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[853918,853919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[854508,854568],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[855079,855093],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[855156,855157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[855234,855245],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[855330,855331],"content":"<","needQuote":true,"nodes":[]},{"pos":[855358,855365],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[855431,855432]},{"pos":[855487,855491],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[855549,855550],"content":"<","needQuote":true,"nodes":[]},{"pos":[855577,855584],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[855618,855619]},{"pos":[855675,855682],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[855775,855776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[855932,855949],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[856015,856016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[856093,856104],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[856190,856193]},{"pos":[856227,856234],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[856267,856268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[856296,856297]},{"pos":[856352,856356],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[856415,856418]},{"pos":[856452,856459],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[856493,856494]},{"pos":[856550,856557],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[856618,856619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[856646,856647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[857132,857199],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,67],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[857758,857772],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[857835,857836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[857913,857924],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[858009,858010],"content":"<","needQuote":true,"nodes":[]},{"pos":[858037,858044],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[858110,858111]},{"pos":[858166,858170],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[858228,858229],"content":"<","needQuote":true,"nodes":[]},{"pos":[858256,858263],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[858297,858298]},{"pos":[858352,858357],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[858417,858418]},{"pos":[858474,858481],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[858574,858575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[858744,858761],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[858827,858828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[858905,858916],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[859002,859005]},{"pos":[859039,859046],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[859079,859080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[859108,859109]},{"pos":[859164,859168],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[859227,859230]},{"pos":[859264,859271],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[859305,859306]},{"pos":[859360,859365],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[859425,859426]},{"pos":[859482,859489],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[859550,859551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[859578,859579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[860113,860217],"content":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TSecond, TResult&gt;)","pos":[0,104],"source":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)"}]},{"pos":[860941,860970],"content":"Zip<TFirst, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;","pos":[0,29],"source":"Zip<TFirst, TSecond, TResult>"}]},{"pos":[861048,861049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[861126,861137],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[861222,861223],"content":"<","needQuote":true,"nodes":[]},{"pos":[861250,861256],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[861321,861322]},{"pos":[861404,861415],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[861500,861501],"content":"<","needQuote":true,"nodes":[]},{"pos":[861528,861535],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[861601,861602]},{"pos":[861657,861661],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[861719,861720],"content":"<","needQuote":true,"nodes":[]},{"pos":[861747,861753],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[861786,861787]},{"pos":[861819,861826],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[861860,861861]},{"pos":[861893,861900],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[861965,861966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[862157,862189],"content":"Zip(Of TFirst, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of TFirst, TSecond, TResult)","pos":[0,32]}]},{"pos":[862270,862271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[862348,862359],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[862445,862448]},{"pos":[862482,862488],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"pos":[862520,862521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[862549,862550]},{"pos":[862632,862643],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[862729,862732]},{"pos":[862766,862773],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[862806,862807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[862835,862836]},{"pos":[862891,862895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[862954,862957]},{"pos":[862991,862997],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[863030,863031]},{"pos":[863063,863070],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[863104,863105]},{"pos":[863137,863144],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[863177,863178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[863205,863206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[863708,863719],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[864091,864096],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[864661,864666],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[864824,864829],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[865400,865410],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[866002,866009],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[866178,866188],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[866617,866646],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[867193,867227],"content":"Add(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Add(MulticastIPAddressInformation)","pos":[0,34]}]},{"pos":[867671,867674],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[867824,867825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[867921,867950],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[868035,868036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[868132,868135],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[868288,868289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[868385,868414],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[868499,868500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[868975,868981],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[869193,869196],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[869267,869268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[869295,869296],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[869323,869324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[869420,869423],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[869497,869498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[869525,869526],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[869553,869554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[870009,870016],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[870344,870349],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[870501,870502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[870529,870530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[870624,870629],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[870784,870785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[870812,870813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[871173,871180],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[871392,871397],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[871470,871471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[871498,871499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[871593,871598],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[871674,871675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[871702,871703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[872229,872268],"content":"Contains(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(MulticastIPAddressInformation)","pos":[0,39]}]},{"pos":[872727,872735],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[872890,872891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[872987,873016],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[873101,873102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[873203,873211],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[873369,873370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[873466,873495],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[873580,873581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[874076,874087],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[874314,874322],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[874398,874399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[874426,874427],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[874454,874455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[874556,874564],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[874643,874644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[874671,874672],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[874699,874700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[875267,875313],"content":"CopyTo(MulticastIPAddressInformation[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(MulticastIPAddressInformation[], Int32)","pos":[0,46]}]},{"pos":[875871,875877],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[876030,876031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[876127,876156],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":"[]","pos":[876242,876244]},{"content":",","pos":[876276,876277]},{"pos":[876331,876336],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[876395,876396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[876510,876516],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[876672,876673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[876769,876798],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[876883,876885],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[876914,876915]},{"pos":[876969,876974],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[877033,877034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[877544,877575],"content":"MulticastIPAddressInformation[]","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation[]","pos":[0,31]}]},{"pos":[877864,877893],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"content":"[]","pos":[877979,877981]},{"pos":[878092,878121],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[878206,878208],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[878426,878444],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[878742,878748],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[878822,878823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[878850,878851],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[878879,878881]},{"content":",","pos":[878913,878914]},{"pos":[878968,878973],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[879032,879033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[879147,879153],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[879230,879231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[879258,879259],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[879286,879288],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[879317,879318]},{"pos":[879372,879377],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[879436,879437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[879950,879965],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[880317,880330],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[880490,880491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[880518,880519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[880621,880634],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[880797,880798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[880825,880826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[881335,881377],"content":"IEnumerator<MulticastIPAddressInformation>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;MulticastIPAddressInformation&gt;","pos":[0,42],"source":"IEnumerator<MulticastIPAddressInformation>"}]},{"pos":[881740,881751],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[881836,881837],"content":"<","needQuote":true,"nodes":[]},{"pos":[881933,881962],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[882140,882151],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[882237,882240]},{"pos":[882343,882372],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[882457,882458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[882804,882819],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[883055,883068],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[883149,883150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[883177,883178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[883280,883293],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[883377,883378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[883405,883406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[883669,883683],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[883902,883913],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[883977,883978],"content":"<","needQuote":true,"nodes":[]},{"pos":[884005,884006],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[884126,884137],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[884202,884205]},{"pos":[884239,884240],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[884267,884268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[884768,884805],"content":"Remove(MulticastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Remove(MulticastIPAddressInformation)","pos":[0,37]}]},{"pos":[885258,885264],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[885417,885418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[885514,885543],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[885628,885629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[885728,885734],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[885890,885891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[885987,886016],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[886101,886102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[886589,886598],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[886819,886825],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[886899,886900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[886927,886928],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[886955,886956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[887055,887061],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[887138,887139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[887166,887167],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[887194,887195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[887488,887503],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[887642,887655],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[887725,887726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[887753,887754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[887846,887859],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[887929,887930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[887957,887958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[888174,888185],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[888367,888388],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[888582,888609],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[888828,888845],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[889020,889040],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]}],"content":"items:\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  commentId: T:System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  id: MulticastIPAddressInformationCollection\n  parent: System.Net.NetworkInformation\n  children:\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.#ctor\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Clear\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Count\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.GetEnumerator\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.IsReadOnly\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Item(System.Int32)\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - System.Net.NetworkInformation.MulticastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  - vb\n  name: MulticastIPAddressInformationCollection\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MulticastIPAddressInformationCollection\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 232\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Stores a set of <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types.</p>\\n\"\n  syntax:\n    content: 'public class MulticastIPAddressInformationCollection : ICollection<MulticastIPAddressInformation>, IEnumerable<MulticastIPAddressInformation>, IEnumerable'\n    content.vb: >-\n      Public Class MulticastIPAddressInformationCollection\n          Implements ICollection(Of MulticastIPAddressInformation), IEnumerable(Of MulticastIPAddressInformation), IEnumerable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: MulticastIPAddressInformationCollection\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Queryable.AsQueryable``1\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Net.NetworkInformation.MulticastIPAddressInformation,System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.MulticastIPAddressInformation,{TAccumulate}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.MulticastIPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Any``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Single})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Count``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Distinct``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.First``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TInner},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Last``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.LongCount``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TResult}})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Reverse``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Single``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToArray``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToList``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TSecond},{TResult}})\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.#ctor\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: MulticastIPAddressInformationCollection()\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.MulticastIPAddressInformationCollection()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 234\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformationCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected MulticastIPAddressInformationCollection()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: MulticastIPAddressInformationCollection.MulticastIPAddressInformationCollection()\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Count\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Count\n  id: Count\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 235\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  syntax:\n    content: public virtual int Count { get; }\n    content.vb: Public Overridable ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that contains the number of <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Count\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: MulticastIPAddressInformationCollection.Count\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.IsReadOnly\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: IsReadOnly\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsReadOnly\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 236\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets a value that indicates whether access to this collection is read-only.</p>\\n\"\n  syntax:\n    content: public virtual bool IsReadOnly { get; }\n    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.IsReadOnly\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: MulticastIPAddressInformationCollection.IsReadOnly\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Item(System.Int32)\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 237\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specific index of the collection.</p>\\n\"\n  syntax:\n    content: public virtual MulticastIPAddressInformation this[int index] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(index As Integer) As MulticastIPAddressInformation\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The index of interest.</p>\\n\"\n    return:\n      type: System.Net.NetworkInformation.MulticastIPAddressInformation\n      description: \"\\n<p>The <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specific index in the collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: MulticastIPAddressInformationCollection.Item[Int32]\n  nameWithType.vb: MulticastIPAddressInformationCollection.Item(Int32)\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  id: Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(MulticastIPAddressInformation)\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 238\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because the collection is read-only and elements cannot be added to the collection.</p>\\n\"\n  syntax:\n    content: public virtual void Add(MulticastIPAddressInformation address)\n    content.vb: Public Overridable Sub Add(address As MulticastIPAddressInformation)\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.MulticastIPAddressInformation\n      description: \"\\n<p>The object to be added to the collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: MulticastIPAddressInformationCollection.Add(MulticastIPAddressInformation)\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Clear\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Clear\n  id: Clear\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 239\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because the collection is read-only and elements cannot be removed.</p>\\n\"\n  syntax:\n    content: public virtual void Clear()\n    content.vb: Public Overridable Sub Clear\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Clear\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: MulticastIPAddressInformationCollection.Clear()\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  id: Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Contains(MulticastIPAddressInformation)\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 240\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Checks whether the collection contains the specified <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual bool Contains(MulticastIPAddressInformation address)\n    content.vb: Public Overridable Function Contains(address As MulticastIPAddressInformation) As Boolean\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.MulticastIPAddressInformation\n      description: \"\\n<p>The <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be searched in the collection.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object exists in the collection; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: MulticastIPAddressInformationCollection.Contains(MulticastIPAddressInformation)\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)\n  id: CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(MulticastIPAddressInformation[], Int32)\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 241\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Copies the elements in this collection to a one-dimensional array of type <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void CopyTo(MulticastIPAddressInformation[] array, int offset)\n    content.vb: Public Overridable Sub CopyTo(array As MulticastIPAddressInformation(), offset As Integer)\n    parameters:\n    - id: array\n      type: System.Net.NetworkInformation.MulticastIPAddressInformation[]\n      description: \"\\n<p>A one-dimensional array that receives a copy of the collection.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>count</em> is less than zero. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n<p>-or- </p>\\n<p>The number of elements in this <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than the available space from <em>count</em> to the end of the destination <em>array</em>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The elements in this <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be cast automatically to the type of the destination <em>array</em>. </p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation(), System.Int32)\n  name.vb: CopyTo(MulticastIPAddressInformation(), Int32)\n  nameWithType: MulticastIPAddressInformationCollection.CopyTo(MulticastIPAddressInformation[], Int32)\n  nameWithType.vb: MulticastIPAddressInformationCollection.CopyTo(MulticastIPAddressInformation(), Int32)\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.GetEnumerator\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 242\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns an object that can be used to iterate through this collection.</p>\\n\"\n  syntax:\n    content: public virtual IEnumerator<MulticastIPAddressInformation> GetEnumerator()\n    content.vb: Public Overridable Function GetEnumerator As IEnumerator(Of MulticastIPAddressInformation)\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.MulticastIPAddressInformation}\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface and provides access to the <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.GetEnumerator\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: MulticastIPAddressInformationCollection.GetEnumerator()\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  id: Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Remove(MulticastIPAddressInformation)\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 243\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because the collection is read-only and elements cannot be removed.</p>\\n\"\n  syntax:\n    content: public virtual bool Remove(MulticastIPAddressInformation address)\n    content.vb: Public Overridable Function Remove(address As MulticastIPAddressInformation) As Boolean\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.MulticastIPAddressInformation\n      description: \"\\n<p>The object to be removed.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: MulticastIPAddressInformationCollection.Remove(MulticastIPAddressInformation)\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 244\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns an object that can be used to iterate through this collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface and provides access to the <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: MulticastIPAddressInformationCollection.IEnumerable.GetEnumerator()\n  nameWithType.vb: MulticastIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()\nreferences:\n- uid: System.Net.NetworkInformation\n  isExternal: false\n  name: System.Net.NetworkInformation\n  fullName: System.Net.NetworkInformation\n  commentId: N:System.Net.NetworkInformation\n  nameWithType: System.Net.NetworkInformation\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<MulticastIPAddressInformation>\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  name.vb: ICollection(Of MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  nameWithType: ICollection<MulticastIPAddressInformation>\n  nameWithType.vb: ICollection(Of MulticastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<MulticastIPAddressInformation>\n  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  name.vb: IEnumerable(Of MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  nameWithType: IEnumerable<MulticastIPAddressInformation>\n  nameWithType.vb: IEnumerable(Of MulticastIPAddressInformation)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Queryable.AsQueryable``1\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsQueryable<MulticastIPAddressInformation>()\n  fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: AsQueryable(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable<MulticastIPAddressInformation>\n    fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Queryable.AsQueryable<MulticastIPAddressInformation>()\n  nameWithType.vb: Queryable.AsQueryable(Of MulticastIPAddressInformation)()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsParallel<MulticastIPAddressInformation>()\n  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: AsParallel(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel<MulticastIPAddressInformation>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel(Of MulticastIPAddressInformation)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: ParallelEnumerable.AsParallel<MulticastIPAddressInformation>()\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Net.NetworkInformation.MulticastIPAddressInformation,System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  name: Aggregate<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, MulticastIPAddressInformation, MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Net.NetworkInformation.MulticastIPAddressInformation, System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Net.NetworkInformation.MulticastIPAddressInformation, System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Aggregate(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, MulticastIPAddressInformation, MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  nameWithType: Enumerable.Aggregate<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, MulticastIPAddressInformation, MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Aggregate(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, MulticastIPAddressInformation, MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.MulticastIPAddressInformation,{TAccumulate}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  name: Aggregate<MulticastIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, MulticastIPAddressInformation, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate))\n  name.vb: Aggregate(Of MulticastIPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, MulticastIPAddressInformation, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate<MulticastIPAddressInformation, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of MulticastIPAddressInformation, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  nameWithType: Enumerable.Aggregate<MulticastIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, MulticastIPAddressInformation, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of MulticastIPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, MulticastIPAddressInformation, TAccumulate))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.MulticastIPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  name: Aggregate<MulticastIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, MulticastIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of MulticastIPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, MulticastIPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<MulticastIPAddressInformation, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of MulticastIPAddressInformation, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  nameWithType: Enumerable.Aggregate<MulticastIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, MulticastIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of MulticastIPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, MulticastIPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: All<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: All(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.All<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.All(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Any``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  name: Any<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: Any(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Any<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Any(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Any<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: Any(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Any<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsEnumerable<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: AsEnumerable(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.AsEnumerable<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.AsEnumerable(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Decimal))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Double))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int64))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Single))\n  name.vb: Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Average<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Average(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Single))\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Concat<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Concat(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Concat<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Concat(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Append<MulticastIPAddressInformation>(MulticastIPAddressInformation)\n  fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  name.vb: Append(Of MulticastIPAddressInformation)(MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Append<MulticastIPAddressInformation>(MulticastIPAddressInformation)\n  nameWithType.vb: Enumerable.Append(Of MulticastIPAddressInformation)(MulticastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Prepend<MulticastIPAddressInformation>(MulticastIPAddressInformation)\n  fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  name.vb: Prepend(Of MulticastIPAddressInformation)(MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Prepend<MulticastIPAddressInformation>(MulticastIPAddressInformation)\n  nameWithType.vb: Enumerable.Prepend(Of MulticastIPAddressInformation)(MulticastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Contains<MulticastIPAddressInformation>(MulticastIPAddressInformation)\n  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  name.vb: Contains(Of MulticastIPAddressInformation)(MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Contains<MulticastIPAddressInformation>(MulticastIPAddressInformation)\n  nameWithType.vb: Enumerable.Contains(Of MulticastIPAddressInformation)(MulticastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  name: Contains<MulticastIPAddressInformation>(MulticastIPAddressInformation, IEqualityComparer<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Contains(Of MulticastIPAddressInformation)(MulticastIPAddressInformation, IEqualityComparer(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Contains<MulticastIPAddressInformation>(MulticastIPAddressInformation, IEqualityComparer<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Contains(Of MulticastIPAddressInformation)(MulticastIPAddressInformation, IEqualityComparer(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Count``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  name: Count<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: Count(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Count<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Count(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Count<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: Count(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Count<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  name: DefaultIfEmpty<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: DefaultIfEmpty(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.DefaultIfEmpty<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: DefaultIfEmpty<MulticastIPAddressInformation>(MulticastIPAddressInformation)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  name.vb: DefaultIfEmpty(Of MulticastIPAddressInformation)(MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.DefaultIfEmpty<MulticastIPAddressInformation>(MulticastIPAddressInformation)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of MulticastIPAddressInformation)(MulticastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Distinct``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  name: Distinct<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: Distinct(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Distinct<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Distinct(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Distinct<MulticastIPAddressInformation>(IEqualityComparer<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Distinct(Of MulticastIPAddressInformation)(IEqualityComparer(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Distinct<MulticastIPAddressInformation>(IEqualityComparer<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Distinct(Of MulticastIPAddressInformation)(IEqualityComparer(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAt<MulticastIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Int32)\n  name.vb: ElementAt(Of MulticastIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAt<MulticastIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of MulticastIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAtOrDefault<MulticastIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Int32)\n  name.vb: ElementAtOrDefault(Of MulticastIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<MulticastIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of MulticastIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Except<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Except(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Except<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Except(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Except<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Except(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation), IEqualityComparer(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Except<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Except(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation), IEqualityComparer(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.First``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  name: First<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: First(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1\n    name: First<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1\n    name: First(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.First<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.First(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: First<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: First(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.First<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.First(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: FirstOrDefault<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: FirstOrDefault(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.FirstOrDefault<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.FirstOrDefault(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: FirstOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: FirstOrDefault(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.FirstOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: GroupBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey))\n  name.vb: GroupBy(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.GroupBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: GroupBy<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TElement))\n  name.vb: GroupBy(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<MulticastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of MulticastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.GroupBy<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<MulticastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of MulticastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  name: GroupBy<MulticastIPAddressInformation, TKey, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<TKey, IEnumerable<MulticastIPAddressInformation>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation), TResult))\n  name.vb: GroupBy(Of MulticastIPAddressInformation, TKey, TResult)(Func(Of MulticastIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of MulticastIPAddressInformation), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<MulticastIPAddressInformation, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of MulticastIPAddressInformation, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  nameWithType: Enumerable.GroupBy<MulticastIPAddressInformation, TKey, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<TKey, IEnumerable<MulticastIPAddressInformation>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of MulticastIPAddressInformation, TKey, TResult)(Func(Of MulticastIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of MulticastIPAddressInformation), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<MulticastIPAddressInformation, TKey, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<TKey, IEnumerable<MulticastIPAddressInformation>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of MulticastIPAddressInformation, TKey, TResult)(Func(Of MulticastIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of MulticastIPAddressInformation), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<MulticastIPAddressInformation, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of MulticastIPAddressInformation, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<MulticastIPAddressInformation, TKey, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<TKey, IEnumerable<MulticastIPAddressInformation>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of MulticastIPAddressInformation, TKey, TResult)(Func(Of MulticastIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of MulticastIPAddressInformation), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  name: GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  nameWithType: Enumerable.GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<MulticastIPAddressInformation, TKey, TElement, TResult>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of MulticastIPAddressInformation, TKey, TElement, TResult)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  name: GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of MulticastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of MulticastIPAddressInformation, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  nameWithType: Enumerable.GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of MulticastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of MulticastIPAddressInformation, IEnumerable(Of TInner), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of MulticastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of MulticastIPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.GroupJoin<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of MulticastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of MulticastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of MulticastIPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Intersect<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Intersect(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Intersect<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Intersect(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Intersect<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Intersect(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation), IEqualityComparer(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Intersect<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Intersect(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation), IEqualityComparer(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TInner},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  name: Join<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TResult))\n  name.vb: Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of MulticastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of MulticastIPAddressInformation, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<MulticastIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  nameWithType: Enumerable.Join<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of MulticastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of MulticastIPAddressInformation, TInner, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: Join<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of MulticastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of MulticastIPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<MulticastIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.Join<MulticastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<MulticastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<MulticastIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of MulticastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of MulticastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of MulticastIPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Last``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  name: Last<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: Last(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Last<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Last(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Last<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: Last(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Last<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: LastOrDefault<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: LastOrDefault(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LastOrDefault<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.LastOrDefault(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LastOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: LastOrDefault(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LastOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.LongCount``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  name: LongCount<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: LongCount(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LongCount<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.LongCount(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LongCount<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: LongCount(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LongCount<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  name: Max<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: Max(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Decimal))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Double))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int64))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Single))\n  name.vb: Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Max<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult))\n  name.vb: Max(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max<MulticastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max(Of MulticastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Max<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Max(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  name: Min<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: Min(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Decimal))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Double))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int64))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Single))\n  name.vb: Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Min<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult))\n  name.vb: Min(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min<MulticastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min(Of MulticastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Min<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Min(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, TResult))\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey))\n  name.vb: OrderBy(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderBy<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderByDescending<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey))\n  name.vb: OrderByDescending(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderByDescending<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderByDescending<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderByDescending<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Reverse``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  name: Reverse<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: Reverse(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Reverse<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Reverse(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Select<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult))\n  name.vb: Select(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select<MulticastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select(Of MulticastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Select<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Select(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  name: Select<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, TResult))\n  name.vb: Select(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select<MulticastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select(Of MulticastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  nameWithType: Enumerable.Select<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, Int32, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<MulticastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of MulticastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, IEnumerable(Of TResult)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<MulticastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.MulticastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of MulticastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<MulticastIPAddressInformation, TResult>(Func<MulticastIPAddressInformation, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of MulticastIPAddressInformation, TResult)(Func(Of MulticastIPAddressInformation, Int32, IEnumerable(Of TResult)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<MulticastIPAddressInformation, TCollection, TResult>(Func<MulticastIPAddressInformation, IEnumerable<TCollection>>, Func<MulticastIPAddressInformation, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult))\n  name.vb: SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)(Func(Of MulticastIPAddressInformation, IEnumerable(Of TCollection)), Func(Of MulticastIPAddressInformation, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<MulticastIPAddressInformation, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<MulticastIPAddressInformation, TCollection, TResult>(Func<MulticastIPAddressInformation, IEnumerable<TCollection>>, Func<MulticastIPAddressInformation, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)(Func(Of MulticastIPAddressInformation, IEnumerable(Of TCollection)), Func(Of MulticastIPAddressInformation, TCollection, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<MulticastIPAddressInformation, TCollection, TResult>(Func<MulticastIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<MulticastIPAddressInformation, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult))\n  name.vb: SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)(Func(Of MulticastIPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of MulticastIPAddressInformation, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<MulticastIPAddressInformation, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<MulticastIPAddressInformation, TCollection, TResult>(Func<MulticastIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<MulticastIPAddressInformation, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of MulticastIPAddressInformation, TCollection, TResult)(Func(Of MulticastIPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of MulticastIPAddressInformation, TCollection, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: SequenceEqual<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: SequenceEqual(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SequenceEqual<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: SequenceEqual<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: SequenceEqual(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation), IEqualityComparer(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.SequenceEqual<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation), IEqualityComparer(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Single``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  name: Single<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: Single(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Single<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Single(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Single<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: Single(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Single<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: SingleOrDefault<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: SingleOrDefault(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SingleOrDefault<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.SingleOrDefault(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SingleOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: SingleOrDefault(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SingleOrDefault<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Skip<MulticastIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Int32)\n  name.vb: Skip(Of MulticastIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Skip<MulticastIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.Skip(Of MulticastIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SkipWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: SkipWhile(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: SkipWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Decimal))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Double))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int64))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Single))\n  name.vb: Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Sum<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Sum(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Take<MulticastIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Int32)\n  name.vb: Take(Of MulticastIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Take<MulticastIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.Take(Of MulticastIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: TakeWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: TakeWhile(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: TakeWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToArray``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToArray<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: ToArray(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToArray<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.ToArray(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToDictionary<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey))\n  name.vb: ToDictionary(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToDictionary<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToDictionary<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TElement))\n  name.vb: ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<MulticastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToDictionary<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<MulticastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToList``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToList<MulticastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.MulticastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.MulticastIPAddressInformation)()\n  name.vb: ToList(Of MulticastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToList<MulticastIPAddressInformation>()\n  nameWithType.vb: Enumerable.ToList(Of MulticastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToLookup<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey))\n  name.vb: ToLookup(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToLookup<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<MulticastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of MulticastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<MulticastIPAddressInformation, TKey>(Func<MulticastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of MulticastIPAddressInformation, TKey)(Func(Of MulticastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToLookup<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TElement))\n  name.vb: ToLookup(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<MulticastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of MulticastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToLookup<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<MulticastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of MulticastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<MulticastIPAddressInformation, TKey, TElement>(Func<MulticastIPAddressInformation, TKey>, Func<MulticastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of MulticastIPAddressInformation, TKey, TElement)(Func(Of MulticastIPAddressInformation, TKey), Func(Of MulticastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Union<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Union(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Union<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Union(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.MulticastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Union<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.MulticastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.MulticastIPAddressInformation))\n  name.vb: Union(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation), IEqualityComparer(Of MulticastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Union<MulticastIPAddressInformation>(IEnumerable<MulticastIPAddressInformation>, IEqualityComparer<MulticastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Union(Of MulticastIPAddressInformation)(IEnumerable(Of MulticastIPAddressInformation), IEqualityComparer(Of MulticastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Where<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Boolean))\n  name.vb: Where(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Where<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: Where<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.MulticastIPAddressInformation>(System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.MulticastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, System.Int32, System.Boolean))\n  name.vb: Where(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where<MulticastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of MulticastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.Where<MulticastIPAddressInformation>(Func<MulticastIPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of MulticastIPAddressInformation)(Func(Of MulticastIPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.MulticastIPAddressInformation,{TSecond},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  name: Zip<MulticastIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<MulticastIPAddressInformation, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.MulticastIPAddressInformation, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Net.NetworkInformation.MulticastIPAddressInformation, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TSecond, TResult))\n  name.vb: Zip(Of MulticastIPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of MulticastIPAddressInformation, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<MulticastIPAddressInformation, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.MulticastIPAddressInformation, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of MulticastIPAddressInformation, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.MulticastIPAddressInformation, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.Zip<MulticastIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<MulticastIPAddressInformation, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of MulticastIPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of MulticastIPAddressInformation, TSecond, TResult))\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection`1\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))\n  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable<TElement>\n    fullName: System.Linq.Queryable.AsQueryable<TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable(Of TElement)\n    fullName: System.Linq.Queryable.AsQueryable(Of TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel<TSource>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel(Of TSource)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  isExternal: true\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))\n  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate<TSource>\n    fullName: System.Linq.Enumerable.Aggregate<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate(Of TSource)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))\n  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate<TSource, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of TSource, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<TSource, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of TSource, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All<TSource>\n    fullName: System.Linq.Enumerable.All<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All(Of TSource)\n    fullName: System.Linq.Enumerable.All(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable<TSource>\n    fullName: System.Linq.Enumerable.AsEnumerable<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable(Of TSource)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat<TSource>\n    fullName: System.Linq.Enumerable.Concat<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of TSource)\n    fullName: System.Linq.Enumerable.Concat(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append<TSource>\n    fullName: System.Linq.Enumerable.Append<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append(Of TSource)\n    fullName: System.Linq.Enumerable.Append(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend<TSource>\n    fullName: System.Linq.Enumerable.Prepend<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend(Of TSource)\n    fullName: System.Linq.Enumerable.Prepend(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt<TSource>\n    fullName: System.Linq.Enumerable.ElementAt<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAt(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault<TSource>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max<TSource, TResult>\n    fullName: System.Linq.Enumerable.Max<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min<TSource, TResult>\n    fullName: System.Linq.Enumerable.Min<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse<TSource>\n    fullName: System.Linq.Enumerable.Reverse<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse(Of TSource)\n    fullName: System.Linq.Enumerable.Reverse(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip<TSource>\n    fullName: System.Linq.Enumerable.Skip<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip(Of TSource)\n    fullName: System.Linq.Enumerable.Skip(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take<TSource>\n    fullName: System.Linq.Enumerable.Take<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take(Of TSource)\n    fullName: System.Linq.Enumerable.Take(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray<TSource>\n    fullName: System.Linq.Enumerable.ToArray<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray(Of TSource)\n    fullName: System.Linq.Enumerable.ToArray(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToList<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList<TSource>\n    fullName: System.Linq.Enumerable.ToList<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList(Of TSource)\n    fullName: System.Linq.Enumerable.ToList(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  isExternal: true\n  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))\n  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<TFirst, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of TFirst, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Count\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).Count\n  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Count\n  nameWithType: ICollection<MulticastIPAddressInformation>.Count\n  nameWithType.vb: ICollection(Of MulticastIPAddressInformation).Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Collections.Generic.ICollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.ICollection<T>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Count\n  commentId: P:System.Collections.Generic.ICollection`1.Count\n  nameWithType: ICollection<T>.Count\n  nameWithType.vb: ICollection(Of T).Count\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.IsReadOnly\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.IsReadOnly\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.IsReadOnly\n  nameWithType: ICollection<MulticastIPAddressInformation>.IsReadOnly\n  nameWithType.vb: ICollection(Of MulticastIPAddressInformation).IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.Generic.ICollection`1.IsReadOnly\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly\n  nameWithType: ICollection<T>.IsReadOnly\n  nameWithType.vb: ICollection(Of T).IsReadOnly\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: MulticastIPAddressInformation\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  commentId: T:System.Net.NetworkInformation.MulticastIPAddressInformation\n  nameWithType: MulticastIPAddressInformation\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Add(`0)\n  name: Add(MulticastIPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  nameWithType: ICollection<MulticastIPAddressInformation>.Add(MulticastIPAddressInformation)\n  nameWithType.vb: ICollection(Of MulticastIPAddressInformation).Add(MulticastIPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Add(`0)\n  isExternal: false\n  name: Add(T)\n  fullName: System.Collections.Generic.ICollection<T>.Add(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<T>.Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of T).Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)\n  nameWithType: ICollection<T>.Add(T)\n  nameWithType.vb: ICollection(Of T).Add(T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Clear\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Clear\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Clear\n  nameWithType: ICollection<MulticastIPAddressInformation>.Clear()\n  nameWithType.vb: ICollection(Of MulticastIPAddressInformation).Clear()\n- uid: System.Collections.Generic.ICollection`1.Clear\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<T>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<T>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of T).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Clear\n  nameWithType: ICollection<T>.Clear()\n  nameWithType.vb: ICollection(Of T).Clear()\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Contains(`0)\n  name: Contains(MulticastIPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  nameWithType: ICollection<MulticastIPAddressInformation>.Contains(MulticastIPAddressInformation)\n  nameWithType.vb: ICollection(Of MulticastIPAddressInformation).Contains(MulticastIPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Contains(`0)\n  isExternal: false\n  name: Contains(T)\n  fullName: System.Collections.Generic.ICollection<T>.Contains(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<T>.Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of T).Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)\n  nameWithType: ICollection<T>.Contains(T)\n  nameWithType.vb: ICollection(Of T).Contains(T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  name: CopyTo(MulticastIPAddressInformation[], Int32)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation(), System.Int32)\n  name.vb: CopyTo(MulticastIPAddressInformation(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.CopyTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).CopyTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)\n  nameWithType: ICollection<MulticastIPAddressInformation>.CopyTo(MulticastIPAddressInformation[], Int32)\n  nameWithType.vb: ICollection(Of MulticastIPAddressInformation).CopyTo(MulticastIPAddressInformation(), Int32)\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation[]\n  name: MulticastIPAddressInformation[]\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation[]\n  fullname.vb: System.Net.NetworkInformation.MulticastIPAddressInformation()\n  name.vb: MulticastIPAddressInformation()\n  spec.csharp:\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: ()\n    fullName: ()\n  nameWithType: MulticastIPAddressInformation[]\n  nameWithType.vb: MulticastIPAddressInformation()\n- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  isExternal: true\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  nameWithType: ICollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.GetEnumerator\n  parent: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.MulticastIPAddressInformation>.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.MulticastIPAddressInformation).GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.MulticastIPAddressInformation}.GetEnumerator\n  nameWithType: IEnumerable<MulticastIPAddressInformation>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of MulticastIPAddressInformation).GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<MulticastIPAddressInformation>\n  fullName: System.Collections.Generic.IEnumerator<System.Net.NetworkInformation.MulticastIPAddressInformation>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Net.NetworkInformation.MulticastIPAddressInformation)\n  name.vb: IEnumerator(Of MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  nameWithType: IEnumerator<MulticastIPAddressInformation>\n  nameWithType.vb: IEnumerator(Of MulticastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerator`1\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Remove(`0)\n  name: Remove(MulticastIPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.MulticastIPAddressInformation>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.MulticastIPAddressInformation).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n    name: MulticastIPAddressInformation\n    fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.MulticastIPAddressInformation}.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)\n  nameWithType: ICollection<MulticastIPAddressInformation>.Remove(MulticastIPAddressInformation)\n  nameWithType.vb: ICollection(Of MulticastIPAddressInformation).Remove(MulticastIPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Remove(`0)\n  isExternal: false\n  name: Remove(T)\n  fullName: System.Collections.Generic.ICollection<T>.Remove(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<T>.Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of T).Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)\n  nameWithType: ICollection<T>.Remove(T)\n  nameWithType.vb: ICollection(Of T).Remove(T)\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n  nameWithType: IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n"}