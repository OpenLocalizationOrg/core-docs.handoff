{"nodes":[{"pos":[2311,2318],"content":"Package","needQuote":true,"nodes":[{"content":"Package","pos":[0,7]}]},{"pos":[3888,3907],"content":"Package(FileAccess)","needQuote":true,"nodes":[{"content":"Package(FileAccess)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The file IO permissions for the package.&lt;/p&gt;\\n","pos":[4795,4846],"source":"\\n<p>The file IO permissions for the package.</p>\\n"},{"content":"\\n&lt;p&gt;The value for &lt;em&gt;openFileAccess&lt;/em&gt; is not valid.&lt;/p&gt;\\n","pos":[4977,5039],"source":"\\n<p>The value for <em>openFileAccess</em> is not valid.</p>\\n"},{"pos":[5475,5489],"content":"FileOpenAccess","needQuote":true,"nodes":[{"content":"FileOpenAccess","pos":[0,14]}]},{"pos":[7275,7292],"content":"PackageProperties","needQuote":true,"nodes":[{"content":"PackageProperties","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The core properties of the package.&lt;/p&gt;\\n","pos":[8020,8066],"source":"\\n<p>The core properties of the package.</p>\\n"},{"pos":[8749,8756],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[9869,9892],"content":"CreatePart(Uri, String)","needQuote":true,"nodes":[{"content":"CreatePart(Uri, String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The uniform resource identifier (URI) of the new part.&lt;/p&gt;\\n","pos":[10661,10726],"source":"\\n<p>The uniform resource identifier (URI) of the new part.</p>\\n"},{"content":"\\n&lt;p&gt;The content type of the data stream.&lt;/p&gt;\\n","pos":[10796,10843],"source":"\\n<p>The content type of the data stream.</p>\\n"},{"content":"\\n&lt;p&gt;The new created part.&lt;/p&gt;\\n","pos":[10921,10953],"source":"\\n<p>The new created part.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; or &lt;em&gt;contentType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11072,11151],"source":"\\n<p>\\n<em>partUri</em> or <em>contentType</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A part with the specified &lt;em&gt;partUri&lt;/em&gt; is already present in the package.&lt;/p&gt;\\n","pos":[11502,11590],"source":"\\n<p>A part with the specified <em>partUri</em> is already present in the package.</p>\\n"},{"content":"\\n&lt;p&gt;The package is read-only (a new part cannot be added).&lt;/p&gt;\\n","pos":[12052,12117],"source":"\\n<p>The package is read-only (a new part cannot be added).</p>\\n"},{"pos":[13303,13345],"content":"CreatePart(Uri, String, CompressionOption)","needQuote":true,"nodes":[{"content":"CreatePart(Uri, String, CompressionOption)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The URI of the new part.&lt;/p&gt;\\n","pos":[14238,14273],"source":"\\n<p>The URI of the new part.</p>\\n"},{"content":"\\n&lt;p&gt;The content type of the data stream.&lt;/p&gt;\\n","pos":[14343,14390],"source":"\\n<p>The content type of the data stream.</p>\\n"},{"content":"\\n&lt;p&gt;The new created part.&lt;/p&gt;\\n","pos":[14855,14887],"source":"\\n<p>The new created part.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; or &lt;em&gt;contentType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15006,15085],"source":"\\n<p>\\n<em>partUri</em> or <em>contentType</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A part with the specified &lt;em&gt;partUri&lt;/em&gt; is already present in the package.&lt;/p&gt;\\n","pos":[15466,15554],"source":"\\n<p>A part with the specified <em>partUri</em> is already present in the package.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;compressionOption&lt;/em&gt; value is not valid.&lt;/p&gt;\\n","pos":[15671,15732],"source":"\\n<p>The <em>compressionOption</em> value is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The package is read-only (a new part cannot be added).&lt;/p&gt;\\n","pos":[16194,16259],"source":"\\n<p>The package is read-only (a new part cannot be added).</p>\\n"},{"pos":[17476,17522],"content":"CreatePartCore(Uri, String, CompressionOption)","needQuote":true,"nodes":[{"content":"CreatePartCore(Uri, String, CompressionOption)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The uniform resource identifier (URI) for the part being created.&lt;/p&gt;\\n","pos":[18455,18531],"source":"\\n<p>The uniform resource identifier (URI) for the part being created.</p>\\n"},{"content":"\\n&lt;p&gt;The content type of the data stream.&lt;/p&gt;\\n","pos":[18601,18648],"source":"\\n<p>The content type of the data stream.</p>\\n"},{"content":"\\n&lt;p&gt;The compression option for the data stream.&lt;/p&gt;\\n","pos":[18748,18802],"source":"\\n<p>The compression option for the data stream.</p>\\n"},{"content":"\\n&lt;p&gt;The created part.&lt;/p&gt;\\n","pos":[18880,18908],"source":"\\n<p>The created part.</p>\\n"},{"pos":[19608,19651],"content":"CreateRelationship(Uri, TargetMode, String)","needQuote":true,"nodes":[{"content":"CreateRelationship(Uri, TargetMode, String)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The uniform resource identifier (URI) of the target part.&lt;/p&gt;\\n","pos":[20600,20668],"source":"\\n<p>The uniform resource identifier (URI) of the target part.</p>\\n"},{"content":"\\n&lt;p&gt;A URI that uniquely defines the role of the relationship.&lt;/p&gt;\\n","pos":[21090,21158],"source":"\\n<p>A URI that uniquely defines the role of the relationship.</p>\\n"},{"content":"\\n&lt;p&gt;The package-level relationship to the specified part.&lt;/p&gt;\\n","pos":[21244,21308],"source":"\\n<p>The package-level relationship to the specified part.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;targetUri&lt;/em&gt; or &lt;em&gt;relationshipType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21427,21513],"source":"\\n<p>\\n<em>targetUri</em> or <em>relationshipType</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The value for &lt;em&gt;targetMode&lt;/em&gt; is not valid.&lt;/p&gt;\\n","pos":[22040,22098],"source":"\\n<p>The value for <em>targetMode</em> is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The package is read-only.&lt;/p&gt;\\n","pos":[22560,22596],"source":"\\n<p>The package is read-only.</p>\\n"},{"pos":[23885,23936],"content":"CreateRelationship(Uri, TargetMode, String, String)","needQuote":true,"nodes":[{"content":"CreateRelationship(Uri, TargetMode, String, String)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The uniform resource identifier (URI) of the target part.&lt;/p&gt;\\n","pos":[24941,25009],"source":"\\n<p>The uniform resource identifier (URI) of the target part.</p>\\n"},{"content":"\\n&lt;p&gt;A URI that uniquely defines the role of the relationship.&lt;/p&gt;\\n","pos":[25431,25499],"source":"\\n<p>A URI that uniquely defines the role of the relationship.</p>\\n"},{"content":"\\n&lt;p&gt;A unique XML identifier.&lt;/p&gt;\\n","pos":[25560,25595],"source":"\\n<p>A unique XML identifier.</p>\\n"},{"content":"\\n&lt;p&gt;The package-level relationship to the specified part.&lt;/p&gt;\\n","pos":[25681,25745],"source":"\\n<p>The package-level relationship to the specified part.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;targetUri&lt;/em&gt; or &lt;em&gt;relationshipType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[25864,25950],"source":"\\n<p>\\n<em>targetUri</em> or <em>relationshipType</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The value for &lt;em&gt;targetMode&lt;/em&gt; is not valid.&lt;/p&gt;\\n","pos":[26477,26535],"source":"\\n<p>The value for <em>targetMode</em> is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The package is read-only.&lt;/p&gt;\\n","pos":[26997,27033],"source":"\\n<p>The package is read-only.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is not a valid XML identifier; or a part with the specified &lt;em&gt;id&lt;/em&gt; already occurs in the package.&lt;/p&gt;\\n","pos":[27128,27255],"source":"\\n<p>\\n<em>id</em> is not a valid XML identifier; or a part with the specified <em>id</em> already occurs in the package.</p>\\n"},{"pos":[28586,28601],"content":"DeletePart(Uri)","needQuote":true,"nodes":[{"content":"DeletePart(Uri)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The URI of the part to delete.&lt;/p&gt;\\n","pos":[29268,29309],"source":"\\n<p>The URI of the part to delete.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[29428,29483],"source":"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The package is read-only.&lt;/p&gt;\\n","pos":[30183,30219],"source":"\\n<p>The package is read-only.</p>\\n"},{"pos":[31184,31203],"content":"DeletePartCore(Uri)","needQuote":true,"nodes":[{"content":"DeletePartCore(Uri)","pos":[0,19]}]},{"pos":[32805,32831],"content":"DeleteRelationship(String)","needQuote":true,"nodes":[{"content":"DeleteRelationship(String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[33869,33919],"source":"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The package is read-only.&lt;/p&gt;\\n","pos":[34381,34417],"source":"\\n<p>The package is read-only.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is not a valid XML identifier.&lt;/p&gt;\\n","pos":[34512,34567],"source":"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n"},{"pos":[34907,34923],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.&lt;/p&gt;\\n","pos":[35683,35826],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n"},{"pos":[36440,36447],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The package is read-only and cannot be modified.&lt;/p&gt;\\n","pos":[37489,37548],"source":"\\n<p>The package is read-only and cannot be modified.</p>\\n"},{"pos":[37827,37838],"content":"FlushCore()","needQuote":true,"nodes":[{"content":"FlushCore()","pos":[0,11]}]},{"pos":[38825,38837],"content":"GetPart(Uri)","needQuote":true,"nodes":[{"content":"GetPart(Uri)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The uniform resource identifier (URI) of the part to return.&lt;/p&gt;\\n","pos":[39504,39575],"source":"\\n<p>The uniform resource identifier (URI) of the part to return.</p>\\n"},{"content":"\\n&lt;p&gt;The part with the specified &lt;em&gt;partUri&lt;/em&gt;.&lt;/p&gt;\\n","pos":[39653,39709],"source":"\\n<p>The part with the specified <em>partUri</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39828,39883],"source":"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A part with the specified &lt;em&gt;partUri&lt;/em&gt; is not in the package.&lt;/p&gt;\\n","pos":[40264,40340],"source":"\\n<p>A part with the specified <em>partUri</em> is not in the package.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only.&lt;/p&gt;\\n","pos":[40802,40839],"source":"\\n<p>The package is write-only.</p>\\n"},{"pos":[41865,41881],"content":"GetPartCore(Uri)","needQuote":true,"nodes":[{"content":"GetPartCore(Uri)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The uniform resource identifier (URI) of the part to retrieve.&lt;/p&gt;\\n","pos":[42636,42709],"source":"\\n<p>The uniform resource identifier (URI) of the part to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The requested part; or &lt;strong&gt;null&lt;/strong&gt;, if a part with the specified &lt;em&gt;partUri&lt;/em&gt; is not in the package.&lt;/p&gt;\\n","pos":[42787,42912],"source":"\\n<p>The requested part; or <strong>null</strong>, if a part with the specified <em>partUri</em> is not in the package.</p>\\n"},{"pos":[43353,43363],"content":"GetParts()","needQuote":true,"nodes":[{"content":"GetParts()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The package is write-only.&lt;/p&gt;\\n","pos":[44691,44728],"source":"\\n<p>The package is write-only.</p>\\n"},{"pos":[45153,45167],"content":"GetPartsCore()","needQuote":true,"nodes":[{"content":"GetPartsCore()","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An array of all the parts that are contained in the package.&lt;/p&gt;\\n","pos":[45902,45973],"source":"\\n<p>An array of all the parts that are contained in the package.</p>\\n"},{"pos":[46500,46523],"content":"GetRelationship(String)","needQuote":true,"nodes":[{"content":"GetRelationship(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The package-level relationship with the specified &lt;em&gt;id&lt;/em&gt;.&lt;/p&gt;\\n","pos":[47498,47571],"source":"\\n<p>The package-level relationship with the specified <em>id</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[47690,47740],"source":"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is not a valid XML identifier.&lt;/p&gt;\\n","pos":[47835,47890],"source":"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n"},{"content":"\\n&lt;p&gt;A relationship with the specified &lt;em&gt;id&lt;/em&gt; is not in the package.&lt;/p&gt;\\n","pos":[48003,48082],"source":"\\n<p>A relationship with the specified <em>id</em> is not in the package.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only.&lt;/p&gt;\\n","pos":[48544,48581],"source":"\\n<p>The package is write-only.</p>\\n"},{"pos":[49570,49588],"content":"GetRelationships()","needQuote":true,"nodes":[{"content":"GetRelationships()","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A collection of all the package-level relationships that are contained in the package.&lt;/p&gt;\\n","pos":[50333,50430],"source":"\\n<p>A collection of all the package-level relationships that are contained in the package.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only.&lt;/p&gt;\\n","pos":[50906,50943],"source":"\\n<p>The package is write-only.</p>\\n"},{"pos":[52018,52048],"content":"GetRelationshipsByType(String)","needQuote":true,"nodes":[{"content":"GetRelationshipsByType(String)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A collection of package-level relationships that match the specified &lt;em&gt;relationshipType&lt;/em&gt;.&lt;/p&gt;\\n","pos":[53280,53386],"source":"\\n<p>A collection of package-level relationships that match the specified <em>relationshipType</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;relationshipType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[53505,53569],"source":"\\n<p>\\n<em>relationshipType</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;relationshipType&lt;/em&gt; is an empty string.&lt;/p&gt;\\n","pos":[53666,53724],"source":"\\n<p>\\n<em>relationshipType</em> is an empty string.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only.&lt;/p&gt;\\n","pos":[54186,54223],"source":"\\n<p>The package is write-only.</p>\\n"},{"pos":[55223,55235],"content":"Open(Stream)","needQuote":true,"nodes":[{"content":"Open(Stream)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The IO stream on which to open the package.&lt;/p&gt;\\n","pos":[55914,55968],"source":"\\n<p>The IO stream on which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The opened package.&lt;/p&gt;\\n","pos":[56042,56072],"source":"\\n<p>The opened package.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[56191,56245],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The package to open requires read or read/write permission and the specified &lt;em&gt;stream&lt;/em&gt; is write-only; or, the package to open requires write or read/write permission and the specified &lt;em&gt;stream&lt;/em&gt; is read-only.&lt;/p&gt;\\n","pos":[56336,56566],"source":"\\n<p>The package to open requires read or read/write permission and the specified <em>stream</em> is write-only; or, the package to open requires write or read/write permission and the specified <em>stream</em> is read-only.</p>\\n"},{"pos":[56968,56990],"content":"Open(Stream, FileMode)","needQuote":true,"nodes":[{"content":"Open(Stream, FileMode)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The IO stream on which to open the package.&lt;/p&gt;\\n","pos":[57752,57806],"source":"\\n<p>The IO stream on which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The file mode in which to open the package.&lt;/p&gt;\\n","pos":[57881,57935],"source":"\\n<p>The file mode in which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The opened package.&lt;/p&gt;\\n","pos":[58009,58039],"source":"\\n<p>The opened package.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[58158,58212],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;packageMode&lt;/em&gt; value is not valid.&lt;/p&gt;\\n","pos":[58329,58382],"source":"\\n<p>\\n<em>packageMode</em> value is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The package to open requires read or read/write permission and the specified &lt;em&gt;stream&lt;/em&gt; is write-only; or, the package to open requires write or read/write permission and the specified &lt;em&gt;stream&lt;/em&gt; is read-only.&lt;/p&gt;\\n","pos":[58473,58703],"source":"\\n<p>The package to open requires read or read/write permission and the specified <em>stream</em> is write-only; or, the package to open requires write or read/write permission and the specified <em>stream</em> is read-only.</p>\\n"},{"pos":[59178,59212],"content":"Open(Stream, FileMode, FileAccess)","needQuote":true,"nodes":[{"content":"Open(Stream, FileMode, FileAccess)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The IO stream on which to open the package.&lt;/p&gt;\\n","pos":[60073,60127],"source":"\\n<p>The IO stream on which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The file mode in which to open the package.&lt;/p&gt;\\n","pos":[60202,60256],"source":"\\n<p>The file mode in which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The file access in which to open the package.&lt;/p&gt;\\n","pos":[60335,60391],"source":"\\n<p>The file access in which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The opened package.&lt;/p&gt;\\n","pos":[60465,60495],"source":"\\n<p>The opened package.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[60614,60668],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The value for &lt;em&gt;packageMode&lt;/em&gt; or &lt;em&gt;packageAccess&lt;/em&gt; is not valid.&lt;/p&gt;\\n","pos":[60785,60870],"source":"\\n<p>The value for <em>packageMode</em> or <em>packageAccess</em> is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The package to open requires read or read/write permission and the specified &lt;em&gt;stream&lt;/em&gt; is write-only; or the package to open requires write or read/write permission and the specified &lt;em&gt;stream&lt;/em&gt; is read-only.&lt;/p&gt;\\n","pos":[60961,61190],"source":"\\n<p>The package to open requires read or read/write permission and the specified <em>stream</em> is write-only; or the package to open requires write or read/write permission and the specified <em>stream</em> is read-only.</p>\\n"},{"pos":[61548,61560],"content":"Open(String)","needQuote":true,"nodes":[{"content":"Open(String)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The path and file name of the package.&lt;/p&gt;\\n","pos":[62236,62285],"source":"\\n<p>The path and file name of the package.</p>\\n"},{"content":"\\n&lt;p&gt;The opened package.&lt;/p&gt;\\n","pos":[62359,62389],"source":"\\n<p>The opened package.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[62508,62560],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n"},{"pos":[62953,62975],"content":"Open(String, FileMode)","needQuote":true,"nodes":[{"content":"Open(String, FileMode)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The path and file name of the package.&lt;/p&gt;\\n","pos":[63729,63778],"source":"\\n<p>The path and file name of the package.</p>\\n"},{"content":"\\n&lt;p&gt;The file mode in which to open the package.&lt;/p&gt;\\n","pos":[63853,63907],"source":"\\n<p>The file mode in which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The opened package.&lt;/p&gt;\\n","pos":[63981,64011],"source":"\\n<p>The opened package.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[64130,64182],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;Value for &lt;em&gt;packageMode&lt;/em&gt; is not valid.&lt;/p&gt;\\n","pos":[64299,64354],"source":"\\n<p>Value for <em>packageMode</em> is not valid.</p>\\n"},{"pos":[64820,64854],"content":"Open(String, FileMode, FileAccess)","needQuote":true,"nodes":[{"content":"Open(String, FileMode, FileAccess)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The path and file name of the package.&lt;/p&gt;\\n","pos":[65708,65757],"source":"\\n<p>The path and file name of the package.</p>\\n"},{"content":"\\n&lt;p&gt;The file mode in which to open the package.&lt;/p&gt;\\n","pos":[65832,65886],"source":"\\n<p>The file mode in which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The file access in which to open the package.&lt;/p&gt;\\n","pos":[65965,66021],"source":"\\n<p>The file access in which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The opened package.&lt;/p&gt;\\n","pos":[66095,66125],"source":"\\n<p>The opened package.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[66244,66296],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;Value for &lt;em&gt;packageMode&lt;/em&gt; or &lt;em&gt;packageAccess&lt;/em&gt; is not valid.&lt;/p&gt;\\n","pos":[66413,66494],"source":"\\n<p>Value for <em>packageMode</em> or <em>packageAccess</em> is not valid.</p>\\n"},{"pos":[67032,67077],"content":"Open(String, FileMode, FileAccess, FileShare)","needQuote":true,"nodes":[{"content":"Open(String, FileMode, FileAccess, FileShare)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The path and file name of the package.&lt;/p&gt;\\n","pos":[68016,68065],"source":"\\n<p>The path and file name of the package.</p>\\n"},{"content":"\\n&lt;p&gt;The file mode in which to open the package.&lt;/p&gt;\\n","pos":[68140,68194],"source":"\\n<p>The file mode in which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The file access in which to open the package.&lt;/p&gt;\\n","pos":[68273,68329],"source":"\\n<p>The file access in which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The file sharing mode in which to open the package.&lt;/p&gt;\\n","pos":[68406,68468],"source":"\\n<p>The file sharing mode in which to open the package.</p>\\n"},{"content":"\\n&lt;p&gt;The opened package.&lt;/p&gt;\\n","pos":[68542,68572],"source":"\\n<p>The opened package.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[68691,68743],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The value for &lt;em&gt;packageMode&lt;/em&gt;, &lt;em&gt;packageAccess&lt;/em&gt;, or &lt;em&gt;packageShare&lt;/em&gt; is not valid.&lt;/p&gt;\\n","pos":[68860,68969],"source":"\\n<p>The value for <em>packageMode</em>, <em>packageAccess</em>, or <em>packageShare</em> is not valid.</p>\\n"},{"pos":[69347,69362],"content":"PartExists(Uri)","needQuote":true,"nodes":[{"content":"PartExists(Uri)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a part with the specified &lt;em&gt;partUri&lt;/em&gt; is in the package; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[70248,70382],"source":"\\n<p>\\n<strong>true</strong> if a part with the specified <em>partUri</em> is in the package; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[70501,70556],"source":"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only (information cannot be read).&lt;/p&gt;\\n","pos":[71286,71352],"source":"\\n<p>The package is write-only (information cannot be read).</p>\\n"},{"pos":[72300,72326],"content":"RelationshipExists(String)","needQuote":true,"nodes":[{"content":"RelationshipExists(String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a package-level relationship with the specified &lt;em&gt;id&lt;/em&gt; is in the package; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[73292,73443],"source":"\\n<p>\\n<strong>true</strong> if a package-level relationship with the specified <em>id</em> is in the package; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[73562,73612],"source":"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is not a valid XML identifier.&lt;/p&gt;\\n","pos":[73707,73762],"source":"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only.&lt;/p&gt;\\n","pos":[74224,74261],"source":"\\n<p>The package is write-only.</p>\\n"},{"pos":[74742,74763],"content":"IDisposable.Dispose()","needQuote":true,"nodes":[{"content":"IDisposable.Dispose()","pos":[0,21]}]},{"pos":[75861,75880],"content":"System.IO.Packaging","needQuote":true,"nodes":[{"content":"System.IO.Packaging","pos":[0,19]}]},{"pos":[76050,76056],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76206,76217],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[76392,76402],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[76497,76505],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[76574,76575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76602,76603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76673,76681],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[76750,76751],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76778,76779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76962,76976],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[77095,77101],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[77168,77169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77219,77225],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[77285,77286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77369,77375],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[77442,77443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77493,77499],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[77559,77560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77774,77796],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[77944,77950],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[78017,78018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78068,78074],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[78135,78136]},{"pos":[78191,78197],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78257,78258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78355,78361],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[78428,78429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78479,78485],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[78546,78547]},{"pos":[78602,78608],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78668,78669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78914,78945],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[79111,79126],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[79202,79203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79253,79259],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[79320,79321]},{"pos":[79376,79382],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79442,79443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79549,79564],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[79640,79641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79691,79697],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[79758,79759]},{"pos":[79814,79820],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79880,79881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80111,80124],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[80225,80236],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[80308,80309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80336,80337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80410,80421],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[80493,80494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80521,80522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80697,80706],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[80799,80806],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[80874,80875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80902,80903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80972,80979],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[81047,81048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81075,81076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81251,81268],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[81377,81392],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[81468,81469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81496,81497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81574,81589],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[81665,81666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81693,81694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81839,81845],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[81986,81996],"content":"FileAccess","needQuote":true,"nodes":[{"content":"FileAccess","pos":[0,10]}]},{"pos":[82138,82147],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[82324,82341],"content":"PackageProperties","needQuote":true,"nodes":[{"content":"PackageProperties","pos":[0,17]}]},{"pos":[82542,82545],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[82681,82687],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[82863,82874],"content":"PackagePart","needQuote":true,"nodes":[{"content":"PackagePart","pos":[0,11]}]},{"pos":[83097,83114],"content":"CompressionOption","needQuote":true,"nodes":[{"content":"CompressionOption","pos":[0,17]}]},{"pos":[83348,83358],"content":"TargetMode","needQuote":true,"nodes":[{"content":"TargetMode","pos":[0,10]}]},{"pos":[83580,83599],"content":"PackageRelationship","needQuote":true,"nodes":[{"content":"PackageRelationship","pos":[0,19]}]},{"pos":[83810,83817],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[84006,84027],"content":"PackagePartCollection","needQuote":true,"nodes":[{"content":"PackagePartCollection","pos":[0,21]}]},{"pos":[84226,84239],"content":"PackagePart[]","needQuote":true,"nodes":[{"content":"PackagePart[]","pos":[0,13]}]},{"pos":[84426,84437],"content":"PackagePart","needQuote":true,"nodes":[{"content":"PackagePart","pos":[0,11]}]},{"content":"[]","pos":[84495,84497]},{"pos":[84580,84591],"content":"PackagePart","needQuote":true,"nodes":[{"content":"PackagePart","pos":[0,11]}]},{"pos":[84648,84650],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[84846,84875],"content":"PackageRelationshipCollection","needQuote":true,"nodes":[{"content":"PackageRelationshipCollection","pos":[0,29]}]},{"pos":[85121,85127],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[85305,85312],"content":"Package","needQuote":true,"nodes":[{"content":"Package","pos":[0,7]}]},{"pos":[85494,85502],"content":"FileMode","needQuote":true,"nodes":[{"content":"FileMode","pos":[0,8]}]},{"pos":[85668,85677],"content":"FileShare","needQuote":true,"nodes":[{"content":"FileShare","pos":[0,9]}]},{"pos":[85862,85871],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[85974,85981],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[86033,86034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86061,86062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86136,86143],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[86195,86196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86223,86224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86391,86418],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[86626,86649],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[86843,86864],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[87065,87082],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[87279,87304],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[87517,87528],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[87687,87699],"content":"XmlException","needQuote":true,"nodes":[{"content":"XmlException","pos":[0,12]}]}],"content":"items:\n- uid: System.IO.Packaging.Package\n  commentId: T:System.IO.Packaging.Package\n  id: Package\n  parent: System.IO.Packaging\n  children:\n  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess)\n  - System.IO.Packaging.Package.Close\n  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)\n  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  - System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)\n  - System.IO.Packaging.Package.DeletePart(System.Uri)\n  - System.IO.Packaging.Package.DeletePartCore(System.Uri)\n  - System.IO.Packaging.Package.DeleteRelationship(System.String)\n  - System.IO.Packaging.Package.Dispose(System.Boolean)\n  - System.IO.Packaging.Package.FileOpenAccess\n  - System.IO.Packaging.Package.Flush\n  - System.IO.Packaging.Package.FlushCore\n  - System.IO.Packaging.Package.GetPart(System.Uri)\n  - System.IO.Packaging.Package.GetPartCore(System.Uri)\n  - System.IO.Packaging.Package.GetParts\n  - System.IO.Packaging.Package.GetPartsCore\n  - System.IO.Packaging.Package.GetRelationship(System.String)\n  - System.IO.Packaging.Package.GetRelationships\n  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n  - System.IO.Packaging.Package.Open(System.IO.Stream)\n  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)\n  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.Packaging.Package.Open(System.String)\n  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)\n  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  - System.IO.Packaging.Package.PackageProperties\n  - System.IO.Packaging.Package.PartExists(System.Uri)\n  - System.IO.Packaging.Package.RelationshipExists(System.String)\n  - System.IO.Packaging.Package.System#IDisposable#Dispose\n  langs:\n  - csharp\n  - vb\n  name: Package\n  fullName: System.IO.Packaging.Package\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Package\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 37\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Represents a container that can store multiple data objects.</p>\\n\"\n  syntax:\n    content: 'public abstract class Package : IDisposable'\n    content.vb: >-\n      Public MustInherit Class Package\n          Implements IDisposable\n  seealso:\n  - type: System.IO.Packaging.PackagePart\n    commentId: T:System.IO.Packaging.PackagePart\n  - type: System.Windows.Xps.Packaging.XpsDocument\n    commentId: T:System.Windows.Xps.Packaging.XpsDocument\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: Package\n- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)\n  commentId: M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)\n  id: '#ctor(System.IO.FileAccess)'\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Package(FileAccess)\n  fullName: System.IO.Packaging.Package.Package(System.IO.FileAccess)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 39\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that uses a given <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected Package(FileAccess openFileAccess)\n    content.vb: Protected Sub New(openFileAccess As FileAccess)\n    parameters:\n    - id: openFileAccess\n      type: System.IO.FileAccess\n      description: \"\\n<p>The file IO permissions for the package.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value for <em>openFileAccess</em> is not valid.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.FileOpenAccess\n    commentId: P:System.IO.Packaging.Package.FileOpenAccess\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: Package.Package(FileAccess)\n- uid: System.IO.Packaging.Package.FileOpenAccess\n  commentId: P:System.IO.Packaging.Package.FileOpenAccess\n  id: FileOpenAccess\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: FileOpenAccess\n  fullName: System.IO.Packaging.Package.FileOpenAccess\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FileOpenAccess\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 40\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the file access setting for the package.</p>\\n\"\n  syntax:\n    content: public FileAccess FileOpenAccess { get; }\n    content.vb: Public ReadOnly Property FileOpenAccess As FileAccess\n    parameters: []\n    return:\n      type: System.IO.FileAccess\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values: <xref href=\\\"System.IO.FileAccess.Read\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.FileAccess.Write\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.IO.FileAccess.ReadWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Package.FileOpenAccess\n- uid: System.IO.Packaging.Package.PackageProperties\n  commentId: P:System.IO.Packaging.Package.PackageProperties\n  id: PackageProperties\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: PackageProperties\n  fullName: System.IO.Packaging.Package.PackageProperties\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PackageProperties\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 41\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the core properties of the package.</p>\\n\"\n  syntax:\n    content: public PackageProperties PackageProperties { get; }\n    content.vb: Public ReadOnly Property PackageProperties As PackageProperties\n    parameters: []\n    return:\n      type: System.IO.Packaging.PackageProperties\n      description: \"\\n<p>The core properties of the package.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Package.PackageProperties\n- uid: System.IO.Packaging.Package.Close\n  commentId: M:System.IO.Packaging.Package.Close\n  id: Close\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Close()\n  fullName: System.IO.Packaging.Package.Close()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Close\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 42\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Saves and closes the package plus all underlying part streams.</p>\\n\"\n  syntax:\n    content: public void Close()\n    content.vb: Public Sub Close\n  seealso:\n  - type: System.IO.Packaging.PackagePart\n    commentId: T:System.IO.Packaging.PackagePart\n  - type: System.IO.Packaging.PackageRelationship\n    commentId: T:System.IO.Packaging.PackageRelationship\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.Close()\n- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)\n  commentId: M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)\n  id: CreatePart(System.Uri,System.String)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: CreatePart(Uri, String)\n  fullName: System.IO.Packaging.Package.CreatePart(System.Uri, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreatePart\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 43\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Creates a new uncompressed part with a given URI and content type.</p>\\n\"\n  syntax:\n    content: public PackagePart CreatePart(Uri partUri, string contentType)\n    content.vb: Public Function CreatePart(partUri As Uri, contentType As String) As PackagePart\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The uniform resource identifier (URI) of the new part.</p>\\n\"\n    - id: contentType\n      type: System.String\n      description: \"\\n<p>The content type of the data stream.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackagePart\n      description: \"\\n<p>The new created part.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>partUri</em> or <em>contentType</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>partUri</em> is not a valid <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URI.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A part with the specified <em>partUri</em> is already present in the package.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only (a new part cannot be added).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.DeletePart(System.Uri)\n    commentId: M:System.IO.Packaging.Package.DeletePart(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  - type: System.IO.Packaging.ZipPackagePart\n    commentId: T:System.IO.Packaging.ZipPackagePart\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.CreatePart(Uri, String)\n- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  commentId: M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  id: CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: CreatePart(Uri, String, CompressionOption)\n  fullName: System.IO.Packaging.Package.CreatePart(System.Uri, System.String, System.IO.Packaging.CompressionOption)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreatePart\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 44\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Creates a new part with a given URI, content type, and compression option.</p>\\n\"\n  syntax:\n    content: public PackagePart CreatePart(Uri partUri, string contentType, CompressionOption compressionOption)\n    content.vb: Public Function CreatePart(partUri As Uri, contentType As String, compressionOption As CompressionOption) As PackagePart\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the new part.</p>\\n\"\n    - id: contentType\n      type: System.String\n      description: \"\\n<p>The content type of the data stream.</p>\\n\"\n    - id: compressionOption\n      type: System.IO.Packaging.CompressionOption\n      description: \"\\n<p>The compression option for the data stream, <xref href=\\\"System.IO.Packaging.CompressionOption.NotCompressed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.CompressionOption.Normal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> compression.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackagePart\n      description: \"\\n<p>The new created part.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>partUri</em> or <em>contentType</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>partUri</em> is not a valid <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> uniform resource identifier (URI).</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A part with the specified <em>partUri</em> is already present in the package.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>compressionOption</em> value is not valid.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only (a new part cannot be added).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.DeletePart(System.Uri)\n    commentId: M:System.IO.Packaging.Package.DeletePart(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  - type: System.IO.Packaging.ZipPackagePart\n    commentId: T:System.IO.Packaging.ZipPackagePart\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.CreatePart(Uri, String, CompressionOption)\n- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  commentId: M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: CreatePartCore(Uri, String, CompressionOption)\n  fullName: System.IO.Packaging.Package.CreatePartCore(System.Uri, System.String, System.IO.Packaging.CompressionOption)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreatePartCore\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 45\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, creates a new part in the package.</p>\\n\"\n  syntax:\n    content: protected abstract PackagePart CreatePartCore(Uri partUri, string contentType, CompressionOption compressionOption)\n    content.vb: Protected MustOverride Function CreatePartCore(partUri As Uri, contentType As String, compressionOption As CompressionOption) As PackagePart\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The uniform resource identifier (URI) for the part being created.</p>\\n\"\n    - id: contentType\n      type: System.String\n      description: \"\\n<p>The content type of the data stream.</p>\\n\"\n    - id: compressionOption\n      type: System.IO.Packaging.CompressionOption\n      description: \"\\n<p>The compression option for the data stream.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackagePart\n      description: \"\\n<p>The created part.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.DeletePartCore(System.Uri)\n    commentId: M:System.IO.Packaging.Package.DeletePartCore(System.Uri)\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  nameWithType: Package.CreatePartCore(Uri, String, CompressionOption)\n- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: CreateRelationship(Uri, TargetMode, String)\n  fullName: System.IO.Packaging.Package.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateRelationship\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 46\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Creates a package-level relationship to a part with a given URI, target mode, and relationship type. </p>\\n\"\n  syntax:\n    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType)\n    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String) As PackageRelationship\n    parameters:\n    - id: targetUri\n      type: System.Uri\n      description: \"\\n<p>The uniform resource identifier (URI) of the target part.</p>\\n\"\n    - id: targetMode\n      type: System.IO.Packaging.TargetMode\n      description: \"\\n<p>Indicates if the target part is <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.TargetMode.External\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the package.</p>\\n\"\n    - id: relationshipType\n      type: System.String\n      description: \"\\n<p>A URI that uniquely defines the role of the relationship.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackageRelationship\n      description: \"\\n<p>The package-level relationship to the specified part.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>targetUri</em> or <em>relationshipType</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>targetUri</em> part is a <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <em>targetMode</em> is <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <em>targetUri</em> is an absolute URI.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value for <em>targetMode</em> is not valid.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.Package.DeleteRelationship(System.String)\n  - type: System.IO.Packaging.Package.GetRelationship(System.String)\n    commentId: M:System.IO.Packaging.Package.GetRelationship(System.String)\n  - type: System.IO.Packaging.Package.GetRelationships\n    commentId: M:System.IO.Packaging.Package.GetRelationships\n  - type: System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n  - type: System.IO.Packaging.Package.RelationshipExists(System.String)\n    commentId: M:System.IO.Packaging.Package.RelationshipExists(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.CreateRelationship(Uri, TargetMode, String)\n- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)\n  commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)\n  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: CreateRelationship(Uri, TargetMode, String, String)\n  fullName: System.IO.Packaging.Package.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateRelationship\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 47\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Creates a package-level relationship to a part with a given URI, target mode, relationship type, and identifier (ID).</p>\\n\"\n  syntax:\n    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType, string id)\n    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String, id As String) As PackageRelationship\n    parameters:\n    - id: targetUri\n      type: System.Uri\n      description: \"\\n<p>The uniform resource identifier (URI) of the target part.</p>\\n\"\n    - id: targetMode\n      type: System.IO.Packaging.TargetMode\n      description: \"\\n<p>Indicates if the target part is <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.TargetMode.External\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the package.</p>\\n\"\n    - id: relationshipType\n      type: System.String\n      description: \"\\n<p>A URI that uniquely defines the role of the relationship.</p>\\n\"\n    - id: id\n      type: System.String\n      description: \"\\n<p>A unique XML identifier.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackageRelationship\n      description: \"\\n<p>The package-level relationship to the specified part.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>targetUri</em> or <em>relationshipType</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>targetUri</em> part is a <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <em>targetMode</em> is <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <em>targetUri</em> is an absolute URI.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value for <em>targetMode</em> is not valid.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>id</em> is not a valid XML identifier; or a part with the specified <em>id</em> already occurs in the package.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.Package.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.Package.DeleteRelationship(System.String)\n  - type: System.IO.Packaging.Package.GetRelationship(System.String)\n    commentId: M:System.IO.Packaging.Package.GetRelationship(System.String)\n  - type: System.IO.Packaging.Package.GetRelationships\n    commentId: M:System.IO.Packaging.Package.GetRelationships\n  - type: System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n  - type: System.IO.Packaging.Package.RelationshipExists(System.String)\n    commentId: M:System.IO.Packaging.Package.RelationshipExists(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.CreateRelationship(Uri, TargetMode, String, String)\n- uid: System.IO.Packaging.Package.DeletePart(System.Uri)\n  commentId: M:System.IO.Packaging.Package.DeletePart(System.Uri)\n  id: DeletePart(System.Uri)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: DeletePart(Uri)\n  fullName: System.IO.Packaging.Package.DeletePart(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DeletePart\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 48\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Deletes a part with a given URI from the package.</p>\\n\"\n  syntax:\n    content: public void DeletePart(Uri partUri)\n    content.vb: Public Sub DeletePart(partUri As Uri)\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the part to delete.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>partUri</em> is not a valid <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URI.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)\n    commentId: M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.DeletePart(Uri)\n- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)\n  commentId: M:System.IO.Packaging.Package.DeletePartCore(System.Uri)\n  id: DeletePartCore(System.Uri)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: DeletePartCore(Uri)\n  fullName: System.IO.Packaging.Package.DeletePartCore(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DeletePartCore\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 49\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, deletes a part with a given URI. </p>\\n\"\n  syntax:\n    content: protected abstract void DeletePartCore(Uri partUri)\n    content.vb: Protected MustOverride Sub DeletePartCore(partUri As Uri)\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to delete.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n    commentId: M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  nameWithType: Package.DeletePartCore(Uri)\n- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)\n  commentId: M:System.IO.Packaging.Package.DeleteRelationship(System.String)\n  id: DeleteRelationship(System.String)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: DeleteRelationship(String)\n  fullName: System.IO.Packaging.Package.DeleteRelationship(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DeleteRelationship\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 50\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Deletes a package-level relationship.</p>\\n\"\n  syntax:\n    content: public void DeleteRelationship(string id)\n    content.vb: Public Sub DeleteRelationship(id As String)\n    parameters:\n    - id: id\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to delete.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.DeleteRelationship(String)\n- uid: System.IO.Packaging.Package.Dispose(System.Boolean)\n  commentId: M:System.IO.Packaging.Package.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.Packaging.Package.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 51\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.Flush\n    commentId: M:System.IO.Packaging.Package.Flush\n  - type: System.IO.Packaging.PackagePart\n    commentId: T:System.IO.Packaging.PackagePart\n  - type: System.IO.Packaging.PackageRelationship\n    commentId: T:System.IO.Packaging.PackageRelationship\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: Package.Dispose(Boolean)\n- uid: System.IO.Packaging.Package.Flush\n  commentId: M:System.IO.Packaging.Package.Flush\n  id: Flush\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.IO.Packaging.Package.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Flush\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 52\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Saves the contents of all parts and relationships that are contained in the package.</p>\\n\"\n  syntax:\n    content: public void Flush()\n    content.vb: Public Sub Flush\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only and cannot be modified.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.Flush()\n- uid: System.IO.Packaging.Package.FlushCore\n  commentId: M:System.IO.Packaging.Package.FlushCore\n  id: FlushCore\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: FlushCore()\n  fullName: System.IO.Packaging.Package.FlushCore()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FlushCore\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 53\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</p>\\n\"\n  syntax:\n    content: protected abstract void FlushCore()\n    content.vb: Protected MustOverride Sub FlushCore\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  nameWithType: Package.FlushCore()\n- uid: System.IO.Packaging.Package.GetPart(System.Uri)\n  commentId: M:System.IO.Packaging.Package.GetPart(System.Uri)\n  id: GetPart(System.Uri)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: GetPart(Uri)\n  fullName: System.IO.Packaging.Package.GetPart(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetPart\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 54\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the part with a given URI.</p>\\n\"\n  syntax:\n    content: public PackagePart GetPart(Uri partUri)\n    content.vb: Public Function GetPart(partUri As Uri) As PackagePart\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The uniform resource identifier (URI) of the part to return.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackagePart\n      description: \"\\n<p>The part with the specified <em>partUri</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>partUri</em> is not a valid <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> uniform resource identifier (URI).</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A part with the specified <em>partUri</em> is not in the package.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.GetParts\n    commentId: M:System.IO.Packaging.Package.GetParts\n  - type: System.IO.Packaging.Package.PartExists(System.Uri)\n    commentId: M:System.IO.Packaging.Package.PartExists(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.GetPart(Uri)\n- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)\n  commentId: M:System.IO.Packaging.Package.GetPartCore(System.Uri)\n  id: GetPartCore(System.Uri)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: GetPartCore(Uri)\n  fullName: System.IO.Packaging.Package.GetPartCore(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetPartCore\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 55\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, returns the part addressed by a given URI.</p>\\n\"\n  syntax:\n    content: protected abstract PackagePart GetPartCore(Uri partUri)\n    content.vb: Protected MustOverride Function GetPartCore(partUri As Uri) As PackagePart\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The uniform resource identifier (URI) of the part to retrieve.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackagePart\n      description: \"\\n<p>The requested part; or <strong>null</strong>, if a part with the specified <em>partUri</em> is not in the package.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.GetPartsCore\n    commentId: M:System.IO.Packaging.Package.GetPartsCore\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  nameWithType: Package.GetPartCore(Uri)\n- uid: System.IO.Packaging.Package.GetParts\n  commentId: M:System.IO.Packaging.Package.GetParts\n  id: GetParts\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: GetParts()\n  fullName: System.IO.Packaging.Package.GetParts()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetParts\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 56\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a collection of all the parts in the package.</p>\\n\"\n  syntax:\n    content: public PackagePartCollection GetParts()\n    content.vb: Public Function GetParts As PackagePartCollection\n    return:\n      type: System.IO.Packaging.PackagePartCollection\n      description: \"\\n<p>A collection of all the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> elements that are contained in the package.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.GetPart(System.Uri)\n    commentId: M:System.IO.Packaging.Package.GetPart(System.Uri)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.GetParts()\n- uid: System.IO.Packaging.Package.GetPartsCore\n  commentId: M:System.IO.Packaging.Package.GetPartsCore\n  id: GetPartsCore\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: GetPartsCore()\n  fullName: System.IO.Packaging.Package.GetPartsCore()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetPartsCore\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 57\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, returns an array of all the parts in the package. </p>\\n\"\n  syntax:\n    content: protected abstract PackagePart[] GetPartsCore()\n    content.vb: Protected MustOverride Function GetPartsCore As PackagePart()\n    return:\n      type: System.IO.Packaging.PackagePart[]\n      description: \"\\n<p>An array of all the parts that are contained in the package.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.GetPartCore(System.Uri)\n    commentId: M:System.IO.Packaging.Package.GetPartCore(System.Uri)\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  nameWithType: Package.GetPartsCore()\n- uid: System.IO.Packaging.Package.GetRelationship(System.String)\n  commentId: M:System.IO.Packaging.Package.GetRelationship(System.String)\n  id: GetRelationship(System.String)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: GetRelationship(String)\n  fullName: System.IO.Packaging.Package.GetRelationship(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetRelationship\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 58\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the package-level relationship with a given identifier.</p>\\n\"\n  syntax:\n    content: public PackageRelationship GetRelationship(string id)\n    content.vb: Public Function GetRelationship(id As String) As PackageRelationship\n    parameters:\n    - id: id\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the relationship to return.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackageRelationship\n      description: \"\\n<p>The package-level relationship with the specified <em>id</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A relationship with the specified <em>id</em> is not in the package.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.GetRelationships\n    commentId: M:System.IO.Packaging.Package.GetRelationships\n  - type: System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n  - type: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.Package.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.Package.DeleteRelationship(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.GetRelationship(String)\n- uid: System.IO.Packaging.Package.GetRelationships\n  commentId: M:System.IO.Packaging.Package.GetRelationships\n  id: GetRelationships\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: GetRelationships()\n  fullName: System.IO.Packaging.Package.GetRelationships()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetRelationships\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 59\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a collection of all the package-level relationships.</p>\\n\"\n  syntax:\n    content: public PackageRelationshipCollection GetRelationships()\n    content.vb: Public Function GetRelationships As PackageRelationshipCollection\n    return:\n      type: System.IO.Packaging.PackageRelationshipCollection\n      description: \"\\n<p>A collection of all the package-level relationships that are contained in the package.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.GetRelationship(System.String)\n    commentId: M:System.IO.Packaging.Package.GetRelationship(System.String)\n  - type: System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n  - type: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.Package.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.Package.DeleteRelationship(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.GetRelationships()\n- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n  commentId: M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n  id: GetRelationshipsByType(System.String)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: GetRelationshipsByType(String)\n  fullName: System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetRelationshipsByType\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 60\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a collection of all the package-level relationships that match a given <xref href=\\\"System.IO.Packaging.PackageRelationship.RelationshipType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public PackageRelationshipCollection GetRelationshipsByType(string relationshipType)\n    content.vb: Public Function GetRelationshipsByType(relationshipType As String) As PackageRelationshipCollection\n    parameters:\n    - id: relationshipType\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.RelationshipType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  to match and return in the collection.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackageRelationshipCollection\n      description: \"\\n<p>A collection of package-level relationships that match the specified <em>relationshipType</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>relationshipType</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>relationshipType</em> is an empty string.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.GetRelationship(System.String)\n    commentId: M:System.IO.Packaging.Package.GetRelationship(System.String)\n  - type: System.IO.Packaging.Package.GetRelationships\n    commentId: M:System.IO.Packaging.Package.GetRelationships\n  - type: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.Package.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.Package.DeleteRelationship(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.GetRelationshipsByType(String)\n- uid: System.IO.Packaging.Package.Open(System.IO.Stream)\n  commentId: M:System.IO.Packaging.Package.Open(System.IO.Stream)\n  id: Open(System.IO.Stream)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Open(Stream)\n  fullName: System.IO.Packaging.Package.Open(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Open\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 61\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Opens a package on a given IO stream.</p>\\n\"\n  syntax:\n    content: public static Package Open(Stream stream)\n    content.vb: Public Shared Function Open(stream As Stream) As Package\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The IO stream on which to open the package.</p>\\n\"\n    return:\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The opened package.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package to open requires read or read/write permission and the specified <em>stream</em> is write-only; or, the package to open requires write or read/write permission and the specified <em>stream</em> is read-only.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Package.Open(Stream)\n- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)\n  commentId: M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)\n  id: Open(System.IO.Stream,System.IO.FileMode)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Open(Stream, FileMode)\n  fullName: System.IO.Packaging.Package.Open(System.IO.Stream, System.IO.FileMode)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Open\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 62\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Opens a package with a given IO stream and file mode.</p>\\n\"\n  syntax:\n    content: public static Package Open(Stream stream, FileMode packageMode)\n    content.vb: Public Shared Function Open(stream As Stream, packageMode As FileMode) As Package\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The IO stream on which to open the package.</p>\\n\"\n    - id: packageMode\n      type: System.IO.FileMode\n      description: \"\\n<p>The file mode in which to open the package.</p>\\n\"\n    return:\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The opened package.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>packageMode</em> value is not valid.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package to open requires read or read/write permission and the specified <em>stream</em> is write-only; or, the package to open requires write or read/write permission and the specified <em>stream</em> is read-only.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Package.Open(Stream, FileMode)\n- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)\n  commentId: M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)\n  id: Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Open(Stream, FileMode, FileAccess)\n  fullName: System.IO.Packaging.Package.Open(System.IO.Stream, System.IO.FileMode, System.IO.FileAccess)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Open\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 63\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Opens a package with a given IO stream, file mode, and file access setting.</p>\\n\"\n  syntax:\n    content: public static Package Open(Stream stream, FileMode packageMode, FileAccess packageAccess)\n    content.vb: Public Shared Function Open(stream As Stream, packageMode As FileMode, packageAccess As FileAccess) As Package\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The IO stream on which to open the package.</p>\\n\"\n    - id: packageMode\n      type: System.IO.FileMode\n      description: \"\\n<p>The file mode in which to open the package.</p>\\n\"\n    - id: packageAccess\n      type: System.IO.FileAccess\n      description: \"\\n<p>The file access in which to open the package.</p>\\n\"\n    return:\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The opened package.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value for <em>packageMode</em> or <em>packageAccess</em> is not valid.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package to open requires read or read/write permission and the specified <em>stream</em> is write-only; or the package to open requires write or read/write permission and the specified <em>stream</em> is read-only.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Package.Open(Stream, FileMode, FileAccess)\n- uid: System.IO.Packaging.Package.Open(System.String)\n  commentId: M:System.IO.Packaging.Package.Open(System.String)\n  id: Open(System.String)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Open(String)\n  fullName: System.IO.Packaging.Package.Open(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Open\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 64\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Opens a package at a given path and file name.</p>\\n\"\n  syntax:\n    content: public static Package Open(string path)\n    content.vb: Public Shared Function Open(path As String) As Package\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path and file name of the package.</p>\\n\"\n    return:\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The opened package.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Package.Open(String)\n- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)\n  commentId: M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)\n  id: Open(System.String,System.IO.FileMode)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Open(String, FileMode)\n  fullName: System.IO.Packaging.Package.Open(System.String, System.IO.FileMode)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Open\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 65\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Opens a package at a given path using a given file mode. </p>\\n\"\n  syntax:\n    content: public static Package Open(string path, FileMode packageMode)\n    content.vb: Public Shared Function Open(path As String, packageMode As FileMode) As Package\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path and file name of the package.</p>\\n\"\n    - id: packageMode\n      type: System.IO.FileMode\n      description: \"\\n<p>The file mode in which to open the package.</p>\\n\"\n    return:\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The opened package.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>Value for <em>packageMode</em> is not valid.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Package.Open(String, FileMode)\n- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  commentId: M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Open(String, FileMode, FileAccess)\n  fullName: System.IO.Packaging.Package.Open(System.String, System.IO.FileMode, System.IO.FileAccess)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Open\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 66\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Opens a package at a given path using a given file mode and file access setting.</p>\\n\"\n  syntax:\n    content: public static Package Open(string path, FileMode packageMode, FileAccess packageAccess)\n    content.vb: Public Shared Function Open(path As String, packageMode As FileMode, packageAccess As FileAccess) As Package\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path and file name of the package.</p>\\n\"\n    - id: packageMode\n      type: System.IO.FileMode\n      description: \"\\n<p>The file mode in which to open the package.</p>\\n\"\n    - id: packageAccess\n      type: System.IO.FileAccess\n      description: \"\\n<p>The file access in which to open the package.</p>\\n\"\n    return:\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The opened package.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>Value for <em>packageMode</em> or <em>packageAccess</em> is not valid.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Package.Open(String, FileMode, FileAccess)\n- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  commentId: M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: Open(String, FileMode, FileAccess, FileShare)\n  fullName: System.IO.Packaging.Package.Open(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Open\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 67\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Opens a package at a given path using a given file mode, file access, and file share setting.</p>\\n\"\n  syntax:\n    content: public static Package Open(string path, FileMode packageMode, FileAccess packageAccess, FileShare packageShare)\n    content.vb: Public Shared Function Open(path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path and file name of the package.</p>\\n\"\n    - id: packageMode\n      type: System.IO.FileMode\n      description: \"\\n<p>The file mode in which to open the package.</p>\\n\"\n    - id: packageAccess\n      type: System.IO.FileAccess\n      description: \"\\n<p>The file access in which to open the package.</p>\\n\"\n    - id: packageShare\n      type: System.IO.FileShare\n      description: \"\\n<p>The file sharing mode in which to open the package.</p>\\n\"\n    return:\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The opened package.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value for <em>packageMode</em>, <em>packageAccess</em>, or <em>packageShare</em> is not valid.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Package.Open(String, FileMode, FileAccess, FileShare)\n- uid: System.IO.Packaging.Package.PartExists(System.Uri)\n  commentId: M:System.IO.Packaging.Package.PartExists(System.Uri)\n  id: PartExists(System.Uri)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: PartExists(Uri)\n  fullName: System.IO.Packaging.Package.PartExists(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PartExists\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 68\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Indicates whether a part with a given URI is in the package.</p>\\n\"\n  syntax:\n    content: public virtual bool PartExists(Uri partUri)\n    content.vb: Public Overridable Function PartExists(partUri As Uri) As Boolean\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the part to check for.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a part with the specified <em>partUri</em> is in the package; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>partUri</em> is not a valid <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> uniform resource identifier (URI).</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only (information cannot be read).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  - type: System.IO.Packaging.PackagePart\n    commentId: T:System.IO.Packaging.PackagePart\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: Package.PartExists(Uri)\n- uid: System.IO.Packaging.Package.RelationshipExists(System.String)\n  commentId: M:System.IO.Packaging.Package.RelationshipExists(System.String)\n  id: RelationshipExists(System.String)\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: RelationshipExists(String)\n  fullName: System.IO.Packaging.Package.RelationshipExists(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RelationshipExists\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 69\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Indicates whether a package-level relationship with a given ID is contained in the package.</p>\\n\"\n  syntax:\n    content: public bool RelationshipExists(string id)\n    content.vb: Public Function RelationshipExists(id As String) As Boolean\n    parameters:\n    - id: id\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the relationship to check for.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a package-level relationship with the specified <em>id</em> is in the package; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The package is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageRelationship\n    commentId: T:System.IO.Packaging.PackageRelationship\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Package.RelationshipExists(String)\n- uid: System.IO.Packaging.Package.System#IDisposable#Dispose\n  commentId: M:System.IO.Packaging.Package.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.IO.Packaging.Package\n  langs:\n  - csharp\n  - vb\n  name: IDisposable.Dispose()\n  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IDisposable.Dispose\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 70\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended for application use.  Use the type-safe <xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method instead. </p>\\n\"\n  syntax:\n    content: void IDisposable.Dispose()\n    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose\n  implements:\n  - System.IDisposable.Dispose\n  name.vb: System.IDisposable.Dispose()\n  nameWithType: Package.IDisposable.Dispose()\n  nameWithType.vb: Package.System.IDisposable.Dispose()\nreferences:\n- uid: System.IO.Packaging\n  isExternal: false\n  name: System.IO.Packaging\n  fullName: System.IO.Packaging\n  commentId: N:System.IO.Packaging\n  nameWithType: System.IO.Packaging\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  fullName: System.IO.FileAccess\n  commentId: T:System.IO.FileAccess\n  nameWithType: FileAccess\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.IO.Packaging.PackageProperties\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackageProperties\n  fullName: System.IO.Packaging.PackageProperties\n  commentId: T:System.IO.Packaging.PackageProperties\n  nameWithType: PackageProperties\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.IO.Packaging.PackagePart\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackagePart\n  fullName: System.IO.Packaging.PackagePart\n  commentId: T:System.IO.Packaging.PackagePart\n  nameWithType: PackagePart\n- uid: System.IO.Packaging.CompressionOption\n  parent: System.IO.Packaging\n  isExternal: false\n  name: CompressionOption\n  fullName: System.IO.Packaging.CompressionOption\n  commentId: T:System.IO.Packaging.CompressionOption\n  nameWithType: CompressionOption\n- uid: System.IO.Packaging.TargetMode\n  parent: System.IO.Packaging\n  isExternal: false\n  name: TargetMode\n  fullName: System.IO.Packaging.TargetMode\n  commentId: T:System.IO.Packaging.TargetMode\n  nameWithType: TargetMode\n- uid: System.IO.Packaging.PackageRelationship\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackageRelationship\n  fullName: System.IO.Packaging.PackageRelationship\n  commentId: T:System.IO.Packaging.PackageRelationship\n  nameWithType: PackageRelationship\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IO.Packaging.PackagePartCollection\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackagePartCollection\n  fullName: System.IO.Packaging.PackagePartCollection\n  commentId: T:System.IO.Packaging.PackagePartCollection\n  nameWithType: PackagePartCollection\n- uid: System.IO.Packaging.PackagePart[]\n  name: PackagePart[]\n  fullName: System.IO.Packaging.PackagePart[]\n  fullname.vb: System.IO.Packaging.PackagePart()\n  name.vb: PackagePart()\n  spec.csharp:\n  - uid: System.IO.Packaging.PackagePart\n    name: PackagePart\n    fullName: System.IO.Packaging.PackagePart\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.IO.Packaging.PackagePart\n    name: PackagePart\n    fullName: System.IO.Packaging.PackagePart\n  - name: ()\n    fullName: ()\n  nameWithType: PackagePart[]\n  nameWithType.vb: PackagePart()\n- uid: System.IO.Packaging.PackageRelationshipCollection\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackageRelationshipCollection\n  fullName: System.IO.Packaging.PackageRelationshipCollection\n  commentId: T:System.IO.Packaging.PackageRelationshipCollection\n  nameWithType: PackageRelationshipCollection\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO.Packaging.Package\n  parent: System.IO.Packaging\n  isExternal: false\n  name: Package\n  fullName: System.IO.Packaging.Package\n  commentId: T:System.IO.Packaging.Package\n  nameWithType: Package\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  fullName: System.IO.FileMode\n  commentId: T:System.IO.FileMode\n  nameWithType: FileMode\n- uid: System.IO.FileShare\n  parent: System.IO\n  isExternal: false\n  name: FileShare\n  fullName: System.IO.FileShare\n  commentId: T:System.IO.FileShare\n  nameWithType: FileShare\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.Xml.XmlException\n  isExternal: false\n  name: XmlException\n  fullName: System.Xml.XmlException\n  commentId: T:System.Xml.XmlException\n  nameWithType: XmlException\n"}