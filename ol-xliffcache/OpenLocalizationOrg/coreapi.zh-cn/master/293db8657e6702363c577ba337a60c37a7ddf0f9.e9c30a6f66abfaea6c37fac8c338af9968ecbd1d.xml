{"nodes":[{"pos":[519,539],"content":"IXsltContextFunction","needQuote":true,"nodes":[{"content":"IXsltContextFunction","pos":[0,20]}]},{"pos":[1588,1596],"content":"ArgTypes","needQuote":true,"nodes":[{"content":"ArgTypes","pos":[0,8]}]},{"pos":[2976,2983],"content":"Maxargs","needQuote":true,"nodes":[{"content":"Maxargs","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The maximum number of arguments for the function.&lt;/p&gt;\\n","pos":[3724,3784],"source":"\\n<p>The maximum number of arguments for the function.</p>\\n"},{"pos":[4093,4100],"content":"Minargs","needQuote":true,"nodes":[{"content":"Minargs","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The minimum number of arguments for the function.&lt;/p&gt;\\n","pos":[4841,4901],"source":"\\n<p>The minimum number of arguments for the function.</p>\\n"},{"pos":[5219,5229],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[6763,6814],"content":"Invoke(XsltContext, Object[], XPath.XPathNavigator)","needQuote":true,"nodes":[{"content":"Invoke(XsltContext, Object[], XPath.XPathNavigator)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The XSLT context for the function call.","pos":[7753,7797],"source":"\\n<p>The XSLT context for the function call."},{"content":"&lt;/p&gt;\\n","pos":[7798,7804],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The arguments of the function call.","pos":[7869,7909],"source":"\\n<p>The arguments of the function call."},{"content":"Each argument is an element in the array.","pos":[7910,7951]},{"content":"&lt;/p&gt;\\n","pos":[7952,7958],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The context node for the function call.","pos":[8045,8089],"source":"\\n<p>The context node for the function call."},{"content":"&lt;/p&gt;\\n","pos":[8090,8096],"source":" </p>\\n"},{"pos":[8734,8748],"content":"System.Xml.Xsl","needQuote":true,"nodes":[{"content":"System.Xml.Xsl","pos":[0,14]}]},{"pos":[8887,8910],"content":"XPath.XPathResultType[]","needQuote":true,"nodes":[{"content":"XPath.XPathResultType[]","pos":[0,23]}]},{"pos":[9110,9131],"content":"XPath.XPathResultType","needQuote":true,"nodes":[{"content":"XPath.XPathResultType","pos":[0,21]}]},{"content":"[]","pos":[9211,9213]},{"pos":[9297,9318],"content":"XPath.XPathResultType","needQuote":true,"nodes":[{"content":"XPath.XPathResultType","pos":[0,21]}]},{"pos":[9397,9399],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[9565,9570],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9688,9694],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[9854,9869],"content":"XPathResultType","needQuote":true,"nodes":[{"content":"XPathResultType","pos":[0,15]}]},{"pos":[10047,10063],"content":"System.Xml.XPath","needQuote":true,"nodes":[{"content":"System.Xml.XPath","pos":[0,16]}]},{"pos":[10245,10256],"content":"XsltContext","needQuote":true,"nodes":[{"content":"XsltContext","pos":[0,11]}]},{"pos":[10397,10405],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[10533,10539],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[10600,10602]},{"pos":[10667,10673],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10733,10735],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[10900,10914],"content":"XPathNavigator","needQuote":true,"nodes":[{"content":"XPathNavigator","pos":[0,14]}]},{"pos":[11103,11109],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"items:\n- uid: System.Xml.Xsl.IXsltContextFunction\n  commentId: T:System.Xml.Xsl.IXsltContextFunction\n  id: IXsltContextFunction\n  parent: System.Xml.Xsl\n  children:\n  - System.Xml.Xsl.IXsltContextFunction.ArgTypes\n  - System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)\n  - System.Xml.Xsl.IXsltContextFunction.Maxargs\n  - System.Xml.Xsl.IXsltContextFunction.Minargs\n  - System.Xml.Xsl.IXsltContextFunction.ReturnType\n  langs:\n  - csharp\n  - vb\n  name: IXsltContextFunction\n  fullName: System.Xml.Xsl.IXsltContextFunction\n  type: Interface\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IXsltContextFunction\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 10\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Provides an interface to a given function defined in the Extensible Stylesheet Language for Transformations (XSLT) style sheet during runtime execution.</p>\\n\"\n  syntax:\n    content: public interface IXsltContextFunction\n    content.vb: Public Interface IXsltContextFunction\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IXsltContextFunction\n- uid: System.Xml.Xsl.IXsltContextFunction.ArgTypes\n  commentId: P:System.Xml.Xsl.IXsltContextFunction.ArgTypes\n  id: ArgTypes\n  parent: System.Xml.Xsl.IXsltContextFunction\n  langs:\n  - csharp\n  - vb\n  name: ArgTypes\n  fullName: System.Xml.Xsl.IXsltContextFunction.ArgTypes\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ArgTypes\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 12\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Gets the supplied XML Path Language (XPath) types for the function's argument list. This information can be used to discover the signature of the function which allows you to differentiate between overloaded functions.</p>\\n\"\n  syntax:\n    content: XPath.XPathResultType[] ArgTypes { get; }\n    content.vb: ReadOnly Property ArgTypes As XPath.XPathResultType()\n    parameters: []\n    return:\n      type: System.Xml.XPath.XPathResultType[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Xml.XPath.XPathResultType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the types for the function's argument list.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IXsltContextFunction.ArgTypes\n- uid: System.Xml.Xsl.IXsltContextFunction.Maxargs\n  commentId: P:System.Xml.Xsl.IXsltContextFunction.Maxargs\n  id: Maxargs\n  parent: System.Xml.Xsl.IXsltContextFunction\n  langs:\n  - csharp\n  - vb\n  name: Maxargs\n  fullName: System.Xml.Xsl.IXsltContextFunction.Maxargs\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Maxargs\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 13\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Gets the maximum number of arguments for the function. This enables the user to differentiate between overloaded functions.</p>\\n\"\n  syntax:\n    content: int Maxargs { get; }\n    content.vb: ReadOnly Property Maxargs As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum number of arguments for the function.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IXsltContextFunction.Maxargs\n- uid: System.Xml.Xsl.IXsltContextFunction.Minargs\n  commentId: P:System.Xml.Xsl.IXsltContextFunction.Minargs\n  id: Minargs\n  parent: System.Xml.Xsl.IXsltContextFunction\n  langs:\n  - csharp\n  - vb\n  name: Minargs\n  fullName: System.Xml.Xsl.IXsltContextFunction.Minargs\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Minargs\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 14\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Gets the minimum number of arguments for the function. This enables the user to differentiate between overloaded functions.</p>\\n\"\n  syntax:\n    content: int Minargs { get; }\n    content.vb: ReadOnly Property Minargs As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The minimum number of arguments for the function.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IXsltContextFunction.Minargs\n- uid: System.Xml.Xsl.IXsltContextFunction.ReturnType\n  commentId: P:System.Xml.Xsl.IXsltContextFunction.ReturnType\n  id: ReturnType\n  parent: System.Xml.Xsl.IXsltContextFunction\n  langs:\n  - csharp\n  - vb\n  name: ReturnType\n  fullName: System.Xml.Xsl.IXsltContextFunction.ReturnType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReturnType\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 15\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Xml.XPath.XPathResultType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the XPath type returned by the function.</p>\\n\"\n  syntax:\n    content: XPath.XPathResultType ReturnType { get; }\n    content.vb: ReadOnly Property ReturnType As XPath.XPathResultType\n    parameters: []\n    return:\n      type: System.Xml.XPath.XPathResultType\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XPath.XPathResultType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the XPath type returned by the function </p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IXsltContextFunction.ReturnType\n- uid: System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)\n  commentId: M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)\n  id: Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)\n  parent: System.Xml.Xsl.IXsltContextFunction\n  langs:\n  - csharp\n  - vb\n  name: Invoke(XsltContext, Object[], XPath.XPathNavigator)\n  fullName: System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext, System.Object[], System.Xml.XPath.XPathNavigator)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Invoke\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 16\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Provides the method to invoke the function with the given arguments in the given context.</p>\\n\"\n  syntax:\n    content: object Invoke(XsltContext xsltContext, object[] args, XPath.XPathNavigator docContext)\n    content.vb: Function Invoke(xsltContext As XsltContext, args As Object(), docContext As XPath.XPathNavigator) As Object\n    parameters:\n    - id: xsltContext\n      type: System.Xml.Xsl.XsltContext\n      description: \"\\n<p>The XSLT context for the function call. </p>\\n\"\n    - id: args\n      type: System.Object[]\n      description: \"\\n<p>The arguments of the function call. Each argument is an element in the array. </p>\\n\"\n    - id: docContext\n      type: System.Xml.XPath.XPathNavigator\n      description: \"\\n<p>The context node for the function call. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the return value of the function.</p>\\n\"\n  fullName.vb: System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext, System.Object(), System.Xml.XPath.XPathNavigator)\n  name.vb: Invoke(XsltContext, Object(), XPath.XPathNavigator)\n  nameWithType: IXsltContextFunction.Invoke(XsltContext, Object[], XPath.XPathNavigator)\n  nameWithType.vb: IXsltContextFunction.Invoke(XsltContext, Object(), XPath.XPathNavigator)\nreferences:\n- uid: System.Xml.Xsl\n  isExternal: false\n  name: System.Xml.Xsl\n  fullName: System.Xml.Xsl\n  commentId: N:System.Xml.Xsl\n  nameWithType: System.Xml.Xsl\n- uid: System.Xml.XPath.XPathResultType[]\n  name: XPath.XPathResultType[]\n  fullName: System.Xml.XPath.XPathResultType[]\n  fullname.vb: System.Xml.XPath.XPathResultType()\n  name.vb: XPath.XPathResultType()\n  spec.csharp:\n  - uid: System.Xml.XPath.XPathResultType\n    name: XPath.XPathResultType\n    fullName: System.Xml.XPath.XPathResultType\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Xml.XPath.XPathResultType\n    name: XPath.XPathResultType\n    fullName: System.Xml.XPath.XPathResultType\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: XPath.XPathResultType[]\n  nameWithType.vb: XPath.XPathResultType()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.XPath.XPathResultType\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathResultType\n  fullName: System.Xml.XPath.XPathResultType\n  commentId: T:System.Xml.XPath.XPathResultType\n  nameWithType: XPathResultType\n- uid: System.Xml.XPath\n  isExternal: false\n  name: System.Xml.XPath\n  fullName: System.Xml.XPath\n  commentId: N:System.Xml.XPath\n  nameWithType: System.Xml.XPath\n- uid: System.Xml.Xsl.XsltContext\n  parent: System.Xml.Xsl\n  isExternal: false\n  name: XsltContext\n  fullName: System.Xml.Xsl.XsltContext\n  commentId: T:System.Xml.Xsl.XsltContext\n  nameWithType: XsltContext\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Xml.XPath.XPathNavigator\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathNavigator\n  fullName: System.Xml.XPath.XPathNavigator\n  commentId: T:System.Xml.XPath.XPathNavigator\n  nameWithType: XPathNavigator\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n"}