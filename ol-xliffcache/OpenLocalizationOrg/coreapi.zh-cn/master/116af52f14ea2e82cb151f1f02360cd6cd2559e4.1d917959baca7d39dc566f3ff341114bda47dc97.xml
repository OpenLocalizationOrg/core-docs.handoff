{"nodes":[{"pos":[549,558],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[1983,1994],"content":"Exception()","needQuote":true,"nodes":[{"content":"Exception()","pos":[0,11]}]},{"pos":[2830,2847],"content":"Exception(String)","needQuote":true,"nodes":[{"content":"Exception(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The message that describes the error.","pos":[3555,3597],"source":"\\n<p>The message that describes the error."},{"content":"&lt;/p&gt;\\n","pos":[3598,3604],"source":" </p>\\n"},{"pos":[3948,3976],"content":"Exception(String, Exception)","needQuote":true,"nodes":[{"content":"Exception(String, Exception)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[4832,4898],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[4899,4905],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception, or a null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic) if no inner exception is specified.","pos":[4981,5142],"source":"\\n<p>The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified."},{"content":"&lt;/p&gt;\\n","pos":[5143,5149],"source":" </p>\\n"},{"pos":[5403,5407],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[6795,6803],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The Uniform Resource Name (URN) or Uniform Resource Locator (URL).&lt;/p&gt;\\n","pos":[7438,7515],"source":"\\n<p>The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</p>\\n"},{"pos":[7802,7809],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The HRESULT value.&lt;/p&gt;\\n","pos":[8446,8475],"source":"\\n<p>The HRESULT value.</p>\\n"},{"pos":[8790,8804],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[10265,10272],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[11278,11284],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The name of the application or the object that causes the error.&lt;/p&gt;\\n","pos":[12020,12095],"source":"\\n<p>The name of the application or the object that causes the error.</p>\\n"},{"pos":[12624,12634],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A string that describes the immediate frames of the call stack.&lt;/p&gt;\\n","pos":[13349,13423],"source":"\\n<p>A string that describes the immediate frames of the call stack.</p>\\n"},{"pos":[13842,13860],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[15211,15221],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A string representation of the current exception.&lt;/p&gt;\\n","pos":[15903,15963],"source":"\\n<p>A string representation of the current exception.</p>\\n"},{"pos":[16178,16184],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16315,16321],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16494,16508],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16627,16633],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16700,16701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16751,16757],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16817,16818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16901,16907],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16974,16975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17025,17031],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17091,17092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17306,17328],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17476,17482],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17549,17550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17600,17606],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17667,17668]},{"pos":[17723,17729],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17789,17790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17887,17893],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17960,17961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18011,18017],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18078,18079]},{"pos":[18134,18140],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18200,18201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18446,18477],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18643,18658],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18734,18735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18785,18791],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18852,18853]},{"pos":[18908,18914],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18974,18975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19081,19096],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19172,19173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19223,19229],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19290,19291]},{"pos":[19346,19352],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19412,19413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19643,19656],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19757,19768],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19840,19841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19868,19869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19942,19953],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20025,20026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20053,20054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20229,20238],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20331,20338],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20406,20407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20434,20435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20504,20511],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20579,20580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20607,20608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20783,20800],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20909,20924],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21000,21001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21028,21029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21106,21121],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21197,21198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21225,21226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21395,21401],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21549,21558],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[21741,21752],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[21924,21942],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[22108,22113],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22270,22280],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22375,22383],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22452,22453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22480,22481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22551,22559],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22628,22629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22656,22657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22823,22840],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Exception\n  commentId: T:System.Exception\n  id: Exception\n  parent: System\n  children:\n  - System.Exception.#ctor\n  - System.Exception.#ctor(System.String)\n  - System.Exception.#ctor(System.String,System.Exception)\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.ToString\n  langs:\n  - csharp\n  - vb\n  name: Exception\n  fullName: System.Exception\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Exception\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 29\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents errors that occur during application execution.</p>\\n\"\n  syntax:\n    content: >-\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_Exception))]\n\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class Exception : ISerializable, _Exception\n    content.vb: >-\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_Exception))>\n\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class Exception\n          Implements ISerializable, _Exception\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: Exception\n- uid: System.Exception.#ctor\n  commentId: M:System.Exception.#ctor\n  id: '#ctor'\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: Exception()\n  fullName: System.Exception.Exception()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 55\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public Exception()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Exception.Exception()\n- uid: System.Exception.#ctor(System.String)\n  commentId: M:System.Exception.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: Exception(String)\n  fullName: System.Exception.Exception(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 59\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public Exception(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message that describes the error. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Exception.Exception(String)\n- uid: System.Exception.#ctor(System.String,System.Exception)\n  commentId: M:System.Exception.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: Exception(String, Exception)\n  fullName: System.Exception.Exception(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 69\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public Exception(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Exception.Exception(String, Exception)\n- uid: System.Exception.Data\n  commentId: P:System.Exception.Data\n  id: Data\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: Data\n  fullName: System.Exception.Data\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Data\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 144\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets a collection of key/value pairs that provide additional user-defined information about the exception.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual IDictionary Data\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property Data As IDictionary\n    parameters: []\n    return:\n      type: System.Collections.IDictionary\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface and contains a collection of user-defined key/value pairs. The default is an empty collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.DictionaryEntry\n    commentId: T:System.Collections.DictionaryEntry\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: Exception.Data\n- uid: System.Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n  id: HelpLink\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: HelpLink\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 369\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets or sets a link to the help file associated with this exception.</p>\\n\"\n  syntax:\n    content: public virtual string HelpLink { get; set; }\n    content.vb: Public Overridable Property HelpLink As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: Exception.HelpLink\n- uid: System.Exception.HResult\n  commentId: P:System.Exception.HResult\n  id: HResult\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: HResult\n  fullName: System.Exception.HResult\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: HResult\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 864\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</p>\\n\"\n  syntax:\n    content: public int HResult { get; protected set; }\n    content.vb: Public Property HResult As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The HRESULT value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n  nameWithType: Exception.HResult\n- uid: System.Exception.InnerException\n  commentId: P:System.Exception.InnerException\n  id: InnerException\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: InnerException\n  fullName: System.Exception.InnerException\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InnerException\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 257\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that caused the current exception.</p>\\n\"\n  syntax:\n    content: public Exception InnerException { get; }\n    content.vb: Public ReadOnly Property InnerException As Exception\n    parameters: []\n    return:\n      type: System.Exception\n      description: \"\\n<p>An object that describes the error that caused the current exception. The <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property returns the same value as was passed into the <xref href=\\\"System.Exception.#ctor(System.String,System.Exception)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor, or <strong>null</strong> if the inner exception value was not supplied to the constructor. This property is read-only.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Exception.InnerException\n- uid: System.Exception.Message\n  commentId: P:System.Exception.Message\n  id: Message\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: Message\n  fullName: System.Exception.Message\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Message\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 130\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets a message that describes the current exception.</p>\\n\"\n  syntax:\n    content: public virtual string Message { get; }\n    content.vb: Public Overridable ReadOnly Property Message As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception, or an empty string (\\\"\\\").</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: Exception.Message\n- uid: System.Exception.Source\n  commentId: P:System.Exception.Source\n  id: Source\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: Source\n  fullName: System.Exception.Source\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Source\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 381\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets or sets the name of the application or the object that causes the error.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual string Source\n\n      {\n          [SecurityCritical]\n          get;\n          [SecurityCritical]\n          set;\n      }\n    content.vb: Public Overridable Property Source As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the application or the object that causes the error.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The object must be a runtime <xref href=\\\"System.Reflection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: Exception.Source\n- uid: System.Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n  id: StackTrace\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StackTrace\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 306\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets a string representation of the immediate frames on the call stack.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual string StackTrace\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property StackTrace As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string that describes the immediate frames of the call stack.</p>\\n\"\n  seealso:\n  - type: System.Environment.StackTrace\n    commentId: P:System.Environment.StackTrace\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: Exception.StackTrace\n- uid: System.Exception.GetBaseException\n  commentId: M:System.Exception.GetBaseException\n  id: GetBaseException\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetBaseException\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 242\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>When overridden in a derived class, returns the <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the root cause of one or more subsequent exceptions.</p>\\n\"\n  syntax:\n    content: public virtual Exception GetBaseException()\n    content.vb: Public Overridable Function GetBaseException As Exception\n    return:\n      type: System.Exception\n      description: \"\\n<p>The first exception thrown in a chain of exceptions. If the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the current exception is a null reference (<strong>Nothing</strong> in Visual Basic), this property returns the current exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: Exception.GetBaseException()\n- uid: System.Exception.ToString\n  commentId: M:System.Exception.ToString\n  id: ToString\n  parent: System.Exception\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Exception.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Exception.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Exception.cs\n    startLine: 420\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Creates and returns a string representation of the current exception.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string representation of the current exception.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Exception.ToString()\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  fullName: System.Collections.IDictionary\n  nameWithType: IDictionary\n  commentId: T:System.Collections.IDictionary\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}