{"nodes":[{"pos":[233,247],"content":"MatchEvaluator","needQuote":true,"nodes":[{"content":"MatchEvaluator","pos":[0,14]}]},{"pos":[2299,2329],"content":"System.Text.RegularExpressions","needQuote":true,"nodes":[{"content":"System.Text.RegularExpressions","pos":[0,30]}]},{"pos":[2704,2719],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2888,2901],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2986,2987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3014,3015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3122,3135],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3220,3221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3248,3249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3531,3536],"content":"Match","needQuote":true,"nodes":[{"content":"Match","pos":[0,5]}]},{"pos":[3726,3732],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[3922,3945],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[4146,4159],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4244,4245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4297,4305],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4367,4368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4492,4505],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4590,4591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4643,4651],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4713,4714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5000,5027],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[5233,5239],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5357,5374],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.Text.RegularExpressions.MatchEvaluator\n  commentId: T:System.Text.RegularExpressions.MatchEvaluator\n  id: MatchEvaluator\n  parent: System.Text.RegularExpressions\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: MatchEvaluator\n  fullName: System.Text.RegularExpressions.MatchEvaluator\n  type: Delegate\n  source:\n    remote:\n      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MatchEvaluator\n    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs\n    startLine: 64\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: \"\\n<p>Represents the method that is called each time a regular expression match is found during a <xref href=\\\"System.Text.RegularExpressions.Regex.Replace(System.String,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method operation.</p>\\n\"\n  syntax:\n    content: public delegate string MatchEvaluator(Match match);\n    content.vb: Public Delegate Function MatchEvaluator(match As Match) As String\n    parameters:\n    - id: match\n      type: System.Text.RegularExpressions.Match\n      description: \"\\n<p>The <xref href=\\\"System.Text.RegularExpressions.Match\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents a single regular expression match during a <xref href=\\\"System.Text.RegularExpressions.Regex.Replace(System.String,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method operation. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A string returned by the method that is represented by the <xref href=\\\"System.Text.RegularExpressions.MatchEvaluator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate.</p>\\n\"\n  seealso:\n  - type: System.Text.RegularExpressions.Regex.Replace(System.String,System.String)\n    commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: MatchEvaluator\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System.Text.RegularExpressions\n  isExternal: false\n  name: System.Text.RegularExpressions\n  fullName: System.Text.RegularExpressions\n  commentId: N:System.Text.RegularExpressions\n  nameWithType: System.Text.RegularExpressions\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n- uid: System.Text.RegularExpressions.Match\n  parent: System.Text.RegularExpressions\n  isExternal: false\n  name: Match\n  fullName: System.Text.RegularExpressions.Match\n  commentId: T:System.Text.RegularExpressions.Match\n  nameWithType: Match\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  commentId: N:System.Reflection\n  nameWithType: System.Reflection\n"}