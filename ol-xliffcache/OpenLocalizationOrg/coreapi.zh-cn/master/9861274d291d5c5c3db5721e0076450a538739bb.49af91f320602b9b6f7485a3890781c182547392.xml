{"nodes":[{"pos":[618,631],"content":"UdpStatistics","needQuote":true,"nodes":[{"content":"UdpStatistics","pos":[0,13]}]},{"pos":[1973,1988],"content":"UdpStatistics()","needQuote":true,"nodes":[{"content":"UdpStatistics()","pos":[0,15]}]},{"pos":[3082,3099],"content":"DatagramsReceived","needQuote":true,"nodes":[{"content":"DatagramsReceived","pos":[0,17]}]},{"pos":[4489,4502],"content":"DatagramsSent","needQuote":true,"nodes":[{"content":"DatagramsSent","pos":[0,13]}]},{"pos":[5889,5915],"content":"IncomingDatagramsDiscarded","needQuote":true,"nodes":[{"content":"IncomingDatagramsDiscarded","pos":[0,26]}]},{"pos":[7496,7523],"content":"IncomingDatagramsWithErrors","needQuote":true,"nodes":[{"content":"IncomingDatagramsWithErrors","pos":[0,27]}]},{"pos":[9106,9118],"content":"UdpListeners","needQuote":true,"nodes":[{"content":"UdpListeners","pos":[0,12]}]},{"pos":[10337,10366],"content":"System.Net.NetworkInformation","needQuote":true,"nodes":[{"content":"System.Net.NetworkInformation","pos":[0,29]}]},{"pos":[10566,10572],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10732,10742],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10837,10845],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10914,10915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10942,10943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11013,11021],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11090,11091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11118,11119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11302,11316],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11435,11441],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11508,11509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11559,11565],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11625,11626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11709,11715],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11782,11783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11833,11839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11899,11900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12114,12136],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12284,12290],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12357,12358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12408,12414],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12475,12476]},{"pos":[12531,12537],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12597,12598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12695,12701],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12768,12769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12819,12825],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12886,12887]},{"pos":[12942,12948],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13008,13009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13254,13285],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13451,13466],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13542,13543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13593,13599],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13660,13661]},{"pos":[13716,13722],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13782,13783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13889,13904],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13980,13981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14031,14037],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14098,14099]},{"pos":[14154,14160],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14220,14221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14451,14464],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14565,14576],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14648,14649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14676,14677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14750,14761],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14833,14834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14861,14862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15037,15046],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15139,15146],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15214,15215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15242,15243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15312,15319],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15387,15388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15415,15416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15591,15608],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15717,15732],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15808,15809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15836,15837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15914,15929],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16005,16006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16033,16034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16179,16185],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16315,16320],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[16461,16466],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Net.NetworkInformation.UdpStatistics\n  commentId: T:System.Net.NetworkInformation.UdpStatistics\n  id: UdpStatistics\n  parent: System.Net.NetworkInformation\n  children:\n  - System.Net.NetworkInformation.UdpStatistics.#ctor\n  - System.Net.NetworkInformation.UdpStatistics.DatagramsReceived\n  - System.Net.NetworkInformation.UdpStatistics.DatagramsSent\n  - System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsDiscarded\n  - System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsWithErrors\n  - System.Net.NetworkInformation.UdpStatistics.UdpListeners\n  langs:\n  - csharp\n  - vb\n  name: UdpStatistics\n  fullName: System.Net.NetworkInformation.UdpStatistics\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UdpStatistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 409\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides User Datagram Protocol (UDP) statistical data.</p>\\n\"\n  syntax:\n    content: public abstract class UdpStatistics\n    content.vb: Public MustInherit Class UdpStatistics\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: UdpStatistics\n- uid: System.Net.NetworkInformation.UdpStatistics.#ctor\n  commentId: M:System.Net.NetworkInformation.UdpStatistics.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.UdpStatistics\n  langs:\n  - csharp\n  - vb\n  name: UdpStatistics()\n  fullName: System.Net.NetworkInformation.UdpStatistics.UdpStatistics()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 411\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.NetworkInformation.UdpStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected UdpStatistics()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: UdpStatistics.UdpStatistics()\n- uid: System.Net.NetworkInformation.UdpStatistics.DatagramsReceived\n  commentId: P:System.Net.NetworkInformation.UdpStatistics.DatagramsReceived\n  id: DatagramsReceived\n  parent: System.Net.NetworkInformation.UdpStatistics\n  langs:\n  - csharp\n  - vb\n  name: DatagramsReceived\n  fullName: System.Net.NetworkInformation.UdpStatistics.DatagramsReceived\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DatagramsReceived\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 412\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of User Datagram Protocol (UDP) datagrams that were received.</p>\\n\"\n  syntax:\n    content: public abstract long DatagramsReceived { get; }\n    content.vb: Public MustOverride ReadOnly Property DatagramsReceived As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of datagrams that were delivered to UDP users.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: UdpStatistics.DatagramsReceived\n- uid: System.Net.NetworkInformation.UdpStatistics.DatagramsSent\n  commentId: P:System.Net.NetworkInformation.UdpStatistics.DatagramsSent\n  id: DatagramsSent\n  parent: System.Net.NetworkInformation.UdpStatistics\n  langs:\n  - csharp\n  - vb\n  name: DatagramsSent\n  fullName: System.Net.NetworkInformation.UdpStatistics.DatagramsSent\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DatagramsSent\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 413\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of User Datagram Protocol (UDP) datagrams that were sent.</p>\\n\"\n  syntax:\n    content: public abstract long DatagramsSent { get; }\n    content.vb: Public MustOverride ReadOnly Property DatagramsSent As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of datagrams that were sent.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: UdpStatistics.DatagramsSent\n- uid: System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsDiscarded\n  commentId: P:System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsDiscarded\n  id: IncomingDatagramsDiscarded\n  parent: System.Net.NetworkInformation.UdpStatistics\n  langs:\n  - csharp\n  - vb\n  name: IncomingDatagramsDiscarded\n  fullName: System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsDiscarded\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IncomingDatagramsDiscarded\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 414\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of User Datagram Protocol (UDP) datagrams that were received and discarded because of port errors.</p>\\n\"\n  syntax:\n    content: public abstract long IncomingDatagramsDiscarded { get; }\n    content.vb: Public MustOverride ReadOnly Property IncomingDatagramsDiscarded As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of received UDP datagrams that were discarded because there was no listening application at the destination port.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: UdpStatistics.IncomingDatagramsDiscarded\n- uid: System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsWithErrors\n  commentId: P:System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsWithErrors\n  id: IncomingDatagramsWithErrors\n  parent: System.Net.NetworkInformation.UdpStatistics\n  langs:\n  - csharp\n  - vb\n  name: IncomingDatagramsWithErrors\n  fullName: System.Net.NetworkInformation.UdpStatistics.IncomingDatagramsWithErrors\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IncomingDatagramsWithErrors\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 415\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of User Datagram Protocol (UDP) datagrams that were received and discarded because of errors other than bad port information.</p>\\n\"\n  syntax:\n    content: public abstract long IncomingDatagramsWithErrors { get; }\n    content.vb: Public MustOverride ReadOnly Property IncomingDatagramsWithErrors As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of received UDP datagrams that could not be delivered for reasons other than the lack of an application at the destination port.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: UdpStatistics.IncomingDatagramsWithErrors\n- uid: System.Net.NetworkInformation.UdpStatistics.UdpListeners\n  commentId: P:System.Net.NetworkInformation.UdpStatistics.UdpListeners\n  id: UdpListeners\n  parent: System.Net.NetworkInformation.UdpStatistics\n  langs:\n  - csharp\n  - vb\n  name: UdpListeners\n  fullName: System.Net.NetworkInformation.UdpStatistics.UdpListeners\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UdpListeners\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 416\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of local endpoints that are listening for User Datagram Protocol (UDP) datagrams.</p>\\n\"\n  syntax:\n    content: public abstract int UdpListeners { get; }\n    content.vb: Public MustOverride ReadOnly Property UdpListeners As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of sockets that are listening for UDP datagrams.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: UdpStatistics.UdpListeners\nreferences:\n- uid: System.Net.NetworkInformation\n  isExternal: false\n  name: System.Net.NetworkInformation\n  fullName: System.Net.NetworkInformation\n  commentId: N:System.Net.NetworkInformation\n  nameWithType: System.Net.NetworkInformation\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n"}