{"nodes":[{"pos":[541,560],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[41823,41830],"content":"IsByRef","needQuote":true,"nodes":[{"content":"IsByRef","pos":[0,7]}]},{"content":"\\n&lt;p&gt;True if this &lt;code&gt;ParameterExpression&lt;/code&gt; is a &lt;strong&gt;ByRef&lt;/strong&gt; parameter, otherwise false.&lt;/p&gt;\\n","pos":[42581,42693],"source":"\\n<p>True if this <code>ParameterExpression</code> is a <strong>ByRef</strong> parameter, otherwise false.</p>\\n"},{"pos":[43038,43042],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[44197,44205],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[45666,45670],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[47201,47226],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The visitor to visit this node with.&lt;/p&gt;\\n","pos":[48361,48408],"source":"\\n<p>The visitor to visit this node with.</p>\\n"},{"content":"\\n&lt;p&gt;The result of visiting this node.&lt;/p&gt;\\n","pos":[48489,48533],"source":"\\n<p>The result of visiting this node.</p>\\n"},{"pos":[48858,48881],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]},{"pos":[49063,49069],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49252,49262],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[49512,49521],"content":"CanReduce","needQuote":true,"nodes":[{"content":"CanReduce","pos":[0,9]}]},{"pos":[49866,49893],"content":"Add(Expression, Expression)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression)","pos":[0,27]}]},{"pos":[50161,50164],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[50228,50229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50300,50310],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[50371,50372]},{"pos":[50448,50458],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[50518,50519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50676,50679],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[50743,50744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50815,50825],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[50886,50887]},{"pos":[50963,50973],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[51033,51034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51449,51488],"content":"Add(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[51815,51818],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[51882,51883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51954,51964],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[52025,52026]},{"pos":[52102,52112],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[52173,52174]},{"pos":[52244,52254],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[52329,52330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52516,52519],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[52583,52584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52655,52665],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[52726,52727]},{"pos":[52803,52813],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[52874,52875]},{"pos":[52945,52955],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[53030,53031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53465,53498],"content":"AddAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[53778,53787],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[53857,53858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53929,53939],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[54000,54001]},{"pos":[54077,54087],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[54147,54148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54311,54320],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[54390,54391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54462,54472],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[54533,54534]},{"pos":[54610,54620],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[54680,54681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55114,55159],"content":"AddAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[55498,55507],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[55577,55578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55649,55659],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[55720,55721]},{"pos":[55797,55807],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[55868,55869]},{"pos":[55939,55949],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[56024,56025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56217,56226],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[56296,56297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56368,56378],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[56439,56440]},{"pos":[56516,56526],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[56587,56588]},{"pos":[56658,56668],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[56743,56744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57259,57322],"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[57744,57753],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[57823,57824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57895,57905],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[57966,57967]},{"pos":[58043,58053],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[58114,58115]},{"pos":[58185,58195],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[58271,58272]},{"pos":[58354,58370],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[58436,58437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58670,58679],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[58749,58750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58821,58831],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[58892,58893]},{"pos":[58969,58979],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[59040,59041]},{"pos":[59111,59121],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[59197,59198]},{"pos":[59280,59296],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[59362,59363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59875,59915],"content":"AddAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression)","pos":[0,40]}]},{"pos":[60209,60225],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[60302,60303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60374,60384],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[60445,60446]},{"pos":[60522,60532],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[60592,60593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60763,60779],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[60856,60857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60928,60938],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[60999,61000]},{"pos":[61076,61086],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[61146,61147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61601,61653],"content":"AddAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[62006,62022],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[62099,62100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62171,62181],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[62242,62243]},{"pos":[62319,62329],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[62390,62391]},{"pos":[62461,62471],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[62546,62547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62746,62762],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[62839,62840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62911,62921],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[62982,62983]},{"pos":[63059,63069],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[63130,63131]},{"pos":[63201,63211],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[63286,63287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63823,63893],"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[64329,64345],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[64422,64423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64494,64504],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[64565,64566]},{"pos":[64642,64652],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[64713,64714]},{"pos":[64784,64794],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[64870,64871]},{"pos":[64953,64969],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[65035,65036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65276,65292],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[65369,65370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65441,65451],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65512,65513]},{"pos":[65589,65599],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65660,65661]},{"pos":[65731,65741],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[65817,65818]},{"pos":[65900,65916],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[65982,65983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66503,66537],"content":"AddChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression)","pos":[0,34]}]},{"pos":[66819,66829],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[66900,66901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66972,66982],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[67043,67044]},{"pos":[67120,67130],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[67190,67191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67355,67365],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[67436,67437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67508,67518],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[67579,67580]},{"pos":[67656,67666],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[67726,67727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68163,68209],"content":"AddChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[68550,68560],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[68631,68632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68703,68713],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[68774,68775]},{"pos":[68851,68861],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[68922,68923]},{"pos":[68993,69003],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[69078,69079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69272,69282],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[69353,69354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69425,69435],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[69496,69497]},{"pos":[69573,69583],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[69644,69645]},{"pos":[69715,69725],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[69800,69801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70243,70270],"content":"And(Expression, Expression)","needQuote":true,"nodes":[{"content":"And(Expression, Expression)","pos":[0,27]}]},{"pos":[70538,70541],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[70605,70606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70677,70687],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[70748,70749]},{"pos":[70825,70835],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[70895,70896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71053,71056],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[71120,71121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71192,71202],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[71263,71264]},{"pos":[71340,71350],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[71410,71411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71826,71865],"content":"And(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"And(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[72192,72195],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[72259,72260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72331,72341],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[72402,72403]},{"pos":[72479,72489],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[72550,72551]},{"pos":[72621,72631],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[72706,72707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72893,72896],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[72960,72961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73032,73042],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73103,73104]},{"pos":[73180,73190],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73251,73252]},{"pos":[73322,73332],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[73407,73408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73840,73871],"content":"AndAlso(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression)","pos":[0,31]}]},{"pos":[74147,74154],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[74222,74223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74294,74304],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[74365,74366]},{"pos":[74442,74452],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[74512,74513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74674,74681],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[74749,74750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74821,74831],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[74892,74893]},{"pos":[74969,74979],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[75039,75040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75467,75510],"content":"AndAlso(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression, MethodInfo)","pos":[0,43]}]},{"pos":[75845,75852],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[75920,75921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75992,76002],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[76063,76064]},{"pos":[76140,76150],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[76211,76212]},{"pos":[76282,76292],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[76367,76368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76558,76565],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[76633,76634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76705,76715],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[76776,76777]},{"pos":[76853,76863],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[76924,76925]},{"pos":[76995,77005],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[77080,77081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77523,77556],"content":"AndAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[77836,77845],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[77915,77916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77987,77997],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[78058,78059]},{"pos":[78135,78145],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[78205,78206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78369,78378],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[78448,78449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78520,78530],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[78591,78592]},{"pos":[78668,78678],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[78738,78739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79172,79217],"content":"AndAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[79556,79565],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[79635,79636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79707,79717],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79778,79779]},{"pos":[79855,79865],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79926,79927]},{"pos":[79997,80007],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[80082,80083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80275,80284],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[80354,80355],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80426,80436],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[80497,80498]},{"pos":[80574,80584],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[80645,80646]},{"pos":[80716,80726],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[80801,80802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81317,81380],"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[81802,81811],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[81881,81882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81953,81963],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[82024,82025]},{"pos":[82101,82111],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[82172,82173]},{"pos":[82243,82253],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[82329,82330]},{"pos":[82412,82428],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[82494,82495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82728,82737],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[82807,82808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82879,82889],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[82950,82951]},{"pos":[83027,83037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83098,83099]},{"pos":[83169,83179],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[83255,83256]},{"pos":[83338,83354],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[83420,83421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83967,84015],"content":"ArrayAccess(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ArrayAccess(Expression, IEnumerable<Expression>)"}]},{"pos":[84619,84630],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[84702,84703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84774,84784],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[84845,84846]},{"pos":[84928,84939],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[85024,85025],"content":"<","needQuote":true,"nodes":[]},{"pos":[85096,85106],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[85198,85199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85404,85415],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[85487,85488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85559,85569],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[85630,85631]},{"pos":[85713,85724],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[85810,85813]},{"pos":[85891,85901],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[85961,85962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85989,85990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86538,86575],"content":"ArrayAccess(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, Expression[])","pos":[0,37]}]},{"pos":[87048,87059],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[87131,87132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87203,87213],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[87274,87275]},{"pos":[87351,87361],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[87422,87424]},{"pos":[87455,87456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87623,87634],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[87706,87707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87778,87788],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[87849,87850]},{"pos":[87926,87936],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[87996,87998],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[88026,88027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88548,88595],"content":"ArrayIndex(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"ArrayIndex(Expression, IEnumerable<Expression>)"}]},{"pos":[89195,89205],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[89276,89277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89348,89358],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[89419,89420]},{"pos":[89502,89513],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[89598,89599],"content":"<","needQuote":true,"nodes":[]},{"pos":[89670,89680],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[89772,89773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89977,89987],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[90058,90059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90130,90140],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[90201,90202]},{"pos":[90284,90295],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[90381,90384]},{"pos":[90462,90472],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[90532,90533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90560,90561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91103,91137],"content":"ArrayIndex(Expression, Expression)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression)","pos":[0,34]}]},{"pos":[91419,91429],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[91500,91501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91572,91582],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[91643,91644]},{"pos":[91720,91730],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[91790,91791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91955,91965],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[92036,92037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92108,92118],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[92179,92180]},{"pos":[92256,92266],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[92326,92327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92737,92773],"content":"ArrayIndex(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression[])","pos":[0,36]}]},{"pos":[93242,93252],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[93323,93324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93395,93405],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[93466,93467]},{"pos":[93543,93553],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[93614,93616]},{"pos":[93647,93648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93814,93824],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[93895,93896],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93967,93977],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[94038,94039]},{"pos":[94115,94125],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[94185,94187],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[94215,94216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94661,94684],"content":"ArrayLength(Expression)","needQuote":true,"nodes":[{"content":"ArrayLength(Expression)","pos":[0,23]}]},{"pos":[94897,94908],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[94980,94981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95052,95062],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[95122,95123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95253,95264],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[95336,95337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95408,95418],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[95478,95479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95838,95868],"content":"Assign(Expression, Expression)","needQuote":true,"nodes":[{"content":"Assign(Expression, Expression)","pos":[0,30]}]},{"pos":[96142,96148],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[96215,96216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96287,96297],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[96358,96359]},{"pos":[96435,96445],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[96505,96506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96666,96672],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[96739,96740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96811,96821],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[96882,96883]},{"pos":[96959,96969],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[97029,97030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97417,97445],"content":"Bind(MemberInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MemberInfo, Expression)","pos":[0,28]}]},{"pos":[97703,97707],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[97772,97773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97838,97848],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[97924,97925]},{"pos":[98001,98011],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[98071,98072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98224,98228],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[98293,98294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98359,98369],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[98445,98446]},{"pos":[98522,98532],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[98592,98593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98970,98998],"content":"Bind(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[99256,99260],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[99325,99326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99391,99401],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[99477,99478]},{"pos":[99554,99564],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[99624,99625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99777,99781],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[99846,99847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99912,99922],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[99998,99999]},{"pos":[100075,100085],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[100145,100146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100535,100565],"content":"Block(IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;Expression&gt;)","pos":[0,30],"source":"Block(IEnumerable<Expression>)"}]},{"pos":[101026,101031],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[101097,101098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101175,101186],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[101271,101272],"content":"<","needQuote":true,"nodes":[]},{"pos":[101343,101353],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[101445,101446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101610,101615],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[101681,101682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101759,101770],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[101856,101859]},{"pos":[101937,101947],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[102007,102008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102035,102036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102587,102651],"content":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,64],"source":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[103406,103411],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[103477,103478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103555,103566],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[103651,103652],"content":"<","needQuote":true,"nodes":[]},{"pos":[103732,103751],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[103853,103854]},{"pos":[103936,103947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[104032,104033],"content":"<","needQuote":true,"nodes":[]},{"pos":[104104,104114],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[104206,104207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104455,104460],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[104526,104527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104604,104615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[104701,104704]},{"pos":[104791,104810],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[104879,104880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[104908,104909]},{"pos":[104991,105002],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[105088,105091]},{"pos":[105169,105179],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[105239,105240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105267,105268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105936,105989],"content":"Block(IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,53],"source":"Block(IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[106613,106618],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[106684,106685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106762,106773],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[106858,106859],"content":"<","needQuote":true,"nodes":[]},{"pos":[106939,106958],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[107060,107061]},{"pos":[107137,107147],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[107208,107210]},{"pos":[107241,107242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107452,107457],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[107523,107524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107601,107612],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[107698,107701]},{"pos":[107788,107807],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[107876,107877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[107905,107906]},{"pos":[107982,107992],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[108052,108054],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[108082,108083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108638,108667],"content":"Block(Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression)","pos":[0,29]}]},{"pos":[108939,108944],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[109010,109011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109082,109092],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[109153,109154]},{"pos":[109230,109240],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[109300,109301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109460,109465],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[109531,109532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109603,109613],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[109674,109675]},{"pos":[109751,109761],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[109821,109822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110250,110291],"content":"Block(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression)","pos":[0,41]}]},{"pos":[110634,110639],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[110705,110706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110777,110787],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[110848,110849]},{"pos":[110925,110935],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[110996,110997]},{"pos":[111073,111083],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[111143,111144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111338,111343],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[111409,111410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111481,111491],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[111552,111553]},{"pos":[111629,111639],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[111700,111701]},{"pos":[111777,111787],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[111847,111848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112358,112411],"content":"Block(Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression)","pos":[0,53]}]},{"pos":[112825,112830],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[112896,112897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112968,112978],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[113039,113040]},{"pos":[113116,113126],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[113187,113188]},{"pos":[113264,113274],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[113335,113336]},{"pos":[113412,113422],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[113482,113483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113712,113717],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[113783,113784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113855,113865],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[113926,113927]},{"pos":[114003,114013],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114074,114075]},{"pos":[114151,114161],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114222,114223]},{"pos":[114299,114309],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[114369,114370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114962,115027],"content":"Block(Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression, Expression)","pos":[0,65]}]},{"pos":[115512,115517],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[115583,115584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115655,115665],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[115726,115727]},{"pos":[115803,115813],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[115874,115875]},{"pos":[115951,115961],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116022,116023]},{"pos":[116099,116109],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116170,116171]},{"pos":[116247,116257],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[116317,116318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116582,116587],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[116653,116654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116725,116735],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116796,116797]},{"pos":[116873,116883],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116944,116945]},{"pos":[117021,117031],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117092,117093]},{"pos":[117169,117179],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117240,117241]},{"pos":[117317,117327],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[117387,117388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117889,117908],"content":"Block(Expression[])","needQuote":true,"nodes":[{"content":"Block(Expression[])","pos":[0,19]}]},{"pos":[118238,118243],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[118309,118310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118381,118391],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[118452,118454]},{"pos":[118485,118486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118612,118617],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[118683,118684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118755,118765],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[118825,118827],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[118855,118856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119272,119308],"content":"Block(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;Expression&gt;)","pos":[0,36],"source":"Block(Type, IEnumerable<Expression>)"}]},{"pos":[119813,119818],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[119884,119885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119933,119937],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[119996,119997]},{"pos":[120079,120090],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[120175,120176],"content":"<","needQuote":true,"nodes":[]},{"pos":[120247,120257],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[120349,120350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120526,120531],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[120597,120598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120646,120650],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[120709,120710]},{"pos":[120792,120803],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[120889,120892]},{"pos":[120970,120980],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[121040,121041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121068,121069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121656,121726],"content":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,70],"source":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[122525,122530],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[122596,122597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122645,122649],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[122708,122709]},{"pos":[122791,122802],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[122887,122888],"content":"<","needQuote":true,"nodes":[]},{"pos":[122968,122987],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[123089,123090]},{"pos":[123172,123183],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[123268,123269],"content":"<","needQuote":true,"nodes":[]},{"pos":[123340,123350],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[123442,123443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123703,123708],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[123774,123775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123823,123827],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[123886,123887]},{"pos":[123969,123980],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[124066,124069]},{"pos":[124156,124175],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[124244,124245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[124273,124274]},{"pos":[124356,124367],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[124453,124456]},{"pos":[124534,124544],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[124604,124605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124632,124633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125337,125396],"content":"Block(Type, IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,59],"source":"Block(Type, IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[126064,126069],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[126135,126136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126184,126188],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[126247,126248]},{"pos":[126330,126341],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[126426,126427],"content":"<","needQuote":true,"nodes":[]},{"pos":[126507,126526],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[126628,126629]},{"pos":[126705,126715],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[126776,126778]},{"pos":[126809,126810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127032,127037],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[127103,127104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127152,127156],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[127215,127216]},{"pos":[127298,127309],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[127395,127398]},{"pos":[127485,127504],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[127573,127574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[127602,127603]},{"pos":[127679,127689],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[127749,127751],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[127779,127780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128337,128362],"content":"Block(Type, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, Expression[])","pos":[0,25]}]},{"pos":[128736,128741],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[128807,128808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128856,128860],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[128919,128920]},{"pos":[128996,129006],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[129067,129069]},{"pos":[129100,129101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129239,129244],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[129310,129311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129359,129363],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[129422,129423]},{"pos":[129499,129509],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[129569,129571],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[129599,129600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129990,130008],"content":"Break(LabelTarget)","needQuote":true,"nodes":[{"content":"Break(LabelTarget)","pos":[0,18]}]},{"pos":[130211,130216],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[130282,130283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130355,130366],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[130427,130428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130553,130558],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[130624,130625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130697,130708],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[130769,130770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131119,131149],"content":"Break(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[131423,131428],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[131494,131495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131567,131578],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[131640,131641]},{"pos":[131717,131727],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[131787,131788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131948,131953],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[132019,132020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132092,132103],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[132165,132166]},{"pos":[132242,132252],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[132312,132313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132720,132756],"content":"Break(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression, Type)","pos":[0,36]}]},{"pos":[133055,133060],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[133126,133127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133199,133210],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[133272,133273]},{"pos":[133349,133359],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[133420,133421]},{"pos":[133474,133478],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[133536,133537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133709,133714],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[133780,133781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133853,133864],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[133926,133927]},{"pos":[134003,134013],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[134074,134075]},{"pos":[134128,134132],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[134190,134191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134581,134605],"content":"Break(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Type)","pos":[0,24]}]},{"pos":[134833,134838],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[134904,134905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134977,134988],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[135050,135051]},{"pos":[135104,135108],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[135166,135167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135304,135309],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[135375,135376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135448,135459],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[135521,135522]},{"pos":[135575,135579],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[135637,135638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135996,136024],"content":"Call(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo)","pos":[0,28]}]},{"pos":[136282,136286],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[136351,136352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136423,136433],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[136494,136495]},{"pos":[136565,136575],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[136650,136651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136803,136807],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[136872,136873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136944,136954],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[137015,137016]},{"pos":[137086,137096],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[137171,137172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137624,137677],"content":"Call(Expression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,53],"source":"Call(Expression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[138354,138358],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[138423,138424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138495,138505],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[138566,138567]},{"pos":[138637,138647],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[138723,138724]},{"pos":[138806,138817],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[138902,138903],"content":"<","needQuote":true,"nodes":[]},{"pos":[138974,138984],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[139076,139077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139304,139308],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[139373,139374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139445,139455],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[139516,139517]},{"pos":[139587,139597],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[139673,139674]},{"pos":[139756,139767],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[139853,139856]},{"pos":[139934,139944],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[140004,140005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140032,140033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140667,140719],"content":"Call(Expression, MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression)","pos":[0,52]}]},{"pos":[141119,141123],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[141188,141189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141260,141270],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[141331,141332]},{"pos":[141402,141412],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[141488,141489]},{"pos":[141565,141575],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[141636,141637]},{"pos":[141713,141723],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[141783,141784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142006,142010],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[142075,142076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142147,142157],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[142218,142219]},{"pos":[142289,142299],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[142375,142376]},{"pos":[142452,142462],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[142523,142524]},{"pos":[142600,142610],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[142670,142671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143247,143311],"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[143782,143786],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[143851,143852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143923,143933],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[143994,143995]},{"pos":[144065,144075],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[144151,144152]},{"pos":[144228,144238],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[144299,144300]},{"pos":[144376,144386],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[144447,144448]},{"pos":[144524,144534],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[144594,144595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144852,144856],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[144921,144922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144993,145003],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145064,145065]},{"pos":[145135,145145],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[145221,145222]},{"pos":[145298,145308],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145369,145370]},{"pos":[145446,145456],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145517,145518]},{"pos":[145594,145604],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[145664,145665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146220,146262],"content":"Call(Expression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression[])","pos":[0,42]}]},{"pos":[146808,146812],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[146877,146878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146949,146959],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[147020,147021]},{"pos":[147091,147101],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[147177,147178]},{"pos":[147254,147264],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[147325,147327]},{"pos":[147358,147359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147548,147552],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[147617,147618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147689,147699],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[147760,147761]},{"pos":[147831,147841],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[147917,147918]},{"pos":[147994,148004],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[148064,148066],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[148094,148095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148632,148678],"content":"Call(Expression, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, String, Type[], Expression[])","pos":[0,46]}]},{"pos":[149227,149231],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[149296,149297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149368,149378],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[149439,149440]},{"pos":[149495,149501],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[149562,149563]},{"pos":[149616,149620],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[149679,149681]},{"content":",","pos":[149713,149714]},{"pos":[149790,149800],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[149861,149863]},{"pos":[149894,149895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150083,150087],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[150152,150153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150224,150234],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[150295,150296]},{"pos":[150351,150357],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[150418,150419]},{"pos":[150472,150476],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[150534,150536],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[150565,150566]},{"pos":[150642,150652],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[150712,150714],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[150742,150743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151291,151332],"content":"Call(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,41],"source":"Call(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[151890,151894],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[151959,151960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152025,152035],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[152111,152112]},{"pos":[152194,152205],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[152290,152291],"content":"<","needQuote":true,"nodes":[]},{"pos":[152362,152372],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[152464,152465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152657,152661],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[152726,152727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152792,152802],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[152878,152879]},{"pos":[152961,152972],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[153058,153061]},{"pos":[153139,153149],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[153209,153210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153237,153238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153743,153771],"content":"Call(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[154029,154033],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[154098,154099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154164,154174],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[154250,154251]},{"pos":[154327,154337],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[154397,154398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154550,154554],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[154619,154620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154685,154695],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[154771,154772]},{"pos":[154848,154858],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[154918,154919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155331,155371],"content":"Call(MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression)","pos":[0,40]}]},{"pos":[155700,155704],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[155769,155770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155835,155845],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[155921,155922]},{"pos":[155998,156008],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[156069,156070]},{"pos":[156146,156156],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[156216,156217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156404,156408],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[156473,156474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156539,156549],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[156625,156626]},{"pos":[156702,156712],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[156773,156774]},{"pos":[156850,156860],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[156920,156921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157415,157467],"content":"Call(MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression)","pos":[0,52]}]},{"pos":[157867,157871],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[157936,157937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158002,158012],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[158088,158089]},{"pos":[158165,158175],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[158236,158237]},{"pos":[158313,158323],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[158384,158385]},{"pos":[158461,158471],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[158531,158532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158754,158758],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[158823,158824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158889,158899],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[158975,158976]},{"pos":[159052,159062],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[159123,159124]},{"pos":[159200,159210],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[159271,159272]},{"pos":[159348,159358],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[159418,159419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159995,160059],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[160530,160534],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[160599,160600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160665,160675],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[160751,160752]},{"pos":[160828,160838],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[160899,160900]},{"pos":[160976,160986],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161047,161048]},{"pos":[161124,161134],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161195,161196]},{"pos":[161272,161282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[161342,161343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161600,161604],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[161669,161670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161735,161745],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[161821,161822]},{"pos":[161898,161908],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161969,161970]},{"pos":[162046,162056],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[162117,162118]},{"pos":[162194,162204],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[162265,162266]},{"pos":[162342,162352],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[162412,162413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163071,163147],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","pos":[0,76]}]},{"pos":[163689,163693],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[163758,163759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163824,163834],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[163910,163911]},{"pos":[163987,163997],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164058,164059]},{"pos":[164135,164145],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164206,164207]},{"pos":[164283,164293],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164354,164355]},{"pos":[164431,164441],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164502,164503]},{"pos":[164579,164589],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[164649,164650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164942,164946],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[165011,165012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165077,165087],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[165163,165164]},{"pos":[165240,165250],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165311,165312]},{"pos":[165388,165398],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165459,165460]},{"pos":[165536,165546],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165607,165608]},{"pos":[165684,165694],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165755,165756]},{"pos":[165832,165842],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[165902,165903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166470,166500],"content":"Call(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression[])","pos":[0,30]}]},{"pos":[166927,166931],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[166996,166997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167062,167072],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[167148,167149]},{"pos":[167225,167235],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[167296,167298]},{"pos":[167329,167330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167484,167488],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[167553,167554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167619,167629],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[167705,167706]},{"pos":[167782,167792],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[167852,167854],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[167882,167883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168338,168378],"content":"Call(Type, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Type, String, Type[], Expression[])","pos":[0,40]}]},{"pos":[168852,168856],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[168921,168922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168970,168974],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[169033,169034]},{"pos":[169089,169095],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[169156,169157]},{"pos":[169210,169214],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[169273,169275]},{"content":",","pos":[169307,169308]},{"pos":[169384,169394],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[169455,169457]},{"pos":[169488,169489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169654,169658],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[169723,169724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169772,169776],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[169835,169836]},{"pos":[169891,169897],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[169958,169959]},{"pos":[170012,170016],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[170074,170076],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[170105,170106]},{"pos":[170182,170192],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[170252,170254],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[170282,170283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170773,170811],"content":"Catch(ParameterExpression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression)","pos":[0,38]}]},{"pos":[171101,171106],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[171172,171173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171253,171272],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[171342,171343]},{"pos":[171419,171429],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[171489,171490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171658,171663],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[171729,171730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171810,171829],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[171899,171900]},{"pos":[171976,171986],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[172046,172047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172502,172552],"content":"Catch(ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression, Expression)","pos":[0,50]}]},{"pos":[172913,172918],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[172984,172985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173065,173084],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[173154,173155]},{"pos":[173231,173241],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[173302,173303]},{"pos":[173379,173389],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[173449,173450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173653,173658],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[173724,173725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173805,173824],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[173894,173895]},{"pos":[173971,173981],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[174042,174043]},{"pos":[174119,174129],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[174189,174190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174624,174647],"content":"Catch(Type, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression)","pos":[0,23]}]},{"pos":[174873,174878],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[174944,174945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174993,174997],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[175056,175057]},{"pos":[175133,175143],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[175203,175204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175340,175345],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[175411,175412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175460,175464],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[175523,175524]},{"pos":[175600,175610],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[175670,175671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176046,176081],"content":"Catch(Type, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression, Expression)","pos":[0,35]}]},{"pos":[176378,176383],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[176449,176450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176498,176502],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[176561,176562]},{"pos":[176638,176648],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[176709,176710]},{"pos":[176786,176796],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[176856,176857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177028,177033],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[177099,177100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177148,177152],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[177211,177212]},{"pos":[177288,177298],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[177359,177360]},{"pos":[177436,177446],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[177506,177507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177900,177934],"content":"ClearDebugInfo(SymbolDocumentInfo)","needQuote":true,"nodes":[{"content":"ClearDebugInfo(SymbolDocumentInfo)","pos":[0,34]}]},{"pos":[178169,178183],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[178258,178259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178338,178356],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[178424,178425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178566,178580],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[178655,178656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178735,178753],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[178821,178822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179205,179237],"content":"Coalesce(Expression, Expression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression)","pos":[0,32]}]},{"pos":[179515,179523],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[179592,179593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179664,179674],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[179735,179736]},{"pos":[179812,179822],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[179882,179883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180045,180053],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[180122,180123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180194,180204],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[180265,180266]},{"pos":[180342,180352],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[180412,180413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180856,180906],"content":"Coalesce(Expression, Expression, LambdaExpression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression, LambdaExpression)","pos":[0,50]}]},{"pos":[181267,181275],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[181344,181345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181416,181426],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[181487,181488]},{"pos":[181564,181574],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[181635,181636]},{"pos":[181718,181734],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[181800,181801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182004,182012],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[182081,182082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182153,182163],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[182224,182225]},{"pos":[182301,182311],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[182372,182373]},{"pos":[182455,182471],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[182537,182538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183035,183080],"content":"Condition(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression)","pos":[0,45]}]},{"pos":[183431,183440],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[183510,183511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183582,183592],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[183653,183654]},{"pos":[183730,183740],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[183801,183802]},{"pos":[183878,183888],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[183948,183949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184147,184156],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[184226,184227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184298,184308],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[184369,184370]},{"pos":[184446,184456],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[184517,184518]},{"pos":[184594,184604],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[184664,184665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185163,185214],"content":"Condition(Expression, Expression, Expression, Type)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression, Type)","pos":[0,51]}]},{"pos":[185590,185599],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[185669,185670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185741,185751],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[185812,185813]},{"pos":[185889,185899],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[185960,185961]},{"pos":[186037,186047],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186108,186109]},{"pos":[186162,186166],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[186224,186225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186435,186444],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[186514,186515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186586,186596],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186657,186658]},{"pos":[186734,186744],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186805,186806]},{"pos":[186882,186892],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186953,186954]},{"pos":[187007,187011],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[187069,187070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187482,187498],"content":"Constant(Object)","needQuote":true,"nodes":[{"content":"Constant(Object)","pos":[0,16]}]},{"pos":[187663,187671],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[187740,187741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187791,187797],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[187857,187858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187964,187972],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[188041,188042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188092,188098],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[188158,188159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188444,188466],"content":"Constant(Object, Type)","needQuote":true,"nodes":[{"content":"Constant(Object, Type)","pos":[0,22]}]},{"pos":[188656,188664],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[188733,188734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188784,188790],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[188851,188852]},{"pos":[188905,188909],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[188967,188968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189086,189094],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[189163,189164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189214,189220],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[189281,189282]},{"pos":[189335,189339],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[189397,189398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189712,189733],"content":"Continue(LabelTarget)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget)","pos":[0,21]}]},{"pos":[189942,189950],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[190019,190020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190092,190103],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[190164,190165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190293,190301],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[190370,190371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190443,190454],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[190515,190516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190850,190877],"content":"Continue(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget, Type)","pos":[0,27]}]},{"pos":[191111,191119],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[191188,191189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191261,191272],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[191334,191335]},{"pos":[191388,191392],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[191450,191451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191591,191599],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[191668,191669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191741,191752],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[191814,191815]},{"pos":[191868,191872],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[191930,191931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192281,192306],"content":"Convert(Expression, Type)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type)","pos":[0,25]}]},{"pos":[192536,192543],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[192611,192612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192683,192693],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[192754,192755]},{"pos":[192808,192812],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[192870,192871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193009,193016],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[193084,193085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193156,193166],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[193227,193228]},{"pos":[193281,193285],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[193343,193344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193719,193756],"content":"Convert(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type, MethodInfo)","pos":[0,37]}]},{"pos":[194045,194052],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[194120,194121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194192,194202],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[194263,194264]},{"pos":[194317,194321],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[194380,194381]},{"pos":[194451,194461],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[194536,194537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194704,194711],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[194779,194780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194851,194861],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[194922,194923]},{"pos":[194976,194980],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[195039,195040]},{"pos":[195110,195120],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[195195,195196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195590,195622],"content":"ConvertChecked(Expression, Type)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type)","pos":[0,32]}]},{"pos":[195866,195880],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[195955,195956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196027,196037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[196098,196099]},{"pos":[196152,196156],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[196214,196215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196360,196374],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[196449,196450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196521,196531],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[196592,196593]},{"pos":[196646,196650],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[196708,196709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197105,197149],"content":"ConvertChecked(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type, MethodInfo)","pos":[0,44]}]},{"pos":[197452,197466],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[197541,197542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197613,197623],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[197684,197685]},{"pos":[197738,197742],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[197801,197802]},{"pos":[197872,197882],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[197957,197958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198132,198146],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[198221,198222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198293,198303],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[198364,198365]},{"pos":[198418,198422],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[198481,198482]},{"pos":[198552,198562],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[198637,198638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199089,199146],"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","pos":[0,57]}]},{"pos":[199479,199488],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[199558,199559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199638,199656],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[199725,199726]},{"pos":[199780,199785],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[199845,199846]},{"pos":[199900,199905],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[199965,199966]},{"pos":[200020,200025],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[200085,200086]},{"pos":[200140,200145],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[200204,200205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200393,200402],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[200472,200473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200552,200570],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[200639,200640]},{"pos":[200694,200699],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[200759,200760]},{"pos":[200814,200819],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[200879,200880]},{"pos":[200934,200939],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[200999,201000]},{"pos":[201054,201059],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[201118,201119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201538,201559],"content":"Decrement(Expression)","needQuote":true,"nodes":[{"content":"Decrement(Expression)","pos":[0,21]}]},{"pos":[201768,201777],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[201847,201848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201919,201929],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[201989,201990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202118,202127],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[202197,202198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202269,202279],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[202339,202340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202691,202724],"content":"Decrement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Decrement(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[202992,203001],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[203071,203072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203143,203153],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[203214,203215]},{"pos":[203285,203295],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[203370,203371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203528,203537],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[203607,203608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203679,203689],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[203750,203751]},{"pos":[203821,203831],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[203906,203907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204245,204258],"content":"Default(Type)","needQuote":true,"nodes":[{"content":"Default(Type)","pos":[0,13]}]},{"pos":[204417,204424],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[204492,204493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204541,204545],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[204603,204604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204707,204714],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[204782,204783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204831,204835],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[204893,204894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205216,205246],"content":"Divide(Expression, Expression)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression)","pos":[0,30]}]},{"pos":[205520,205526],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[205593,205594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205665,205675],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[205736,205737]},{"pos":[205813,205823],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[205883,205884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206044,206050],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[206117,206118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206189,206199],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[206260,206261]},{"pos":[206337,206347],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[206407,206408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206832,206874],"content":"Divide(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[207207,207213],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[207280,207281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207352,207362],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[207423,207424]},{"pos":[207500,207510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[207571,207572]},{"pos":[207642,207652],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[207727,207728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207917,207923],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[207990,207991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208062,208072],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[208133,208134]},{"pos":[208210,208220],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[208281,208282]},{"pos":[208352,208362],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[208437,208438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208881,208917],"content":"DivideAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[209203,209215],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[209288,209289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[209360,209370],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[209431,209432]},{"pos":[209508,209518],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[209578,209579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209745,209757],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[209830,209831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[209902,209912],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[209973,209974]},{"pos":[210050,210060],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[210120,210121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210563,210611],"content":"DivideAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[210956,210968],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[211041,211042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211113,211123],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[211184,211185]},{"pos":[211261,211271],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[211332,211333]},{"pos":[211403,211413],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[211488,211489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211684,211696],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[211769,211770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211841,211851],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[211912,211913]},{"pos":[211989,211999],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[212060,212061]},{"pos":[212131,212141],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[212216,212217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212741,212807],"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[213235,213247],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[213320,213321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[213392,213402],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[213463,213464]},{"pos":[213540,213550],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[213611,213612]},{"pos":[213682,213692],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[213768,213769]},{"pos":[213851,213867],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[213933,213934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214170,214182],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[214255,214256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214327,214337],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214398,214399]},{"pos":[214475,214485],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214546,214547]},{"pos":[214617,214627],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[214703,214704]},{"pos":[214786,214802],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[214868,214869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215415,215463],"content":"ElementInit(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ElementInit(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[216049,216060],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[216132,216133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216198,216208],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[216284,216285]},{"pos":[216367,216378],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[216463,216464],"content":"<","needQuote":true,"nodes":[]},{"pos":[216535,216545],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[216637,216638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216837,216848],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[216920,216921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216986,216996],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[217072,217073]},{"pos":[217155,217166],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[217252,217255]},{"pos":[217333,217343],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[217403,217404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217431,217432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217967,218004],"content":"ElementInit(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, Expression[])","pos":[0,37]}]},{"pos":[218459,218470],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[218542,218543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218608,218618],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[218694,218695]},{"pos":[218771,218781],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[218842,218844]},{"pos":[218875,218876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219037,219048],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[219120,219121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219186,219196],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[219272,219273]},{"pos":[219349,219359],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[219419,219421],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[219449,219450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219850,219857],"content":"Empty()","needQuote":true,"nodes":[{"content":"Empty()","pos":[0,7]}]},{"pos":[219988,219993],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[220059,220060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220087,220088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220176,220181],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[220247,220248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220275,220276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220576,220605],"content":"Equal(Expression, Expression)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression)","pos":[0,29]}]},{"pos":[220877,220882],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[220948,220949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221020,221030],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[221091,221092]},{"pos":[221168,221178],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[221238,221239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221398,221403],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[221469,221470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221541,221551],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[221612,221613]},{"pos":[221689,221699],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[221759,221760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222196,222246],"content":"Equal(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression, Boolean, MethodInfo)","pos":[0,50]}]},{"pos":[222608,222613],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[222679,222680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222751,222761],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[222822,222823]},{"pos":[222899,222909],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[222970,222971]},{"pos":[223027,223034],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[223096,223097]},{"pos":[223167,223177],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[223252,223253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223456,223461],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[223527,223528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223599,223609],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[223670,223671]},{"pos":[223747,223757],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[223818,223819]},{"pos":[223875,223882],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[223944,223945]},{"pos":[224015,224025],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[224100,224101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224565,224600],"content":"ExclusiveOr(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression)","pos":[0,35]}]},{"pos":[224884,224895],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[224967,224968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225039,225049],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[225110,225111]},{"pos":[225187,225197],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[225257,225258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225423,225434],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[225506,225507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225578,225588],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[225649,225650]},{"pos":[225726,225736],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[225796,225797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226236,226283],"content":"ExclusiveOr(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[226626,226637],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[226709,226710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[226781,226791],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[226852,226853]},{"pos":[226929,226939],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[227000,227001]},{"pos":[227071,227081],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[227156,227157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227351,227362],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[227434,227435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227506,227516],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[227577,227578]},{"pos":[227654,227664],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[227725,227726]},{"pos":[227796,227806],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[227881,227882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228340,228381],"content":"ExclusiveOrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression)","pos":[0,41]}]},{"pos":[228677,228694],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[228772,228773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228844,228854],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[228915,228916]},{"pos":[228992,229002],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[229062,229063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229234,229251],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[229329,229330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229401,229411],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[229472,229473]},{"pos":[229549,229559],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[229619,229620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230077,230130],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","pos":[0,53]}]},{"pos":[230485,230502],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[230580,230581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[230652,230662],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[230723,230724]},{"pos":[230800,230810],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[230871,230872]},{"pos":[230942,230952],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[231027,231028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231228,231245],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[231323,231324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231395,231405],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[231466,231467]},{"pos":[231543,231553],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[231614,231615]},{"pos":[231685,231695],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[231770,231771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232310,232381],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,71]}]},{"pos":[232819,232836],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[232914,232915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232986,232996],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[233057,233058]},{"pos":[233134,233144],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[233205,233206]},{"pos":[233276,233286],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[233362,233363]},{"pos":[233445,233461],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[233527,233528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233769,233786],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[233864,233865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233936,233946],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[234007,234008]},{"pos":[234084,234094],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[234155,234156]},{"pos":[234226,234236],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[234312,234313]},{"pos":[234395,234411],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[234477,234478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234987,235015],"content":"Field(Expression, FieldInfo)","needQuote":true,"nodes":[{"content":"Field(Expression, FieldInfo)","pos":[0,28]}]},{"pos":[235273,235278],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[235344,235345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235416,235426],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[235487,235488]},{"pos":[235557,235566],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[235640,235641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235793,235798],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[235864,235865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235936,235946],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236007,236008]},{"pos":[236077,236086],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[236160,236161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236524,236549],"content":"Field(Expression, String)","needQuote":true,"nodes":[{"content":"Field(Expression, String)","pos":[0,25]}]},{"pos":[236779,236784],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[236850,236851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236922,236932],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236993,236994]},{"pos":[237049,237055],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[237115,237116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237254,237259],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[237325,237326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237397,237407],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[237468,237469]},{"pos":[237524,237530],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[237590,237591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237949,237980],"content":"Field(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Field(Expression, Type, String)","pos":[0,31]}]},{"pos":[238235,238240],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[238306,238307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238378,238388],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[238449,238450]},{"pos":[238503,238507],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[238566,238567]},{"pos":[238622,238628],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[238688,238689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238839,238844],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[238910,238911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238982,238992],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[239053,239054]},{"pos":[239107,239111],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[239170,239171]},{"pos":[239226,239232],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[239292,239293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239630,239651],"content":"GetActionType(Type[])","needQuote":true,"nodes":[{"content":"GetActionType(Type[])","pos":[0,21]}]},{"pos":[239938,239951],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[240025,240026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240074,240078],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[240137,240139]},{"pos":[240170,240171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240282,240295],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[240369,240370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240418,240422],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[240480,240482],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[240510,240511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240853,240876],"content":"GetDelegateType(Type[])","needQuote":true,"nodes":[{"content":"GetDelegateType(Type[])","pos":[0,23]}]},{"pos":[241171,241186],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[241262,241263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241311,241315],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[241374,241376]},{"pos":[241407,241408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241521,241536],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[241612,241613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241661,241665],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[241723,241725],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[241753,241754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242098,242117],"content":"GetFuncType(Type[])","needQuote":true,"nodes":[{"content":"GetFuncType(Type[])","pos":[0,19]}]},{"pos":[242396,242407],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[242479,242480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242528,242532],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[242591,242593]},{"pos":[242624,242625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242734,242745],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[242817,242818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242866,242870],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[242928,242930],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[242958,242959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243307,243324],"content":"Goto(LabelTarget)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget)","pos":[0,17]}]},{"pos":[243525,243529],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[243594,243595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243667,243678],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[243739,243740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243864,243868],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[243933,243934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244006,244017],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[244078,244079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244425,244454],"content":"Goto(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression)","pos":[0,29]}]},{"pos":[244726,244730],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[244795,244796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244868,244879],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[244941,244942]},{"pos":[245018,245028],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[245088,245089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245248,245252],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[245317,245318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245390,245401],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[245463,245464]},{"pos":[245540,245550],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[245610,245611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246015,246050],"content":"Goto(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression, Type)","pos":[0,35]}]},{"pos":[246347,246351],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[246416,246417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246489,246500],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[246562,246563]},{"pos":[246639,246649],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[246710,246711]},{"pos":[246764,246768],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[246826,246827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246998,247002],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[247067,247068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247140,247151],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[247213,247214]},{"pos":[247290,247300],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[247361,247362]},{"pos":[247415,247419],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[247477,247478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247865,247888],"content":"Goto(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Type)","pos":[0,23]}]},{"pos":[248114,248118],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[248183,248184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248256,248267],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[248329,248330]},{"pos":[248383,248387],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[248445,248446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248582,248586],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[248651,248652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248724,248735],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[248797,248798]},{"pos":[248851,248855],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[248913,248914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249284,249319],"content":"GreaterThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression)","pos":[0,35]}]},{"pos":[249603,249614],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[249686,249687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249758,249768],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[249829,249830]},{"pos":[249906,249916],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[249976,249977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250142,250153],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[250225,250226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250297,250307],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[250368,250369]},{"pos":[250445,250455],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[250515,250516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250970,251026],"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,56]}]},{"pos":[251400,251411],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[251483,251484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251555,251565],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[251626,251627]},{"pos":[251703,251713],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[251774,251775]},{"pos":[251831,251838],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[251900,251901]},{"pos":[251971,251981],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[252056,252057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252266,252277],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[252349,252350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252421,252431],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[252492,252493]},{"pos":[252569,252579],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[252640,252641]},{"pos":[252697,252704],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[252766,252767]},{"pos":[252837,252847],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[252922,252923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253406,253448],"content":"GreaterThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression)","pos":[0,42]}]},{"pos":[253746,253764],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[253843,253844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253915,253925],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[253986,253987]},{"pos":[254063,254073],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[254133,254134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254306,254324],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[254403,254404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254475,254485],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[254546,254547]},{"pos":[254623,254633],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[254693,254694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255169,255232],"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,63]}]},{"pos":[255620,255638],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[255717,255718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255789,255799],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[255860,255861]},{"pos":[255937,255947],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[256008,256009]},{"pos":[256065,256072],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[256134,256135]},{"pos":[256205,256215],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[256290,256291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256507,256525],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[256604,256605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[256676,256686],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[256747,256748]},{"pos":[256824,256834],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[256895,256896]},{"pos":[256952,256959],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[257021,257022]},{"pos":[257092,257102],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[257177,257178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257663,257693],"content":"IfThen(Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThen(Expression, Expression)","pos":[0,30]}]},{"pos":[257967,257973],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[258040,258041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258112,258122],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[258183,258184]},{"pos":[258260,258270],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[258330,258331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258491,258497],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[258564,258565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258636,258646],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[258707,258708]},{"pos":[258784,258794],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[258854,258855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259290,259336],"content":"IfThenElse(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThenElse(Expression, Expression, Expression)","pos":[0,46]}]},{"pos":[259689,259699],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[259770,259771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259842,259852],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[259913,259914]},{"pos":[259990,260000],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[260061,260062]},{"pos":[260138,260148],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[260208,260209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260408,260418],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[260489,260490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260561,260571],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[260632,260633]},{"pos":[260709,260719],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[260780,260781]},{"pos":[260857,260867],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[260927,260928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261347,261368],"content":"Increment(Expression)","needQuote":true,"nodes":[{"content":"Increment(Expression)","pos":[0,21]}]},{"pos":[261577,261586],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[261656,261657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261728,261738],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[261798,261799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261927,261936],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[262006,262007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262078,262088],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[262148,262149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262500,262533],"content":"Increment(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Increment(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[262801,262810],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[262880,262881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262952,262962],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[263023,263024]},{"pos":[263094,263104],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[263179,263180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263337,263346],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[263416,263417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263488,263498],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[263559,263560]},{"pos":[263630,263640],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[263715,263716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264151,264194],"content":"Invoke(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Invoke(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"Invoke(Expression, IEnumerable<Expression>)"}]},{"pos":[264778,264784],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[264851,264852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264923,264933],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[264994,264995]},{"pos":[265077,265088],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[265173,265174],"content":"<","needQuote":true,"nodes":[]},{"pos":[265245,265255],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[265347,265348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265548,265554],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[265621,265622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265693,265703],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[265764,265765]},{"pos":[265847,265858],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[265944,265947]},{"pos":[266025,266035],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[266095,266096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266123,266124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266652,266684],"content":"Invoke(Expression, Expression[])","needQuote":true,"nodes":[{"content":"Invoke(Expression, Expression[])","pos":[0,32]}]},{"pos":[267137,267143],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[267210,267211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[267282,267292],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[267353,267354]},{"pos":[267430,267440],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[267501,267503]},{"pos":[267534,267535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267697,267703],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[267770,267771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[267842,267852],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[267913,267914]},{"pos":[267990,268000],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[268060,268062],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[268090,268091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268520,268539],"content":"IsFalse(Expression)","needQuote":true,"nodes":[{"content":"IsFalse(Expression)","pos":[0,19]}]},{"pos":[268744,268751],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[268819,268820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268891,268901],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[268961,268962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269088,269095],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[269163,269164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269235,269245],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[269305,269306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269651,269682],"content":"IsFalse(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsFalse(Expression, MethodInfo)","pos":[0,31]}]},{"pos":[269946,269953],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[270021,270022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270093,270103],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[270164,270165]},{"pos":[270235,270245],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[270320,270321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270476,270483],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[270551,270552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270623,270633],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[270694,270695]},{"pos":[270765,270775],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[270850,270851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271208,271226],"content":"IsTrue(Expression)","needQuote":true,"nodes":[{"content":"IsTrue(Expression)","pos":[0,18]}]},{"pos":[271429,271435],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[271502,271503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271574,271584],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[271644,271645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271770,271776],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[271843,271844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271915,271925],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[271985,271986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272328,272358],"content":"IsTrue(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsTrue(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[272620,272626],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[272693,272694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272765,272775],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[272836,272837]},{"pos":[272907,272917],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[272992,272993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273147,273153],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[273220,273221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273292,273302],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[273363,273364]},{"pos":[273434,273444],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[273519,273520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273838,273845],"content":"Label()","needQuote":true,"nodes":[{"content":"Label()","pos":[0,7]}]},{"pos":[273976,273981],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[274047,274048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274075,274076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274164,274169],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[274235,274236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274263,274264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274530,274548],"content":"Label(LabelTarget)","needQuote":true,"nodes":[{"content":"Label(LabelTarget)","pos":[0,18]}]},{"pos":[274751,274756],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[274822,274823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274895,274906],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[274967,274968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275093,275098],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[275164,275165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275237,275248],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[275309,275310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275659,275689],"content":"Label(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Label(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[275963,275968],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[276034,276035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276107,276118],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[276180,276181]},{"pos":[276257,276267],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[276327,276328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276488,276493],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[276559,276560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276632,276643],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[276705,276706]},{"pos":[276782,276792],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[276852,276853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277191,277204],"content":"Label(String)","needQuote":true,"nodes":[{"content":"Label(String)","pos":[0,13]}]},{"pos":[277363,277368],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[277434,277435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277485,277491],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[277551,277552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277655,277660],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[277726,277727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277777,277783],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[277843,277844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278106,278117],"content":"Label(Type)","needQuote":true,"nodes":[{"content":"Label(Type)","pos":[0,11]}]},{"pos":[278272,278277],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[278343,278344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278392,278396],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[278454,278455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278556,278561],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[278627,278628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278676,278680],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[278738,278739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279011,279030],"content":"Label(Type, String)","needQuote":true,"nodes":[{"content":"Label(Type, String)","pos":[0,19]}]},{"pos":[279214,279219],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[279285,279286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279334,279338],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[279397,279398]},{"pos":[279453,279459],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[279519,279520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279635,279640],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[279706,279707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279755,279759],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[279818,279819]},{"pos":[279874,279880],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[279940,279941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280344,280405],"content":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,61],"source":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[281081,281087],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[281154,281155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281226,281236],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[281297,281298]},{"pos":[281354,281361],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[281423,281424]},{"pos":[281506,281517],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[281602,281603],"content":"<","needQuote":true,"nodes":[]},{"pos":[281683,281702],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[281803,281804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282028,282034],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[282101,282102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282173,282183],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[282244,282245]},{"pos":[282301,282308],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[282370,282371]},{"pos":[282453,282464],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[282550,282553]},{"pos":[282640,282659],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[282728,282729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282756,282757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283368,283418],"content":"Lambda(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, ParameterExpression[])","pos":[0,50]}]},{"pos":[283963,283969],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[284036,284037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284108,284118],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[284179,284180]},{"pos":[284236,284243],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[284305,284306]},{"pos":[284391,284410],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[284480,284482]},{"pos":[284513,284514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284700,284706],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[284773,284774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284845,284855],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[284916,284917]},{"pos":[284973,284980],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[285042,285043]},{"pos":[285128,285147],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[285216,285218],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[285246,285247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285818,285870],"content":"Lambda(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,52],"source":"Lambda(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[286490,286496],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[286563,286564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286635,286645],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[286706,286707]},{"pos":[286789,286800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[286885,286886],"content":"<","needQuote":true,"nodes":[]},{"pos":[286966,286985],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[287086,287087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287296,287302],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[287369,287370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287441,287451],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[287512,287513]},{"pos":[287595,287606],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[287692,287695]},{"pos":[287782,287801],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[287870,287871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287898,287899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288463,288504],"content":"Lambda(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, ParameterExpression[])","pos":[0,41]}]},{"pos":[288993,288999],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[289066,289067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289138,289148],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[289209,289210]},{"pos":[289295,289314],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[289384,289386]},{"pos":[289417,289418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289589,289595],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[289662,289663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289734,289744],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[289805,289806]},{"pos":[289891,289910],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[289979,289981],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[290009,290010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290577,290646],"content":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,69],"source":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[291374,291380],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[291447,291448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291519,291529],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[291590,291591]},{"pos":[291646,291652],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[291713,291714]},{"pos":[291770,291777],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[291839,291840]},{"pos":[291922,291933],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[292018,292019],"content":"<","needQuote":true,"nodes":[]},{"pos":[292099,292118],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[292219,292220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292458,292464],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[292531,292532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292603,292613],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[292674,292675]},{"pos":[292730,292736],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[292797,292798]},{"pos":[292854,292861],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[292923,292924]},{"pos":[293006,293017],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[293103,293106]},{"pos":[293193,293212],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[293281,293282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293309,293310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293988,294048],"content":"Lambda(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,60],"source":"Lambda(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[294720,294726],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[294793,294794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294865,294875],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[294936,294937]},{"pos":[294992,294998],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[295059,295060]},{"pos":[295142,295153],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[295238,295239],"content":"<","needQuote":true,"nodes":[]},{"pos":[295319,295338],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[295439,295440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295663,295669],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[295736,295737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295808,295818],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[295879,295880]},{"pos":[295935,295941],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[296002,296003]},{"pos":[296085,296096],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[296182,296185]},{"pos":[296272,296291],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[296360,296361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296388,296389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297047,297114],"content":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,67],"source":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[297834,297840],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[297907,297908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297956,297960],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[298019,298020]},{"pos":[298096,298106],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[298167,298168]},{"pos":[298224,298231],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[298293,298294]},{"pos":[298376,298387],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[298472,298473],"content":"<","needQuote":true,"nodes":[]},{"pos":[298553,298572],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[298673,298674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298910,298916],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[298983,298984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299032,299036],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[299095,299096]},{"pos":[299172,299182],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[299243,299244]},{"pos":[299300,299307],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[299369,299370]},{"pos":[299452,299463],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[299549,299552]},{"pos":[299639,299658],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[299727,299728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299755,299756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300403,300459],"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","pos":[0,56]}]},{"pos":[301048,301054],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[301121,301122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301170,301174],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[301233,301234]},{"pos":[301310,301320],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[301381,301382]},{"pos":[301438,301445],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[301507,301508]},{"pos":[301593,301612],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[301682,301684]},{"pos":[301715,301716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301914,301920],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[301987,301988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302036,302040],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[302099,302100]},{"pos":[302176,302186],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[302247,302248]},{"pos":[302304,302311],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[302373,302374]},{"pos":[302459,302478],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[302547,302549],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[302577,302578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303185,303243],"content":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,58],"source":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[303907,303913],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[303980,303981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304029,304033],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[304092,304093]},{"pos":[304169,304179],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[304240,304241]},{"pos":[304323,304334],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[304419,304420],"content":"<","needQuote":true,"nodes":[]},{"pos":[304500,304519],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[304620,304621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304842,304848],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[304915,304916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304964,304968],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[305027,305028]},{"pos":[305104,305114],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[305175,305176]},{"pos":[305258,305269],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[305355,305358]},{"pos":[305445,305464],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[305533,305534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305561,305562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306161,306208],"content":"Lambda(Type, Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, ParameterExpression[])","pos":[0,47]}]},{"pos":[306741,306747],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[306814,306815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306863,306867],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[306926,306927]},{"pos":[307003,307013],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[307074,307075]},{"pos":[307160,307179],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[307249,307251]},{"pos":[307282,307283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307466,307472],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[307539,307540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307588,307592],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[307651,307652]},{"pos":[307728,307738],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[307799,307800]},{"pos":[307885,307904],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[307973,307975],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[308003,308004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308607,308682],"content":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,75],"source":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[309454,309460],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[309527,309528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309576,309580],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[309639,309640]},{"pos":[309716,309726],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[309787,309788]},{"pos":[309843,309849],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[309910,309911]},{"pos":[309967,309974],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[310036,310037]},{"pos":[310119,310130],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[310215,310216],"content":"<","needQuote":true,"nodes":[]},{"pos":[310296,310315],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[310416,310417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310667,310673],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[310740,310741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310789,310793],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[310852,310853]},{"pos":[310929,310939],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[311000,311001]},{"pos":[311056,311062],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[311123,311124]},{"pos":[311180,311187],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[311249,311250]},{"pos":[311332,311343],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[311429,311432]},{"pos":[311519,311538],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[311607,311608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311635,311636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312350,312416],"content":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,66],"source":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[313132,313138],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[313205,313206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313254,313258],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[313317,313318]},{"pos":[313394,313404],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[313465,313466]},{"pos":[313521,313527],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[313588,313589]},{"pos":[313671,313682],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[313767,313768],"content":"<","needQuote":true,"nodes":[]},{"pos":[313848,313867],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[313968,313969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314204,314210],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[314277,314278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[314326,314330],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[314389,314390]},{"pos":[314466,314476],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[314537,314538]},{"pos":[314593,314599],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[314660,314661]},{"pos":[314743,314754],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[314840,314843]},{"pos":[314930,314949],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[315018,315019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315046,315047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315720,315792],"content":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,72],"source":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[316510,316527],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[316605,316606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316677,316687],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[316748,316749]},{"pos":[316805,316812],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[316874,316875]},{"pos":[316957,316968],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[317053,317054],"content":"<","needQuote":true,"nodes":[]},{"pos":[317134,317153],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[317254,317255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317482,317502],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[317583,317584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317655,317665],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[317726,317727]},{"pos":[317783,317790],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[317852,317853]},{"pos":[317935,317946],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[318032,318035]},{"pos":[318122,318141],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[318210,318211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318238,318239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318881,318942],"content":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, ParameterExpression[])","pos":[0,61],"source":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])"}]},{"pos":[319529,319546],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[319624,319625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319696,319706],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[319767,319768]},{"pos":[319824,319831],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[319893,319894]},{"pos":[319979,319998],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[320068,320070]},{"pos":[320101,320102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320291,320311],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[320392,320393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320464,320474],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[320535,320536]},{"pos":[320592,320599],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[320661,320662]},{"pos":[320747,320766],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[320835,320837],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[320865,320866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321468,321531],"content":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,63],"source":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[322193,322210],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[322288,322289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322360,322370],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[322431,322432]},{"pos":[322514,322525],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[322610,322611],"content":"<","needQuote":true,"nodes":[]},{"pos":[322691,322710],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[322811,322812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323024,323044],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[323125,323126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323197,323207],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[323268,323269]},{"pos":[323351,323362],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[323448,323451]},{"pos":[323538,323557],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[323626,323627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323654,323655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324250,324302],"content":"Lambda<TDelegate>(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, ParameterExpression[])","pos":[0,52],"source":"Lambda<TDelegate>(Expression, ParameterExpression[])"}]},{"pos":[324833,324850],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[324928,324929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325000,325010],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[325071,325072]},{"pos":[325157,325176],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[325246,325248]},{"pos":[325279,325280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325454,325474],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[325555,325556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325627,325637],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[325698,325699]},{"pos":[325784,325803],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[325872,325874],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[325902,325903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326501,326581],"content":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,80],"source":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[327351,327368],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[327446,327447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327518,327528],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[327589,327590]},{"pos":[327645,327651],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[327712,327713]},{"pos":[327769,327776],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[327838,327839]},{"pos":[327921,327932],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[328017,328018],"content":"<","needQuote":true,"nodes":[]},{"pos":[328098,328117],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[328218,328219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328460,328480],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[328561,328562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328633,328643],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[328704,328705]},{"pos":[328760,328766],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[328827,328828]},{"pos":[328884,328891],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[328953,328954]},{"pos":[329036,329047],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[329133,329136]},{"pos":[329223,329242],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[329311,329312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329339,329340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330049,330120],"content":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,71],"source":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[330834,330851],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[330929,330930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331001,331011],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[331072,331073]},{"pos":[331128,331134],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[331195,331196]},{"pos":[331278,331289],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[331374,331375],"content":"<","needQuote":true,"nodes":[]},{"pos":[331455,331474],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[331575,331576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331802,331822],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[331903,331904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331975,331985],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[332046,332047]},{"pos":[332102,332108],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[332169,332170]},{"pos":[332252,332263],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[332349,332352]},{"pos":[332439,332458],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[332527,332528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332555,332556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333170,333203],"content":"LeftShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression)","pos":[0,33]}]},{"pos":[333483,333492],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[333562,333563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[333634,333644],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[333705,333706]},{"pos":[333782,333792],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[333852,333853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334016,334025],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[334095,334096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334167,334177],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[334238,334239]},{"pos":[334315,334325],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[334385,334386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334819,334864],"content":"LeftShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[335203,335212],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[335282,335283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[335354,335364],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[335425,335426]},{"pos":[335502,335512],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[335573,335574]},{"pos":[335644,335654],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[335729,335730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335922,335931],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[336001,336002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336073,336083],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[336144,336145]},{"pos":[336221,336231],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[336292,336293]},{"pos":[336363,336373],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[336448,336449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336901,336940],"content":"LeftShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression)","pos":[0,39]}]},{"pos":[337232,337247],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[337323,337324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337395,337405],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[337466,337467]},{"pos":[337543,337553],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[337613,337614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337783,337798],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[337874,337875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337946,337956],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[338017,338018]},{"pos":[338094,338104],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[338164,338165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338616,338667],"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[339018,339033],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[339109,339110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339181,339191],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[339252,339253]},{"pos":[339329,339339],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[339400,339401]},{"pos":[339471,339481],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[339556,339557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339755,339770],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[339846,339847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339918,339928],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[339989,339990]},{"pos":[340066,340076],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[340137,340138]},{"pos":[340208,340218],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[340293,340294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340827,340896],"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,69]}]},{"pos":[341330,341345],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[341421,341422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[341493,341503],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[341564,341565]},{"pos":[341641,341651],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[341712,341713]},{"pos":[341783,341793],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[341869,341870]},{"pos":[341952,341968],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[342034,342035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342274,342289],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[342365,342366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342437,342447],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342508,342509]},{"pos":[342585,342595],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342656,342657]},{"pos":[342727,342737],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[342813,342814]},{"pos":[342896,342912],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[342978,342979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343495,343527],"content":"LessThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression)","pos":[0,32]}]},{"pos":[343805,343813],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[343882,343883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343954,343964],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[344025,344026]},{"pos":[344102,344112],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[344172,344173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344335,344343],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[344412,344413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344484,344494],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[344555,344556]},{"pos":[344632,344642],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[344702,344703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345148,345201],"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[345569,345577],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[345646,345647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345718,345728],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[345789,345790]},{"pos":[345866,345876],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[345937,345938]},{"pos":[345994,346001],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[346063,346064]},{"pos":[346134,346144],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[346219,346220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346426,346434],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[346503,346504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346575,346585],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[346646,346647]},{"pos":[346723,346733],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[346794,346795]},{"pos":[346851,346858],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[346920,346921]},{"pos":[346991,347001],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[347076,347077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347551,347590],"content":"LessThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression)","pos":[0,39]}]},{"pos":[347882,347897],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[347973,347974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348045,348055],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[348116,348117]},{"pos":[348193,348203],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[348263,348264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348433,348448],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[348524,348525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348596,348606],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[348667,348668]},{"pos":[348744,348754],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[348814,348815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349281,349341],"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,60]}]},{"pos":[349723,349738],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[349814,349815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349886,349896],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[349957,349958]},{"pos":[350034,350044],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[350105,350106]},{"pos":[350162,350169],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[350231,350232]},{"pos":[350302,350312],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[350387,350388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350601,350616],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[350692,350693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350764,350774],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[350835,350836]},{"pos":[350912,350922],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[350983,350984]},{"pos":[351040,351047],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[351109,351110]},{"pos":[351180,351190],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[351265,351266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351781,351827],"content":"ListBind(MemberInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MemberInfo, IEnumerable<ElementInit>)"}]},{"pos":[352405,352413],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[352482,352483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352548,352558],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[352634,352635]},{"pos":[352717,352728],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[352813,352814],"content":"<","needQuote":true,"nodes":[]},{"pos":[352886,352897],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[352990,352991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353188,353196],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[353265,353266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353331,353341],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[353417,353418]},{"pos":[353500,353511],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[353597,353600]},{"pos":[353679,353690],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[353751,353752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353779,353780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354307,354342],"content":"ListBind(MemberInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, ElementInit[])","pos":[0,35]}]},{"pos":[354789,354797],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[354866,354867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[354932,354942],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[355018,355019]},{"pos":[355096,355107],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[355169,355171]},{"pos":[355202,355203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355362,355370],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[355439,355440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355505,355515],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[355591,355592]},{"pos":[355669,355680],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[355741,355743],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[355771,355772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356274,356320],"content":"ListBind(MethodInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MethodInfo, IEnumerable<ElementInit>)"}]},{"pos":[356898,356906],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[356975,356976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357041,357051],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[357127,357128]},{"pos":[357210,357221],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[357306,357307],"content":"<","needQuote":true,"nodes":[]},{"pos":[357379,357390],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[357483,357484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357681,357689],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[357758,357759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357824,357834],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[357910,357911]},{"pos":[357993,358004],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[358090,358093]},{"pos":[358172,358183],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[358244,358245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358272,358273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358800,358835],"content":"ListBind(MethodInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, ElementInit[])","pos":[0,35]}]},{"pos":[359282,359290],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[359359,359360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359425,359435],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[359511,359512]},{"pos":[359589,359600],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[359662,359664]},{"pos":[359695,359696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359855,359863],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[359932,359933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359998,360008],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[360084,360085]},{"pos":[360162,360173],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[360234,360236],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[360264,360265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360776,360825],"content":"ListInit(NewExpression, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;ElementInit&gt;)","pos":[0,49],"source":"ListInit(NewExpression, IEnumerable<ElementInit>)"}]},{"pos":[361433,361441],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[361510,361511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361585,361598],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[361662,361663]},{"pos":[361745,361756],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[361841,361842],"content":"<","needQuote":true,"nodes":[]},{"pos":[361914,361925],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[362018,362019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362225,362233],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[362302,362303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362377,362390],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[362454,362455]},{"pos":[362537,362548],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[362634,362637]},{"pos":[362716,362727],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[362788,362789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362816,362817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363405,363453],"content":"ListInit(NewExpression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ListInit(NewExpression, IEnumerable<Expression>)"}]},{"pos":[364057,364065],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[364134,364135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364209,364222],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[364286,364287]},{"pos":[364369,364380],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[364465,364466],"content":"<","needQuote":true,"nodes":[]},{"pos":[364537,364547],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[364639,364640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364845,364853],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[364922,364923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364997,365010],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[365074,365075]},{"pos":[365157,365168],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[365254,365257]},{"pos":[365335,365345],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[365405,365406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365433,365434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365983,366021],"content":"ListInit(NewExpression, ElementInit[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, ElementInit[])","pos":[0,38]}]},{"pos":[366498,366506],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[366575,366576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[366650,366663],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[366727,366728]},{"pos":[366805,366816],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[366878,366880]},{"pos":[366911,366912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367080,367088],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[367157,367158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367232,367245],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[367309,367310]},{"pos":[367387,367398],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[367459,367461],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[367489,367490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367978,368015],"content":"ListInit(NewExpression, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, Expression[])","pos":[0,37]}]},{"pos":[368488,368496],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[368565,368566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368640,368653],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[368717,368718]},{"pos":[368794,368804],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[368865,368867]},{"pos":[368898,368899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369066,369074],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[369143,369144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369218,369231],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[369295,369296]},{"pos":[369372,369382],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[369442,369444],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[369472,369473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370024,370084],"content":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[370789,370797],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[370866,370867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370941,370954],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[371018,371019]},{"pos":[371089,371099],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[371175,371176]},{"pos":[371258,371269],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[371354,371355],"content":"<","needQuote":true,"nodes":[]},{"pos":[371426,371436],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[371528,371529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371763,371771],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[371840,371841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371915,371928],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[371992,371993]},{"pos":[372063,372073],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[372149,372150]},{"pos":[372232,372243],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[372329,372332]},{"pos":[372410,372420],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[372480,372481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372508,372509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373138,373187],"content":"ListInit(NewExpression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, Expression[])","pos":[0,49]}]},{"pos":[373761,373769],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[373838,373839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373913,373926],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[373990,373991]},{"pos":[374061,374071],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[374147,374148]},{"pos":[374224,374234],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[374295,374297]},{"pos":[374328,374329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374525,374533],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[374602,374603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374677,374690],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[374754,374755]},{"pos":[374825,374835],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[374911,374912]},{"pos":[374988,374998],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[375058,375060],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[375088,375089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375583,375599],"content":"Loop(Expression)","needQuote":true,"nodes":[{"content":"Loop(Expression)","pos":[0,16]}]},{"pos":[375798,375802],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[375867,375868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375939,375949],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[376009,376010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376133,376137],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[376202,376203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376274,376284],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[376344,376345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376689,376718],"content":"Loop(Expression, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget)","pos":[0,29]}]},{"pos":[376990,376994],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[377059,377060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377131,377141],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[377202,377203]},{"pos":[377280,377291],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[377352,377353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377512,377516],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[377581,377582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377653,377663],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[377724,377725]},{"pos":[377802,377813],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[377874,377875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378304,378346],"content":"Loop(Expression, LabelTarget, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget, LabelTarget)","pos":[0,42]}]},{"pos":[378691,378695],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[378760,378761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378832,378842],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[378903,378904]},{"pos":[378981,378992],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[379054,379055]},{"pos":[379132,379143],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[379204,379205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379400,379404],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[379469,379470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379541,379551],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[379612,379613]},{"pos":[379690,379701],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[379763,379764]},{"pos":[379841,379852],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[379913,379914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380400,380450],"content":"MakeBinary(ExpressionType, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression)","pos":[0,50]}]},{"pos":[380811,380821],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[380892,380893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[380968,380982],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[381047,381048]},{"pos":[381124,381134],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[381195,381196]},{"pos":[381272,381282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[381342,381343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381546,381556],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[381627,381628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381703,381717],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[381782,381783]},{"pos":[381859,381869],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[381930,381931]},{"pos":[382007,382017],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[382077,382078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382623,382694],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","pos":[0,71]}]},{"pos":[383145,383155],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[383226,383227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[383302,383316],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[383381,383382]},{"pos":[383458,383468],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[383529,383530]},{"pos":[383606,383616],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[383677,383678]},{"pos":[383734,383741],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[383803,383804]},{"pos":[383874,383884],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[383959,383960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384207,384217],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[384288,384289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384364,384378],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[384443,384444]},{"pos":[384520,384530],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[384591,384592]},{"pos":[384668,384678],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[384739,384740]},{"pos":[384796,384803],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[384865,384866]},{"pos":[384936,384946],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[385021,385022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385673,385762],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","pos":[0,89]}]},{"pos":[386296,386306],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[386377,386378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386453,386467],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[386532,386533]},{"pos":[386609,386619],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[386680,386681]},{"pos":[386757,386767],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[386828,386829]},{"pos":[386885,386892],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[386954,386955]},{"pos":[387025,387035],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[387111,387112]},{"pos":[387194,387210],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[387276,387277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387565,387575],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[387646,387647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387722,387736],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[387801,387802]},{"pos":[387878,387888],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[387949,387950]},{"pos":[388026,388036],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[388097,388098]},{"pos":[388154,388161],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[388223,388224]},{"pos":[388294,388304],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[388380,388381]},{"pos":[388463,388479],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[388545,388546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389192,389257],"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","pos":[0,65]}]},{"pos":[389661,389675],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[389750,389751],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389799,389803],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[389862,389863]},{"pos":[389948,389967],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[390037,390038]},{"pos":[390114,390124],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[390185,390186]},{"pos":[390262,390272],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[390332,390333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390557,390571],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[390646,390647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390695,390699],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[390758,390759]},{"pos":[390844,390863],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[390933,390934]},{"pos":[391010,391020],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[391081,391082]},{"pos":[391158,391168],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[391228,391229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391781,391840],"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","pos":[0,59]}]},{"pos":[392232,392240],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[392309,392310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392389,392407],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[392476,392477]},{"pos":[392554,392565],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[392627,392628]},{"pos":[392704,392714],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[392775,392776]},{"pos":[392829,392833],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[392891,392892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393110,393118],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[393187,393188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393267,393285],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[393354,393355]},{"pos":[393432,393443],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[393505,393506]},{"pos":[393582,393592],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[393653,393654]},{"pos":[393707,393711],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[393769,393770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394326,394386],"content":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"MakeIndex(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[395091,395100],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[395170,395171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395242,395252],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[395313,395314]},{"pos":[395386,395398],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[395476,395477]},{"pos":[395559,395570],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[395655,395656],"content":"<","needQuote":true,"nodes":[]},{"pos":[395727,395737],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[395829,395830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396064,396073],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[396143,396144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396215,396225],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[396286,396287]},{"pos":[396359,396371],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[396449,396450]},{"pos":[396532,396543],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[396629,396632]},{"pos":[396710,396720],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[396780,396781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396808,396809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397406,397446],"content":"MakeMemberAccess(Expression, MemberInfo)","needQuote":true,"nodes":[{"content":"MakeMemberAccess(Expression, MemberInfo)","pos":[0,40]}]},{"pos":[397728,397744],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[397821,397822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[397893,397903],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[397964,397965]},{"pos":[398035,398045],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[398120,398121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398285,398301],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[398378,398379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398450,398460],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[398521,398522]},{"pos":[398592,398602],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[398677,398678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399210,399284],"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)","needQuote":true,"nodes":[{"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable&lt;CatchBlock&gt;)","pos":[0,74],"source":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)"}]},{"pos":[400154,400161],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[400229,400230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[400278,400282],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[400341,400342]},{"pos":[400418,400428],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[400489,400490]},{"pos":[400566,400576],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[400637,400638]},{"pos":[400714,400724],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[400785,400786]},{"pos":[400868,400879],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[400964,400965],"content":"<","needQuote":true,"nodes":[]},{"pos":[401036,401046],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[401138,401139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401422,401429],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[401497,401498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401546,401550],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[401609,401610]},{"pos":[401686,401696],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[401757,401758]},{"pos":[401834,401844],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[401905,401906]},{"pos":[401982,401992],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[402053,402054]},{"pos":[402136,402147],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[402233,402236]},{"pos":[402314,402324],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[402384,402385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402412,402413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403102,403145],"content":"MakeUnary(ExpressionType, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type)","pos":[0,43]}]},{"pos":[403458,403467],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[403537,403538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[403613,403627],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[403692,403693]},{"pos":[403769,403779],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[403840,403841]},{"pos":[403894,403898],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[403956,403957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404136,404145],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[404215,404216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404291,404305],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[404370,404371]},{"pos":[404447,404457],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[404518,404519]},{"pos":[404572,404576],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[404634,404635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405110,405165],"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","pos":[0,55]}]},{"pos":[405537,405546],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[405616,405617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405692,405706],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[405771,405772]},{"pos":[405848,405858],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[405919,405920]},{"pos":[405973,405977],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[406036,406037]},{"pos":[406107,406117],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[406192,406193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406401,406410],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[406480,406481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406556,406570],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[406635,406636]},{"pos":[406712,406722],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[406783,406784]},{"pos":[406837,406841],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[406900,406901]},{"pos":[406971,406981],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[407056,407057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407566,407616],"content":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)"}]},{"pos":[408210,408220],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[408291,408292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408357,408367],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[408443,408444]},{"pos":[408526,408537],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[408622,408623],"content":"<","needQuote":true,"nodes":[]},{"pos":[408697,408710],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[408805,408806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409007,409017],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[409088,409089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409154,409164],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[409240,409241]},{"pos":[409323,409334],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[409420,409423]},{"pos":[409504,409517],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[409580,409581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409608,409609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410152,410191],"content":"MemberBind(MemberInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[410654,410664],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[410735,410736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[410801,410811],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[410887,410888]},{"pos":[410967,410980],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[411044,411046]},{"pos":[411077,411078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411241,411251],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[411322,411323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411388,411398],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[411474,411475]},{"pos":[411554,411567],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[411630,411632],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[411660,411661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412179,412229],"content":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)"}]},{"pos":[412823,412833],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[412904,412905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412970,412980],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[413056,413057]},{"pos":[413139,413150],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[413235,413236],"content":"<","needQuote":true,"nodes":[]},{"pos":[413310,413323],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[413418,413419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413620,413630],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[413701,413702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413767,413777],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[413853,413854]},{"pos":[413936,413947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[414033,414036]},{"pos":[414117,414130],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[414193,414194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414221,414222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414765,414804],"content":"MemberBind(MethodInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[415267,415277],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[415348,415349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415414,415424],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[415500,415501]},{"pos":[415580,415593],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[415657,415659]},{"pos":[415690,415691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415854,415864],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[415935,415936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416001,416011],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[416087,416088]},{"pos":[416167,416180],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[416243,416245],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[416273,416274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416801,416854],"content":"MemberInit(NewExpression, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, IEnumerable&lt;MemberBinding&gt;)","pos":[0,53],"source":"MemberInit(NewExpression, IEnumerable<MemberBinding>)"}]},{"pos":[417478,417488],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[417559,417560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[417634,417647],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[417711,417712]},{"pos":[417794,417805],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[417890,417891],"content":"<","needQuote":true,"nodes":[]},{"pos":[417965,417978],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[418073,418074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418284,418294],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[418365,418366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418440,418453],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[418517,418518]},{"pos":[418600,418611],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[418697,418700]},{"pos":[418781,418794],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[418857,418858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418885,418886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419454,419496],"content":"MemberInit(NewExpression, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, MemberBinding[])","pos":[0,42]}]},{"pos":[419989,419999],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[420070,420071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420145,420158],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[420222,420223]},{"pos":[420302,420315],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[420379,420381]},{"pos":[420412,420413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420585,420595],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[420666,420667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420741,420754],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[420818,420819]},{"pos":[420898,420911],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[420974,420976],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[421004,421005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421498,421528],"content":"Modulo(Expression, Expression)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression)","pos":[0,30]}]},{"pos":[421802,421808],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[421875,421876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421947,421957],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[422018,422019]},{"pos":[422095,422105],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[422165,422166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422326,422332],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[422399,422400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422471,422481],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[422542,422543]},{"pos":[422619,422629],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[422689,422690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423114,423156],"content":"Modulo(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[423489,423495],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[423562,423563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423634,423644],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[423705,423706]},{"pos":[423782,423792],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[423853,423854]},{"pos":[423924,423934],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[424009,424010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424199,424205],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[424272,424273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424344,424354],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[424415,424416]},{"pos":[424492,424502],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[424563,424564]},{"pos":[424634,424644],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[424719,424720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425163,425199],"content":"ModuloAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[425485,425497],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[425570,425571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425642,425652],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[425713,425714]},{"pos":[425790,425800],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[425860,425861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426027,426039],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[426112,426113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426184,426194],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[426255,426256]},{"pos":[426332,426342],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[426402,426403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426845,426893],"content":"ModuloAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[427238,427250],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[427323,427324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427395,427405],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[427466,427467]},{"pos":[427543,427553],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[427614,427615]},{"pos":[427685,427695],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[427770,427771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427966,427978],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[428051,428052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428123,428133],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[428194,428195]},{"pos":[428271,428281],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[428342,428343]},{"pos":[428413,428423],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[428498,428499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429023,429089],"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[429517,429529],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[429602,429603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429674,429684],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[429745,429746]},{"pos":[429822,429832],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[429893,429894]},{"pos":[429964,429974],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[430050,430051]},{"pos":[430133,430149],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[430215,430216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430452,430464],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[430537,430538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430609,430619],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430680,430681]},{"pos":[430757,430767],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430828,430829]},{"pos":[430899,430909],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[430985,430986]},{"pos":[431068,431084],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[431150,431151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431661,431693],"content":"Multiply(Expression, Expression)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression)","pos":[0,32]}]},{"pos":[431971,431979],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[432048,432049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432120,432130],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432191,432192]},{"pos":[432268,432278],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[432338,432339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432501,432509],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[432578,432579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432650,432660],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432721,432722]},{"pos":[432798,432808],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[432868,432869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433299,433343],"content":"Multiply(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[433680,433688],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[433757,433758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433829,433839],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[433900,433901]},{"pos":[433977,433987],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[434048,434049]},{"pos":[434119,434129],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[434204,434205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434396,434404],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[434473,434474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434545,434555],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[434616,434617]},{"pos":[434693,434703],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[434764,434765]},{"pos":[434835,434845],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[434920,434921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435370,435408],"content":"MultiplyAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[435698,435712],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[435787,435788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435859,435869],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[435930,435931]},{"pos":[436007,436017],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[436077,436078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436246,436260],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[436335,436336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436407,436417],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[436478,436479]},{"pos":[436555,436565],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[436625,436626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437074,437124],"content":"MultiplyAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[437473,437487],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[437562,437563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437634,437644],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[437705,437706]},{"pos":[437782,437792],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[437853,437854]},{"pos":[437924,437934],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[438009,438010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438207,438221],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[438296,438297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438368,438378],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[438439,438440]},{"pos":[438516,438526],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[438587,438588]},{"pos":[438658,438668],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[438743,438744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439274,439342],"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[439774,439788],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[439863,439864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439935,439945],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[440006,440007]},{"pos":[440083,440093],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[440154,440155]},{"pos":[440225,440235],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[440311,440312]},{"pos":[440394,440410],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[440476,440477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440715,440729],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[440804,440805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440876,440886],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[440947,440948]},{"pos":[441024,441034],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[441095,441096]},{"pos":[441166,441176],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[441252,441253]},{"pos":[441335,441351],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[441417,441418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441945,441990],"content":"MultiplyAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[442294,442315],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[442397,442398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[442469,442479],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[442540,442541]},{"pos":[442617,442627],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[442687,442688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442863,442884],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[442966,442967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443038,443048],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[443109,443110]},{"pos":[443186,443196],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[443256,443257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443726,443783],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[444146,444167],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[444249,444250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444321,444331],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[444392,444393]},{"pos":[444469,444479],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[444540,444541]},{"pos":[444611,444621],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[444696,444697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444901,444922],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[445004,445005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445076,445086],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[445147,445148]},{"pos":[445224,445234],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[445295,445296]},{"pos":[445366,445376],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[445451,445452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446003,446078],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[446524,446545],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[446627,446628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446699,446709],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[446770,446771]},{"pos":[446847,446857],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[446918,446919]},{"pos":[446989,446999],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[447075,447076]},{"pos":[447158,447174],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[447240,447241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447486,447507],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[447589,447590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447661,447671],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447732,447733]},{"pos":[447809,447819],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447880,447881]},{"pos":[447951,447961],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[448037,448038]},{"pos":[448120,448136],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[448202,448203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448738,448777],"content":"MultiplyChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[449069,449084],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[449160,449161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449232,449242],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[449303,449304]},{"pos":[449380,449390],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[449450,449451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449620,449635],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[449711,449712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449783,449793],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[449854,449855]},{"pos":[449931,449941],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[450001,450002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450453,450504],"content":"MultiplyChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[450855,450870],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[450946,450947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451018,451028],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[451089,451090]},{"pos":[451166,451176],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[451237,451238]},{"pos":[451308,451318],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[451393,451394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451592,451607],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[451683,451684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451755,451765],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[451826,451827]},{"pos":[451903,451913],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[451974,451975]},{"pos":[452045,452055],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[452130,452131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452551,452569],"content":"Negate(Expression)","needQuote":true,"nodes":[{"content":"Negate(Expression)","pos":[0,18]}]},{"pos":[452772,452778],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[452845,452846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452917,452927],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[452987,452988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453113,453119],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[453186,453187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453258,453268],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[453328,453329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453671,453701],"content":"Negate(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Negate(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[453963,453969],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[454036,454037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454108,454118],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[454179,454180]},{"pos":[454250,454260],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[454335,454336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454490,454496],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[454563,454564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454635,454645],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[454706,454707]},{"pos":[454777,454787],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[454862,454863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455225,455250],"content":"NegateChecked(Expression)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression)","pos":[0,25]}]},{"pos":[455467,455480],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[455554,455555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455626,455636],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[455696,455697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455829,455842],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[455916,455917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455988,455998],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[456058,456059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456422,456459],"content":"NegateChecked(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression, MethodInfo)","pos":[0,37]}]},{"pos":[456735,456748],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[456822,456823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456894,456904],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[456965,456966]},{"pos":[457036,457046],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[457121,457122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457283,457296],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[457370,457371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457442,457452],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[457513,457514]},{"pos":[457584,457594],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[457669,457670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458034,458054],"content":"New(ConstructorInfo)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo)","pos":[0,20]}]},{"pos":[458249,458252],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[458316,458317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458387,458402],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[458482,458483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458604,458607],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[458671,458672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458742,458757],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[458837,458838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459220,459265],"content":"New(ConstructorInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"New(ConstructorInfo, IEnumerable<Expression>)"}]},{"pos":[459839,459842],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[459906,459907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459977,459992],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[460073,460074]},{"pos":[460156,460167],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[460252,460253],"content":"<","needQuote":true,"nodes":[]},{"pos":[460324,460334],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[460426,460427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460623,460626],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[460690,460691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460761,460776],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[460857,460858]},{"pos":[460940,460951],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[461037,461040]},{"pos":[461118,461128],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[461188,461189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461216,461217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461847,461917],"content":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, IEnumerable&lt;MemberInfo&gt;)","pos":[0,70],"source":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)"}]},{"pos":[462731,462734],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[462798,462799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[462869,462884],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[462965,462966]},{"pos":[463048,463059],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[463144,463145],"content":"<","needQuote":true,"nodes":[]},{"pos":[463216,463226],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[463319,463320]},{"pos":[463402,463413],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[463498,463499],"content":"<","needQuote":true,"nodes":[]},{"pos":[463564,463574],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[463681,463682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463947,463950],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[464014,464015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464085,464100],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[464181,464182]},{"pos":[464264,464275],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[464361,464364]},{"pos":[464442,464452],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[464512,464513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[464541,464542]},{"pos":[464624,464635],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[464721,464724]},{"pos":[464796,464806],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[464881,464882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464909,464910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465624,465683],"content":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, MemberInfo[])","pos":[0,59],"source":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])"}]},{"pos":[466366,466369],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[466433,466434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466504,466519],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[466600,466601]},{"pos":[466683,466694],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[466779,466780],"content":"<","needQuote":true,"nodes":[]},{"pos":[466851,466861],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[466954,466955]},{"pos":[467025,467035],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":"[]","pos":[467111,467113]},{"pos":[467144,467145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467372,467375],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[467439,467440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467510,467525],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[467606,467607]},{"pos":[467689,467700],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[467786,467789]},{"pos":[467867,467877],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[467937,467938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[467966,467967]},{"pos":[468037,468047],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[468122,468124],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[468152,468153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468735,468769],"content":"New(ConstructorInfo, Expression[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, Expression[])","pos":[0,34]}]},{"pos":[469212,469215],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[469279,469280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469350,469365],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[469446,469447]},{"pos":[469523,469533],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[469594,469596]},{"pos":[469627,469628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[469786,469789],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[469853,469854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469924,469939],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[470020,470021]},{"pos":[470097,470107],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[470167,470169],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[470197,470198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470599,470608],"content":"New(Type)","needQuote":true,"nodes":[{"content":"New(Type)","pos":[0,9]}]},{"pos":[470759,470762],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[470826,470827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470875,470879],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[470937,470938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471037,471040],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[471104,471105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471153,471157],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[471215,471216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471554,471599],"content":"NewArrayBounds(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"NewArrayBounds(Type, IEnumerable<Expression>)"}]},{"pos":[472140,472154],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[472229,472230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[472278,472282],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[472341,472342]},{"pos":[472424,472435],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[472520,472521],"content":"<","needQuote":true,"nodes":[]},{"pos":[472592,472602],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[472694,472695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472880,472894],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[472969,472970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473018,473022],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[473081,473082]},{"pos":[473164,473175],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[473261,473264]},{"pos":[473342,473352],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[473412,473413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473440,473441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473942,473976],"content":"NewArrayBounds(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, Expression[])","pos":[0,34]}]},{"pos":[474386,474400],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[474475,474476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474524,474528],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[474587,474588]},{"pos":[474664,474674],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[474735,474737]},{"pos":[474768,474769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474916,474930],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[475005,475006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475054,475058],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[475117,475118]},{"pos":[475194,475204],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[475264,475266],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[475294,475295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475769,475812],"content":"NewArrayInit(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"NewArrayInit(Type, IEnumerable<Expression>)"}]},{"pos":[476345,476357],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[476430,476431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476479,476483],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[476542,476543]},{"pos":[476625,476636],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[476721,476722],"content":"<","needQuote":true,"nodes":[]},{"pos":[476793,476803],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[476895,476896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477079,477091],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[477164,477165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477213,477217],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[477276,477277]},{"pos":[477359,477370],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[477456,477459]},{"pos":[477537,477547],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[477607,477608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477635,477636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478129,478161],"content":"NewArrayInit(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, Expression[])","pos":[0,32]}]},{"pos":[478563,478575],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[478648,478649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478697,478701],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[478760,478761]},{"pos":[478837,478847],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[478908,478910]},{"pos":[478941,478942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479087,479099],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[479172,479173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479221,479225],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[479284,479285]},{"pos":[479361,479371],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[479431,479433],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[479461,479462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479870,479885],"content":"Not(Expression)","needQuote":true,"nodes":[{"content":"Not(Expression)","pos":[0,15]}]},{"pos":[480082,480085],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[480149,480150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480221,480231],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[480291,480292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480414,480417],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[480481,480482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480553,480563],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[480623,480624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480957,480984],"content":"Not(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Not(Expression, MethodInfo)","pos":[0,27]}]},{"pos":[481240,481243],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[481307,481308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481379,481389],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[481450,481451]},{"pos":[481521,481531],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[481606,481607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481758,481761],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[481825,481826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481897,481907],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[481968,481969]},{"pos":[482039,482049],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[482124,482125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482511,482543],"content":"NotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression)","pos":[0,32]}]},{"pos":[482821,482829],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[482898,482899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482970,482980],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[483041,483042]},{"pos":[483118,483128],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[483188,483189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483351,483359],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[483428,483429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483500,483510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[483571,483572]},{"pos":[483648,483658],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[483718,483719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484164,484217],"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[484585,484593],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[484662,484663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484734,484744],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[484805,484806]},{"pos":[484882,484892],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[484953,484954]},{"pos":[485010,485017],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[485079,485080]},{"pos":[485150,485160],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[485235,485236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485442,485450],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[485519,485520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485591,485601],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[485662,485663]},{"pos":[485739,485749],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[485810,485811]},{"pos":[485867,485874],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[485936,485937]},{"pos":[486007,486017],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[486092,486093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486531,486557],"content":"OnesComplement(Expression)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression)","pos":[0,26]}]},{"pos":[486776,486790],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[486865,486866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486937,486947],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[487007,487008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487141,487155],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[487230,487231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487302,487312],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[487372,487373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487739,487777],"content":"OnesComplement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression, MethodInfo)","pos":[0,38]}]},{"pos":[488055,488069],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[488144,488145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488216,488226],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[488287,488288]},{"pos":[488358,488368],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[488443,488444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488606,488620],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[488695,488696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488767,488777],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[488838,488839]},{"pos":[488909,488919],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[488994,488995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489397,489423],"content":"Or(Expression, Expression)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression)","pos":[0,26]}]},{"pos":[489689,489691],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[489754,489755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489826,489836],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[489897,489898]},{"pos":[489974,489984],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[490044,490045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490201,490203],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[490266,490267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490338,490348],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[490409,490410]},{"pos":[490486,490496],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[490556,490557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490969,491007],"content":"Or(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression, MethodInfo)","pos":[0,38]}]},{"pos":[491332,491334],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[491397,491398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491469,491479],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[491540,491541]},{"pos":[491617,491627],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[491688,491689]},{"pos":[491759,491769],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[491844,491845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492030,492032],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[492095,492096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492167,492177],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[492238,492239]},{"pos":[492315,492325],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[492386,492387]},{"pos":[492457,492467],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[492542,492543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492974,493006],"content":"OrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression)","pos":[0,32]}]},{"pos":[493284,493292],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[493361,493362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493433,493443],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[493504,493505]},{"pos":[493581,493591],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[493651,493652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493814,493822],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[493891,493892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493963,493973],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494034,494035]},{"pos":[494111,494121],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[494181,494182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494612,494656],"content":"OrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[494993,495001],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[495070,495071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495142,495152],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[495213,495214]},{"pos":[495290,495300],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[495361,495362]},{"pos":[495432,495442],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[495517,495518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495709,495717],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[495786,495787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495858,495868],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[495929,495930]},{"pos":[496006,496016],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[496077,496078]},{"pos":[496148,496158],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[496233,496234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496746,496808],"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,62]}]},{"pos":[497228,497236],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[497305,497306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497377,497387],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[497448,497449]},{"pos":[497525,497535],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[497596,497597]},{"pos":[497667,497677],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[497753,497754]},{"pos":[497836,497852],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[497918,497919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498151,498159],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[498228,498229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498300,498310],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498371,498372]},{"pos":[498448,498458],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498519,498520]},{"pos":[498590,498600],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[498676,498677]},{"pos":[498759,498775],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[498841,498842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499342,499372],"content":"OrElse(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression)","pos":[0,30]}]},{"pos":[499646,499652],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[499719,499720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499791,499801],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[499862,499863]},{"pos":[499939,499949],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[500009,500010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500170,500176],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[500243,500244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500315,500325],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[500386,500387]},{"pos":[500463,500473],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[500533,500534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500958,501000],"content":"OrElse(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[501333,501339],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[501406,501407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501478,501488],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[501549,501550]},{"pos":[501626,501636],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[501697,501698]},{"pos":[501768,501778],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[501853,501854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502043,502049],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[502116,502117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502188,502198],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[502259,502260]},{"pos":[502336,502346],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[502407,502408]},{"pos":[502478,502488],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[502563,502564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502945,502960],"content":"Parameter(Type)","needQuote":true,"nodes":[{"content":"Parameter(Type)","pos":[0,15]}]},{"pos":[503123,503132],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[503202,503203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503251,503255],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[503313,503314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503419,503428],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[503498,503499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503547,503551],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[503609,503610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503894,503917],"content":"Parameter(Type, String)","needQuote":true,"nodes":[{"content":"Parameter(Type, String)","pos":[0,23]}]},{"pos":[504109,504118],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[504188,504189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504237,504241],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[504300,504301]},{"pos":[504356,504362],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[504422,504423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504542,504551],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[504621,504622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504670,504674],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[504733,504734]},{"pos":[504789,504795],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[504855,504856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505182,505213],"content":"PostDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression)","pos":[0,31]}]},{"pos":[505442,505461],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[505541,505542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505613,505623],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[505683,505684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505822,505841],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[505921,505922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505993,506003],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[506063,506064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506445,506488],"content":"PostDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[506776,506795],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[506875,506876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506947,506957],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[507018,507019]},{"pos":[507089,507099],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[507174,507175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507342,507361],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[507441,507442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507513,507523],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[507584,507585]},{"pos":[507655,507665],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[507740,507741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508135,508166],"content":"PostIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression)","pos":[0,31]}]},{"pos":[508395,508414],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[508494,508495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508566,508576],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[508636,508637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508775,508794],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[508874,508875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508946,508956],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[509016,509017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509398,509441],"content":"PostIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[509729,509748],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[509828,509829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509900,509910],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[509971,509972]},{"pos":[510042,510052],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[510127,510128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510295,510314],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[510394,510395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510466,510476],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[510537,510538]},{"pos":[510608,510618],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[510693,510694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511109,511138],"content":"Power(Expression, Expression)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression)","pos":[0,29]}]},{"pos":[511410,511415],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[511481,511482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511553,511563],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[511624,511625]},{"pos":[511701,511711],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[511771,511772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511931,511936],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[512002,512003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512074,512084],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[512145,512146]},{"pos":[512222,512232],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[512292,512293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512714,512755],"content":"Power(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression, MethodInfo)","pos":[0,41]}]},{"pos":[513086,513091],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[513157,513158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513229,513239],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[513300,513301]},{"pos":[513377,513387],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[513448,513449]},{"pos":[513519,513529],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[513604,513605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513793,513798],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[513864,513865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513936,513946],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[514007,514008]},{"pos":[514084,514094],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[514155,514156]},{"pos":[514226,514236],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[514311,514312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514752,514787],"content":"PowerAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression)","pos":[0,35]}]},{"pos":[515071,515082],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[515154,515155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515226,515236],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[515297,515298]},{"pos":[515374,515384],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[515444,515445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515610,515621],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[515693,515694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515765,515775],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[515836,515837]},{"pos":[515913,515923],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[515983,515984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516423,516470],"content":"PowerAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[516813,516824],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[516896,516897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516968,516978],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[517039,517040]},{"pos":[517116,517126],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[517187,517188]},{"pos":[517258,517268],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[517343,517344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517538,517549],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[517621,517622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517693,517703],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[517764,517765]},{"pos":[517841,517851],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[517912,517913]},{"pos":[517983,517993],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[518068,518069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518590,518655],"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,65]}]},{"pos":[519081,519092],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[519164,519165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519236,519246],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[519307,519308]},{"pos":[519384,519394],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[519455,519456]},{"pos":[519526,519536],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[519612,519613]},{"pos":[519695,519711],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[519777,519778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520013,520024],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[520096,520097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520168,520178],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520239,520240]},{"pos":[520316,520326],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520387,520388]},{"pos":[520458,520468],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[520544,520545]},{"pos":[520627,520643],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[520709,520710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521193,521223],"content":"PreDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression)","pos":[0,30]}]},{"pos":[521450,521468],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[521547,521548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521619,521629],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[521689,521690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521827,521845],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[521924,521925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521996,522006],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[522066,522067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522445,522487],"content":"PreDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[522773,522791],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[522870,522871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522942,522952],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[523013,523014]},{"pos":[523084,523094],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[523169,523170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523336,523354],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[523433,523434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523505,523515],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[523576,523577]},{"pos":[523647,523657],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[523732,523733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524124,524154],"content":"PreIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression)","pos":[0,30]}]},{"pos":[524381,524399],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[524478,524479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524550,524560],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[524620,524621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524758,524776],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[524855,524856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524927,524937],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[524997,524998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525376,525418],"content":"PreIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[525704,525722],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[525801,525802],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525873,525883],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[525944,525945]},{"pos":[526015,526025],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[526100,526101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526267,526285],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[526364,526365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526436,526446],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[526507,526508]},{"pos":[526578,526588],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[526663,526664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527073,527105],"content":"Property(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, MethodInfo)","pos":[0,32]}]},{"pos":[527371,527379],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[527448,527449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527520,527530],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[527591,527592]},{"pos":[527662,527672],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[527747,527748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527904,527912],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[527981,527982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528053,528063],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[528124,528125]},{"pos":[528195,528205],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[528280,528281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528672,528706],"content":"Property(Expression, PropertyInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo)","pos":[0,34]}]},{"pos":[528976,528984],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[529053,529054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529125,529135],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[529196,529197]},{"pos":[529269,529281],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[529358,529359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529517,529525],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[529594,529595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529666,529676],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[529737,529738]},{"pos":[529810,529822],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[529899,529900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530370,530429],"content":"Property(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,59],"source":"Property(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[531130,531138],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[531207,531208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531279,531289],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[531350,531351]},{"pos":[531423,531435],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[531513,531514]},{"pos":[531596,531607],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[531692,531693],"content":"<","needQuote":true,"nodes":[]},{"pos":[531764,531774],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[531866,531867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532100,532108],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[532177,532178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532249,532259],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[532320,532321]},{"pos":[532393,532405],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[532483,532484]},{"pos":[532566,532577],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[532663,532666]},{"pos":[532744,532754],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[532814,532815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532842,532843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533468,533516],"content":"Property(Expression, PropertyInfo, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, Expression[])","pos":[0,48]}]},{"pos":[534086,534094],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[534163,534164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534235,534245],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[534306,534307]},{"pos":[534379,534391],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[534469,534470]},{"pos":[534546,534556],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[534617,534619]},{"pos":[534650,534651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534846,534854],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[534923,534924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534995,535005],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[535066,535067]},{"pos":[535139,535151],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[535229,535230]},{"pos":[535306,535316],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[535376,535378],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[535406,535407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535915,535943],"content":"Property(Expression, String)","needQuote":true,"nodes":[{"content":"Property(Expression, String)","pos":[0,28]}]},{"pos":[536179,536187],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[536256,536257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536328,536338],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[536399,536400]},{"pos":[536455,536461],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[536521,536522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536663,536671],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[536740,536741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536812,536822],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[536883,536884]},{"pos":[536939,536945],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[537005,537006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537398,537440],"content":"Property(Expression, String, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, String, Expression[])","pos":[0,42]}]},{"pos":[537953,537961],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[538030,538031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538102,538112],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[538173,538174]},{"pos":[538229,538235],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[538296,538297]},{"pos":[538373,538383],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[538444,538446]},{"pos":[538477,538478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538656,538664],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[538733,538734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538805,538815],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[538876,538877]},{"pos":[538932,538938],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[538999,539000]},{"pos":[539076,539086],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[539146,539148],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[539176,539177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539668,539702],"content":"Property(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Property(Expression, Type, String)","pos":[0,34]}]},{"pos":[539963,539971],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[540040,540041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540112,540122],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[540183,540184]},{"pos":[540237,540241],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[540300,540301]},{"pos":[540356,540362],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[540422,540423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540576,540584],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[540653,540654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540725,540735],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[540796,540797]},{"pos":[540850,540854],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[540913,540914]},{"pos":[540969,540975],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[541035,541036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541416,541451],"content":"PropertyOrField(Expression, String)","needQuote":true,"nodes":[{"content":"PropertyOrField(Expression, String)","pos":[0,35]}]},{"pos":[541701,541716],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[541792,541793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[541864,541874],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[541935,541936]},{"pos":[541991,541997],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[542057,542058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542206,542221],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[542297,542298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542369,542379],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[542440,542441]},{"pos":[542496,542502],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[542562,542563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542916,542933],"content":"Quote(Expression)","needQuote":true,"nodes":[{"content":"Quote(Expression)","pos":[0,17]}]},{"pos":[543134,543139],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[543205,543206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543277,543287],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[543347,543348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543472,543477],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[543543,543544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543615,543625],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[543685,543686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543962,543970],"content":"Reduce()","needQuote":true,"nodes":[{"content":"Reduce()","pos":[0,8]}]},{"pos":[544103,544109],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[544176,544177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544204,544205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544294,544300],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[544367,544368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544395,544396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544636,544652],"content":"ReduceAndCheck()","needQuote":true,"nodes":[{"content":"ReduceAndCheck()","pos":[0,16]}]},{"pos":[544801,544815],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[544890,544891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544918,544919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545016,545030],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[545105,545106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545133,545134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545392,545410],"content":"ReduceExtensions()","needQuote":true,"nodes":[{"content":"ReduceExtensions()","pos":[0,18]}]},{"pos":[545563,545579],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[545656,545657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545684,545685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545784,545800],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[545877,545878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545905,545906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546237,546275],"content":"ReferenceEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceEqual(Expression, Expression)","pos":[0,38]}]},{"pos":[546565,546579],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[546654,546655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546726,546736],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[546797,546798]},{"pos":[546874,546884],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[546944,546945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547113,547127],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[547202,547203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547274,547284],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[547345,547346]},{"pos":[547422,547432],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[547492,547493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547916,547957],"content":"ReferenceNotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceNotEqual(Expression, Expression)","pos":[0,41]}]},{"pos":[548253,548270],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[548348,548349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548420,548430],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[548491,548492]},{"pos":[548568,548578],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[548638,548639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548810,548827],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[548905,548906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548977,548987],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[549048,549049]},{"pos":[549125,549135],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[549195,549196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549544,549553],"content":"Rethrow()","needQuote":true,"nodes":[{"content":"Rethrow()","pos":[0,9]}]},{"pos":[549688,549695],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[549763,549764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549791,549792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549882,549889],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[549957,549958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549985,549986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550233,550246],"content":"Rethrow(Type)","needQuote":true,"nodes":[{"content":"Rethrow(Type)","pos":[0,13]}]},{"pos":[550405,550412],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[550480,550481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550529,550533],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[550591,550592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550695,550702],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[550770,550771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550819,550823],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[550881,550882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551170,551189],"content":"Return(LabelTarget)","needQuote":true,"nodes":[{"content":"Return(LabelTarget)","pos":[0,19]}]},{"pos":[551394,551400],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[551467,551468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551540,551551],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[551612,551613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551739,551745],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[551812,551813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551885,551896],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[551957,551958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552310,552341],"content":"Return(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression)","pos":[0,31]}]},{"pos":[552617,552623],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[552690,552691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552763,552774],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[552836,552837]},{"pos":[552913,552923],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[552983,552984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553145,553151],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[553218,553219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553291,553302],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[553364,553365]},{"pos":[553441,553451],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[553511,553512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553922,553959],"content":"Return(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression, Type)","pos":[0,37]}]},{"pos":[554260,554266],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[554333,554334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554406,554417],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[554479,554480]},{"pos":[554556,554566],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[554627,554628]},{"pos":[554681,554685],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[554743,554744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554917,554923],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[554990,554991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555063,555074],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[555136,555137]},{"pos":[555213,555223],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[555284,555285]},{"pos":[555338,555342],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[555400,555401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555794,555819],"content":"Return(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Type)","pos":[0,25]}]},{"pos":[556049,556055],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[556122,556123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556195,556206],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[556268,556269]},{"pos":[556322,556326],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[556384,556385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556523,556529],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[556596,556597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556669,556680],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[556742,556743]},{"pos":[556796,556800],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[556858,556859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557232,557266],"content":"RightShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression)","pos":[0,34]}]},{"pos":[557548,557558],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[557629,557630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557701,557711],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[557772,557773]},{"pos":[557849,557859],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[557919,557920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558084,558094],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[558165,558166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558237,558247],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[558308,558309]},{"pos":[558385,558395],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[558455,558456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558892,558938],"content":"RightShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[559279,559289],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[559360,559361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559432,559442],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[559503,559504]},{"pos":[559580,559590],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[559651,559652]},{"pos":[559722,559732],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[559807,559808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560001,560011],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[560082,560083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560154,560164],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[560225,560226]},{"pos":[560302,560312],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[560373,560374]},{"pos":[560444,560454],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[560529,560530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560985,561025],"content":"RightShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression)","pos":[0,40]}]},{"pos":[561319,561335],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[561412,561413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[561484,561494],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[561555,561556]},{"pos":[561632,561642],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[561702,561703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561873,561889],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[561966,561967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562038,562048],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[562109,562110]},{"pos":[562186,562196],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[562256,562257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562711,562763],"content":"RightShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[563116,563132],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[563209,563210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[563281,563291],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[563352,563353]},{"pos":[563429,563439],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[563500,563501]},{"pos":[563571,563581],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[563656,563657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563856,563872],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[563949,563950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564021,564031],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[564092,564093]},{"pos":[564169,564179],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[564240,564241]},{"pos":[564311,564321],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[564396,564397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564933,565003],"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[565439,565455],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[565532,565533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[565604,565614],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[565675,565676]},{"pos":[565752,565762],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[565823,565824]},{"pos":[565894,565904],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[565980,565981]},{"pos":[566063,566079],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[566145,566146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566386,566402],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[566479,566480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566551,566561],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566622,566623]},{"pos":[566699,566709],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566770,566771]},{"pos":[566841,566851],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[566927,566928]},{"pos":[567010,567026],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[567092,567093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567632,567682],"content":"RuntimeVariables(IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"RuntimeVariables(IEnumerable&lt;ParameterExpression&gt;)","pos":[0,50],"source":"RuntimeVariables(IEnumerable<ParameterExpression>)"}]},{"pos":[568223,568239],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[568316,568317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[568394,568405],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[568490,568491],"content":"<","needQuote":true,"nodes":[]},{"pos":[568571,568590],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[568691,568692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568876,568892],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[568969,568970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569047,569058],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[569144,569147]},{"pos":[569234,569253],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[569322,569323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569350,569351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569861,569900],"content":"RuntimeVariables(ParameterExpression[])","needQuote":true,"nodes":[{"content":"RuntimeVariables(ParameterExpression[])","pos":[0,39]}]},{"pos":[570310,570326],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[570403,570404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[570484,570503],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[570573,570575]},{"pos":[570606,570607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570753,570769],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[570846,570847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[570927,570946],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[571015,571017],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[571045,571046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571509,571541],"content":"Subtract(Expression, Expression)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression)","pos":[0,32]}]},{"pos":[571819,571827],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[571896,571897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571968,571978],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[572039,572040]},{"pos":[572116,572126],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[572186,572187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572349,572357],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[572426,572427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572498,572508],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[572569,572570]},{"pos":[572646,572656],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[572716,572717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573147,573191],"content":"Subtract(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[573528,573536],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[573605,573606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[573677,573687],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[573748,573749]},{"pos":[573825,573835],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[573896,573897]},{"pos":[573967,573977],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[574052,574053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574244,574252],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[574321,574322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574393,574403],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[574464,574465]},{"pos":[574541,574551],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[574612,574613]},{"pos":[574683,574693],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[574768,574769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575218,575256],"content":"SubtractAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[575546,575560],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[575635,575636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575707,575717],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[575778,575779]},{"pos":[575855,575865],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[575925,575926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576094,576108],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[576183,576184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[576255,576265],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[576326,576327]},{"pos":[576403,576413],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[576473,576474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576922,576972],"content":"SubtractAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[577321,577335],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[577410,577411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577482,577492],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[577553,577554]},{"pos":[577630,577640],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[577701,577702]},{"pos":[577772,577782],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[577857,577858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578055,578069],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[578144,578145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578216,578226],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[578287,578288]},{"pos":[578364,578374],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[578435,578436]},{"pos":[578506,578516],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[578591,578592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579122,579190],"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[579622,579636],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[579711,579712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[579783,579793],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[579854,579855]},{"pos":[579931,579941],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580002,580003]},{"pos":[580073,580083],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[580159,580160]},{"pos":[580242,580258],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[580324,580325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580563,580577],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[580652,580653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580724,580734],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580795,580796]},{"pos":[580872,580882],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580943,580944]},{"pos":[581014,581024],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[581100,581101]},{"pos":[581183,581199],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[581265,581266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581793,581838],"content":"SubtractAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[582142,582163],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[582245,582246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582317,582327],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[582388,582389]},{"pos":[582465,582475],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[582535,582536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582711,582732],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[582814,582815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582886,582896],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[582957,582958]},{"pos":[583034,583044],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[583104,583105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583574,583631],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[583994,584015],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[584097,584098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[584169,584179],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[584240,584241]},{"pos":[584317,584327],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[584388,584389]},{"pos":[584459,584469],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[584544,584545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584749,584770],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[584852,584853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[584924,584934],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[584995,584996]},{"pos":[585072,585082],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[585143,585144]},{"pos":[585214,585224],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[585299,585300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585851,585926],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[586372,586393],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[586475,586476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[586547,586557],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[586618,586619]},{"pos":[586695,586705],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[586766,586767]},{"pos":[586837,586847],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[586923,586924]},{"pos":[587006,587022],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[587088,587089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[587334,587355],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[587437,587438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587509,587519],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[587580,587581]},{"pos":[587657,587667],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[587728,587729]},{"pos":[587799,587809],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[587885,587886]},{"pos":[587968,587984],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[588050,588051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588586,588625],"content":"SubtractChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[588917,588932],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[589008,589009],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[589080,589090],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[589151,589152]},{"pos":[589228,589238],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[589298,589299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589468,589483],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[589559,589560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[589631,589641],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[589702,589703]},{"pos":[589779,589789],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[589849,589850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590301,590352],"content":"SubtractChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[590703,590718],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[590794,590795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590866,590876],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[590937,590938]},{"pos":[591014,591024],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[591085,591086]},{"pos":[591156,591166],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[591241,591242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591440,591455],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[591531,591532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[591603,591613],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[591674,591675]},{"pos":[591751,591761],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[591822,591823]},{"pos":[591893,591903],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[591978,591979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592471,592515],"content":"Switch(Expression, Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, SwitchCase[])","pos":[0,44]}]},{"pos":[593087,593093],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[593160,593161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[593232,593242],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[593303,593304]},{"pos":[593380,593390],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[593451,593452]},{"pos":[593528,593538],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[593599,593601]},{"pos":[593632,593633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593830,593836],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[593903,593904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[593975,593985],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594046,594047]},{"pos":[594123,594133],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594194,594195]},{"pos":[594271,594281],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[594341,594343],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[594371,594372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594997,595064],"content":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,67],"source":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[595868,595874],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[595941,595942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[596013,596023],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596084,596085]},{"pos":[596161,596171],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596232,596233]},{"pos":[596303,596313],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[596389,596390]},{"pos":[596472,596483],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[596568,596569],"content":"<","needQuote":true,"nodes":[]},{"pos":[596640,596650],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[596742,596743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597007,597013],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[597080,597081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[597152,597162],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[597223,597224]},{"pos":[597300,597310],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[597371,597372]},{"pos":[597442,597452],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[597528,597529]},{"pos":[597611,597622],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[597708,597711]},{"pos":[597789,597799],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[597859,597860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597887,597888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[598591,598647],"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,56]}]},{"pos":[599320,599326],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[599393,599394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599465,599475],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[599536,599537]},{"pos":[599613,599623],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[599684,599685]},{"pos":[599755,599765],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[599841,599842]},{"pos":[599918,599928],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[599989,599991]},{"pos":[600022,600023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600249,600255],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[600322,600323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[600394,600404],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[600465,600466]},{"pos":[600542,600552],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[600613,600614]},{"pos":[600684,600694],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[600770,600771]},{"pos":[600847,600857],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[600917,600919],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[600947,600948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601525,601557],"content":"Switch(Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, SwitchCase[])","pos":[0,32]}]},{"pos":[602010,602016],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[602083,602084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602155,602165],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[602226,602227]},{"pos":[602303,602313],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[602374,602376]},{"pos":[602407,602408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[602570,602576],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[602643,602644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602715,602725],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[602786,602787]},{"pos":[602863,602873],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[602933,602935],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[602963,602964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603542,603615],"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,73],"source":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[604463,604469],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[604536,604537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[604585,604589],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[604648,604649]},{"pos":[604725,604735],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[604796,604797]},{"pos":[604873,604883],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[604944,604945]},{"pos":[605015,605025],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[605101,605102]},{"pos":[605184,605195],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[605280,605281],"content":"<","needQuote":true,"nodes":[]},{"pos":[605352,605362],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[605454,605455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605731,605737],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[605804,605805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[605853,605857],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[605916,605917]},{"pos":[605993,606003],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[606064,606065]},{"pos":[606141,606151],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[606212,606213]},{"pos":[606283,606293],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[606369,606370]},{"pos":[606452,606463],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[606549,606552]},{"pos":[606630,606640],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[606700,606701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606728,606729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607468,607530],"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,62]}]},{"pos":[608247,608253],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[608320,608321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608369,608373],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[608432,608433]},{"pos":[608509,608519],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[608580,608581]},{"pos":[608657,608667],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[608728,608729]},{"pos":[608799,608809],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[608885,608886]},{"pos":[608962,608972],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[609033,609035]},{"pos":[609066,609067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609305,609311],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[609378,609379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[609427,609431],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[609490,609491]},{"pos":[609567,609577],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[609638,609639]},{"pos":[609715,609725],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[609786,609787]},{"pos":[609857,609867],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[609943,609944]},{"pos":[610020,610030],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[610090,610092],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[610120,610121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610763,610810],"content":"SwitchCase(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"SwitchCase(Expression, IEnumerable<Expression>)"}]},{"pos":[611410,611420],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[611491,611492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611563,611573],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[611634,611635]},{"pos":[611717,611728],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[611813,611814],"content":"<","needQuote":true,"nodes":[]},{"pos":[611885,611895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[611987,611988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612192,612202],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[612273,612274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[612345,612355],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[612416,612417]},{"pos":[612499,612510],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[612596,612599]},{"pos":[612677,612687],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[612747,612748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612775,612776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613320,613356],"content":"SwitchCase(Expression, Expression[])","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, Expression[])","pos":[0,36]}]},{"pos":[613825,613835],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[613906,613907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[613978,613988],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[614049,614050]},{"pos":[614126,614136],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[614197,614199]},{"pos":[614230,614231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614397,614407],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[614478,614479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614550,614560],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[614621,614622]},{"pos":[614698,614708],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[614768,614770],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[614798,614799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615225,615247],"content":"SymbolDocument(String)","needQuote":true,"nodes":[{"content":"SymbolDocument(String)","pos":[0,22]}]},{"pos":[615424,615438],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[615513,615514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615564,615570],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[615630,615631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615743,615757],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[615832,615833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615883,615889],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[615949,615950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616253,616281],"content":"SymbolDocument(String, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid)","pos":[0,28]}]},{"pos":[616483,616497],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[616572,616573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616623,616629],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[616690,616691]},{"pos":[616744,616748],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[616806,616807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616931,616945],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[617020,617021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617071,617077],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[617138,617139]},{"pos":[617192,617196],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[617254,617255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617588,617622],"content":"SymbolDocument(String, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid)","pos":[0,34]}]},{"pos":[617849,617863],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[617938,617939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617989,617995],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[618056,618057]},{"pos":[618110,618114],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[618173,618174]},{"pos":[618227,618231],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[618289,618290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618426,618440],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[618515,618516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618566,618572],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[618633,618634]},{"pos":[618687,618691],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[618750,618751]},{"pos":[618804,618808],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[618866,618867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619230,619270],"content":"SymbolDocument(String, Guid, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid, Guid)","pos":[0,40]}]},{"pos":[619522,619536],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[619611,619612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[619662,619668],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[619729,619730]},{"pos":[619783,619787],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[619846,619847]},{"pos":[619900,619904],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[619963,619964]},{"pos":[620017,620021],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[620079,620080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620228,620242],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[620317,620318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620368,620374],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[620435,620436]},{"pos":[620489,620493],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[620552,620553]},{"pos":[620606,620610],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[620669,620670]},{"pos":[620723,620727],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[620785,620786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621144,621161],"content":"Throw(Expression)","needQuote":true,"nodes":[{"content":"Throw(Expression)","pos":[0,17]}]},{"pos":[621362,621367],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[621433,621434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621505,621515],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[621575,621576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621700,621705],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[621771,621772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621843,621853],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[621913,621914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622236,622259],"content":"Throw(Expression, Type)","needQuote":true,"nodes":[{"content":"Throw(Expression, Type)","pos":[0,23]}]},{"pos":[622485,622490],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[622556,622557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622628,622638],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[622699,622700]},{"pos":[622753,622757],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[622815,622816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622952,622957],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[623023,623024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623095,623105],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[623166,623167]},{"pos":[623220,623224],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[623282,623283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623579,623589],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[623726,623734],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[623803,623804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623831,623832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623923,623931],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[624000,624001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624028,624029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624340,624374],"content":"TryCatch(Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatch(Expression, CatchBlock[])","pos":[0,34]}]},{"pos":[624835,624843],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[624912,624913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624984,624994],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[625055,625056]},{"pos":[625132,625142],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[625203,625205]},{"pos":[625236,625237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625401,625409],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[625478,625479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625550,625560],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[625621,625622]},{"pos":[625698,625708],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[625768,625770],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[625798,625799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626314,626367],"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","pos":[0,53]}]},{"pos":[626975,626990],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[627066,627067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[627138,627148],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[627209,627210]},{"pos":[627286,627296],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[627357,627358]},{"pos":[627434,627444],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[627505,627507]},{"pos":[627538,627539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627745,627760],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[627836,627837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[627908,627918],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[627979,627980]},{"pos":[628056,628066],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[628127,628128]},{"pos":[628204,628214],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[628274,628276],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[628304,628305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628856,628888],"content":"TryFault(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFault(Expression, Expression)","pos":[0,32]}]},{"pos":[629166,629174],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[629243,629244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[629315,629325],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[629386,629387]},{"pos":[629463,629473],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[629533,629534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629696,629704],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[629773,629774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[629845,629855],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[629916,629917]},{"pos":[629993,630003],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[630063,630064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630468,630502],"content":"TryFinally(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFinally(Expression, Expression)","pos":[0,34]}]},{"pos":[630784,630794],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[630865,630866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[630937,630947],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[631008,631009]},{"pos":[631085,631095],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[631155,631156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631320,631330],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[631401,631402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631473,631483],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[631544,631545]},{"pos":[631621,631631],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[631691,631692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632062,632092],"content":"TryGetActionType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetActionType(Type[], Type)","pos":[0,30]}]},{"pos":[632436,632452],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[632529,632530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632578,632582],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[632641,632643]},{"content":",","pos":[632675,632676]},{"pos":[632729,632733],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[632791,632792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632919,632935],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[633012,633013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[633061,633065],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[633123,633125],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[633154,633155]},{"pos":[633208,633212],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[633270,633271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633659,633687],"content":"TryGetFuncType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetFuncType(Type[], Type)","pos":[0,28]}]},{"pos":[634023,634037],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[634112,634113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634161,634165],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[634224,634226]},{"content":",","pos":[634258,634259]},{"pos":[634312,634316],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[634374,634375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634500,634514],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[634589,634590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634638,634642],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[634700,634702],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[634731,634732]},{"pos":[634785,634789],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[634847,634848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635242,635266],"content":"TypeAs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeAs(Expression, Type)","pos":[0,24]}]},{"pos":[635494,635500],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[635567,635568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635639,635649],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[635710,635711]},{"pos":[635764,635768],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[635826,635827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635964,635970],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[636037,636038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[636109,636119],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[636180,636181]},{"pos":[636234,636238],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[636296,636297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636643,636670],"content":"TypeEqual(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeEqual(Expression, Type)","pos":[0,27]}]},{"pos":[636904,636913],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[636983,636984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637055,637065],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[637126,637127]},{"pos":[637180,637184],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[637242,637243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637383,637392],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[637462,637463],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637534,637544],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[637605,637606]},{"pos":[637659,637663],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[637721,637722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638071,638095],"content":"TypeIs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeIs(Expression, Type)","pos":[0,24]}]},{"pos":[638323,638329],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[638396,638397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638468,638478],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[638539,638540]},{"pos":[638593,638597],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[638655,638656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638793,638799],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[638866,638867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638938,638948],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[639009,639010]},{"pos":[639063,639067],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[639125,639126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639461,639482],"content":"UnaryPlus(Expression)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression)","pos":[0,21]}]},{"pos":[639691,639700],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[639770,639771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639842,639852],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[639912,639913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640041,640050],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[640120,640121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640192,640202],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[640262,640263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640614,640647],"content":"UnaryPlus(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[640915,640924],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[640994,640995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641066,641076],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[641137,641138]},{"pos":[641208,641218],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[641293,641294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641451,641460],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[641530,641531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641602,641612],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[641673,641674]},{"pos":[641744,641754],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[641829,641830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642201,642224],"content":"Unbox(Expression, Type)","needQuote":true,"nodes":[{"content":"Unbox(Expression, Type)","pos":[0,23]}]},{"pos":[642450,642455],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[642521,642522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642593,642603],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[642664,642665]},{"pos":[642718,642722],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[642780,642781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642917,642922],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[642988,642989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643060,643070],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[643131,643132]},{"pos":[643185,643189],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[643247,643248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643556,643570],"content":"Variable(Type)","needQuote":true,"nodes":[{"content":"Variable(Type)","pos":[0,14]}]},{"pos":[643731,643739],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[643808,643809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643857,643861],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[643919,643920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644024,644032],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[644101,644102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644150,644154],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[644212,644213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644494,644516],"content":"Variable(Type, String)","needQuote":true,"nodes":[{"content":"Variable(Type, String)","pos":[0,22]}]},{"pos":[644706,644714],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[644783,644784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644832,644836],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[644895,644896]},{"pos":[644951,644957],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[645017,645018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645136,645144],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[645213,645214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645262,645266],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[645325,645326]},{"pos":[645381,645387],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[645447,645448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645773,645805],"content":"VisitChildren(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"VisitChildren(ExpressionVisitor)","pos":[0,32]}]},{"pos":[646036,646049],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[646123,646124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646202,646219],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[646286,646287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646426,646439],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[646513,646514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646592,646609],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[646676,646677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646955,646969],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[647088,647094],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[647161,647162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647212,647218],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[647278,647279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647362,647368],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[647435,647436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647486,647492],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[647552,647553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647767,647789],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[647937,647943],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[648010,648011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648061,648067],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[648128,648129]},{"pos":[648184,648190],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[648250,648251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648348,648354],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[648421,648422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648472,648478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[648539,648540]},{"pos":[648595,648601],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[648661,648662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648907,648938],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[649104,649119],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[649195,649196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649246,649252],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[649313,649314]},{"pos":[649369,649375],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[649435,649436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649542,649557],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[649633,649634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649684,649690],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[649751,649752]},{"pos":[649807,649813],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[649873,649874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650104,650117],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[650218,650229],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[650301,650302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650329,650330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650403,650414],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[650486,650487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650514,650515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650690,650699],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[650792,650799],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[650867,650868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650895,650896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650965,650972],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[651040,651041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651068,651069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651244,651261],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[651370,651385],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[651461,651462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651489,651490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651567,651582],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[651658,651659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651686,651687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651832,651838],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[651970,651977],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[652125,652131],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[652334,652342],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[652602,652616],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"pos":[652873,652877],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[653081,653085],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[653323,653348],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"pos":[653565,653571],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[653638,653639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653717,653734],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[653801,653802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653934,653940],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[654007,654008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654086,654103],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[654170,654171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654452,654469],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]}],"content":"items:\n- uid: System.Linq.Expressions.ParameterExpression\n  commentId: T:System.Linq.Expressions.ParameterExpression\n  id: ParameterExpression\n  parent: System.Linq.Expressions\n  children:\n  - System.Linq.Expressions.ParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  - System.Linq.Expressions.ParameterExpression.IsByRef\n  - System.Linq.Expressions.ParameterExpression.Name\n  - System.Linq.Expressions.ParameterExpression.NodeType\n  - System.Linq.Expressions.ParameterExpression.Type\n  langs:\n  - csharp\n  - vb\n  name: ParameterExpression\n  fullName: System.Linq.Expressions.ParameterExpression\n  type: Class\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ParameterExpression\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 760\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Represents a named parameter expression.</p>\\n\"\n  syntax:\n    content: 'public class ParameterExpression : Expression'\n    content.vb: >-\n      Public Class ParameterExpression\n          Inherits Expression\n  inheritance:\n  - System.Object\n  - System.Linq.Expressions.Expression\n  inheritedMembers:\n  - System.Linq.Expressions.Expression.CanReduce\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Constant(System.Object)\n  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Default(System.Type)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Empty\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Label\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Label(System.String)\n  - System.Linq.Expressions.Expression.Label(System.Type)\n  - System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.New(System.Type)\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Parameter(System.Type)\n  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Reduce\n  - System.Linq.Expressions.Expression.ReduceAndCheck\n  - System.Linq.Expressions.Expression.ReduceExtensions\n  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Rethrow\n  - System.Linq.Expressions.Expression.Rethrow(System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ToString\n  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ParameterExpression\n- uid: System.Linq.Expressions.ParameterExpression.IsByRef\n  commentId: P:System.Linq.Expressions.ParameterExpression.IsByRef\n  id: IsByRef\n  parent: System.Linq.Expressions.ParameterExpression\n  langs:\n  - csharp\n  - vb\n  name: IsByRef\n  fullName: System.Linq.Expressions.ParameterExpression.IsByRef\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsByRef\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 763\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Indicates that this <code>ParameterExpression</code> is to be treated as a <strong>ByRef</strong> parameter.</p>\\n\"\n  syntax:\n    content: public bool IsByRef { get; }\n    content.vb: Public ReadOnly Property IsByRef As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>True if this <code>ParameterExpression</code> is a <strong>ByRef</strong> parameter, otherwise false.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ParameterExpression.IsByRef\n- uid: System.Linq.Expressions.ParameterExpression.Name\n  commentId: P:System.Linq.Expressions.ParameterExpression.Name\n  id: Name\n  parent: System.Linq.Expressions.ParameterExpression\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Linq.Expressions.ParameterExpression.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 764\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the name of the parameter or variable.</p>\\n\"\n  syntax:\n    content: public string Name { get; }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the name of the parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ParameterExpression.Name\n- uid: System.Linq.Expressions.ParameterExpression.NodeType\n  commentId: P:System.Linq.Expressions.ParameterExpression.NodeType\n  id: NodeType\n  parent: System.Linq.Expressions.ParameterExpression\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Linq.Expressions.ParameterExpression.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 765\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Returns the node type of this <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override sealed ExpressionType NodeType { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property NodeType As ExpressionType\n    parameters: []\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.ExpressionType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents this expression.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.NodeType\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: ParameterExpression.NodeType\n- uid: System.Linq.Expressions.ParameterExpression.Type\n  commentId: P:System.Linq.Expressions.ParameterExpression.Type\n  id: Type\n  parent: System.Linq.Expressions.ParameterExpression\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Linq.Expressions.ParameterExpression.Type\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 766\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the static type of the expression that this <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> represents.</p>\\n\"\n  syntax:\n    content: public override Type Type { get; }\n    content.vb: Public Overrides ReadOnly Property Type As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.ParameterExpression.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the static type of the expression.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.Type\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: ParameterExpression.Type\n- uid: System.Linq.Expressions.ParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  commentId: M:System.Linq.Expressions.ParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  id: Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.ParameterExpression\n  langs:\n  - csharp\n  - vb\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.ParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Accept\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 767\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Dispatches to the specific visit method for this node type. For example, <xref href=\\\"System.Linq.Expressions.MethodCallExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> calls the <xref href=\\\"System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected override Expression Accept(ExpressionVisitor visitor)\n    content.vb: Protected Overrides Function Accept(visitor As ExpressionVisitor) As Expression\n    parameters:\n    - id: visitor\n      type: System.Linq.Expressions.ExpressionVisitor\n      description: \"\\n<p>The visitor to visit this node with.</p>\\n\"\n    return:\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>The result of visiting this node.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: ParameterExpression.Accept(ExpressionVisitor)\nreferences:\n- uid: System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  fullName: System.Linq.Expressions.Expression\n  commentId: T:System.Linq.Expressions.Expression\n  nameWithType: Expression\n- uid: System.Linq.Expressions.Expression.CanReduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: CanReduce\n  fullName: System.Linq.Expressions.Expression.CanReduce\n  commentId: P:System.Linq.Expressions.Expression.CanReduce\n  nameWithType: Expression.CanReduce\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Add(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Add(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Add(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Add(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: And(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.And(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: And(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.And(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAlso(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAlso(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAlso(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAlso(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayAccess(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayAccess(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayAccess(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayAccess(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayAccess(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayAccess(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayAccess(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayAccess(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayIndex(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayIndex(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayIndex(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayIndex(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayIndex(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayIndex(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayIndex(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayIndex(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayLength(Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayLength(Expression)\n- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Assign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Assign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MemberInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MemberInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression())\n  name.vb: Block(Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Expression[])\n  nameWithType.vb: Expression.Block(Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression())\n  name.vb: Block(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, Expression[])\n  nameWithType.vb: Expression.Block(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Break(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Break(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Call(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(Expression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(Expression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Expression, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Type, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Type, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Type, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Type, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ClearDebugInfo(SymbolDocumentInfo)\n  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  nameWithType: Expression.ClearDebugInfo(SymbolDocumentInfo)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Coalesce(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.Coalesce(Expression, Expression, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Condition(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Condition(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Condition(Expression, Expression, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Condition(Expression, Expression, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object)\n  nameWithType: Expression.Constant(Object)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object, Type)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  nameWithType: Expression.Constant(Object, Type)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Continue(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Continue(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Continue(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Continue(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Convert(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.Convert(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.ConvertChecked(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.ConvertChecked(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n  fullName: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo, System.Int32, System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  nameWithType: Expression.DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Decrement(Expression)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Decrement(Expression)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Decrement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Decrement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Default(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Default(Type)\n  fullName: System.Linq.Expressions.Expression.Default(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Default(System.Type)\n  nameWithType: Expression.Default(Type)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Divide(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Divide(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Divide(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Divide(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: DivideAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.DivideAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ElementInit(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ElementInit(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ElementInit(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ElementInit(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ElementInit(MethodInfo, Expression[])\n  nameWithType.vb: Expression.ElementInit(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Empty\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Empty()\n  fullName: System.Linq.Expressions.Expression.Empty()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Empty\n  nameWithType: Expression.Empty()\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Equal(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Equal(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Equal(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.Equal(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOr(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOr(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, FieldInfo)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  nameWithType: Expression.Field(Expression, FieldInfo)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Field(Expression, String)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Field(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetActionType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetActionType(System.Type())\n  name.vb: GetActionType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  nameWithType: Expression.GetActionType(Type[])\n  nameWithType.vb: Expression.GetActionType(Type())\n- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetDelegateType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetDelegateType(System.Type())\n  name.vb: GetDelegateType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  nameWithType: Expression.GetDelegateType(Type[])\n  nameWithType.vb: Expression.GetDelegateType(Type())\n- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetFuncType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetFuncType(System.Type())\n  name.vb: GetFuncType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  nameWithType: Expression.GetFuncType(Type[])\n  nameWithType.vb: Expression.GetFuncType(Type())\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Goto(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Goto(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThen(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThen(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThenElse(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThenElse(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Increment(Expression)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Increment(Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Increment(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Increment(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Invoke(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Invoke(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Invoke(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Invoke(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Invoke(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: Invoke(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Invoke(Expression, Expression[])\n  nameWithType.vb: Expression.Invoke(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsFalse(Expression)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsFalse(Expression)\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsFalse(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsFalse(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsTrue(Expression)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsTrue(Expression)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsTrue(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsTrue(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Label\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label()\n  fullName: System.Linq.Expressions.Expression.Label()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label\n  nameWithType: Expression.Label()\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Label(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Label(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Label(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(String)\n  fullName: System.Linq.Expressions.Expression.Label(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.String)\n  nameWithType: Expression.Label(String)\n- uid: System.Linq.Expressions.Expression.Label(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type)\n  nameWithType: Expression.Label(Type)\n- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type, String)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  nameWithType: Expression.Label(Type, String)\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda<TDelegate>(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MemberInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MemberInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MemberInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MemberInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MemberInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MemberInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MethodInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MethodInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MethodInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MethodInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MethodInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MethodInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListInit(NewExpression, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit())\n  name.vb: ListInit(NewExpression, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListInit(NewExpression, ElementInit[])\n  nameWithType.vb: Expression.ListInit(NewExpression, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, Expression())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Loop(Expression)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget, LabelTarget)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MakeBinary(ExpressionType, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeMemberAccess(Expression, MemberInfo)\n  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  nameWithType: Expression.MakeMemberAccess(Expression, MemberInfo)\n- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  fullName: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.CatchBlock))\n  name.vb: MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  nameWithType: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  nameWithType.vb: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MemberInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MemberInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MemberInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MethodInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MethodInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MethodInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MemberInit(NewExpression, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberInit(NewExpression, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberInit(NewExpression, MemberBinding[])\n  nameWithType.vb: Expression.MemberInit(NewExpression, MemberBinding())\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Modulo(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Modulo(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Modulo(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Modulo(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ModuloAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Multiply(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Multiply(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Multiply(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Multiply(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Negate(Expression)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Negate(Expression)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Negate(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Negate(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NegateChecked(Expression)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  nameWithType: Expression.NegateChecked(Expression)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NegateChecked(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.NegateChecked(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  nameWithType: Expression.New(ConstructorInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Collections.Generic.IEnumerable(Of System.Reflection.MemberInfo))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Reflection.MemberInfo[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Reflection.MemberInfo())\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression())\n  name.vb: New(ConstructorInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.New(ConstructorInfo, Expression[])\n  nameWithType.vb: Expression.New(ConstructorInfo, Expression())\n- uid: System.Linq.Expressions.Expression.New(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(Type)\n  fullName: System.Linq.Expressions.Expression.New(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Type)\n  nameWithType: Expression.New(Type)\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayBounds(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayBounds(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayBounds(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayBounds(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayBounds(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayBounds(Type, Expression())\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayInit(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayInit(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayInit(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayInit(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayInit(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayInit(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Not(Expression)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Not(Expression)\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Not(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Not(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.NotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NotEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.NotEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OnesComplement(Expression)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.OnesComplement(Expression)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OnesComplement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OnesComplement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Or(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Or(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Or(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Or(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrElse(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrElse(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrElse(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrElse(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type)\n  nameWithType: Expression.Parameter(Type)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type, String)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  nameWithType: Expression.Parameter(Type, String)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Power(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Power(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Power(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Power(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PowerAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.PowerAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Property(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  nameWithType: Expression.Property(Expression, PropertyInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, PropertyInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, PropertyInfo, Expression[])\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Property(Expression, String)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, String, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, String, Expression[])\n  nameWithType.vb: Expression.Property(Expression, String, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Property(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PropertyOrField(Expression, String)\n  fullName: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.PropertyOrField(Expression, String)\n- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Quote(Expression)\n  fullName: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Quote(Expression)\n- uid: System.Linq.Expressions.Expression.Reduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Reduce()\n  fullName: System.Linq.Expressions.Expression.Reduce()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Reduce\n  nameWithType: Expression.Reduce()\n- uid: System.Linq.Expressions.Expression.ReduceAndCheck\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceAndCheck()\n  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceAndCheck\n  nameWithType: Expression.ReduceAndCheck()\n- uid: System.Linq.Expressions.Expression.ReduceExtensions\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceExtensions()\n  fullName: System.Linq.Expressions.Expression.ReduceExtensions()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceExtensions\n  nameWithType: Expression.ReduceExtensions()\n- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceNotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceNotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Rethrow\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Rethrow()\n  fullName: System.Linq.Expressions.Expression.Rethrow()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow\n  nameWithType: Expression.Rethrow()\n- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Rethrow(Type)\n  fullName: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow(System.Type)\n  nameWithType: Expression.Rethrow(Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Return(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Return(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RuntimeVariables(IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: RuntimeVariables(IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.RuntimeVariables(IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RuntimeVariables(ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression())\n  name.vb: RuntimeVariables(ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.RuntimeVariables(ParameterExpression[])\n  nameWithType.vb: Expression.RuntimeVariables(ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Subtract(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Subtract(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Subtract(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Subtract(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SwitchCase(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: SwitchCase(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.SwitchCase(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.SwitchCase(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SwitchCase(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: SwitchCase(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.SwitchCase(Expression, Expression[])\n  nameWithType.vb: Expression.SwitchCase(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  nameWithType: Expression.SymbolDocument(String)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Throw(Expression)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Throw(Expression)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Throw(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Throw(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ToString\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ToString()\n  fullName: System.Linq.Expressions.Expression.ToString()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ToString\n  nameWithType: Expression.ToString()\n- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatch(Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatch(Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatch(Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatch(Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatchFinally(Expression, Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatchFinally(Expression, Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatchFinally(Expression, Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatchFinally(Expression, Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFault(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFault(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFinally(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFinally(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetActionType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetActionType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetActionType(System.Type(), System.Type)\n  name.vb: TryGetActionType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetActionType(Type[], Type)\n  nameWithType.vb: Expression.TryGetActionType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetFuncType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetFuncType(System.Type(), System.Type)\n  name.vb: TryGetFuncType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetFuncType(Type[], Type)\n  nameWithType.vb: Expression.TryGetFuncType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeAs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeAs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeEqual(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeEqual(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeIs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeIs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: UnaryPlus(Expression)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  nameWithType: Expression.UnaryPlus(Expression)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: UnaryPlus(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.UnaryPlus(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Unbox(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Unbox(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type)\n  nameWithType: Expression.Variable(Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type, String)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  nameWithType: Expression.Variable(Type, String)\n- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: VisitChildren(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.VisitChildren(ExpressionVisitor)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Linq.Expressions.Expression.NodeType\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NodeType\n  fullName: System.Linq.Expressions.Expression.NodeType\n  commentId: P:System.Linq.Expressions.Expression.NodeType\n  nameWithType: Expression.NodeType\n- uid: System.Linq.Expressions.ExpressionType\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n  commentId: T:System.Linq.Expressions.ExpressionType\n  nameWithType: ExpressionType\n- uid: System.Linq.Expressions.Expression.Type\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Type\n  fullName: System.Linq.Expressions.Expression.Type\n  commentId: P:System.Linq.Expressions.Expression.Type\n  nameWithType: Expression.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.Accept(ExpressionVisitor)\n- uid: System.Linq.Expressions.ExpressionVisitor\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionVisitor\n  fullName: System.Linq.Expressions.ExpressionVisitor\n  commentId: T:System.Linq.Expressions.ExpressionVisitor\n  nameWithType: ExpressionVisitor\n"}