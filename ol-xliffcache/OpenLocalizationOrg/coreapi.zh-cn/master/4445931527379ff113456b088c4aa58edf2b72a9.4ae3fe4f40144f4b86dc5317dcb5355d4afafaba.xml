{"nodes":[{"pos":[513,530],"content":"SafeEvpPKeyHandle","needQuote":true,"nodes":[{"content":"SafeEvpPKeyHandle","pos":[0,17]}]},{"pos":[2819,2853],"content":"SafeEvpPKeyHandle(IntPtr, Boolean)","needQuote":true,"nodes":[{"content":"SafeEvpPKeyHandle(IntPtr, Boolean)","pos":[0,34]}]},{"pos":[4025,4034],"content":"IsInvalid","needQuote":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]},{"pos":[5209,5226],"content":"DuplicateHandle()","needQuote":true,"nodes":[{"content":"DuplicateHandle()","pos":[0,17]}]},{"pos":[6314,6329],"content":"ReleaseHandle()","needQuote":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[7344,7372],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[7554,7560],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7825,7848],"content":"CriticalFinalizerObject","needQuote":true,"nodes":[{"content":"CriticalFinalizerObject","pos":[0,23]}]},{"pos":[8136,8146],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[8333,8344],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[8604,8610],"content":"handle","needQuote":true,"nodes":[{"content":"handle","pos":[0,6]}]},{"pos":[8941,8958],"content":"SetHandle(IntPtr)","needQuote":true,"nodes":[{"content":"SetHandle(IntPtr)","pos":[0,17]}]},{"pos":[9184,9193],"content":"SetHandle","needQuote":true,"nodes":[{"content":"SetHandle","pos":[0,9]}]},{"pos":[9309,9310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9380,9386],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[9471,9472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9606,9615],"content":"SetHandle","needQuote":true,"nodes":[{"content":"SetHandle","pos":[0,9]}]},{"pos":[9731,9732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9802,9808],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[9893,9894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10155,10175],"content":"DangerousGetHandle()","needQuote":true,"nodes":[{"content":"DangerousGetHandle()","pos":[0,20]}]},{"pos":[10394,10412],"content":"DangerousGetHandle","needQuote":true,"nodes":[{"content":"DangerousGetHandle","pos":[0,18]}]},{"pos":[10546,10547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10594,10595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10723,10741],"content":"DangerousGetHandle","needQuote":true,"nodes":[{"content":"DangerousGetHandle","pos":[0,18]}]},{"pos":[10875,10876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10923,10924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11158,11165],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[11345,11350],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[11479,11480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11527,11528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11643,11648],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[11777,11778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11825,11826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12065,12074],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[12260,12267],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[12379,12380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12427,12428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12545,12552],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[12664,12665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12712,12713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12983,12999],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[13222,13229],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13341,13342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13413,13420],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13507,13508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13641,13648],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13760,13761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13832,13839],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13926,13927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14188,14208],"content":"SetHandleAsInvalid()","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid()","pos":[0,20]}]},{"pos":[14427,14445],"content":"SetHandleAsInvalid","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid","pos":[0,18]}]},{"pos":[14579,14580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14627,14628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14756,14774],"content":"SetHandleAsInvalid","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid","pos":[0,18]}]},{"pos":[14908,14909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14956,14957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15245,15269],"content":"DangerousAddRef(Boolean)","needQuote":true,"nodes":[{"content":"DangerousAddRef(Boolean)","pos":[0,24]}]},{"pos":[15517,15532],"content":"DangerousAddRef","needQuote":true,"nodes":[{"content":"DangerousAddRef","pos":[0,15]}]},{"pos":[15660,15661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15732,15739],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15826,15827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15969,15984],"content":"DangerousAddRef","needQuote":true,"nodes":[{"content":"DangerousAddRef","pos":[0,15]}]},{"pos":[16112,16113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16184,16191],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16278,16279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16536,16554],"content":"DangerousRelease()","needQuote":true,"nodes":[{"content":"DangerousRelease()","pos":[0,18]}]},{"pos":[16767,16783],"content":"DangerousRelease","needQuote":true,"nodes":[{"content":"DangerousRelease","pos":[0,16]}]},{"pos":[16913,16914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16961,16962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17088,17104],"content":"DangerousRelease","needQuote":true,"nodes":[{"content":"DangerousRelease","pos":[0,16]}]},{"pos":[17234,17235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17282,17283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17524,17532],"content":"IsClosed","needQuote":true,"nodes":[{"content":"IsClosed","pos":[0,8]}]},{"pos":[17751,17761],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[17890,17898],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[18001,18002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18049,18050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18140,18148],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[18251,18252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18299,18300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18482,18496],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[18653,18659],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18758,18759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18829,18835],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18920,18921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19024,19030],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19129,19130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19200,19206],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19291,19292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19502,19524],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[19718,19724],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19823,19824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19894,19900],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19986,19987]},{"pos":[20065,20071],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20156,20157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20274,20280],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20379,20380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20450,20456],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20542,20543]},{"pos":[20621,20627],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20712,20713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20941,20972],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[21193,21208],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21325,21326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21396,21402],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21488,21489]},{"pos":[21567,21573],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21658,21659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21785,21800],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21917,21918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21988,21994],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22080,22081]},{"pos":[22159,22165],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22250,22251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22413,22426],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22564,22575],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22684,22685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22732,22733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22826,22837],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22946,22947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22994,22995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23149,23158],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[23284,23291],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23392,23393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23440,23441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23530,23537],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23638,23639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23686,23687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23857,23874],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[24024,24039],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24156,24157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24204,24205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24302,24317],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24434,24435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24482,24483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24584,24590],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[24755,24790],"content":"System.Runtime.ConstrainedExecution","needQuote":true,"nodes":[{"content":"System.Runtime.ConstrainedExecution","pos":[0,35]}]},{"pos":[25003,25033],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[25219,25225],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[25372,25379],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25637,25646],"content":"IsInvalid","needQuote":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]},{"pos":[25931,25948],"content":"SafeEvpPKeyHandle","needQuote":true,"nodes":[{"content":"SafeEvpPKeyHandle","pos":[0,17]}]},{"pos":[26256,26271],"content":"ReleaseHandle()","needQuote":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[26475,26488],"content":"ReleaseHandle","needQuote":true,"nodes":[{"content":"ReleaseHandle","pos":[0,13]}]},{"pos":[26612,26613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26660,26661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26784,26797],"content":"ReleaseHandle","needQuote":true,"nodes":[{"content":"ReleaseHandle","pos":[0,13]}]},{"pos":[26921,26922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26969,26970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Security.Cryptography.SafeEvpPKeyHandle\n  commentId: T:System.Security.Cryptography.SafeEvpPKeyHandle\n  id: SafeEvpPKeyHandle\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.SafeEvpPKeyHandle.#ctor(System.IntPtr,System.Boolean)\n  - System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle\n  - System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid\n  - System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle\n  langs:\n  - csharp\n  - vb\n  name: SafeEvpPKeyHandle\n  nameWithType: SafeEvpPKeyHandle\n  fullName: System.Security.Cryptography.SafeEvpPKeyHandle\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SafeEvpPKeyHandle\n    path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n    startLine: 49\n  assemblies:\n  - System.Security.Cryptography.OpenSsl\n  namespace: System.Security.Cryptography\n  syntax:\n    content: 'public sealed class SafeEvpPKeyHandle : SafeHandle, IDisposable'\n    content.vb: >-\n      Public NotInheritable Class SafeEvpPKeyHandle\n          Inherits SafeHandle\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  - System.Runtime.InteropServices.SafeHandle\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Runtime.InteropServices.SafeHandle.handle\n  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - System.Runtime.InteropServices.SafeHandle.Close\n  - System.Runtime.InteropServices.SafeHandle.Dispose\n  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  - System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - System.Runtime.InteropServices.SafeHandle.IsClosed\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n- uid: System.Security.Cryptography.SafeEvpPKeyHandle.#ctor(System.IntPtr,System.Boolean)\n  commentId: M:System.Security.Cryptography.SafeEvpPKeyHandle.#ctor(System.IntPtr,System.Boolean)\n  id: '#ctor(System.IntPtr,System.Boolean)'\n  parent: System.Security.Cryptography.SafeEvpPKeyHandle\n  langs:\n  - csharp\n  - vb\n  name: SafeEvpPKeyHandle(IntPtr, Boolean)\n  nameWithType: SafeEvpPKeyHandle.SafeEvpPKeyHandle(IntPtr, Boolean)\n  fullName: System.Security.Cryptography.SafeEvpPKeyHandle.SafeEvpPKeyHandle(System.IntPtr, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n    startLine: 51\n  assemblies:\n  - System.Security.Cryptography.OpenSsl\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public SafeEvpPKeyHandle(IntPtr handle, bool ownsHandle)\n    content.vb: Public Sub New(handle As IntPtr, ownsHandle As Boolean)\n    parameters:\n    - id: handle\n      type: System.IntPtr\n    - id: ownsHandle\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid\n  commentId: P:System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid\n  id: IsInvalid\n  parent: System.Security.Cryptography.SafeEvpPKeyHandle\n  langs:\n  - csharp\n  - vb\n  name: IsInvalid\n  nameWithType: SafeEvpPKeyHandle.IsInvalid\n  fullName: System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsInvalid\n    path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n    startLine: 52\n  assemblies:\n  - System.Security.Cryptography.OpenSsl\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool IsInvalid { get; }\n    content.vb: Public Overrides ReadOnly Property IsInvalid As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  overridden: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n- uid: System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle\n  commentId: M:System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle\n  id: DuplicateHandle\n  parent: System.Security.Cryptography.SafeEvpPKeyHandle\n  langs:\n  - csharp\n  - vb\n  name: DuplicateHandle()\n  nameWithType: SafeEvpPKeyHandle.DuplicateHandle()\n  fullName: System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DuplicateHandle\n    path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n    startLine: 53\n  assemblies:\n  - System.Security.Cryptography.OpenSsl\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public SafeEvpPKeyHandle DuplicateHandle()\n    content.vb: Public Function DuplicateHandle As SafeEvpPKeyHandle\n    return:\n      type: System.Security.Cryptography.SafeEvpPKeyHandle\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle\n  commentId: M:System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle\n  id: ReleaseHandle\n  parent: System.Security.Cryptography.SafeEvpPKeyHandle\n  langs:\n  - csharp\n  - vb\n  name: ReleaseHandle()\n  nameWithType: SafeEvpPKeyHandle.ReleaseHandle()\n  fullName: System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReleaseHandle\n    path: src/System.Security.Cryptography.OpenSsl/ref/System.Security.Cryptography.OpenSsl.cs\n    startLine: 54\n  assemblies:\n  - System.Security.Cryptography.OpenSsl\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override bool ReleaseHandle()\n    content.vb: Protected Overrides Function ReleaseHandle As Boolean\n    return:\n      type: System.Boolean\n  overridden: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\nreferences:\n- uid: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  commentId: T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  parent: System.Runtime.ConstrainedExecution\n  isExternal: true\n  name: CriticalFinalizerObject\n  nameWithType: CriticalFinalizerObject\n  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n- uid: System.Runtime.InteropServices.SafeHandle\n  commentId: T:System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.IDisposable\n  commentId: T:System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Runtime.InteropServices.SafeHandle.handle\n  commentId: F:System.Runtime.InteropServices.SafeHandle.handle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: handle\n  nameWithType: SafeHandle.handle\n  fullName: System.Runtime.InteropServices.SafeHandle.handle\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: SetHandle(IntPtr)\n  nameWithType: SafeHandle.SetHandle(IntPtr)\n  fullName: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n    name: SetHandle\n    nameWithType: SafeHandle.SetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.IntPtr\n    name: IntPtr\n    nameWithType: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n    name: SetHandle\n    nameWithType: SafeHandle.SetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.IntPtr\n    name: IntPtr\n    nameWithType: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousGetHandle()\n  nameWithType: SafeHandle.DangerousGetHandle()\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n    name: DangerousGetHandle\n    nameWithType: SafeHandle.DangerousGetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n    name: DangerousGetHandle\n    nameWithType: SafeHandle.DangerousGetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Runtime.InteropServices.SafeHandle.Close\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Close\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: Close()\n  nameWithType: SafeHandle.Close()\n  fullName: System.Runtime.InteropServices.SafeHandle.Close()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Close\n    name: Close\n    nameWithType: SafeHandle.Close\n    fullName: System.Runtime.InteropServices.SafeHandle.Close\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Close\n    name: Close\n    nameWithType: SafeHandle.Close\n    fullName: System.Runtime.InteropServices.SafeHandle.Close\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: Dispose()\n  nameWithType: SafeHandle.Dispose()\n  fullName: System.Runtime.InteropServices.SafeHandle.Dispose()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose\n    name: Dispose\n    nameWithType: SafeHandle.Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose\n    name: Dispose\n    nameWithType: SafeHandle.Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: Dispose(Boolean)\n  nameWithType: SafeHandle.Dispose(Boolean)\n  fullName: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n    name: Dispose\n    nameWithType: SafeHandle.Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n    name: Dispose\n    nameWithType: SafeHandle.Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: SetHandleAsInvalid()\n  nameWithType: SafeHandle.SetHandleAsInvalid()\n  fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n    name: SetHandleAsInvalid\n    nameWithType: SafeHandle.SetHandleAsInvalid\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n    name: SetHandleAsInvalid\n    nameWithType: SafeHandle.SetHandleAsInvalid\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: DangerousAddRef(Boolean)\n  nameWithType: SafeHandle.DangerousAddRef(Boolean)\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n    name: DangerousAddRef\n    nameWithType: SafeHandle.DangerousAddRef\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n    name: DangerousAddRef\n    nameWithType: SafeHandle.DangerousAddRef\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousRelease()\n  nameWithType: SafeHandle.DangerousRelease()\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n    name: DangerousRelease\n    nameWithType: SafeHandle.DangerousRelease\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n    name: DangerousRelease\n    nameWithType: SafeHandle.DangerousRelease\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Runtime.InteropServices.SafeHandle.IsClosed\n  commentId: P:System.Runtime.InteropServices.SafeHandle.IsClosed\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsClosed\n  nameWithType: SafeHandle.IsClosed\n  fullName: System.Runtime.InteropServices.SafeHandle.IsClosed\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Runtime.ConstrainedExecution\n  commentId: N:System.Runtime.ConstrainedExecution\n  isExternal: false\n  name: System.Runtime.ConstrainedExecution\n  nameWithType: System.Runtime.ConstrainedExecution\n  fullName: System.Runtime.ConstrainedExecution\n- uid: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n- uid: System.IntPtr\n  commentId: T:System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  commentId: P:System.Runtime.InteropServices.SafeHandle.IsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsInvalid\n  nameWithType: SafeHandle.IsInvalid\n  fullName: System.Runtime.InteropServices.SafeHandle.IsInvalid\n- uid: System.Security.Cryptography.SafeEvpPKeyHandle\n  commentId: T:System.Security.Cryptography.SafeEvpPKeyHandle\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: SafeEvpPKeyHandle\n  nameWithType: SafeEvpPKeyHandle\n  fullName: System.Security.Cryptography.SafeEvpPKeyHandle\n- uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  commentId: M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: ReleaseHandle()\n  nameWithType: SafeHandle.ReleaseHandle()\n  fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n    name: ReleaseHandle\n    nameWithType: SafeHandle.ReleaseHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n    name: ReleaseHandle\n    nameWithType: SafeHandle.ReleaseHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n"}