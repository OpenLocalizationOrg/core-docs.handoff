{"nodes":[{"pos":[2736,2758],"content":"SqlParameterCollection","needQuote":true,"nodes":[{"content":"SqlParameterCollection","pos":[0,22]}]},{"pos":[4249,4254],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[5709,5720],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The zero-based index of the parameter to retrieve.","pos":[6565,6620],"source":"\\n<p>The zero-based index of the parameter to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[6621,6627],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified index does not exist.","pos":[6966,7006],"source":"\\n<p>The specified index does not exist."},{"content":"&lt;/p&gt;\\n","pos":[7007,7013],"source":" </p>\\n"},{"pos":[7564,7576],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The name of the parameter to retrieve.","pos":[8450,8493],"source":"\\n<p>The name of the parameter to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[8494,8500],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified &lt;em&gt;parameterName&lt;/em&gt; is not valid.","pos":[8840,8895],"source":"\\n<p>The specified <em>parameterName</em> is not valid."},{"content":"&lt;/p&gt;\\n","pos":[8896,8902],"source":" </p>\\n"},{"pos":[9424,9432],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[10967,10984],"content":"Add(SqlParameter)","needQuote":true,"nodes":[{"content":"Add(SqlParameter)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;value&lt;/em&gt; parameter is null.","pos":[13058,13100],"source":"\\n<p>The <em>value</em> parameter is null."},{"content":"&lt;/p&gt;\\n","pos":[13101,13107],"source":" </p>\\n"},{"pos":[13489,13500],"content":"Add(Object)","needQuote":true,"nodes":[{"content":"Add(Object)","pos":[0,11]}]},{"pos":[15200,15222],"content":"Add(String, SqlDbType)","needQuote":true,"nodes":[{"content":"Add(String, SqlDbType)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The name of the parameter.","pos":[16271,16302],"source":"\\n<p>The name of the parameter."},{"content":"&lt;/p&gt;\\n","pos":[16303,16309],"source":" </p>\\n"},{"pos":[17189,17218],"content":"Add(String, SqlDbType, Int32)","needQuote":true,"nodes":[{"content":"Add(String, SqlDbType, Int32)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The name of the parameter.","pos":[18393,18424],"source":"\\n<p>The name of the parameter."},{"content":"&lt;/p&gt;\\n","pos":[18425,18431],"source":" </p>\\n"},{"pos":[19499,19514],"content":"AddRange(Array)","needQuote":true,"nodes":[{"content":"AddRange(Array)","pos":[0,15]}]},{"pos":[20975,20999],"content":"AddRange(SqlParameter[])","needQuote":true,"nodes":[{"content":"AddRange(SqlParameter[])","pos":[0,24]}]},{"pos":[22789,22817],"content":"AddWithValue(String, Object)","needQuote":true,"nodes":[{"content":"AddWithValue(String, Object)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The name of the parameter.&lt;/p&gt;\\n","pos":[23759,23796],"source":"\\n<p>The name of the parameter.</p>\\n"},{"pos":[24570,24577],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[25875,25897],"content":"Contains(SqlParameter)","needQuote":true,"nodes":[{"content":"Contains(SqlParameter)","pos":[0,22]}]},{"pos":[27681,27697],"content":"Contains(Object)","needQuote":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[29438,29454],"content":"Contains(String)","needQuote":true,"nodes":[{"content":"Contains(String)","pos":[0,16]}]},{"pos":[31153,31173],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[33317,33346],"content":"CopyTo(SqlParameter[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(SqlParameter[], Int32)","pos":[0,29]}]},{"pos":[35597,35612],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[37141,37160],"content":"GetParameter(Int32)","needQuote":true,"nodes":[{"content":"GetParameter(Int32)","pos":[0,19]}]},{"pos":[38361,38381],"content":"GetParameter(String)","needQuote":true,"nodes":[{"content":"GetParameter(String)","pos":[0,20]}]},{"pos":[39659,39680],"content":"IndexOf(SqlParameter)","needQuote":true,"nodes":[{"content":"IndexOf(SqlParameter)","pos":[0,21]}]},{"pos":[41594,41609],"content":"IndexOf(Object)","needQuote":true,"nodes":[{"content":"IndexOf(Object)","pos":[0,15]}]},{"pos":[43458,43473],"content":"IndexOf(String)","needQuote":true,"nodes":[{"content":"IndexOf(String)","pos":[0,15]}]},{"pos":[45448,45475],"content":"Insert(Int32, SqlParameter)","needQuote":true,"nodes":[{"content":"Insert(Int32, SqlParameter)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The zero-based index at which value should be inserted.&lt;/p&gt;\\n","pos":[46483,46549],"source":"\\n<p>The zero-based index at which value should be inserted.</p>\\n"},{"pos":[47316,47337],"content":"Insert(Int32, Object)","needQuote":true,"nodes":[{"content":"Insert(Int32, Object)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The zero-based index at which value should be inserted.&lt;/p&gt;\\n","pos":[48316,48382],"source":"\\n<p>The zero-based index at which value should be inserted.</p>\\n"},{"pos":[49146,49166],"content":"Remove(SqlParameter)","needQuote":true,"nodes":[{"content":"Remove(SqlParameter)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The parameter does not exist in the collection.","pos":[50527,50579],"source":"\\n<p>The parameter does not exist in the collection."},{"content":"&lt;/p&gt;\\n","pos":[50580,50586],"source":" </p>\\n"},{"pos":[50980,50994],"content":"Remove(Object)","needQuote":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to remove from the collection.","pos":[51846,51892],"source":"\\n<p>The object to remove from the collection."},{"content":"&lt;/p&gt;\\n","pos":[51893,51899],"source":" </p>\\n"},{"pos":[52317,52332],"content":"RemoveAt(Int32)","needQuote":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[53868,53884],"content":"RemoveAt(String)","needQuote":true,"nodes":[{"content":"RemoveAt(String)","pos":[0,16]}]},{"pos":[55541,55580],"content":"SetParameter(Int32, Common.DbParameter)","needQuote":true,"nodes":[{"content":"SetParameter(Int32, Common.DbParameter)","pos":[0,39]}]},{"pos":[56919,56959],"content":"SetParameter(String, Common.DbParameter)","needQuote":true,"nodes":[{"content":"SetParameter(String, Common.DbParameter)","pos":[0,40]}]},{"pos":[58011,58032],"content":"System.Data.SqlClient","needQuote":true,"nodes":[{"content":"System.Data.SqlClient","pos":[0,21]}]},{"pos":[58208,58214],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58335,58341],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[58471,58476],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58654,58666],"content":"SqlParameter","needQuote":true,"nodes":[{"content":"SqlParameter","pos":[0,12]}]},{"pos":[58859,58865],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59023,59032],"content":"SqlDbType","needQuote":true,"nodes":[{"content":"SqlDbType","pos":[0,9]}]},{"pos":[59177,59188],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[59333,59338],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[59466,59480],"content":"SqlParameter[]","needQuote":true,"nodes":[{"content":"SqlParameter[]","pos":[0,14]}]},{"pos":[59677,59689],"content":"SqlParameter","needQuote":true,"nodes":[{"content":"SqlParameter","pos":[0,12]}]},{"content":"[]","pos":[59750,59752]},{"pos":[59838,59850],"content":"SqlParameter","needQuote":true,"nodes":[{"content":"SqlParameter","pos":[0,12]}]},{"pos":[59910,59912],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[60062,60069],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60246,60257],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[60429,60447],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[60643,60654],"content":"DbParameter","needQuote":true,"nodes":[{"content":"DbParameter","pos":[0,11]}]},{"pos":[60826,60844],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[61012,61036],"content":"IndexOutOfRangeException","needQuote":true,"nodes":[{"content":"IndexOutOfRangeException","pos":[0,24]}]},{"pos":[61246,61263],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[61438,61458],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]},{"pos":[61643,61664],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[61862,61877],"content":"SystemException","needQuote":true,"nodes":[{"content":"SystemException","pos":[0,15]}]}],"content":"items:\n- uid: System.Data.SqlClient.SqlParameterCollection\n  commentId: T:System.Data.SqlClient.SqlParameterCollection\n  id: SqlParameterCollection\n  parent: System.Data.SqlClient\n  children:\n  - System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)\n  - System.Data.SqlClient.SqlParameterCollection.Add(System.Object)\n  - System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)\n  - System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)\n  - System.Data.SqlClient.SqlParameterCollection.AddRange(System.Array)\n  - System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter[])\n  - System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)\n  - System.Data.SqlClient.SqlParameterCollection.Clear\n  - System.Data.SqlClient.SqlParameterCollection.Contains(System.Data.SqlClient.SqlParameter)\n  - System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)\n  - System.Data.SqlClient.SqlParameterCollection.Contains(System.String)\n  - System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)\n  - System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter[],System.Int32)\n  - System.Data.SqlClient.SqlParameterCollection.Count\n  - System.Data.SqlClient.SqlParameterCollection.GetEnumerator\n  - System.Data.SqlClient.SqlParameterCollection.GetParameter(System.Int32)\n  - System.Data.SqlClient.SqlParameterCollection.GetParameter(System.String)\n  - System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Data.SqlClient.SqlParameter)\n  - System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)\n  - System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)\n  - System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Data.SqlClient.SqlParameter)\n  - System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)\n  - System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)\n  - System.Data.SqlClient.SqlParameterCollection.Item(System.String)\n  - System.Data.SqlClient.SqlParameterCollection.Remove(System.Data.SqlClient.SqlParameter)\n  - System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)\n  - System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)\n  - System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)\n  - System.Data.SqlClient.SqlParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)\n  - System.Data.SqlClient.SqlParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)\n  - System.Data.SqlClient.SqlParameterCollection.SyncRoot\n  langs:\n  - csharp\n  - vb\n  name: SqlParameterCollection\n  fullName: System.Data.SqlClient.SqlParameterCollection\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlParameterCollection\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 16\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Represents a collection of parameters associated with a <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and their respective mappings to columns in a <xref href=\\\"System.Data.DataSet\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: 'public sealed class SqlParameterCollection : DbParameterCollection, DbParameterCollection'\n    content.vb: >-\n      Public NotInheritable Class SqlParameterCollection\n          Inherits DbParameterCollection\n          Implements DbParameterCollection\n  inheritance:\n  - System.Object\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SqlParameterCollection\n- uid: System.Data.SqlClient.SqlParameterCollection.Count\n  commentId: P:System.Data.SqlClient.SqlParameterCollection.Count\n  id: Count\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Data.SqlClient.SqlParameterCollection.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 20\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Returns an Integer that contains the number of elements in the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. Read-only. </p>\\n\"\n  syntax:\n    content: public override int Count { get; }\n    content.vb: Public Overrides ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of elements in the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> as an Integer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: SqlParameterCollection.Count\n- uid: System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)\n  commentId: P:System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Data.SqlClient.SqlParameterCollection.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 33\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified index.</p>\\n\"\n  syntax:\n    content: public SqlParameter this[int index] { get; set; }\n    content.vb: Public Property Item(index As Integer) As SqlParameter\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the parameter to retrieve. </p>\\n\"\n    return:\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified index.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The specified index does not exist. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: SqlParameterCollection.Item[Int32]\n  nameWithType.vb: SqlParameterCollection.Item(Int32)\n- uid: System.Data.SqlClient.SqlParameterCollection.Item(System.String)\n  commentId: P:System.Data.SqlClient.SqlParameterCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Item[String]\n  fullName: System.Data.SqlClient.SqlParameterCollection.Item[System.String]\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 45\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified name.</p>\\n\"\n  syntax:\n    content: public SqlParameter this[string parameterName] { get; set; }\n    content.vb: Public Property Item(parameterName As String) As SqlParameter\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The name of the parameter to retrieve. </p>\\n\"\n    return:\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified name.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The specified <em>parameterName</em> is not valid. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlClient.SqlParameterCollection.Item(System.String)\n  name.vb: Item(String)\n  nameWithType: SqlParameterCollection.Item[String]\n  nameWithType.vb: SqlParameterCollection.Item(String)\n- uid: System.Data.SqlClient.SqlParameterCollection.SyncRoot\n  commentId: P:System.Data.SqlClient.SqlParameterCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: SyncRoot\n  fullName: System.Data.SqlClient.SqlParameterCollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SyncRoot\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 44\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets an object that can be used to synchronize access to the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public override object SyncRoot { get; }\n    content.vb: Public Overrides ReadOnly Property SyncRoot As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An object that can be used to synchronize access to the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: SqlParameterCollection.SyncRoot\n- uid: System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)\n  id: Add(System.Data.SqlClient.SqlParameter)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(SqlParameter)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 57\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Adds the specified <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlParameter Add(SqlParameter value)\n    content.vb: Public Function Add(value As SqlParameter) As SqlParameter\n    parameters:\n    - id: value\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add to the collection. </p>\\n\"\n    return:\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> specified in the <em>value</em> parameter is already added to this or another <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The parameter passed was not a <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>value</em> parameter is null. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameterCollection.Add(SqlParameter)\n- uid: System.Data.SqlClient.SqlParameterCollection.Add(System.Object)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Add(System.Object)\n  id: Add(System.Object)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(Object)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Add(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 52\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Adds the specified <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override int Add(object value)\n    content.vb: Public Overrides Function Add(value As Object) As Integer\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The index of the new <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.Add(Object)\n- uid: System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)\n  id: Add(System.String,System.Data.SqlDbType)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(String, SqlDbType)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Add(System.String, System.Data.SqlDbType)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 68\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Adds a <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> given the parameter name and the data type.</p>\\n\"\n  syntax:\n    content: public SqlParameter Add(string parameterName, SqlDbType sqlDbType)\n    content.vb: Public Function Add(parameterName As String, sqlDbType As SqlDbType) As SqlParameter\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The name of the parameter. </p>\\n\"\n    - id: sqlDbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameterCollection.Add(String, SqlDbType)\n- uid: System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)\n  id: Add(System.String,System.Data.SqlDbType,System.Int32)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(String, SqlDbType, Int32)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Add(System.String, System.Data.SqlDbType, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 73\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Adds a <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, given the specified parameter name, <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and size.</p>\\n\"\n  syntax:\n    content: public SqlParameter Add(string parameterName, SqlDbType sqlDbType, int size)\n    content.vb: Public Function Add(parameterName As String, sqlDbType As SqlDbType, size As Integer) As SqlParameter\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The name of the parameter. </p>\\n\"\n    - id: sqlDbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add to the collection. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The size as an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameterCollection.Add(String, SqlDbType, Int32)\n- uid: System.Data.SqlClient.SqlParameterCollection.AddRange(System.Array)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Array)\n  id: AddRange(System.Array)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: AddRange(Array)\n  fullName: System.Data.SqlClient.SqlParameterCollection.AddRange(System.Array)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddRange\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 61\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Adds an array of values to the end of the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void AddRange(Array values)\n    content.vb: Public Overrides Sub AddRange(values As Array)\n    parameters:\n    - id: values\n      type: System.Array\n      description: \"\\n<p>The <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values to add.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.AddRange(Array)\n- uid: System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter[])\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter[])\n  id: AddRange(System.Data.SqlClient.SqlParameter[])\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: AddRange(SqlParameter[])\n  fullName: System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddRange\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 83\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Adds an array of <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values to the end of the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void AddRange(SqlParameter[] values)\n    content.vb: Public Sub AddRange(values As SqlParameter())\n    parameters:\n    - id: values\n      type: System.Data.SqlClient.SqlParameter[]\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values to add.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter())\n  name.vb: AddRange(SqlParameter())\n  nameWithType: SqlParameterCollection.AddRange(SqlParameter[])\n  nameWithType.vb: SqlParameterCollection.AddRange(SqlParameter())\n- uid: System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)\n  id: AddWithValue(System.String,System.Object)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: AddWithValue(String, Object)\n  fullName: System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddWithValue\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 63\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Adds a value to the end of the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlParameter AddWithValue(string parameterName, object value)\n    content.vb: Public Function AddWithValue(parameterName As String, value As Object) As SqlParameter\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The name of the parameter.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to be added. Use <xref href=\\\"System.DBNull.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instead of null, to indicate a null value.</p>\\n\"\n    return:\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameterCollection.AddWithValue(String, Object)\n- uid: System.Data.SqlClient.SqlParameterCollection.Clear\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Clear\n  id: Clear\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Data.SqlClient.SqlParameterCollection.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 89\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Removes all the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects from the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void Clear()\n    content.vb: Public Overrides Sub Clear\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.Clear()\n- uid: System.Data.SqlClient.SqlParameterCollection.Contains(System.Data.SqlClient.SqlParameter)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Data.SqlClient.SqlParameter)\n  id: Contains(System.Data.SqlClient.SqlParameter)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Contains(SqlParameter)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Contains(System.Data.SqlClient.SqlParameter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 93\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is in this <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool Contains(SqlParameter value)\n    content.vb: Public Function Contains(value As SqlParameter) As Boolean\n    parameters:\n    - id: value\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains the value; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameterCollection.Contains(SqlParameter)\n- uid: System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Contains(Object)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 104\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is in this <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool Contains(object value)\n    content.vb: Public Overrides Function Contains(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains the value; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.Contains(Object)\n- uid: System.Data.SqlClient.SqlParameterCollection.Contains(System.String)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Contains(String)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Contains(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 88\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Determines whether the specified parameter name is in this <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool Contains(string value)\n    content.vb: Public Overrides Function Contains(value As String) As Boolean\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains the value; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.Contains(String)\n- uid: System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(Array, Int32)\n  fullName: System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 109\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Copies all the elements of the current <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified one-dimensional <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> starting at the specified destination <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> index.</p>\\n\"\n  syntax:\n    content: public override void CopyTo(Array array, int index)\n    content.vb: Public Overrides Sub CopyTo(array As Array, index As Integer)\n    parameters:\n    - id: array\n      type: System.Array\n      description: \"\\n<p>The one-dimensional <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the destination of the elements copied from the current <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>A 32-bit integer that represents the index in the <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at which copying starts.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.CopyTo(Array, Int32)\n- uid: System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter[],System.Int32)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter[],System.Int32)\n  id: CopyTo(System.Data.SqlClient.SqlParameter[],System.Int32)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(SqlParameter[], Int32)\n  fullName: System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 98\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Copies all the elements of the current <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> starting at the specified destination index.</p>\\n\"\n  syntax:\n    content: public void CopyTo(SqlParameter[] array, int index)\n    content.vb: Public Sub CopyTo(array As SqlParameter(), index As Integer)\n    parameters:\n    - id: array\n      type: System.Data.SqlClient.SqlParameter[]\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the destination of the elements copied from the current <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>A 32-bit integer that represents the index in the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at which copying starts.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter(), System.Int32)\n  name.vb: CopyTo(SqlParameter(), Int32)\n  nameWithType: SqlParameterCollection.CopyTo(SqlParameter[], Int32)\n  nameWithType.vb: SqlParameterCollection.CopyTo(SqlParameter(), Int32)\n- uid: System.Data.SqlClient.SqlParameterCollection.GetEnumerator\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Data.SqlClient.SqlParameterCollection.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 114\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Returns an enumerator that iterates through the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public override IEnumerator GetEnumerator()\n    content.vb: Public Overrides Function GetEnumerator As IEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.GetEnumerator()\n- uid: System.Data.SqlClient.SqlParameterCollection.GetParameter(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.GetParameter(System.Int32)\n  id: GetParameter(System.Int32)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: GetParameter(Int32)\n  fullName: System.Data.SqlClient.SqlParameterCollection.GetParameter(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetParameter\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 119\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override DbParameter GetParameter(int index)\n    content.vb: Protected Overrides Function GetParameter(index As Integer) As DbParameter\n    parameters:\n    - id: index\n      type: System.Int32\n    return:\n      type: DbParameter\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlParameterCollection.GetParameter(Int32)\n- uid: System.Data.SqlClient.SqlParameterCollection.GetParameter(System.String)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.GetParameter(System.String)\n  id: GetParameter(System.String)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: GetParameter(String)\n  fullName: System.Data.SqlClient.SqlParameterCollection.GetParameter(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetParameter\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 125\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override DbParameter GetParameter(string parameterName)\n    content.vb: Protected Overrides Function GetParameter(parameterName As String) As DbParameter\n    parameters:\n    - id: parameterName\n      type: System.String\n    return:\n      type: DbParameter\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlParameterCollection.GetParameter(String)\n- uid: System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Data.SqlClient.SqlParameter)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Data.SqlClient.SqlParameter)\n  id: IndexOf(System.Data.SqlClient.SqlParameter)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: IndexOf(SqlParameter)\n  fullName: System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Data.SqlClient.SqlParameter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IndexOf\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 103\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets the location of the specified <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> within the collection.</p>\\n\"\n  syntax:\n    content: public int IndexOf(SqlParameter value)\n    content.vb: Public Function IndexOf(value As SqlParameter) As Integer\n    parameters:\n    - id: value\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to find. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The zero-based location of the specified <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is a <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> within the collection. Returns -1 when the object does not exist in the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameterCollection.IndexOf(SqlParameter)\n- uid: System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)\n  id: IndexOf(System.Object)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: IndexOf(Object)\n  fullName: System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IndexOf\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 168\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets the location of the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> within the collection.</p>\\n\"\n  syntax:\n    content: public override int IndexOf(object value)\n    content.vb: Public Overrides Function IndexOf(value As Object) As Integer\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to find. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The zero-based location of the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is a <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> within the collection. Returns -1 when the object does not exist in the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.IndexOf(Object)\n- uid: System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)\n  id: IndexOf(System.String)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: IndexOf(String)\n  fullName: System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IndexOf\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 163\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets the location of the specified <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified name.</p>\\n\"\n  syntax:\n    content: public override int IndexOf(string parameterName)\n    content.vb: Public Overrides Function IndexOf(parameterName As String) As Integer\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The case-sensitive name of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to find.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The zero-based location of the specified <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified case-sensitive name. Returns -1 when the object does not exist in the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.IndexOf(String)\n- uid: System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Data.SqlClient.SqlParameter)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Data.SqlClient.SqlParameter)\n  id: Insert(System.Int32,System.Data.SqlClient.SqlParameter)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Insert(Int32, SqlParameter)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32, System.Data.SqlClient.SqlParameter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Insert\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 108\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Inserts a <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object into the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified index.</p>\\n\"\n  syntax:\n    content: public void Insert(int index, SqlParameter value)\n    content.vb: Public Sub Insert(index As Integer, value As SqlParameter)\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index at which value should be inserted.</p>\\n\"\n    - id: value\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be inserted in the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameterCollection.Insert(Int32, SqlParameter)\n- uid: System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)\n  id: Insert(System.Int32,System.Object)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Insert(Int32, Object)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Insert\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 192\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Inserts an <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified index.</p>\\n\"\n  syntax:\n    content: public override void Insert(int index, object value)\n    content.vb: Public Overrides Sub Insert(index As Integer, value As Object)\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index at which value should be inserted.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be inserted in the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.Insert(Int32, Object)\n- uid: System.Data.SqlClient.SqlParameterCollection.Remove(System.Data.SqlClient.SqlParameter)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Data.SqlClient.SqlParameter)\n  id: Remove(System.Data.SqlClient.SqlParameter)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Remove(SqlParameter)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Remove(System.Data.SqlClient.SqlParameter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollection.cs\n    startLine: 118\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Removes the specified <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from the collection.</p>\\n\"\n  syntax:\n    content: public void Remove(SqlParameter value)\n    content.vb: Public Sub Remove(value As SqlParameter)\n    parameters:\n    - id: value\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to remove from the collection. </p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The parameter is not a <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: \"\\n<p>The parameter does not exist in the collection. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameterCollection.Remove(SqlParameter)\n- uid: System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: Remove(Object)\n  fullName: System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 208\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Removes the specified <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from the collection.</p>\\n\"\n  syntax:\n    content: public override void Remove(object value)\n    content.vb: Public Overrides Sub Remove(value As Object)\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The object to remove from the collection. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.Remove(Object)\n- uid: System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: RemoveAt(Int32)\n  fullName: System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAt\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 223\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Removes the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified index.</p>\\n\"\n  syntax:\n    content: public override void RemoveAt(int index)\n    content.vb: Public Overrides Sub RemoveAt(index As Integer)\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to remove.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.RemoveAt(Int32)\n- uid: System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)\n  id: RemoveAt(System.String)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: RemoveAt(String)\n  fullName: System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAt\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterCollectionHelper.cs\n    startLine: 230\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Removes the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified parameter name.</p>\\n\"\n  syntax:\n    content: public override void RemoveAt(string parameterName)\n    content.vb: Public Overrides Sub RemoveAt(parameterName As String)\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The name of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameterCollection.RemoveAt(String)\n- uid: System.Data.SqlClient.SqlParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)\n  id: SetParameter(System.Int32,System.Data.Common.DbParameter)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: SetParameter(Int32, Common.DbParameter)\n  fullName: System.Data.SqlClient.SqlParameterCollection.SetParameter(System.Int32, System.Data.Common.DbParameter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetParameter\n    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n    startLine: 571\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override void SetParameter(int index, Common.DbParameter value)\n    content.vb: Protected Overrides Sub SetParameter(index As Integer, value As Common.DbParameter)\n    parameters:\n    - id: index\n      type: System.Int32\n    - id: value\n      type: System.Data.Common.DbParameter\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlParameterCollection.SetParameter(Int32, Common.DbParameter)\n- uid: System.Data.SqlClient.SqlParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)\n  commentId: M:System.Data.SqlClient.SqlParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)\n  id: SetParameter(System.String,System.Data.Common.DbParameter)\n  parent: System.Data.SqlClient.SqlParameterCollection\n  langs:\n  - csharp\n  - vb\n  name: SetParameter(String, Common.DbParameter)\n  fullName: System.Data.SqlClient.SqlParameterCollection.SetParameter(System.String, System.Data.Common.DbParameter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetParameter\n    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n    startLine: 572\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override void SetParameter(string parameterName, Common.DbParameter value)\n    content.vb: Protected Overrides Sub SetParameter(parameterName As String, value As Common.DbParameter)\n    parameters:\n    - id: parameterName\n      type: System.String\n    - id: value\n      type: System.Data.Common.DbParameter\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlParameterCollection.SetParameter(String, Common.DbParameter)\nreferences:\n- uid: System.Data.SqlClient\n  isExternal: false\n  name: System.Data.SqlClient\n  fullName: System.Data.SqlClient\n  nameWithType: System.Data.SqlClient\n  commentId: N:System.Data.SqlClient\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Data.SqlClient.SqlParameter\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlParameter\n  fullName: System.Data.SqlClient.SqlParameter\n  nameWithType: SqlParameter\n  commentId: T:System.Data.SqlClient.SqlParameter\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Data.SqlDbType\n  parent: System.Data\n  isExternal: false\n  name: SqlDbType\n  fullName: System.Data.SqlDbType\n  nameWithType: SqlDbType\n  commentId: T:System.Data.SqlDbType\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  nameWithType: Array\n  commentId: T:System.Array\n- uid: System.Data.SqlClient.SqlParameter[]\n  name: SqlParameter[]\n  fullName: System.Data.SqlClient.SqlParameter[]\n  fullname.vb: System.Data.SqlClient.SqlParameter()\n  name.vb: SqlParameter()\n  spec.csharp:\n  - uid: System.Data.SqlClient.SqlParameter\n    name: SqlParameter\n    fullName: System.Data.SqlClient.SqlParameter\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Data.SqlClient.SqlParameter\n    name: SqlParameter\n    fullName: System.Data.SqlClient.SqlParameter\n  - name: ()\n    fullName: ()\n  nameWithType: SqlParameter[]\n  nameWithType.vb: SqlParameter()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Data.Common.DbParameter\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameter\n  fullName: System.Data.Common.DbParameter\n  nameWithType: DbParameter\n  commentId: T:System.Data.Common.DbParameter\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  fullName: System.Data.Common\n  nameWithType: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.IndexOutOfRangeException\n  isExternal: false\n  name: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  commentId: T:System.IndexOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.SystemException\n  parent: System\n  isExternal: true\n  name: SystemException\n  fullName: System.SystemException\n  commentId: T:System.SystemException\n  nameWithType: SystemException\n"}