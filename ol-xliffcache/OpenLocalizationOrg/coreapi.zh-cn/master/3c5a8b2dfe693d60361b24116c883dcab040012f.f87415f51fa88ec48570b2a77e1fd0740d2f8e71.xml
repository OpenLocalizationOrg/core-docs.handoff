{"nodes":[{"pos":[2148,2158],"content":"RectangleF","needQuote":true,"nodes":[{"content":"RectangleF","pos":[0,10]}]},{"pos":[3348,3353],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[4548,4573],"content":"RectangleF(PointF, SizeF)","needQuote":true,"nodes":[{"content":"RectangleF(PointF, SizeF)","pos":[0,25]}]},{"pos":[6288,6330],"content":"RectangleF(Single, Single, Single, Single)","needQuote":true,"nodes":[{"content":"RectangleF(Single, Single, Single, Single)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The x-coordinate of the upper-left corner of the rectangle.","pos":[7244,7308],"source":"\\n<p>The x-coordinate of the upper-left corner of the rectangle."},{"content":"&lt;/p&gt;\\n","pos":[7309,7315],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The y-coordinate of the upper-left corner of the rectangle.","pos":[7375,7439],"source":"\\n<p>The y-coordinate of the upper-left corner of the rectangle."},{"content":"&lt;/p&gt;\\n","pos":[7440,7446],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The width of the rectangle.","pos":[7510,7542],"source":"\\n<p>The width of the rectangle."},{"content":"&lt;/p&gt;\\n","pos":[7543,7549],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The height of the rectangle.","pos":[7614,7647],"source":"\\n<p>The height of the rectangle."},{"content":"&lt;/p&gt;\\n","pos":[7648,7654],"source":" </p>\\n"},{"pos":[7956,7962],"content":"Bottom","needQuote":true,"nodes":[{"content":"Bottom","pos":[0,6]}]},{"pos":[9536,9542],"content":"Height","needQuote":true,"nodes":[{"content":"Height","pos":[0,6]}]},{"pos":[10716,10723],"content":"IsEmpty","needQuote":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[12368,12372],"content":"Left","needQuote":true,"nodes":[{"content":"Left","pos":[0,4]}]},{"pos":[13569,13577],"content":"Location","needQuote":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"pos":[14886,14891],"content":"Right","needQuote":true,"nodes":[{"content":"Right","pos":[0,5]}]},{"pos":[16453,16457],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[17693,17696],"content":"Top","needQuote":true,"nodes":[{"content":"Top","pos":[0,3]}]},{"pos":[18876,18881],"content":"Width","needQuote":true,"nodes":[{"content":"Width","pos":[0,5]}]},{"pos":[20030,20031],"content":"X","needQuote":true,"nodes":[{"content":"X","pos":[0,1]}]},{"pos":[21224,21225],"content":"Y","needQuote":true,"nodes":[{"content":"Y","pos":[0,1]}]},{"pos":[22508,22524],"content":"Contains(PointF)","needQuote":true,"nodes":[{"content":"Contains(PointF)","pos":[0,16]}]},{"pos":[24180,24200],"content":"Contains(RectangleF)","needQuote":true,"nodes":[{"content":"Contains(RectangleF)","pos":[0,20]}]},{"pos":[25971,25995],"content":"Contains(Single, Single)","needQuote":true,"nodes":[{"content":"Contains(Single, Single)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The x-coordinate of the point to test.","pos":[26876,26919],"source":"\\n<p>The x-coordinate of the point to test."},{"content":"&lt;/p&gt;\\n","pos":[26920,26926],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The y-coordinate of the point to test.","pos":[26986,27029],"source":"\\n<p>The y-coordinate of the point to test."},{"content":"&lt;/p&gt;\\n","pos":[27030,27036],"source":" </p>\\n"},{"pos":[27684,27698],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[29735,29775],"content":"FromLTRB(Single, Single, Single, Single)","needQuote":true,"nodes":[{"content":"FromLTRB(Single, Single, Single, Single)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The x-coordinate of the upper-left corner of the rectangular region.","pos":[30761,30834],"source":"\\n<p>The x-coordinate of the upper-left corner of the rectangular region."},{"content":"&lt;/p&gt;\\n","pos":[30835,30841],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The y-coordinate of the upper-left corner of the rectangular region.","pos":[30903,30976],"source":"\\n<p>The y-coordinate of the upper-left corner of the rectangular region."},{"content":"&lt;/p&gt;\\n","pos":[30977,30983],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The x-coordinate of the lower-right corner of the rectangular region.","pos":[31047,31121],"source":"\\n<p>The x-coordinate of the lower-right corner of the rectangular region."},{"content":"&lt;/p&gt;\\n","pos":[31122,31128],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The y-coordinate of the lower-right corner of the rectangular region.","pos":[31193,31267],"source":"\\n<p>The y-coordinate of the lower-right corner of the rectangular region."},{"content":"&lt;/p&gt;\\n","pos":[31268,31274],"source":" </p>\\n"},{"pos":[31813,31826],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[33290,33325],"content":"Inflate(RectangleF, Single, Single)","needQuote":true,"nodes":[{"content":"Inflate(RectangleF, Single, Single)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The amount to enlarge the copy of the rectangle horizontally.","pos":[34552,34618],"source":"\\n<p>The amount to enlarge the copy of the rectangle horizontally."},{"content":"&lt;/p&gt;\\n","pos":[34619,34625],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The amount to enlarge the copy of the rectangle vertically.","pos":[34685,34749],"source":"\\n<p>The amount to enlarge the copy of the rectangle vertically."},{"content":"&lt;/p&gt;\\n","pos":[34750,34756],"source":" </p>\\n"},{"pos":[35324,35338],"content":"Inflate(SizeF)","needQuote":true,"nodes":[{"content":"Inflate(SizeF)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The amount to inflate this rectangle.","pos":[36107,36149],"source":"\\n<p>The amount to inflate this rectangle."},{"content":"&lt;/p&gt;\\n","pos":[36150,36156],"source":" </p>\\n"},{"pos":[36736,36759],"content":"Inflate(Single, Single)","needQuote":true,"nodes":[{"content":"Inflate(Single, Single)","pos":[0,23]}]},{"pos":[38280,38301],"content":"Intersect(RectangleF)","needQuote":true,"nodes":[{"content":"Intersect(RectangleF)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The rectangle to intersect.","pos":[39230,39262],"source":"\\n<p>The rectangle to intersect."},{"content":"&lt;/p&gt;\\n","pos":[39263,39269],"source":" </p>\\n"},{"pos":[39718,39751],"content":"Intersect(RectangleF, RectangleF)","needQuote":true,"nodes":[{"content":"Intersect(RectangleF, RectangleF)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;A rectangle to intersect.","pos":[40853,40883],"source":"\\n<p>A rectangle to intersect."},{"content":"&lt;/p&gt;\\n","pos":[40884,40890],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A rectangle to intersect.","pos":[40962,40992],"source":"\\n<p>A rectangle to intersect."},{"content":"&lt;/p&gt;\\n","pos":[40993,40999],"source":" </p>\\n"},{"pos":[41687,41713],"content":"IntersectsWith(RectangleF)","needQuote":true,"nodes":[{"content":"IntersectsWith(RectangleF)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The rectangle to test.","pos":[42527,42554],"source":"\\n<p>The rectangle to test."},{"content":"&lt;/p&gt;\\n","pos":[42555,42561],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;This method returns &lt;strong&gt;true&lt;/strong&gt; if there is any intersection.&lt;/p&gt;\\n","pos":[42622,42704],"source":"\\n<p>This method returns <strong>true</strong> if there is any intersection.</p>\\n"},{"pos":[43059,43073],"content":"Offset(PointF)","needQuote":true,"nodes":[{"content":"Offset(PointF)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The amount to offset the location.","pos":[43778,43817],"source":"\\n<p>The amount to offset the location."},{"content":"&lt;/p&gt;\\n","pos":[43818,43824],"source":" </p>\\n"},{"pos":[44185,44207],"content":"Offset(Single, Single)","needQuote":true,"nodes":[{"content":"Offset(Single, Single)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The amount to offset the location horizontally.","pos":[44926,44978],"source":"\\n<p>The amount to offset the location horizontally."},{"content":"&lt;/p&gt;\\n","pos":[44979,44985],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The amount to offset the location vertically.","pos":[45045,45095],"source":"\\n<p>The amount to offset the location vertically."},{"content":"&lt;/p&gt;\\n","pos":[45096,45102],"source":" </p>\\n"},{"pos":[45558,45590],"content":"Equality(RectangleF, RectangleF)","needQuote":true,"nodes":[{"content":"Equality(RectangleF, RectangleF)","pos":[0,32]}]},{"pos":[48000,48033],"content":"Implicit(Rectangle to RectangleF)","needQuote":true,"nodes":[{"content":"Implicit(Rectangle to RectangleF)","pos":[0,33]}]},{"pos":[50142,50176],"content":"Inequality(RectangleF, RectangleF)","needQuote":true,"nodes":[{"content":"Inequality(RectangleF, RectangleF)","pos":[0,34]}]},{"pos":[52468,52478],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[54052,54081],"content":"Union(RectangleF, RectangleF)","needQuote":true,"nodes":[{"content":"Union(RectangleF, RectangleF)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;A rectangle to union.","pos":[54976,55002],"source":"\\n<p>A rectangle to union."},{"content":"&lt;/p&gt;\\n","pos":[55003,55009],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A rectangle to union.","pos":[55081,55107],"source":"\\n<p>A rectangle to union."},{"content":"&lt;/p&gt;\\n","pos":[55108,55114],"source":" </p>\\n"},{"pos":[55563,55577],"content":"System.Drawing","needQuote":true,"nodes":[{"content":"System.Drawing","pos":[0,14]}]},{"pos":[55774,55796],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[55944,55950],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[56017,56018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56068,56074],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[56135,56136]},{"pos":[56191,56197],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56257,56258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56355,56361],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[56428,56429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56479,56485],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[56546,56547]},{"pos":[56602,56608],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56668,56669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56914,56945],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[57111,57126],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[57202,57203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57253,57259],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[57320,57321]},{"pos":[57376,57382],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57442,57443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57549,57564],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[57640,57641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57691,57697],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[57758,57759]},{"pos":[57814,57820],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57880,57881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58107,58116],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[58209,58216],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[58284,58285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58312,58313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58382,58389],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[58457,58458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58485,58486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58639,58645],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58766,58772],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[58923,58933],"content":"RectangleF","needQuote":true,"nodes":[{"content":"RectangleF","pos":[0,10]}]},{"pos":[59122,59128],"content":"PointF","needQuote":true,"nodes":[{"content":"PointF","pos":[0,6]}]},{"pos":[59304,59309],"content":"SizeF","needQuote":true,"nodes":[{"content":"SizeF","pos":[0,5]}]},{"pos":[59467,59473],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[59619,59626],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59808,59822],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[59947,59953],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[60002,60003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60053,60059],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60119,60120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60206,60212],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[60261,60262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60312,60318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60378,60379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60560,60569],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[60748,60761],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[60868,60879],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[60933,60934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60961,60962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61038,61049],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[61103,61104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61131,61132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61298,61303],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61464,61473],"content":"Rectangle","needQuote":true,"nodes":[{"content":"Rectangle","pos":[0,9]}]},{"pos":[61665,61675],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[61776,61784],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[61835,61836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61863,61864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61937,61945],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[61996,61997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62024,62025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62186,62192],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Drawing.RectangleF\n  commentId: T:System.Drawing.RectangleF\n  id: RectangleF\n  parent: System.Drawing\n  children:\n  - System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)\n  - System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)\n  - System.Drawing.RectangleF.Bottom\n  - System.Drawing.RectangleF.Contains(System.Drawing.PointF)\n  - System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.Contains(System.Single,System.Single)\n  - System.Drawing.RectangleF.Empty\n  - System.Drawing.RectangleF.Equals(System.Object)\n  - System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)\n  - System.Drawing.RectangleF.GetHashCode\n  - System.Drawing.RectangleF.Height\n  - System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n  - System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)\n  - System.Drawing.RectangleF.Inflate(System.Single,System.Single)\n  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.IsEmpty\n  - System.Drawing.RectangleF.Left\n  - System.Drawing.RectangleF.Location\n  - System.Drawing.RectangleF.Offset(System.Drawing.PointF)\n  - System.Drawing.RectangleF.Offset(System.Single,System.Single)\n  - System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF\n  - System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.Right\n  - System.Drawing.RectangleF.Size\n  - System.Drawing.RectangleF.Top\n  - System.Drawing.RectangleF.ToString\n  - System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.Width\n  - System.Drawing.RectangleF.X\n  - System.Drawing.RectangleF.Y\n  langs:\n  - csharp\n  - vb\n  name: RectangleF\n  fullName: System.Drawing.RectangleF\n  type: Struct\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RectangleF\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 13\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Stores a set of four floating-point numbers that represent the location and size of a rectangle. For more advanced region functions, use a <xref href=\\\"System.Drawing.Region\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public struct RectangleF\n    content.vb: Public Structure RectangleF\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: RectangleF\n- uid: System.Drawing.RectangleF.Empty\n  commentId: F:System.Drawing.RectangleF.Empty\n  id: Empty\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Empty\n  fullName: System.Drawing.RectangleF.Empty\n  type: Field\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Empty\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 19\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Represents an instance of the <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with its members uninitialized.</p>\\n\"\n  syntax:\n    content: public static readonly RectangleF Empty\n    content.vb: Public Shared ReadOnly Empty As RectangleF\n    return:\n      type: System.Drawing.RectangleF\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: RectangleF.Empty\n- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)\n  commentId: M:System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)\n  id: '#ctor(System.Drawing.PointF,System.Drawing.SizeF)'\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: RectangleF(PointF, SizeF)\n  fullName: System.Drawing.RectangleF.RectangleF(System.Drawing.PointF, System.Drawing.SizeF)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 47\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified location and size.</p>\\n\"\n  syntax:\n    content: public RectangleF(PointF location, SizeF size)\n    content.vb: Public Sub New(location As PointF, size As SizeF)\n    parameters:\n    - id: location\n      type: System.Drawing.PointF\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the upper-left corner of the rectangular region. </p>\\n\"\n    - id: size\n      type: System.Drawing.SizeF\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.SizeF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the width and height of the rectangular region. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.RectangleF(PointF, SizeF)\n- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)\n  commentId: M:System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: RectangleF(Single, Single, Single, Single)\n  fullName: System.Drawing.RectangleF.RectangleF(System.Single, System.Single, System.Single, System.Single)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 32\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified location and size.</p>\\n\"\n  syntax:\n    content: public RectangleF(float x, float y, float width, float height)\n    content.vb: Public Sub New(x As Single, y As Single, width As Single, height As Single)\n    parameters:\n    - id: x\n      type: System.Single\n      description: \"\\n<p>The x-coordinate of the upper-left corner of the rectangle. </p>\\n\"\n    - id: y\n      type: System.Single\n      description: \"\\n<p>The y-coordinate of the upper-left corner of the rectangle. </p>\\n\"\n    - id: width\n      type: System.Single\n      description: \"\\n<p>The width of the rectangle. </p>\\n\"\n    - id: height\n      type: System.Single\n      description: \"\\n<p>The height of the rectangle. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.RectangleF(Single, Single, Single, Single)\n- uid: System.Drawing.RectangleF.Bottom\n  commentId: P:System.Drawing.RectangleF.Bottom\n  id: Bottom\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Bottom\n  fullName: System.Drawing.RectangleF.Bottom\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bottom\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 226\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets the y-coordinate that is the sum of <xref href=\\\"System.Drawing.RectangleF.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.RectangleF.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public float Bottom { get; }\n    content.vb: Public ReadOnly Property Bottom As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The y-coordinate that is the sum of <xref href=\\\"System.Drawing.RectangleF.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.RectangleF.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RectangleF.Bottom\n- uid: System.Drawing.RectangleF.Height\n  commentId: P:System.Drawing.RectangleF.Height\n  id: Height\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Height\n  fullName: System.Drawing.RectangleF.Height\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Height\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 166\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the height of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public float Height { get; set; }\n    content.vb: Public Property Height As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The height of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Height\n- uid: System.Drawing.RectangleF.IsEmpty\n  commentId: P:System.Drawing.RectangleF.IsEmpty\n  id: IsEmpty\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: IsEmpty\n  fullName: System.Drawing.RectangleF.IsEmpty\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsEmpty\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 239\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Tests whether the <xref href=\\\"System.Drawing.RectangleF.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Drawing.RectangleF.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has a value of zero.</p>\\n\"\n  syntax:\n    content: public bool IsEmpty { get; }\n    content.vb: Public ReadOnly Property IsEmpty As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This property returns <strong>true</strong> if the <xref href=\\\"System.Drawing.RectangleF.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Drawing.RectangleF.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has a value of zero; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RectangleF.IsEmpty\n- uid: System.Drawing.RectangleF.Left\n  commentId: P:System.Drawing.RectangleF.Left\n  id: Left\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Left\n  fullName: System.Drawing.RectangleF.Left\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Left\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 184\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets the x-coordinate of the left edge of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public float Left { get; }\n    content.vb: Public ReadOnly Property Left As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The x-coordinate of the left edge of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RectangleF.Left\n- uid: System.Drawing.RectangleF.Location\n  commentId: P:System.Drawing.RectangleF.Location\n  id: Location\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Location\n  fullName: System.Drawing.RectangleF.Location\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Location\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 75\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the coordinates of the upper-left corner of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public PointF Location { get; set; }\n    content.vb: Public Property Location As PointF\n    parameters: []\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the upper-left corner of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Location\n- uid: System.Drawing.RectangleF.Right\n  commentId: P:System.Drawing.RectangleF.Right\n  id: Right\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Right\n  fullName: System.Drawing.RectangleF.Right\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Right\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 212\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets the x-coordinate that is the sum of <xref href=\\\"System.Drawing.RectangleF.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.RectangleF.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public float Right { get; }\n    content.vb: Public ReadOnly Property Right As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The x-coordinate that is the sum of <xref href=\\\"System.Drawing.RectangleF.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.RectangleF.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RectangleF.Right\n- uid: System.Drawing.RectangleF.Size\n  commentId: P:System.Drawing.RectangleF.Size\n  id: Size\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Size\n  fullName: System.Drawing.RectangleF.Size\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Size\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 93\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the size of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SizeF Size { get; set; }\n    content.vb: Public Property Size As SizeF\n    parameters: []\n    return:\n      type: System.Drawing.SizeF\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.SizeF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the width and height of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Size\n- uid: System.Drawing.RectangleF.Top\n  commentId: P:System.Drawing.RectangleF.Top\n  id: Top\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Top\n  fullName: System.Drawing.RectangleF.Top\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Top\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 198\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets the y-coordinate of the top edge of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public float Top { get; }\n    content.vb: Public ReadOnly Property Top As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The y-coordinate of the top edge of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RectangleF.Top\n- uid: System.Drawing.RectangleF.Width\n  commentId: P:System.Drawing.RectangleF.Width\n  id: Width\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Width\n  fullName: System.Drawing.RectangleF.Width\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Width\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 148\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the width of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public float Width { get; set; }\n    content.vb: Public Property Width As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The width of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Width\n- uid: System.Drawing.RectangleF.X\n  commentId: P:System.Drawing.RectangleF.X\n  id: X\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: X\n  fullName: System.Drawing.RectangleF.X\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 112\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the x-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public float X { get; set; }\n    content.vb: Public Property X As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The x-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.X\n- uid: System.Drawing.RectangleF.Y\n  commentId: P:System.Drawing.RectangleF.Y\n  id: Y\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Y\n  fullName: System.Drawing.RectangleF.Y\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Y\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 130\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the y-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public float Y { get; set; }\n    content.vb: Public Property Y As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The y-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Y\n- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)\n  commentId: M:System.Drawing.RectangleF.Contains(System.Drawing.PointF)\n  id: Contains(System.Drawing.PointF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Contains(PointF)\n  fullName: System.Drawing.RectangleF.Contains(System.Drawing.PointF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 303\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Determines if the specified point is contained within this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public bool Contains(PointF pt)\n    content.vb: >-\n      <Pure>\n\n      Public Function Contains(pt As PointF) As Boolean\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if the point represented by the <em>pt</em> parameter is contained within this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Contains(PointF)\n- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)\n  commentId: M:System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)\n  id: Contains(System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Contains(RectangleF)\n  fullName: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 316\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Determines if the rectangular region represented by <em>rect</em> is entirely contained within this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public bool Contains(RectangleF rect)\n    content.vb: >-\n      <Pure>\n\n      Public Function Contains(rect As RectangleF) As Boolean\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if the rectangular region represented by <em>rect</em> is entirely contained within the rectangular region represented by this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Contains(RectangleF)\n- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)\n  commentId: M:System.Drawing.RectangleF.Contains(System.Single,System.Single)\n  id: Contains(System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Contains(Single, Single)\n  fullName: System.Drawing.RectangleF.Contains(System.Single, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 291\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Determines if the specified point is contained within this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public bool Contains(float x, float y)\n    content.vb: >-\n      <Pure>\n\n      Public Function Contains(x As Single, y As Single) As Boolean\n    parameters:\n    - id: x\n      type: System.Single\n      description: \"\\n<p>The x-coordinate of the point to test. </p>\\n\"\n    - id: y\n      type: System.Single\n      description: \"\\n<p>The y-coordinate of the point to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if the point defined by <em>x</em> and <em>y</em> is contained within this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Contains(Single, Single)\n- uid: System.Drawing.RectangleF.Equals(System.Object)\n  commentId: M:System.Drawing.RectangleF.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Drawing.RectangleF.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 253\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Tests whether <em>obj</em> is a <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the same location and size of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if <em>obj</em> is a <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and its <strong>X</strong>, <strong>Y</strong>, <strong>Width</strong>, and <strong>Height</strong> properties are equal to the corresponding properties of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RectangleF.Equals(Object)\n- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)\n  commentId: M:System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)\n  id: FromLTRB(System.Single,System.Single,System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: FromLTRB(Single, Single, Single, Single)\n  fullName: System.Drawing.RectangleF.FromLTRB(System.Single, System.Single, System.Single, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FromLTRB\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 61\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Creates a <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with upper-left corner and lower-right corner at the specified locations.</p>\\n\"\n  syntax:\n    content: public static RectangleF FromLTRB(float left, float top, float right, float bottom)\n    content.vb: Public Shared Function FromLTRB(left As Single, top As Single, right As Single, bottom As Single) As RectangleF\n    parameters:\n    - id: left\n      type: System.Single\n      description: \"\\n<p>The x-coordinate of the upper-left corner of the rectangular region. </p>\\n\"\n    - id: top\n      type: System.Single\n      description: \"\\n<p>The y-coordinate of the upper-left corner of the rectangular region. </p>\\n\"\n    - id: right\n      type: System.Single\n      description: \"\\n<p>The x-coordinate of the lower-right corner of the rectangular region. </p>\\n\"\n    - id: bottom\n      type: System.Single\n      description: \"\\n<p>The y-coordinate of the lower-right corner of the rectangular region. </p>\\n\"\n    return:\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The new <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that this method creates.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RectangleF.FromLTRB(Single, Single, Single, Single)\n- uid: System.Drawing.RectangleF.GetHashCode\n  commentId: M:System.Drawing.RectangleF.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Drawing.RectangleF.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 326\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets the hash code for this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. For information about the use of hash codes, see <strong>Object.GetHashCode</strong>.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code for this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RectangleF.GetHashCode()\n- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n  commentId: M:System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n  id: Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Inflate(RectangleF, Single, Single)\n  fullName: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF, System.Single, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Inflate\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 360\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Creates and returns an enlarged copy of the specified <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The copy is enlarged by the specified amount and the original rectangle remains unmodified.</p>\\n\"\n  syntax:\n    content: public static RectangleF Inflate(RectangleF rect, float x, float y)\n    content.vb: Public Shared Function Inflate(rect As RectangleF, x As Single, y As Single) As RectangleF\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be copied. This rectangle is not modified. </p>\\n\"\n    - id: x\n      type: System.Single\n      description: \"\\n<p>The amount to enlarge the copy of the rectangle horizontally. </p>\\n\"\n    - id: y\n      type: System.Single\n      description: \"\\n<p>The amount to enlarge the copy of the rectangle vertically. </p>\\n\"\n    return:\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The enlarged <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RectangleF.Inflate(RectangleF, Single, Single)\n- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)\n  commentId: M:System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)\n  id: Inflate(System.Drawing.SizeF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Inflate(SizeF)\n  fullName: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Inflate\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 349\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Enlarges this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the specified amount.</p>\\n\"\n  syntax:\n    content: public void Inflate(SizeF size)\n    content.vb: Public Sub Inflate(size As SizeF)\n    parameters:\n    - id: size\n      type: System.Drawing.SizeF\n      description: \"\\n<p>The amount to inflate this rectangle. </p>\\n\"\n  seealso:\n  - type: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n    commentId: M:System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Inflate(SizeF)\n- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)\n  commentId: M:System.Drawing.RectangleF.Inflate(System.Single,System.Single)\n  id: Inflate(System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Inflate(Single, Single)\n  fullName: System.Drawing.RectangleF.Inflate(System.Single, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Inflate\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 338\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Enlarges this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure by the specified amount.</p>\\n\"\n  syntax:\n    content: public void Inflate(float x, float y)\n    content.vb: Public Sub Inflate(x As Single, y As Single)\n    parameters:\n    - id: x\n      type: System.Single\n      description: \"\\n<p>The amount to inflate this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure horizontally. </p>\\n\"\n    - id: y\n      type: System.Single\n      description: \"\\n<p>The amount to inflate this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure vertically. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Inflate(Single, Single)\n- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)\n  commentId: M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)\n  id: Intersect(System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Intersect(RectangleF)\n  fullName: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Intersect\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 369\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Replaces this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with the intersection of itself and the specified <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public void Intersect(RectangleF rect)\n    content.vb: Public Sub Intersect(rect As RectangleF)\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The rectangle to intersect. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Intersect(RectangleF)\n- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  commentId: M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  id: Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Intersect(RectangleF, RectangleF)\n  fullName: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF, System.Drawing.RectangleF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Intersect\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 383\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that represents the intersection of two rectangles. If there is no intersection, and empty <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is returned.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public static RectangleF Intersect(RectangleF a, RectangleF b)\n    content.vb: >-\n      <Pure>\n\n      Public Shared Function Intersect(a As RectangleF, b As RectangleF) As RectangleF\n    parameters:\n    - id: a\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>A rectangle to intersect. </p>\\n\"\n    - id: b\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>A rectangle to intersect. </p>\\n\"\n    return:\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>A third <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure the size of which represents the overlapped area of the two specified rectangles.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RectangleF.Intersect(RectangleF, RectangleF)\n- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)\n  commentId: M:System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)\n  id: IntersectsWith(System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: IntersectsWith(RectangleF)\n  fullName: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IntersectsWith\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 402\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Determines if this rectangle intersects with <em>rect</em>.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public bool IntersectsWith(RectangleF rect)\n    content.vb: >-\n      <Pure>\n\n      Public Function IntersectsWith(rect As RectangleF) As Boolean\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The rectangle to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if there is any intersection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.IntersectsWith(RectangleF)\n- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)\n  commentId: M:System.Drawing.RectangleF.Offset(System.Drawing.PointF)\n  id: Offset(System.Drawing.PointF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Offset(PointF)\n  fullName: System.Drawing.RectangleF.Offset(System.Drawing.PointF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Offset\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 427\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Adjusts the location of this rectangle by the specified amount.</p>\\n\"\n  syntax:\n    content: public void Offset(PointF pos)\n    content.vb: Public Sub Offset(pos As PointF)\n    parameters:\n    - id: pos\n      type: System.Drawing.PointF\n      description: \"\\n<p>The amount to offset the location. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Offset(PointF)\n- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)\n  commentId: M:System.Drawing.RectangleF.Offset(System.Single,System.Single)\n  id: Offset(System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Offset(Single, Single)\n  fullName: System.Drawing.RectangleF.Offset(System.Single, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Offset\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 435\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Adjusts the location of this rectangle by the specified amount.</p>\\n\"\n  syntax:\n    content: public void Offset(float x, float y)\n    content.vb: Public Sub Offset(x As Single, y As Single)\n    parameters:\n    - id: x\n      type: System.Single\n      description: \"\\n<p>The amount to offset the location horizontally. </p>\\n\"\n    - id: y\n      type: System.Single\n      description: \"\\n<p>The amount to offset the location vertically. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RectangleF.Offset(Single, Single)\n- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  commentId: M:System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  id: op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Equality(RectangleF, RectangleF)\n  fullName: System.Drawing.RectangleF.Equality(System.Drawing.RectangleF, System.Drawing.RectangleF)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 269\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Tests whether two <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures have equal location and size.</p>\\n\"\n  syntax:\n    content: public static bool operator ==(RectangleF left, RectangleF right)\n    content.vb: Public Shared Operator =(left As RectangleF, right As RectangleF) As Boolean\n    parameters:\n    - id: left\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is to the left of the equality operator. </p>\\n\"\n    - id: right\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is to the right of the equality operator. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This operator returns <strong>true</strong> if the two specified <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures have equal <xref href=\\\"System.Drawing.RectangleF.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.RectangleF.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.RectangleF.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.Drawing.RectangleF.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RectangleF.Equality(RectangleF, RectangleF)\n- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF\n  commentId: M:System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF\n  id: op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Implicit(Rectangle to RectangleF)\n  fullName: System.Drawing.RectangleF.Implicit(System.Drawing.Rectangle to System.Drawing.RectangleF)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 445\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static implicit operator RectangleF(Rectangle r)\n    content.vb: Public Shared Widening Operator CType(r As Rectangle) As RectangleF\n    parameters:\n    - id: r\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to convert. </p>\\n\"\n    return:\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is converted from the specified <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Drawing.RectangleF.Widening(System.Drawing.Rectangle to System.Drawing.RectangleF)\n  name.vb: Widening(Rectangle to RectangleF)\n  nameWithType: RectangleF.Implicit(Rectangle to RectangleF)\n  nameWithType.vb: RectangleF.Widening(Rectangle to RectangleF)\n- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  commentId: M:System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  id: op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Inequality(RectangleF, RectangleF)\n  fullName: System.Drawing.RectangleF.Inequality(System.Drawing.RectangleF, System.Drawing.RectangleF)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 280\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Tests whether two <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures differ in location or size.</p>\\n\"\n  syntax:\n    content: public static bool operator !=(RectangleF left, RectangleF right)\n    content.vb: Public Shared Operator <>(left As RectangleF, right As RectangleF) As Boolean\n    parameters:\n    - id: left\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is to the left of the inequality operator. </p>\\n\"\n    - id: right\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is to the right of the inequality operator. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This operator returns <strong>true</strong> if any of the <xref href=\\\"System.Drawing.RectangleF.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> , <xref href=\\\"System.Drawing.RectangleF.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.RectangleF.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.Drawing.RectangleF.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the two <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures are unequal; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RectangleF.Inequality(RectangleF, RectangleF)\n- uid: System.Drawing.RectangleF.ToString\n  commentId: M:System.Drawing.RectangleF.ToString\n  id: ToString\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Drawing.RectangleF.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 454\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the <strong>Location</strong> and <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a human-readable string.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string that contains the position, width, and height of this <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. For example, \\\"{X=20, Y=20, Width=100, Height=50}\\\".</p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RectangleF.ToString()\n- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  commentId: M:System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  id: Union(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  - vb\n  name: Union(RectangleF, RectangleF)\n  fullName: System.Drawing.RectangleF.Union(System.Drawing.RectangleF, System.Drawing.RectangleF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Union\n    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs\n    startLine: 413\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public static RectangleF Union(RectangleF a, RectangleF b)\n    content.vb: >-\n      <Pure>\n\n      Public Shared Function Union(a As RectangleF, b As RectangleF) As RectangleF\n    parameters:\n    - id: a\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>A rectangle to union. </p>\\n\"\n    - id: b\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>A rectangle to union. </p>\\n\"\n    return:\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>A third <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that contains both of the two rectangles that form the union.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RectangleF.Union(RectangleF, RectangleF)\nreferences:\n- uid: System.Drawing\n  isExternal: false\n  name: System.Drawing\n  fullName: System.Drawing\n  nameWithType: System.Drawing\n  commentId: N:System.Drawing\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Drawing.RectangleF\n  parent: System.Drawing\n  isExternal: false\n  name: RectangleF\n  fullName: System.Drawing.RectangleF\n  nameWithType: RectangleF\n  commentId: T:System.Drawing.RectangleF\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  fullName: System.Drawing.PointF\n  nameWithType: PointF\n  commentId: T:System.Drawing.PointF\n- uid: System.Drawing.SizeF\n  parent: System.Drawing\n  isExternal: false\n  name: SizeF\n  fullName: System.Drawing.SizeF\n  nameWithType: SizeF\n  commentId: T:System.Drawing.SizeF\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  fullName: System.Drawing.Rectangle\n  nameWithType: Rectangle\n  commentId: T:System.Drawing.Rectangle\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}