{"nodes":[{"pos":[1015,1049],"content":"DataContractJsonSerializerSettings","needQuote":true,"nodes":[{"content":"DataContractJsonSerializerSettings","pos":[0,34]}]},{"pos":[2633,2669],"content":"DataContractJsonSerializerSettings()","needQuote":true,"nodes":[{"content":"DataContractJsonSerializerSettings()","pos":[0,36]}]},{"pos":[3974,3988],"content":"DateTimeFormat","needQuote":true,"nodes":[{"content":"DateTimeFormat","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The DateTimeFormat that defines the culturally appropriate format of displaying dates and times.&lt;/p&gt;\\n","pos":[4892,4999],"source":"\\n<p>The DateTimeFormat that defines the culturally appropriate format of displaying dates and times.</p>\\n"},{"pos":[5481,5500],"content":"EmitTypeInformation","needQuote":true,"nodes":[{"content":"EmitTypeInformation","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The data contract JSON serializer settings to emit type information.&lt;/p&gt;\\n","pos":[6413,6492],"source":"\\n<p>The data contract JSON serializer settings to emit type information.</p>\\n"},{"pos":[6952,6962],"content":"KnownTypes","needQuote":true,"nodes":[{"content":"KnownTypes","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.&lt;/p&gt;\\n","pos":[7905,8048],"source":"\\n<p>A collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.</p>\\n"},{"pos":[8532,8553],"content":"MaxItemsInObjectGraph","needQuote":true,"nodes":[{"content":"MaxItemsInObjectGraph","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The maximum number of items in an object graph to serialize or deserialize.&lt;/p&gt;\\n","pos":[9417,9503],"source":"\\n<p>The maximum number of items in an object graph to serialize or deserialize.</p>\\n"},{"pos":[9959,9967],"content":"RootName","needQuote":true,"nodes":[{"content":"RootName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The root name of the selected object.&lt;/p&gt;\\n","pos":[10744,10792],"source":"\\n<p>The root name of the selected object.</p>\\n"},{"pos":[11277,11299],"content":"SerializeReadOnlyTypes","needQuote":true,"nodes":[{"content":"SerializeReadOnlyTypes","pos":[0,22]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;True&lt;/strong&gt; to serialize read only types; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12155,12253],"source":"\\n<p>\\n<strong>True</strong> to serialize read only types; otherwise <strong>false</strong>.</p>\\n"},{"pos":[12761,12786],"content":"UseSimpleDictionaryFormat","needQuote":true,"nodes":[{"content":"UseSimpleDictionaryFormat","pos":[0,25]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;True&lt;/strong&gt; to use a simple dictionary format; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13659,13763],"source":"\\n<p>\\n<strong>True</strong> to use a simple dictionary format; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[13997,14030],"content":"System.Runtime.Serialization.Json","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization.Json","pos":[0,33]}]},{"pos":[14242,14248],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14408,14418],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14513,14521],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14590,14591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14618,14619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14689,14697],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14766,14767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14794,14795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14978,14992],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15111,15117],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15184,15185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15235,15241],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15301,15302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15385,15391],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15458,15459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15509,15515],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15575,15576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15790,15812],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15960,15966],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16033,16034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16084,16090],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16151,16152]},{"pos":[16207,16213],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16273,16274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16371,16377],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16444,16445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16495,16501],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16562,16563]},{"pos":[16618,16624],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16684,16685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16930,16961],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17127,17142],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17218,17219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17269,17275],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17336,17337]},{"pos":[17392,17398],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17458,17459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17565,17580],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17656,17657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17707,17713],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17774,17775]},{"pos":[17830,17836],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17896,17897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18127,18140],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18241,18252],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18324,18325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18352,18353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18426,18437],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18509,18510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18537,18538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18713,18722],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18815,18822],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18890,18891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18918,18919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18988,18995],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19063,19064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19091,19092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19267,19284],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19393,19408],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19484,19485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19512,19513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19590,19605],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19681,19682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19709,19710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19855,19861],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20044,20058],"content":"DateTimeFormat","needQuote":true,"nodes":[{"content":"DateTimeFormat","pos":[0,14]}]},{"pos":[20269,20297],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[20551,20570],"content":"EmitTypeInformation","needQuote":true,"nodes":[{"content":"EmitTypeInformation","pos":[0,19]}]},{"pos":[20891,20908],"content":"IEnumerable<Type>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Type&gt;","pos":[0,17],"source":"IEnumerable<Type>"}]},{"pos":[21150,21161],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[21246,21247],"content":"<","needQuote":true,"nodes":[]},{"pos":[21295,21299],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[21450,21461],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[21547,21550]},{"pos":[21605,21609],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[21667,21668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21902,21916],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[22135,22146],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[22210,22211],"content":"<","needQuote":true,"nodes":[]},{"pos":[22238,22239],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[22359,22370],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[22435,22438]},{"pos":[22472,22473],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[22500,22501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22704,22730],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[22920,22925],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23067,23073],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23219,23226],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  commentId: T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  id: DataContractJsonSerializerSettings\n  parent: System.Runtime.Serialization.Json\n  children:\n  - System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor\n  - System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat\n  - System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation\n  - System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes\n  - System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph\n  - System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName\n  - System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes\n  - System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat\n  langs:\n  - csharp\n  - vb\n  name: DataContractJsonSerializerSettings\n  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DataContractJsonSerializerSettings\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: \"\\n<p>Specifies <xref href=\\\"System.Runtime.Serialization.Json.DataContractJsonSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> settings.</p>\\n\"\n  syntax:\n    content: public class DataContractJsonSerializerSettings\n    content.vb: Public Class DataContractJsonSerializerSettings\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: DataContractJsonSerializerSettings\n- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor\n  commentId: M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: DataContractJsonSerializerSettings()\n  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DataContractJsonSerializerSettings()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 42\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public DataContractJsonSerializerSettings()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractJsonSerializerSettings.DataContractJsonSerializerSettings()\n- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat\n  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat\n  id: DateTimeFormat\n  parent: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: DateTimeFormat\n  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DateTimeFormat\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 43\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: \"\\n<p>Gets or sets a DateTimeFormat that defines the culturally appropriate format of displaying dates and times.</p>\\n\"\n  syntax:\n    content: public DateTimeFormat DateTimeFormat { get; set; }\n    content.vb: Public Property DateTimeFormat As DateTimeFormat\n    parameters: []\n    return:\n      type: System.Runtime.Serialization.DateTimeFormat\n      description: \"\\n<p>The DateTimeFormat that defines the culturally appropriate format of displaying dates and times.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractJsonSerializerSettings.DateTimeFormat\n- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation\n  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation\n  id: EmitTypeInformation\n  parent: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: EmitTypeInformation\n  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EmitTypeInformation\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 44\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: \"\\n<p>Gets or sets the data contract JSON serializer settings to emit type information.</p>\\n\"\n  syntax:\n    content: public EmitTypeInformation EmitTypeInformation { get; set; }\n    content.vb: Public Property EmitTypeInformation As EmitTypeInformation\n    parameters: []\n    return:\n      type: System.Runtime.Serialization.EmitTypeInformation\n      description: \"\\n<p>The data contract JSON serializer settings to emit type information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractJsonSerializerSettings.EmitTypeInformation\n- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes\n  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes\n  id: KnownTypes\n  parent: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: KnownTypes\n  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KnownTypes\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 45\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: \"\\n<p>Gets or sets a collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.</p>\\n\"\n  syntax:\n    content: public IEnumerable<Type> KnownTypes { get; set; }\n    content.vb: Public Property KnownTypes As IEnumerable(Of Type)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: \"\\n<p>A collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractJsonSerializerSettings.KnownTypes\n- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph\n  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph\n  id: MaxItemsInObjectGraph\n  parent: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: MaxItemsInObjectGraph\n  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxItemsInObjectGraph\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 46\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: \"\\n<p>Gets or sets the maximum number of items in an object graph to serialize or deserialize.</p>\\n\"\n  syntax:\n    content: public int MaxItemsInObjectGraph { get; set; }\n    content.vb: Public Property MaxItemsInObjectGraph As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum number of items in an object graph to serialize or deserialize.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractJsonSerializerSettings.MaxItemsInObjectGraph\n- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName\n  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName\n  id: RootName\n  parent: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: RootName\n  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RootName\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 47\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: \"\\n<p>Gets or sets the root name of the selected object.</p>\\n\"\n  syntax:\n    content: public string RootName { get; set; }\n    content.vb: Public Property RootName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The root name of the selected object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractJsonSerializerSettings.RootName\n- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes\n  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes\n  id: SerializeReadOnlyTypes\n  parent: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: SerializeReadOnlyTypes\n  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SerializeReadOnlyTypes\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 48\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: \"\\n<p>Gets or sets a value that specifies whether to serialize read only types.</p>\\n\"\n  syntax:\n    content: public bool SerializeReadOnlyTypes { get; set; }\n    content.vb: Public Property SerializeReadOnlyTypes As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>True</strong> to serialize read only types; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractJsonSerializerSettings.SerializeReadOnlyTypes\n- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat\n  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat\n  id: UseSimpleDictionaryFormat\n  parent: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: UseSimpleDictionaryFormat\n  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UseSimpleDictionaryFormat\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 49\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: \"\\n<p>Gets or sets a value that specifies whether to use a simple dictionary format.</p>\\n\"\n  syntax:\n    content: public bool UseSimpleDictionaryFormat { get; set; }\n    content.vb: Public Property UseSimpleDictionaryFormat As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>True</strong> to use a simple dictionary format; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractJsonSerializerSettings.UseSimpleDictionaryFormat\nreferences:\n- uid: System.Runtime.Serialization.Json\n  isExternal: false\n  name: System.Runtime.Serialization.Json\n  fullName: System.Runtime.Serialization.Json\n  commentId: N:System.Runtime.Serialization.Json\n  nameWithType: System.Runtime.Serialization.Json\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.Serialization.DateTimeFormat\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: DateTimeFormat\n  fullName: System.Runtime.Serialization.DateTimeFormat\n  commentId: T:System.Runtime.Serialization.DateTimeFormat\n  nameWithType: DateTimeFormat\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n- uid: System.Runtime.Serialization.EmitTypeInformation\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: EmitTypeInformation\n  fullName: System.Runtime.Serialization.EmitTypeInformation\n  commentId: T:System.Runtime.Serialization.EmitTypeInformation\n  nameWithType: EmitTypeInformation\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)\n  name.vb: IEnumerable(Of Type)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Type}\n  nameWithType: IEnumerable<Type>\n  nameWithType.vb: IEnumerable(Of Type)\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n"}