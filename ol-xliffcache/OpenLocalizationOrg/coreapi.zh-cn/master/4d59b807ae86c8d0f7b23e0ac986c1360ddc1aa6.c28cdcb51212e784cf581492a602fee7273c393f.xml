{"nodes":[{"pos":[1256,1264],"content":"DbColumn","needQuote":true,"nodes":[{"content":"DbColumn","pos":[0,8]}]},{"pos":[2408,2419],"content":"AllowDBNull","needQuote":true,"nodes":[{"content":"AllowDBNull","pos":[0,11]}]},{"pos":[3382,3397],"content":"BaseCatalogName","needQuote":true,"nodes":[{"content":"BaseCatalogName","pos":[0,15]}]},{"pos":[4357,4371],"content":"BaseColumnName","needQuote":true,"nodes":[{"content":"BaseColumnName","pos":[0,14]}]},{"pos":[5326,5340],"content":"BaseSchemaName","needQuote":true,"nodes":[{"content":"BaseSchemaName","pos":[0,14]}]},{"pos":[6295,6309],"content":"BaseServerName","needQuote":true,"nodes":[{"content":"BaseServerName","pos":[0,14]}]},{"pos":[7261,7274],"content":"BaseTableName","needQuote":true,"nodes":[{"content":"BaseTableName","pos":[0,13]}]},{"pos":[8212,8222],"content":"ColumnName","needQuote":true,"nodes":[{"content":"ColumnName","pos":[0,10]}]},{"pos":[9154,9167],"content":"ColumnOrdinal","needQuote":true,"nodes":[{"content":"ColumnOrdinal","pos":[0,13]}]},{"pos":[10122,10132],"content":"ColumnSize","needQuote":true,"nodes":[{"content":"ColumnSize","pos":[0,10]}]},{"pos":[11069,11078],"content":"IsAliased","needQuote":true,"nodes":[{"content":"IsAliased","pos":[0,9]}]},{"pos":[12031,12046],"content":"IsAutoIncrement","needQuote":true,"nodes":[{"content":"IsAutoIncrement","pos":[0,15]}]},{"pos":[13020,13032],"content":"IsExpression","needQuote":true,"nodes":[{"content":"IsExpression","pos":[0,12]}]},{"pos":[13979,13987],"content":"IsHidden","needQuote":true,"nodes":[{"content":"IsHidden","pos":[0,8]}]},{"pos":[14920,14930],"content":"IsIdentity","needQuote":true,"nodes":[{"content":"IsIdentity","pos":[0,10]}]},{"pos":[15858,15863],"content":"IsKey","needQuote":true,"nodes":[{"content":"IsKey","pos":[0,5]}]},{"pos":[16769,16775],"content":"IsLong","needQuote":true,"nodes":[{"content":"IsLong","pos":[0,6]}]},{"pos":[17698,17708],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[18645,18653],"content":"IsUnique","needQuote":true,"nodes":[{"content":"IsUnique","pos":[0,8]}]},{"pos":[19604,19620],"content":"NumericPrecision","needQuote":true,"nodes":[{"content":"NumericPrecision","pos":[0,16]}]},{"pos":[20596,20608],"content":"NumericScale","needQuote":true,"nodes":[{"content":"NumericScale","pos":[0,12]}]},{"pos":[21600,21624],"content":"UdtAssemblyQualifiedName","needQuote":true,"nodes":[{"content":"UdtAssemblyQualifiedName","pos":[0,24]}]},{"pos":[22611,22619],"content":"DataType","needQuote":true,"nodes":[{"content":"DataType","pos":[0,8]}]},{"pos":[23532,23544],"content":"DataTypeName","needQuote":true,"nodes":[{"content":"DataTypeName","pos":[0,12]}]},{"pos":[24504,24516],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"pos":[25528,25546],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[25713,25719],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25879,25889],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[26018,26026],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26129,26130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26177,26178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26268,26276],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26379,26380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26427,26428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26597,26611],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[26768,26774],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26873,26874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26944,26950],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27035,27036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27139,27145],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27244,27245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27315,27321],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27406,27407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27603,27625],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[27819,27825],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27924,27925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27995,28001],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28087,28088]},{"pos":[28166,28172],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28257,28258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28375,28381],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28480,28481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28551,28557],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28643,28644]},{"pos":[28722,28728],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28813,28814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29033,29064],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[29285,29300],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29417,29418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29488,29494],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29580,29581]},{"pos":[29659,29665],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29750,29751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29877,29892],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[30009,30010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30080,30086],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30172,30173]},{"pos":[30251,30257],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30342,30343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30538,30551],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[30689,30700],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30809,30810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30857,30858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30951,30962],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[31071,31072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31119,31120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31278,31287],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[31413,31420],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[31521,31522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31569,31570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31659,31666],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[31767,31768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31815,31816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31978,31995],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[32145,32160],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32277,32278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32325,32326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32423,32438],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32555,32556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32603,32604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32728,32734],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[32895,32912],"content":"Nullable<Boolean>","needQuote":true,"nodes":[{"content":"Nullable&lt;Boolean&gt;","pos":[0,17],"source":"Nullable<Boolean>"}]},{"pos":[33165,33173],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[33262,33263],"content":"<","needQuote":true,"nodes":[]},{"pos":[33334,33341],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33520,33528],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[33618,33621]},{"pos":[33704,33711],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33798,33799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33953,33964],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[34173,34181],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[34249,34250],"content":"<","needQuote":true,"nodes":[]},{"pos":[34297,34298],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34437,34445],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[34514,34517]},{"pos":[34576,34577],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34624,34625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34761,34767],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34940,34955],"content":"Nullable<Int32>","needQuote":true,"nodes":[{"content":"Nullable&lt;Int32&gt;","pos":[0,15],"source":"Nullable<Int32>"}]},{"pos":[35198,35206],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[35295,35296],"content":"<","needQuote":true,"nodes":[]},{"pos":[35365,35370],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35545,35553],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[35643,35646]},{"pos":[35727,35732],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35815,35816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35962,35966],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"items:\n- uid: System.Data.Common.DbColumn\n  commentId: T:System.Data.Common.DbColumn\n  id: DbColumn\n  parent: System.Data.Common\n  children:\n  - System.Data.Common.DbColumn.AllowDBNull\n  - System.Data.Common.DbColumn.BaseCatalogName\n  - System.Data.Common.DbColumn.BaseColumnName\n  - System.Data.Common.DbColumn.BaseSchemaName\n  - System.Data.Common.DbColumn.BaseServerName\n  - System.Data.Common.DbColumn.BaseTableName\n  - System.Data.Common.DbColumn.ColumnName\n  - System.Data.Common.DbColumn.ColumnOrdinal\n  - System.Data.Common.DbColumn.ColumnSize\n  - System.Data.Common.DbColumn.DataType\n  - System.Data.Common.DbColumn.DataTypeName\n  - System.Data.Common.DbColumn.IsAliased\n  - System.Data.Common.DbColumn.IsAutoIncrement\n  - System.Data.Common.DbColumn.IsExpression\n  - System.Data.Common.DbColumn.IsHidden\n  - System.Data.Common.DbColumn.IsIdentity\n  - System.Data.Common.DbColumn.IsKey\n  - System.Data.Common.DbColumn.IsLong\n  - System.Data.Common.DbColumn.IsReadOnly\n  - System.Data.Common.DbColumn.IsUnique\n  - System.Data.Common.DbColumn.Item(System.String)\n  - System.Data.Common.DbColumn.NumericPrecision\n  - System.Data.Common.DbColumn.NumericScale\n  - System.Data.Common.DbColumn.UdtAssemblyQualifiedName\n  langs:\n  - csharp\n  - vb\n  name: DbColumn\n  nameWithType: DbColumn\n  fullName: System.Data.Common.DbColumn\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbColumn\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 8\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public abstract class DbColumn\n    content.vb: Public MustInherit Class DbColumn\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n- uid: System.Data.Common.DbColumn.AllowDBNull\n  commentId: P:System.Data.Common.DbColumn.AllowDBNull\n  id: AllowDBNull\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: AllowDBNull\n  nameWithType: DbColumn.AllowDBNull\n  fullName: System.Data.Common.DbColumn.AllowDBNull\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AllowDBNull\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 10\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? AllowDBNull { get; protected set; }\n    content.vb: Public Property AllowDBNull As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.BaseCatalogName\n  commentId: P:System.Data.Common.DbColumn.BaseCatalogName\n  id: BaseCatalogName\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: BaseCatalogName\n  nameWithType: DbColumn.BaseCatalogName\n  fullName: System.Data.Common.DbColumn.BaseCatalogName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseCatalogName\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 11\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public string BaseCatalogName { get; protected set; }\n    content.vb: Public Property BaseCatalogName As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.BaseColumnName\n  commentId: P:System.Data.Common.DbColumn.BaseColumnName\n  id: BaseColumnName\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: BaseColumnName\n  nameWithType: DbColumn.BaseColumnName\n  fullName: System.Data.Common.DbColumn.BaseColumnName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseColumnName\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 12\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public string BaseColumnName { get; protected set; }\n    content.vb: Public Property BaseColumnName As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.BaseSchemaName\n  commentId: P:System.Data.Common.DbColumn.BaseSchemaName\n  id: BaseSchemaName\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: BaseSchemaName\n  nameWithType: DbColumn.BaseSchemaName\n  fullName: System.Data.Common.DbColumn.BaseSchemaName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseSchemaName\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 13\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public string BaseSchemaName { get; protected set; }\n    content.vb: Public Property BaseSchemaName As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.BaseServerName\n  commentId: P:System.Data.Common.DbColumn.BaseServerName\n  id: BaseServerName\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: BaseServerName\n  nameWithType: DbColumn.BaseServerName\n  fullName: System.Data.Common.DbColumn.BaseServerName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseServerName\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 14\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public string BaseServerName { get; protected set; }\n    content.vb: Public Property BaseServerName As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.BaseTableName\n  commentId: P:System.Data.Common.DbColumn.BaseTableName\n  id: BaseTableName\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: BaseTableName\n  nameWithType: DbColumn.BaseTableName\n  fullName: System.Data.Common.DbColumn.BaseTableName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseTableName\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 15\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public string BaseTableName { get; protected set; }\n    content.vb: Public Property BaseTableName As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.ColumnName\n  commentId: P:System.Data.Common.DbColumn.ColumnName\n  id: ColumnName\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: ColumnName\n  nameWithType: DbColumn.ColumnName\n  fullName: System.Data.Common.DbColumn.ColumnName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ColumnName\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 16\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public string ColumnName { get; protected set; }\n    content.vb: Public Property ColumnName As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.ColumnOrdinal\n  commentId: P:System.Data.Common.DbColumn.ColumnOrdinal\n  id: ColumnOrdinal\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: ColumnOrdinal\n  nameWithType: DbColumn.ColumnOrdinal\n  fullName: System.Data.Common.DbColumn.ColumnOrdinal\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ColumnOrdinal\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 17\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public int ? ColumnOrdinal { get; protected set; }\n    content.vb: Public Property ColumnOrdinal As Integer?\n    parameters: []\n    return:\n      type: System.Nullable{System.Int32}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.ColumnSize\n  commentId: P:System.Data.Common.DbColumn.ColumnSize\n  id: ColumnSize\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: ColumnSize\n  nameWithType: DbColumn.ColumnSize\n  fullName: System.Data.Common.DbColumn.ColumnSize\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ColumnSize\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 18\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public int ? ColumnSize { get; protected set; }\n    content.vb: Public Property ColumnSize As Integer?\n    parameters: []\n    return:\n      type: System.Nullable{System.Int32}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.IsAliased\n  commentId: P:System.Data.Common.DbColumn.IsAliased\n  id: IsAliased\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: IsAliased\n  nameWithType: DbColumn.IsAliased\n  fullName: System.Data.Common.DbColumn.IsAliased\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsAliased\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 19\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? IsAliased { get; protected set; }\n    content.vb: Public Property IsAliased As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.IsAutoIncrement\n  commentId: P:System.Data.Common.DbColumn.IsAutoIncrement\n  id: IsAutoIncrement\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: IsAutoIncrement\n  nameWithType: DbColumn.IsAutoIncrement\n  fullName: System.Data.Common.DbColumn.IsAutoIncrement\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsAutoIncrement\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 20\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? IsAutoIncrement { get; protected set; }\n    content.vb: Public Property IsAutoIncrement As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.IsExpression\n  commentId: P:System.Data.Common.DbColumn.IsExpression\n  id: IsExpression\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: IsExpression\n  nameWithType: DbColumn.IsExpression\n  fullName: System.Data.Common.DbColumn.IsExpression\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsExpression\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 21\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? IsExpression { get; protected set; }\n    content.vb: Public Property IsExpression As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.IsHidden\n  commentId: P:System.Data.Common.DbColumn.IsHidden\n  id: IsHidden\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: IsHidden\n  nameWithType: DbColumn.IsHidden\n  fullName: System.Data.Common.DbColumn.IsHidden\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsHidden\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 22\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? IsHidden { get; protected set; }\n    content.vb: Public Property IsHidden As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.IsIdentity\n  commentId: P:System.Data.Common.DbColumn.IsIdentity\n  id: IsIdentity\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: IsIdentity\n  nameWithType: DbColumn.IsIdentity\n  fullName: System.Data.Common.DbColumn.IsIdentity\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsIdentity\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 23\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? IsIdentity { get; protected set; }\n    content.vb: Public Property IsIdentity As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.IsKey\n  commentId: P:System.Data.Common.DbColumn.IsKey\n  id: IsKey\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: IsKey\n  nameWithType: DbColumn.IsKey\n  fullName: System.Data.Common.DbColumn.IsKey\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsKey\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 24\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? IsKey { get; protected set; }\n    content.vb: Public Property IsKey As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.IsLong\n  commentId: P:System.Data.Common.DbColumn.IsLong\n  id: IsLong\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: IsLong\n  nameWithType: DbColumn.IsLong\n  fullName: System.Data.Common.DbColumn.IsLong\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsLong\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 25\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? IsLong { get; protected set; }\n    content.vb: Public Property IsLong As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.IsReadOnly\n  commentId: P:System.Data.Common.DbColumn.IsReadOnly\n  id: IsReadOnly\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: IsReadOnly\n  nameWithType: DbColumn.IsReadOnly\n  fullName: System.Data.Common.DbColumn.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsReadOnly\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 26\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? IsReadOnly { get; protected set; }\n    content.vb: Public Property IsReadOnly As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.IsUnique\n  commentId: P:System.Data.Common.DbColumn.IsUnique\n  id: IsUnique\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: IsUnique\n  nameWithType: DbColumn.IsUnique\n  fullName: System.Data.Common.DbColumn.IsUnique\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsUnique\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 27\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public bool ? IsUnique { get; protected set; }\n    content.vb: Public Property IsUnique As Boolean?\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.NumericPrecision\n  commentId: P:System.Data.Common.DbColumn.NumericPrecision\n  id: NumericPrecision\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: NumericPrecision\n  nameWithType: DbColumn.NumericPrecision\n  fullName: System.Data.Common.DbColumn.NumericPrecision\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NumericPrecision\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 28\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public int ? NumericPrecision { get; protected set; }\n    content.vb: Public Property NumericPrecision As Integer?\n    parameters: []\n    return:\n      type: System.Nullable{System.Int32}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.NumericScale\n  commentId: P:System.Data.Common.DbColumn.NumericScale\n  id: NumericScale\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: NumericScale\n  nameWithType: DbColumn.NumericScale\n  fullName: System.Data.Common.DbColumn.NumericScale\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NumericScale\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 29\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public int ? NumericScale { get; protected set; }\n    content.vb: Public Property NumericScale As Integer?\n    parameters: []\n    return:\n      type: System.Nullable{System.Int32}\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.UdtAssemblyQualifiedName\n  commentId: P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName\n  id: UdtAssemblyQualifiedName\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: UdtAssemblyQualifiedName\n  nameWithType: DbColumn.UdtAssemblyQualifiedName\n  fullName: System.Data.Common.DbColumn.UdtAssemblyQualifiedName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UdtAssemblyQualifiedName\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 30\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public string UdtAssemblyQualifiedName { get; protected set; }\n    content.vb: Public Property UdtAssemblyQualifiedName As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.DataType\n  commentId: P:System.Data.Common.DbColumn.DataType\n  id: DataType\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: DataType\n  nameWithType: DbColumn.DataType\n  fullName: System.Data.Common.DbColumn.DataType\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DataType\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 31\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public Type DataType { get; protected set; }\n    content.vb: Public Property DataType As Type\n    parameters: []\n    return:\n      type: System.Type\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.DataTypeName\n  commentId: P:System.Data.Common.DbColumn.DataTypeName\n  id: DataTypeName\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: DataTypeName\n  nameWithType: DbColumn.DataTypeName\n  fullName: System.Data.Common.DbColumn.DataTypeName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DataTypeName\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 32\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public string DataTypeName { get; protected set; }\n    content.vb: Public Property DataTypeName As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - get\n  - protected set\n  modifiers.vb:\n  - Public\n  - Get\n  - Protected Set\n- uid: System.Data.Common.DbColumn.Item(System.String)\n  commentId: P:System.Data.Common.DbColumn.Item(System.String)\n  id: Item(System.String)\n  parent: System.Data.Common.DbColumn\n  langs:\n  - csharp\n  - vb\n  name: Item[String]\n  nameWithType: DbColumn.Item[String]\n  fullName: System.Data.Common.DbColumn.Item[System.String]\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Data.Common/src/System/Data/Common/DbColumn.cs\n    startLine: 33\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: public virtual object this[string property] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(property As String) As Object\n    parameters:\n    - id: property\n      type: System.String\n    return:\n      type: System.Object\n  nameWithType.vb: DbColumn.Item(String)\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: System.Data.Common.DbColumn.Item(System.String)\n  name.vb: Item(String)\nreferences:\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  nameWithType: System.Data.Common\n  fullName: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n  commentId: N:System\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  nameWithType.vb: Nullable(Of Boolean)\n  fullname.vb: System.Nullable(Of System.Boolean)\n  name.vb: Nullable(Of Boolean)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Nullable{System.Boolean}\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Nullable`1\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n  commentId: T:System.String\n- uid: System.Nullable{System.Int32}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  nameWithType.vb: Nullable(Of Int32)\n  fullname.vb: System.Nullable(Of System.Int32)\n  name.vb: Nullable(Of Int32)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Nullable{System.Int32}\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n  commentId: T:System.Type\n"}