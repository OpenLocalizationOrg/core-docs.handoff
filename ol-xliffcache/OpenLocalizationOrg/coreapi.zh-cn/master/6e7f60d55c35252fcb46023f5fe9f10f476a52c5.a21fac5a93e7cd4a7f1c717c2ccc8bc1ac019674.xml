{"nodes":[{"pos":[912,935],"content":"TextWriterTraceListener","needQuote":true,"nodes":[{"content":"TextWriterTraceListener","pos":[0,23]}]},{"pos":[3035,3060],"content":"TextWriterTraceListener()","needQuote":true,"nodes":[{"content":"TextWriterTraceListener()","pos":[0,25]}]},{"pos":[5184,5215],"content":"TextWriterTraceListener(Stream)","needQuote":true,"nodes":[{"content":"TextWriterTraceListener(Stream)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The stream is &lt;strong&gt;null&lt;/strong&gt;.","pos":[6559,6600],"source":"\\n<p>The stream is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[6601,6607],"source":" </p>\\n"},{"pos":[7881,7920],"content":"TextWriterTraceListener(Stream, String)","needQuote":true,"nodes":[{"content":"TextWriterTraceListener(Stream, String)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The name of the new instance.","pos":[9276,9310],"source":"\\n<p>The name of the new instance."},{"content":"&lt;/p&gt;\\n","pos":[9311,9317],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The stream is &lt;strong&gt;null&lt;/strong&gt;.","pos":[9436,9477],"source":"\\n<p>The stream is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[9478,9484],"source":" </p>\\n"},{"pos":[10736,10771],"content":"TextWriterTraceListener(TextWriter)","needQuote":true,"nodes":[{"content":"TextWriterTraceListener(TextWriter)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The writer is &lt;strong&gt;null&lt;/strong&gt;.","pos":[12132,12173],"source":"\\n<p>The writer is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12174,12180],"source":" </p>\\n"},{"pos":[13470,13513],"content":"TextWriterTraceListener(TextWriter, String)","needQuote":true,"nodes":[{"content":"TextWriterTraceListener(TextWriter, String)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The name of the new instance.","pos":[14887,14921],"source":"\\n<p>The name of the new instance."},{"content":"&lt;/p&gt;\\n","pos":[14922,14928],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The writer is &lt;strong&gt;null&lt;/strong&gt;.","pos":[15047,15088],"source":"\\n<p>The writer is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[15089,15095],"source":" </p>\\n"},{"pos":[16286,16292],"content":"Writer","needQuote":true,"nodes":[{"content":"Writer","pos":[0,6]}]},{"pos":[18493,18509],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[20015,20022],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[22021,22034],"content":"Write(String)","needQuote":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A message to write.","pos":[22939,22963],"source":"\\n<p>A message to write."},{"content":"&lt;/p&gt;\\n","pos":[22964,22970],"source":" </p>\\n"},{"pos":[24212,24229],"content":"WriteLine(String)","needQuote":true,"nodes":[{"content":"WriteLine(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A message to write.","pos":[25263,25287],"source":"\\n<p>A message to write."},{"content":"&lt;/p&gt;\\n","pos":[25288,25294],"source":" </p>\\n"},{"pos":[26329,26347],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[26514,26520],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26641,26647],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[26784,26790],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[26920,26929],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[27069,27075],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27230,27240],"content":"TextWriter","needQuote":true,"nodes":[{"content":"TextWriter","pos":[0,10]}]},{"pos":[27404,27411],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27557,27578],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Diagnostics.TextWriterTraceListener\n  commentId: T:System.Diagnostics.TextWriterTraceListener\n  id: TextWriterTraceListener\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.TextWriterTraceListener.#ctor\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  - System.Diagnostics.TextWriterTraceListener.Flush\n  - System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  - System.Diagnostics.TextWriterTraceListener.Writer\n  langs:\n  - csharp\n  - vb\n  name: TextWriterTraceListener\n  fullName: System.Diagnostics.TextWriterTraceListener\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TextWriterTraceListener\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 16\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Directs tracing or debugging output to a <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or to a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, such as <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: 'public class TextWriterTraceListener : TraceListener'\n    content.vb: >-\n      Public Class TextWriterTraceListener\n          Inherits TraceListener\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  inheritance:\n  - System.Object\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: TextWriterTraceListener\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: TextWriterTraceListener()\n  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 25\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> as the output recipient.</p>\\n\"\n  syntax:\n    content: public TextWriterTraceListener()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener()\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: TextWriterTraceListener(Stream)\n  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(System.IO.Stream)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 33\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, using the stream as the recipient of the debugging and tracing output.</p>\\n\"\n  syntax:\n    content: public TextWriterTraceListener(Stream stream)\n    content.vb: Public Sub New(stream As Stream)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the stream the <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> writes to. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The stream is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  id: '#ctor(System.IO.Stream,System.String)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: TextWriterTraceListener(Stream, String)\n  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(System.IO.Stream, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 42\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified name, using the stream as the recipient of the debugging and tracing output.</p>\\n\"\n  syntax:\n    content: public TextWriterTraceListener(Stream stream, string name)\n    content.vb: Public Sub New(stream As Stream, name As String)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the stream the <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> writes to. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the new instance. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The stream is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream, String)\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)\n  id: '#ctor(System.IO.TextWriter)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: TextWriterTraceListener(TextWriter)\n  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(System.IO.TextWriter)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 53\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified writer as recipient of the tracing or debugging output.</p>\\n\"\n  syntax:\n    content: public TextWriterTraceListener(TextWriter writer)\n    content.vb: Public Sub New(writer As TextWriter)\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that receives the output from the <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The writer is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  id: '#ctor(System.IO.TextWriter,System.String)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: TextWriterTraceListener(TextWriter, String)\n  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(System.IO.TextWriter, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 64\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</p>\\n\"\n  syntax:\n    content: public TextWriterTraceListener(TextWriter writer, string name)\n    content.vb: Public Sub New(writer As TextWriter, name As String)\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that receives the output from the <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the new instance. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The writer is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter, String)\n- uid: System.Diagnostics.TextWriterTraceListener.Writer\n  commentId: P:System.Diagnostics.TextWriterTraceListener.Writer\n  id: Writer\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: Writer\n  fullName: System.Diagnostics.TextWriterTraceListener.Writer\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Writer\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 75\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the text writer that receives the tracing or debugging output.</p>\\n\"\n  syntax:\n    content: public TextWriter Writer { get; set; }\n    content.vb: Public Property Writer As TextWriter\n    parameters: []\n    return:\n      type: System.IO.TextWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the writer that receives the tracing or debugging output.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: TextWriterTraceListener.Writer\n- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 91\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Disposes this <xref href=\\\"System.Diagnostics.TextWriterTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release managed resources; if <strong>false</strong>, <xref href=\\\"System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has no effect.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: TextWriterTraceListener.Dispose(Boolean)\n- uid: System.Diagnostics.TextWriterTraceListener.Flush\n  commentId: M:System.Diagnostics.TextWriterTraceListener.Flush\n  id: Flush\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.Diagnostics.TextWriterTraceListener.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Flush\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 109\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Flushes the output buffer for the <xref href=\\\"System.Diagnostics.TextWriterTraceListener.Writer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void Flush()\n    content.vb: Public Overrides Sub Flush\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TextWriterTraceListener.Flush()\n- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  id: Write(System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: Write(String)\n  fullName: System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 123\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Writes a message to this instance's <xref href=\\\"System.Diagnostics.TextWriterTraceListener.Writer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void Write(string message)\n    content.vb: Public Overrides Sub Write(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A message to write. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TextWriterTraceListener.Write(String)\n- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  id: WriteLine(System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(String)\n  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Diagnostics.TextWriterTraceListener/src/System/Diagnostics/TextWriterTraceListener.cs\n    startLine: 141\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Writes a message to this instance's <xref href=\\\"System.Diagnostics.TextWriterTraceListener.Writer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> followed by a line terminator. The default line terminator is a carriage return followed by a line feed (\\\\r\\\\n).</p>\\n\"\n  syntax:\n    content: public override void WriteLine(string message)\n    content.vb: Public Overrides Sub WriteLine(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A message to write. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.EventLogTraceListener\n    commentId: T:System.Diagnostics.EventLogTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TextWriterTraceListener.WriteLine(String)\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  nameWithType: Stream\n  commentId: T:System.IO.Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  fullName: System.IO.TextWriter\n  nameWithType: TextWriter\n  commentId: T:System.IO.TextWriter\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}