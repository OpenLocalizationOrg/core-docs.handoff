{"nodes":[{"pos":[507,528],"content":"TextElementEnumerator","needQuote":true,"nodes":[{"content":"TextElementEnumerator","pos":[0,21]}]},{"pos":[2117,2124],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"content":"\\n&lt;p&gt;An object containing the current text element in the string.&lt;/p&gt;\\n","pos":[2813,2884],"source":"\\n<p>An object containing the current text element in the string.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator is positioned before the first text element of the string or after the last text element.","pos":[3011,3120],"source":"\\n<p>The enumerator is positioned before the first text element of the string or after the last text element."},{"content":"&lt;/p&gt;\\n","pos":[3121,3127],"source":" </p>\\n"},{"pos":[4101,4113],"content":"ElementIndex","needQuote":true,"nodes":[{"content":"ElementIndex","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The index of the text element that the enumerator is currently positioned over.&lt;/p&gt;\\n","pos":[4859,4949],"source":"\\n<p>The index of the text element that the enumerator is currently positioned over.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator is positioned before the first text element of the string or after the last text element.","pos":[5076,5185],"source":"\\n<p>The enumerator is positioned before the first text element of the string or after the last text element."},{"content":"&lt;/p&gt;\\n","pos":[5186,5192],"source":" </p>\\n"},{"pos":[5854,5870],"content":"GetTextElement()","needQuote":true,"nodes":[{"content":"GetTextElement()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A new string containing the current text element in the string being read.&lt;/p&gt;\\n","pos":[6552,6637],"source":"\\n<p>A new string containing the current text element in the string being read.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator is positioned before the first text element of the string or after the last text element.","pos":[6764,6873],"source":"\\n<p>The enumerator is positioned before the first text element of the string or after the last text element."},{"content":"&lt;/p&gt;\\n","pos":[6874,6880],"source":" </p>\\n"},{"pos":[7503,7513],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the enumerator was successfully advanced to the next text element; &lt;strong&gt;false&lt;/strong&gt; if the enumerator has passed the end of the string.&lt;/p&gt;\\n","pos":[8189,8368],"source":"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next text element; <strong>false</strong> if the enumerator has passed the end of the string.</p>\\n"},{"pos":[9020,9027],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[10150,10170],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[10343,10349],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10523,10534],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[10733,10743],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10838,10846],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10915,10916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10943,10944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11014,11022],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11091,11092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11119,11120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11303,11317],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11436,11442],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11509,11510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11560,11566],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11626,11627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11710,11716],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11783,11784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11834,11840],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11900,11901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12115,12137],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12285,12291],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12358,12359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12409,12415],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12476,12477]},{"pos":[12532,12538],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12598,12599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12696,12702],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12769,12770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12820,12826],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12887,12888]},{"pos":[12943,12949],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13009,13010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13255,13286],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13452,13467],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13543,13544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13594,13600],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13661,13662]},{"pos":[13717,13723],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13783,13784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13890,13905],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13981,13982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14032,14038],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14099,14100]},{"pos":[14155,14161],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14221,14222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14452,14465],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14566,14577],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14649,14650],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14677,14678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14751,14762],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14834,14835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14862,14863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15038,15047],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15140,15147],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15215,15216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15243,15244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15313,15320],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15388,15389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15416,15417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15592,15609],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15718,15733],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15809,15810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15837,15838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15915,15930],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16006,16007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16034,16035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16180,16186],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16305,16323],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[16539,16546],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[16753,16758],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16900,16906],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[17101,17111],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[17240,17248],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[17313,17314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17341,17342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17429,17437],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[17502,17503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17530,17531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17709,17716],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17911,17918],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[18041,18046],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[18108,18109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18136,18137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18221,18226],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[18288,18289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18316,18317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18507,18532],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Globalization.TextElementEnumerator\n  commentId: T:System.Globalization.TextElementEnumerator\n  id: TextElementEnumerator\n  parent: System.Globalization\n  children:\n  - System.Globalization.TextElementEnumerator.Current\n  - System.Globalization.TextElementEnumerator.ElementIndex\n  - System.Globalization.TextElementEnumerator.GetTextElement\n  - System.Globalization.TextElementEnumerator.MoveNext\n  - System.Globalization.TextElementEnumerator.Reset\n  langs:\n  - csharp\n  - vb\n  name: TextElementEnumerator\n  fullName: System.Globalization.TextElementEnumerator\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TextElementEnumerator\n    path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n    startLine: 23\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Enumerates the text elements of a string. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class TextElementEnumerator : IEnumerator\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class TextElementEnumerator\n          Implements IEnumerator\n  seealso:\n  - type: System.Globalization.StringInfo\n    commentId: T:System.Globalization.StringInfo\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerator\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: TextElementEnumerator\n- uid: System.Globalization.TextElementEnumerator.Current\n  commentId: P:System.Globalization.TextElementEnumerator.Current\n  id: Current\n  parent: System.Globalization.TextElementEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Globalization.TextElementEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Current\n    path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n    startLine: 106\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the current text element in the string.</p>\\n\"\n  syntax:\n    content: public object Current { get; }\n    content.vb: Public ReadOnly Property Current As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An object containing the current text element in the string.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator is positioned before the first text element of the string or after the last text element. </p>\\n\"\n  seealso:\n  - type: System.Globalization.TextElementEnumerator.GetTextElement\n    commentId: M:System.Globalization.TextElementEnumerator.GetTextElement\n  - type: System.Globalization.TextElementEnumerator.ElementIndex\n    commentId: P:System.Globalization.TextElementEnumerator.ElementIndex\n  - type: System.Globalization.TextElementEnumerator.MoveNext\n    commentId: M:System.Globalization.TextElementEnumerator.MoveNext\n  - type: System.Globalization.TextElementEnumerator.Reset\n    commentId: M:System.Globalization.TextElementEnumerator.Reset\n  implements:\n  - System.Collections.IEnumerator.Current\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TextElementEnumerator.Current\n- uid: System.Globalization.TextElementEnumerator.ElementIndex\n  commentId: P:System.Globalization.TextElementEnumerator.ElementIndex\n  id: ElementIndex\n  parent: System.Globalization.TextElementEnumerator\n  langs:\n  - csharp\n  - vb\n  name: ElementIndex\n  fullName: System.Globalization.TextElementEnumerator.ElementIndex\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ElementIndex\n    path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n    startLine: 132\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the index of the text element that the enumerator is currently positioned over.</p>\\n\"\n  syntax:\n    content: public int ElementIndex { get; }\n    content.vb: Public ReadOnly Property ElementIndex As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The index of the text element that the enumerator is currently positioned over.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator is positioned before the first text element of the string or after the last text element. </p>\\n\"\n  seealso:\n  - type: System.Globalization.TextElementEnumerator.Current\n    commentId: P:System.Globalization.TextElementEnumerator.Current\n  - type: System.Globalization.TextElementEnumerator.GetTextElement\n    commentId: M:System.Globalization.TextElementEnumerator.GetTextElement\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TextElementEnumerator.ElementIndex\n- uid: System.Globalization.TextElementEnumerator.GetTextElement\n  commentId: M:System.Globalization.TextElementEnumerator.GetTextElement\n  id: GetTextElement\n  parent: System.Globalization.TextElementEnumerator\n  langs:\n  - csharp\n  - vb\n  name: GetTextElement()\n  fullName: System.Globalization.TextElementEnumerator.GetTextElement()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetTextElement\n    path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n    startLine: 116\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the current text element in the string.</p>\\n\"\n  syntax:\n    content: public string GetTextElement()\n    content.vb: Public Function GetTextElement As String\n    return:\n      type: System.String\n      description: \"\\n<p>A new string containing the current text element in the string being read.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator is positioned before the first text element of the string or after the last text element. </p>\\n\"\n  seealso:\n  - type: System.Globalization.TextElementEnumerator.Current\n    commentId: P:System.Globalization.TextElementEnumerator.Current\n  - type: System.Globalization.TextElementEnumerator.ElementIndex\n    commentId: P:System.Globalization.TextElementEnumerator.ElementIndex\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TextElementEnumerator.GetTextElement()\n- uid: System.Globalization.TextElementEnumerator.MoveNext\n  commentId: M:System.Globalization.TextElementEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Globalization.TextElementEnumerator\n  langs:\n  - csharp\n  - vb\n  name: MoveNext()\n  fullName: System.Globalization.TextElementEnumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MoveNext\n    path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n    startLine: 89\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Advances the enumerator to the next text element of the string.</p>\\n\"\n  syntax:\n    content: public bool MoveNext()\n    content.vb: Public Function MoveNext As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next text element; <strong>false</strong> if the enumerator has passed the end of the string.</p>\\n\"\n  seealso:\n  - type: System.Globalization.TextElementEnumerator.Current\n    commentId: P:System.Globalization.TextElementEnumerator.Current\n  - type: System.Globalization.TextElementEnumerator.Reset\n    commentId: M:System.Globalization.TextElementEnumerator.Reset\n  implements:\n  - System.Collections.IEnumerator.MoveNext\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TextElementEnumerator.MoveNext()\n- uid: System.Globalization.TextElementEnumerator.Reset\n  commentId: M:System.Globalization.TextElementEnumerator.Reset\n  id: Reset\n  parent: System.Globalization.TextElementEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Globalization.TextElementEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Reset\n    path: src/mscorlib/src/System/Globalization/TextElementEnumerator.cs\n    startLine: 145\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Sets the enumerator to its initial position, which is before the first text element in the string.</p>\\n\"\n  syntax:\n    content: public void Reset()\n    content.vb: Public Sub Reset\n  seealso:\n  - type: System.Globalization.TextElementEnumerator.MoveNext\n    commentId: M:System.Globalization.TextElementEnumerator.MoveNext\n  - type: System.Globalization.TextElementEnumerator.Current\n    commentId: P:System.Globalization.TextElementEnumerator.Current\n  implements:\n  - System.Collections.IEnumerator.Reset\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TextElementEnumerator.Reset()\nreferences:\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Collections.IEnumerator.Current\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Current\n  fullName: System.Collections.IEnumerator.Current\n  nameWithType: IEnumerator.Current\n  commentId: P:System.Collections.IEnumerator.Current\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Collections.IEnumerator.MoveNext\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: MoveNext()\n  fullName: System.Collections.IEnumerator.MoveNext()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator.MoveNext()\n  commentId: M:System.Collections.IEnumerator.MoveNext\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.IEnumerator.Reset\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Reset()\n  fullName: System.Collections.IEnumerator.Reset()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator.Reset()\n  commentId: M:System.Collections.IEnumerator.Reset\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}