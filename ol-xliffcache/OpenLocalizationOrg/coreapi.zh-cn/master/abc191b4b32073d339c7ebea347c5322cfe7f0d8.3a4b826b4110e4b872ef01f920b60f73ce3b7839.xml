{"nodes":[{"pos":[565,578],"content":"RecipientInfo","needQuote":true,"nodes":[{"content":"RecipientInfo","pos":[0,13]}]},{"pos":[2793,2805],"content":"EncryptedKey","needQuote":true,"nodes":[{"content":"EncryptedKey","pos":[0,12]}]},{"content":"\\n&lt;p&gt;An array of byte values that contain the encrypted recipient keying material.&lt;/p&gt;\\n","pos":[3747,3835],"source":"\\n<p>An array of byte values that contain the encrypted recipient keying material.</p>\\n"},{"pos":[5168,5190],"content":"KeyEncryptionAlgorithm","needQuote":true,"nodes":[{"content":"KeyEncryptionAlgorithm","pos":[0,22]}]},{"pos":[7562,7581],"content":"RecipientIdentifier","needQuote":true,"nodes":[{"content":"RecipientIdentifier","pos":[0,19]}]},{"pos":[9782,9786],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[12233,12240],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[14805,14838],"content":"System.Security.Cryptography.Pkcs","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.Pkcs","pos":[0,33]}]},{"pos":[15050,15056],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15216,15226],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15321,15329],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15398,15399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15426,15427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15497,15505],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15574,15575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15602,15603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15786,15800],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15919,15925],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15992,15993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16043,16049],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16109,16110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16193,16199],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16266,16267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16317,16323],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16383,16384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16598,16620],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16768,16774],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16841,16842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16892,16898],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16959,16960]},{"pos":[17015,17021],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17081,17082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17179,17185],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17252,17253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17303,17309],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17370,17371]},{"pos":[17426,17432],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17492,17493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17738,17769],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17935,17950],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18026,18027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18077,18083],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18144,18145]},{"pos":[18200,18206],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18266,18267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18373,18388],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18464,18465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18515,18521],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18582,18583]},{"pos":[18638,18644],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18704,18705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18935,18948],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19049,19060],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19132,19133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19160,19161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19234,19245],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19317,19318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19345,19346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19521,19530],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19623,19630],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19698,19699],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19726,19727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19796,19803],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19871,19872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19899,19900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20075,20092],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20201,20216],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20292,20293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20320,20321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20398,20413],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20489,20490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20517,20518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20663,20669],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20763,20769],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[20889,20893],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[20952,20954]},{"pos":[21017,21021],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[21079,21081],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[21281,21300],"content":"AlgorithmIdentifier","needQuote":true,"nodes":[{"content":"AlgorithmIdentifier","pos":[0,19]}]},{"pos":[21603,21620],"content":"SubjectIdentifier","needQuote":true,"nodes":[{"content":"SubjectIdentifier","pos":[0,17]}]},{"pos":[21917,21934],"content":"RecipientInfoType","needQuote":true,"nodes":[{"content":"RecipientInfoType","pos":[0,17]}]},{"pos":[22165,22170],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo\n  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfo\n  id: RecipientInfo\n  parent: System.Security.Cryptography.Pkcs\n  children:\n  - System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  - System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  - System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  - System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  - System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  langs:\n  - csharp\n  - vb\n  name: RecipientInfo\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RecipientInfo\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 180\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class represents information about a CMS/PKCS #7 message recipient. The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class is an abstract class inherited by the <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Security.Cryptography.Pkcs.KeyTransRecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> classes.</p>\\n\"\n  syntax:\n    content: public abstract class RecipientInfo\n    content.vb: Public MustInherit Class RecipientInfo\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n    commentId: T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  - type: System.Security.Cryptography.Pkcs.KeyTransRecipientInfo\n    commentId: T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: RecipientInfo\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  id: EncryptedKey\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: EncryptedKey\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EncryptedKey\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 183\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> abstract property retrieves the encrypted recipient keying material.</p>\\n\"\n  syntax:\n    content: public abstract byte[] EncryptedKey { get; }\n    content.vb: Public MustOverride ReadOnly Property EncryptedKey As Byte()\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>An array of byte values that contain the encrypted recipient keying material.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n    commentId: T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.KeyTransRecipientInfo\n    commentId: T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.Type\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: RecipientInfo.EncryptedKey\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  id: KeyEncryptionAlgorithm\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: KeyEncryptionAlgorithm\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeyEncryptionAlgorithm\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 184\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> abstract property retrieves the algorithm used to perform the key establishment.</p>\\n\"\n  syntax:\n    content: public abstract AlgorithmIdentifier KeyEncryptionAlgorithm { get; }\n    content.vb: Public MustOverride ReadOnly Property KeyEncryptionAlgorithm As AlgorithmIdentifier\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.Pkcs.AlgorithmIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that contains the value of the algorithm used to establish the key between the originator and recipient of the CMS/PKCS #7 message.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.Type\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: RecipientInfo.KeyEncryptionAlgorithm\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  id: RecipientIdentifier\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: RecipientIdentifier\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RecipientIdentifier\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 185\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> abstract property retrieves the identifier of the recipient.</p>\\n\"\n  syntax:\n    content: public abstract SubjectIdentifier RecipientIdentifier { get; }\n    content.vb: Public MustOverride ReadOnly Property RecipientIdentifier As SubjectIdentifier\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.SubjectIdentifier\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that contains the identifier of the recipient.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.Type\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: RecipientInfo.RecipientIdentifier\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  id: Type\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 186\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the type of the recipient. The type of the recipient determines which of two major protocols is used to establish a key between the originator and the recipient of a CMS/PKCS #7 message.</p>\\n\"\n  syntax:\n    content: >-\n      public RecipientInfoType Type\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property Type As RecipientInfoType\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.RecipientInfoType\n      description: \"\\n<p>A value of the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration that defines the type of the recipient.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.RecipientInfoType\n    commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoType\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RecipientInfo.Type\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  id: Version\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: Version\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Version\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 187\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo.Version\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> abstract property retrieves the version of the recipient information. Derived classes automatically set this property for their objects, and the value indicates whether it is using PKCS #7 or Cryptographic Message Syntax (CMS) to protect messages. The version also implies whether the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object establishes a cryptographic key by a key agreement algorithm or a key transport algorithm.</p>\\n\"\n  syntax:\n    content: public abstract int Version { get; }\n    content.vb: Public MustOverride ReadOnly Property Version As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that represents the version of the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.SubjectIdentifier\n    commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifier\n  - type: System.Security.Cryptography.Pkcs.RecipientInfo.Type\n    commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: RecipientInfo.Version\nreferences:\n- uid: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: System.Security.Cryptography.Pkcs\n  fullName: System.Security.Cryptography.Pkcs\n  commentId: N:System.Security.Cryptography.Pkcs\n  nameWithType: System.Security.Cryptography.Pkcs\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: AlgorithmIdentifier\n  fullName: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  commentId: T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  nameWithType: AlgorithmIdentifier\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: SubjectIdentifier\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier\n  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifier\n  nameWithType: SubjectIdentifier\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoType\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: RecipientInfoType\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoType\n  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoType\n  nameWithType: RecipientInfoType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n"}