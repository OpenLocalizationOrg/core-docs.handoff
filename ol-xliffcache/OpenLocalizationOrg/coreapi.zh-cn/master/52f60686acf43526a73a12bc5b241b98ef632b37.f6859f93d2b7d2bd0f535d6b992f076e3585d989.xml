{"nodes":[{"pos":[637,646],"content":"Constants","needQuote":true,"nodes":[{"content":"Constants","pos":[0,9]}]},{"pos":[2195,2201],"content":"vbBack","needQuote":true,"nodes":[{"content":"vbBack","pos":[0,6]}]},{"pos":[3821,3825],"content":"vbCr","needQuote":true,"nodes":[{"content":"vbCr","pos":[0,4]}]},{"pos":[5445,5451],"content":"vbCrLf","needQuote":true,"nodes":[{"content":"vbCrLf","pos":[0,6]}]},{"pos":[7132,7142],"content":"vbFormFeed","needQuote":true,"nodes":[{"content":"vbFormFeed","pos":[0,10]}]},{"pos":[8774,8778],"content":"vbLf","needQuote":true,"nodes":[{"content":"vbLf","pos":[0,4]}]},{"pos":[10400,10409],"content":"vbNewLine","needQuote":true,"nodes":[{"content":"vbNewLine","pos":[0,9]}]},{"pos":[12635,12645],"content":"vbNullChar","needQuote":true,"nodes":[{"content":"vbNullChar","pos":[0,10]}]},{"pos":[14308,14320],"content":"vbNullString","needQuote":true,"nodes":[{"content":"vbNullString","pos":[0,12]}]},{"pos":[16010,16015],"content":"vbTab","needQuote":true,"nodes":[{"content":"vbTab","pos":[0,5]}]},{"pos":[17650,17663],"content":"vbVerticalTab","needQuote":true,"nodes":[{"content":"vbVerticalTab","pos":[0,13]}]},{"pos":[19204,19225],"content":"Microsoft.VisualBasic","needQuote":true,"nodes":[{"content":"Microsoft.VisualBasic","pos":[0,21]}]},{"pos":[19401,19407],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19567,19577],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[19672,19680],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[19749,19750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19777,19778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19848,19856],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[19925,19926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19953,19954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20137,20151],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[20270,20276],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20343,20344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20394,20400],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20460,20461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20544,20550],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20617,20618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20668,20674],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20734,20735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20949,20971],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[21119,21125],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21192,21193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21243,21249],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21310,21311]},{"pos":[21366,21372],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21432,21433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21530,21536],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21603,21604],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21654,21660],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21721,21722]},{"pos":[21777,21783],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21843,21844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22089,22120],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[22286,22301],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22377,22378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22428,22434],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22495,22496]},{"pos":[22551,22557],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22617,22618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22724,22739],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22815,22816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22866,22872],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22933,22934]},{"pos":[22989,22995],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23055,23056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23286,23299],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[23400,23411],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[23483,23484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23511,23512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23585,23596],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[23668,23669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23696,23697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23872,23881],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[23974,23981],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24049,24050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24077,24078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24147,24154],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24222,24223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24250,24251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24426,24443],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[24552,24567],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24643,24644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24671,24672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24749,24764],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24840,24841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24868,24869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25014,25020],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[25151,25157],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: Microsoft.VisualBasic.Constants\n  commentId: T:Microsoft.VisualBasic.Constants\n  id: Constants\n  parent: Microsoft.VisualBasic\n  children:\n  - Microsoft.VisualBasic.Constants.vbBack\n  - Microsoft.VisualBasic.Constants.vbCr\n  - Microsoft.VisualBasic.Constants.vbCrLf\n  - Microsoft.VisualBasic.Constants.vbFormFeed\n  - Microsoft.VisualBasic.Constants.vbLf\n  - Microsoft.VisualBasic.Constants.vbNewLine\n  - Microsoft.VisualBasic.Constants.vbNullChar\n  - Microsoft.VisualBasic.Constants.vbNullString\n  - Microsoft.VisualBasic.Constants.vbTab\n  - Microsoft.VisualBasic.Constants.vbVerticalTab\n  langs:\n  - csharp\n  - vb\n  name: Constants\n  fullName: Microsoft.VisualBasic.Constants\n  type: Class\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Constants\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 17\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>The <strong>Constants</strong> module contains miscellaneous constants. These constants can be used anywhere in your code.</p>\\n\"\n  syntax:\n    content: >-\n      [StandardModule]\n\n      public sealed class Constants\n    content.vb: >-\n      <StandardModule>\n\n      Public NotInheritable Class Constants\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute\n    ctor: Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: Constants\n- uid: Microsoft.VisualBasic.Constants.vbBack\n  commentId: F:Microsoft.VisualBasic.Constants.vbBack\n  id: vbBack\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbBack\n  fullName: Microsoft.VisualBasic.Constants.vbBack\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbBack\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 21\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a backspace character for print and display functions.</p>\\n\"\n  syntax:\n    content: public const string vbBack = \"\\b\"\n    content.vb: Public Const vbBack As String = vbBack\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbBack\n- uid: Microsoft.VisualBasic.Constants.vbCr\n  commentId: F:Microsoft.VisualBasic.Constants.vbCr\n  id: vbCr\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbCr\n  fullName: Microsoft.VisualBasic.Constants.vbCr\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbCr\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 22\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a carriage-return character for print and display functions.</p>\\n\"\n  syntax:\n    content: public const string vbCr = \"\\r\"\n    content.vb: Public Const vbCr As String = vbCr\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbCr\n- uid: Microsoft.VisualBasic.Constants.vbCrLf\n  commentId: F:Microsoft.VisualBasic.Constants.vbCrLf\n  id: vbCrLf\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbCrLf\n  fullName: Microsoft.VisualBasic.Constants.vbCrLf\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbCrLf\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 23\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a carriage-return character combined with a linefeed character for print and display functions.</p>\\n\"\n  syntax:\n    content: public const string vbCrLf = \"\\r\\n\"\n    content.vb: Public Const vbCrLf As String = vbCrLf\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbCrLf\n- uid: Microsoft.VisualBasic.Constants.vbFormFeed\n  commentId: F:Microsoft.VisualBasic.Constants.vbFormFeed\n  id: vbFormFeed\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbFormFeed\n  fullName: Microsoft.VisualBasic.Constants.vbFormFeed\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbFormFeed\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 24\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a form-feed character for print functions.</p>\\n\"\n  syntax:\n    content: public const string vbFormFeed = \"\\f\"\n    content.vb: Public Const vbFormFeed As String = vbFormFeed\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbFormFeed\n- uid: Microsoft.VisualBasic.Constants.vbLf\n  commentId: F:Microsoft.VisualBasic.Constants.vbLf\n  id: vbLf\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbLf\n  fullName: Microsoft.VisualBasic.Constants.vbLf\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbLf\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 25\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a linefeed character for print and display functions.</p>\\n\"\n  syntax:\n    content: public const string vbLf = \"\\n\"\n    content.vb: Public Const vbLf As String = vbLf\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbLf\n- uid: Microsoft.VisualBasic.Constants.vbNewLine\n  commentId: F:Microsoft.VisualBasic.Constants.vbNewLine\n  id: vbNewLine\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbNewLine\n  fullName: Microsoft.VisualBasic.Constants.vbNewLine\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbNewLine\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 27\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a newline character for print and display functions.</p>\\n\"\n  syntax:\n    content: >-\n      [Obsolete(\"For a carriage return and line feed, use vbCrLf.  For the current platform's newline, use System.Environment.NewLine.\")]\n\n      public const string vbNewLine = \"\\r\\n\"\n    content.vb: >-\n      <Obsolete(\"For a carriage return and line feed, use vbCrLf.  For the current platform's newline, use System.Environment.NewLine.\")>\n\n      Public Const vbNewLine As String = vbCrLf\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  attributes:\n  - type: System.ObsoleteAttribute\n    ctor: System.ObsoleteAttribute.#ctor(System.String)\n    arguments:\n    - type: System.String\n      value: For a carriage return and line feed, use vbCrLf.  For the current platform's newline, use System.Environment.NewLine.\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbNewLine\n- uid: Microsoft.VisualBasic.Constants.vbNullChar\n  commentId: F:Microsoft.VisualBasic.Constants.vbNullChar\n  id: vbNullChar\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbNullChar\n  fullName: Microsoft.VisualBasic.Constants.vbNullChar\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbNullChar\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 28\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a null character for print and display functions.</p>\\n\"\n  syntax:\n    content: public const string vbNullChar = \"\\0\"\n    content.vb: Public Const vbNullChar As String = vbNullChar\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbNullChar\n- uid: Microsoft.VisualBasic.Constants.vbNullString\n  commentId: F:Microsoft.VisualBasic.Constants.vbNullString\n  id: vbNullString\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbNullString\n  fullName: Microsoft.VisualBasic.Constants.vbNullString\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbNullString\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 29\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a zero-length string for print and display functions, and for calling external procedures.</p>\\n\"\n  syntax:\n    content: public const string vbNullString = null\n    content.vb: Public Const vbNullString As String = Nothing\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbNullString\n- uid: Microsoft.VisualBasic.Constants.vbTab\n  commentId: F:Microsoft.VisualBasic.Constants.vbTab\n  id: vbTab\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbTab\n  fullName: Microsoft.VisualBasic.Constants.vbTab\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbTab\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 30\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a tab character for print and display functions.</p>\\n\"\n  syntax:\n    content: public const string vbTab = \"\\t\"\n    content.vb: Public Const vbTab As String = vbTab\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbTab\n- uid: Microsoft.VisualBasic.Constants.vbVerticalTab\n  commentId: F:Microsoft.VisualBasic.Constants.vbVerticalTab\n  id: vbVerticalTab\n  parent: Microsoft.VisualBasic.Constants\n  langs:\n  - csharp\n  - vb\n  name: vbVerticalTab\n  fullName: Microsoft.VisualBasic.Constants.vbVerticalTab\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: vbVerticalTab\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 31\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Represents a carriage-return character for print functions.</p>\\n\"\n  syntax:\n    content: public const string vbVerticalTab = \"\\v\"\n    content.vb: Public Const vbVerticalTab As String = vbVerticalTab\n    return:\n      type: System.String\n  seealso:\n  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])\n  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Constants.vbVerticalTab\nreferences:\n- uid: Microsoft.VisualBasic\n  isExternal: false\n  name: Microsoft.VisualBasic\n  fullName: Microsoft.VisualBasic\n  commentId: N:Microsoft.VisualBasic\n  nameWithType: Microsoft.VisualBasic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}