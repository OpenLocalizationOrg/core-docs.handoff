{"nodes":[{"pos":[1145,1157],"content":"StringWriter","needQuote":true,"nodes":[{"content":"StringWriter","pos":[0,12]}]},{"pos":[4974,4988],"content":"StringWriter()","needQuote":true,"nodes":[{"content":"StringWriter()","pos":[0,14]}]},{"pos":[5903,5932],"content":"StringWriter(IFormatProvider)","needQuote":true,"nodes":[{"content":"StringWriter(IFormatProvider)","pos":[0,29]}]},{"pos":[7220,7247],"content":"StringWriter(StringBuilder)","needQuote":true,"nodes":[{"content":"StringWriter(StringBuilder)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sb&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[8330,8374],"source":"\\n<p>\\n<em>sb</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8375,8381],"source":" </p>\\n"},{"pos":[8810,8854],"content":"StringWriter(StringBuilder, IFormatProvider)","needQuote":true,"nodes":[{"content":"StringWriter(StringBuilder, IFormatProvider)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sb&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[10278,10322],"source":"\\n<p>\\n<em>sb</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[10323,10329],"source":" </p>\\n"},{"pos":[10632,10640],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;Encoding&lt;/strong&gt; in which the output is written.&lt;/p&gt;\\n","pos":[11357,11429],"source":"\\n<p>The <strong>Encoding</strong> in which the output is written.</p>\\n"},{"pos":[11833,11849],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.","pos":[12633,12770],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources."},{"content":"&lt;/p&gt;\\n","pos":[12771,12777],"source":" </p>\\n"},{"pos":[13150,13162],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"content":"\\n&lt;p&gt;A task that represents the asynchronous flush operation.&lt;/p&gt;\\n","pos":[14028,14095],"source":"\\n<p>A task that represents the asynchronous flush operation.</p>\\n"},{"pos":[14463,14481],"content":"GetStringBuilder()","needQuote":true,"nodes":[{"content":"GetStringBuilder()","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The underlying &lt;strong&gt;StringBuilder&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15199,15256],"source":"\\n<p>The underlying <strong>StringBuilder</strong>.</p>\\n"},{"pos":[15561,15571],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The string containing the characters written to the current &lt;strong&gt;StringWriter&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[16225,16326],"source":"\\n<p>The string containing the characters written to the current <strong>StringWriter</strong>.</p>\\n"},{"pos":[16689,16700],"content":"Write(Char)","needQuote":true,"nodes":[{"content":"Write(Char)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The character to write.","pos":[17308,17336],"source":"\\n<p>The character to write."},{"content":"&lt;/p&gt;\\n","pos":[17337,17343],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The writer is closed.","pos":[17520,17546],"source":"\\n<p>The writer is closed."},{"content":"&lt;/p&gt;\\n","pos":[17547,17553],"source":" </p>\\n"},{"pos":[17964,17991],"content":"Write(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Char[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The character array to write data from.","pos":[18710,18754],"source":"\\n<p>The character array to write data from."},{"content":"&lt;/p&gt;\\n","pos":[18755,18761],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The position in the buffer at which to start reading data.&lt;/p&gt;\\n","pos":[18824,18893],"source":"\\n<p>The position in the buffer at which to start reading data.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of characters to write.","pos":[18956,19003],"source":"\\n<p>The maximum number of characters to write."},{"content":"&lt;/p&gt;\\n","pos":[19004,19010],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[19211,19259],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[19260,19266],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.","pos":[19383,19435],"source":"\\n<p>\\n<em>index</em> or <em>count</em> is negative."},{"content":"&lt;/p&gt;\\n","pos":[19436,19442],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;(&lt;em&gt;index&lt;/em&gt; + &lt;em&gt;count&lt;/em&gt;)&gt; &lt;em&gt;buffer&lt;/em&gt;.","pos":[19539,19595],"source":"\\n<p>(<em>index</em> + <em>count</em>)> <em>buffer</em>."},{"content":"&lt;strong&gt;Length&lt;/strong&gt;.","pos":[19596,19620],"source":" <strong>Length</strong>."},{"content":"&lt;/p&gt;\\n","pos":[19621,19627],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The writer is closed.","pos":[19736,19762],"source":"\\n<p>The writer is closed."},{"content":"&lt;/p&gt;\\n","pos":[19763,19769],"source":" </p>\\n"},{"pos":[20304,20317],"content":"Write(String)","needQuote":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The string to write.","pos":[20939,20964],"source":"\\n<p>The string to write."},{"content":"&lt;/p&gt;\\n","pos":[20965,20971],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The writer is closed.","pos":[21150,21176],"source":"\\n<p>The writer is closed."},{"content":"&lt;/p&gt;\\n","pos":[21177,21183],"source":" </p>\\n"},{"pos":[21527,21543],"content":"WriteAsync(Char)","needQuote":true,"nodes":[{"content":"WriteAsync(Char)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The character to write to the string.&lt;/p&gt;\\n","pos":[22371,22419],"source":"\\n<p>The character to write to the string.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[22493,22560],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is disposed.&lt;/p&gt;\\n","pos":[22742,22783],"source":"\\n<p>The string writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is currently in use by a previous write operation.","pos":[22896,22969],"source":"\\n<p>The string writer is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[22970,22976],"source":" </p>\\n"},{"pos":[23407,23439],"content":"WriteAsync(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Char[], Int32, Int32)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The character array to write data from.&lt;/p&gt;\\n","pos":[24377,24427],"source":"\\n<p>The character array to write data from.</p>\\n"},{"content":"\\n&lt;p&gt;The position in the buffer at which to start reading data.&lt;/p&gt;\\n","pos":[24490,24559],"source":"\\n<p>The position in the buffer at which to start reading data.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of characters to write.&lt;/p&gt;\\n","pos":[24622,24675],"source":"\\n<p>The maximum number of characters to write.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[24749,24816],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[25022,25076],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;index&lt;/em&gt; plus &lt;em&gt;count&lt;/em&gt; is greater than the buffer length.&lt;/p&gt;\\n","pos":[25173,25257],"source":"\\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\\n","pos":[25374,25432],"source":"\\n<p>\\n<em>index</em> or <em>count</em> is negative.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is disposed.&lt;/p&gt;\\n","pos":[25541,25582],"source":"\\n<p>The string writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is currently in use by a previous write operation.","pos":[25695,25768],"source":"\\n<p>The string writer is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[25769,25775],"source":" </p>\\n"},{"pos":[26345,26363],"content":"WriteAsync(String)","needQuote":true,"nodes":[{"content":"WriteAsync(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The string to write.","pos":[27204,27229],"source":"\\n<p>The string to write."},{"content":"If &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, nothing is written to the text stream.&lt;/p&gt;\\n","pos":[27230,27318],"source":" If <em>value</em> is <strong>null</strong>, nothing is written to the text stream.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[27392,27459],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is disposed.&lt;/p&gt;\\n","pos":[27643,27684],"source":"\\n<p>The string writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is currently in use by a previous write operation.","pos":[27797,27870],"source":"\\n<p>The string writer is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[27871,27877],"source":" </p>\\n"},{"pos":[28238,28258],"content":"WriteLineAsync(Char)","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The character to write to the string.&lt;/p&gt;\\n","pos":[29132,29180],"source":"\\n<p>The character to write to the string.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[29254,29321],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is disposed.&lt;/p&gt;\\n","pos":[29507,29548],"source":"\\n<p>The string writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is currently in use by a previous write operation.","pos":[29661,29734],"source":"\\n<p>The string writer is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[29735,29741],"source":" </p>\\n"},{"pos":[30188,30224],"content":"WriteLineAsync(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char[], Int32, Int32)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The character array to write data from.&lt;/p&gt;\\n","pos":[31208,31258],"source":"\\n<p>The character array to write data from.</p>\\n"},{"content":"\\n&lt;p&gt;The position in the buffer at which to start reading data.&lt;/p&gt;\\n","pos":[31321,31390],"source":"\\n<p>The position in the buffer at which to start reading data.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of characters to write.","pos":[31453,31500],"source":"\\n<p>The maximum number of characters to write."},{"content":"&lt;/p&gt;\\n","pos":[31501,31507],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[31581,31648],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[31858,31912],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;index&lt;/em&gt; plus &lt;em&gt;count&lt;/em&gt; is greater than the buffer length.&lt;/p&gt;\\n","pos":[32009,32093],"source":"\\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\\n","pos":[32210,32268],"source":"\\n<p>\\n<em>index</em> or <em>count</em> is negative.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is disposed.&lt;/p&gt;\\n","pos":[32377,32418],"source":"\\n<p>The string writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is currently in use by a previous write operation.","pos":[32531,32604],"source":"\\n<p>The string writer is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[32605,32611],"source":" </p>\\n"},{"pos":[33209,33231],"content":"WriteLineAsync(String)","needQuote":true,"nodes":[{"content":"WriteLineAsync(String)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The string to write.","pos":[34118,34143],"source":"\\n<p>The string to write."},{"content":"If the value is &lt;strong&gt;null&lt;/strong&gt;, only a line terminator is written.&lt;/p&gt;\\n","pos":[34144,34223],"source":" If the value is <strong>null</strong>, only a line terminator is written.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[34297,34364],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is disposed.&lt;/p&gt;\\n","pos":[34552,34593],"source":"\\n<p>The string writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The string writer is currently in use by a previous write operation.","pos":[34706,34779],"source":"\\n<p>The string writer is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[34780,34786],"source":" </p>\\n"},{"pos":[34982,34991],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[35131,35137],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35292,35302],"content":"TextWriter","needQuote":true,"nodes":[{"content":"TextWriter","pos":[0,10]}]},{"pos":[35470,35481],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[35674,35685],"content":"CoreNewLine","needQuote":true,"nodes":[{"content":"CoreNewLine","pos":[0,11]}]},{"pos":[36115,36129],"content":"FormatProvider","needQuote":true,"nodes":[{"content":"FormatProvider","pos":[0,14]}]},{"pos":[36366,36373],"content":"NewLine","needQuote":true,"nodes":[{"content":"NewLine","pos":[0,7]}]},{"pos":[36589,36598],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[36705,36712],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[36766,36767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36794,36795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36871,36878],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[36932,36933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36960,36961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37152,37159],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[37262,37267],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[37319,37320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37347,37348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37422,37427],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[37479,37480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37507,37508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37710,37724],"content":"Write(Boolean)","needQuote":true,"nodes":[{"content":"Write(Boolean)","pos":[0,14]}]},{"pos":[37857,37862],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[37914,37915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37966,37973],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38034,38035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38125,38130],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[38182,38183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38234,38241],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38302,38303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38527,38540],"content":"Write(Char[])","needQuote":true,"nodes":[{"content":"Write(Char[])","pos":[0,13]}]},{"pos":[38753,38758],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[38810,38811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38859,38863],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[38922,38924]},{"pos":[38955,38956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39045,39050],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[39102,39103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39151,39155],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[39213,39215],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[39243,39244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39511,39525],"content":"Write(Decimal)","needQuote":true,"nodes":[{"content":"Write(Decimal)","pos":[0,14]}]},{"pos":[39658,39663],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[39715,39716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39767,39774],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[39835,39836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39926,39931],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[39983,39984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40035,40042],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[40103,40104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40328,40341],"content":"Write(Double)","needQuote":true,"nodes":[{"content":"Write(Double)","pos":[0,13]}]},{"pos":[40472,40477],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[40529,40530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40580,40586],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[40646,40647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40736,40741],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[40793,40794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40844,40850],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[40910,40911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41132,41144],"content":"Write(Int32)","needQuote":true,"nodes":[{"content":"Write(Int32)","pos":[0,12]}]},{"pos":[41273,41278],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[41330,41331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41380,41385],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41444,41445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41533,41538],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[41590,41591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41640,41645],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41704,41705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41924,41936],"content":"Write(Int64)","needQuote":true,"nodes":[{"content":"Write(Int64)","pos":[0,12]}]},{"pos":[42065,42070],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[42122,42123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42172,42177],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[42236,42237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42325,42330],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[42382,42383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42432,42437],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[42496,42497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42717,42730],"content":"Write(Object)","needQuote":true,"nodes":[{"content":"Write(Object)","pos":[0,13]}]},{"pos":[42861,42866],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[42918,42919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42969,42975],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43035,43036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43125,43130],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[43182,43183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43233,43239],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43299,43300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43522,43535],"content":"Write(Single)","needQuote":true,"nodes":[{"content":"Write(Single)","pos":[0,13]}]},{"pos":[43666,43671],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[43723,43724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43774,43780],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[43840,43841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43930,43935],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[43987,43988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44038,44044],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[44104,44105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44341,44362],"content":"Write(String, Object)","needQuote":true,"nodes":[{"content":"Write(String, Object)","pos":[0,21]}]},{"pos":[44522,44527],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[44579,44580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44630,44636],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[44697,44698]},{"pos":[44753,44759],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44819,44820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44923,44928],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[44980,44981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45031,45037],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[45098,45099]},{"pos":[45154,45160],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45220,45221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45493,45522],"content":"Write(String, Object, Object)","needQuote":true,"nodes":[{"content":"Write(String, Object, Object)","pos":[0,29]}]},{"pos":[45711,45716],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[45768,45769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45819,45825],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[45886,45887]},{"pos":[45942,45948],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[46009,46010]},{"pos":[46065,46071],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46131,46132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46249,46254],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[46306,46307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46357,46363],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[46424,46425]},{"pos":[46480,46486],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[46547,46548]},{"pos":[46603,46609],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46669,46670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46978,47015],"content":"Write(String, Object, Object, Object)","needQuote":true,"nodes":[{"content":"Write(String, Object, Object, Object)","pos":[0,37]}]},{"pos":[47233,47238],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[47290,47291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47341,47347],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[47408,47409]},{"pos":[47464,47470],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[47531,47532]},{"pos":[47587,47593],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[47654,47655]},{"pos":[47710,47716],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47776,47777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47908,47913],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[47965,47966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48016,48022],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[48083,48084]},{"pos":[48139,48145],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[48206,48207]},{"pos":[48262,48268],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[48329,48330]},{"pos":[48385,48391],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48451,48452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48756,48779],"content":"Write(String, Object[])","needQuote":true,"nodes":[{"content":"Write(String, Object[])","pos":[0,23]}]},{"pos":[49052,49057],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[49109,49110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49160,49166],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[49227,49228]},{"pos":[49283,49289],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[49350,49352]},{"pos":[49383,49384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49489,49494],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[49546,49547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49597,49603],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[49664,49665]},{"pos":[49720,49726],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49786,49788],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[49816,49817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50119,50132],"content":"Write(UInt32)","needQuote":true,"nodes":[{"content":"Write(UInt32)","pos":[0,13]}]},{"pos":[50263,50268],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[50320,50321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50371,50377],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[50437,50438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50527,50532],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[50584,50585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50635,50641],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[50701,50702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50924,50937],"content":"Write(UInt64)","needQuote":true,"nodes":[{"content":"Write(UInt64)","pos":[0,13]}]},{"pos":[51068,51073],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[51125,51126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51176,51182],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[51242,51243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51332,51337],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[51389,51390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51440,51446],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[51506,51507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51734,51752],"content":"WriteAsync(Char[])","needQuote":true,"nodes":[{"content":"WriteAsync(Char[])","pos":[0,18]}]},{"pos":[51985,51995],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[52052,52053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52101,52105],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[52164,52166]},{"pos":[52197,52198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52292,52302],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[52359,52360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52408,52412],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[52470,52472],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[52500,52501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52772,52783],"content":"WriteLine()","needQuote":true,"nodes":[{"content":"WriteLine()","pos":[0,11]}]},{"pos":[52894,52903],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[52959,52960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52987,52988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53066,53075],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[53131,53132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53159,53160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53374,53392],"content":"WriteLine(Boolean)","needQuote":true,"nodes":[{"content":"WriteLine(Boolean)","pos":[0,18]}]},{"pos":[53533,53542],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[53598,53599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53650,53657],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[53718,53719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53813,53822],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[53878,53879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53930,53937],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[53998,53999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54233,54248],"content":"WriteLine(Char)","needQuote":true,"nodes":[{"content":"WriteLine(Char)","pos":[0,15]}]},{"pos":[54383,54392],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[54448,54449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54497,54501],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[54559,54560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54651,54660],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[54716,54717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54765,54769],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[54827,54828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55058,55075],"content":"WriteLine(Char[])","needQuote":true,"nodes":[{"content":"WriteLine(Char[])","pos":[0,17]}]},{"pos":[55304,55313],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[55369,55370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55418,55422],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[55481,55483]},{"pos":[55514,55515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55608,55617],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[55673,55674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55722,55726],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[55784,55786],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[55814,55815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56123,56154],"content":"WriteLine(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteLine(Char[], Int32, Int32)","pos":[0,31]}]},{"pos":[56479,56488],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[56544,56545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56593,56597],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[56656,56658]},{"content":",","pos":[56690,56691]},{"pos":[56745,56750],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[56810,56811]},{"pos":[56865,56870],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56929,56930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57049,57058],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[57114,57115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57163,57167],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[57225,57227],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[57256,57257]},{"pos":[57311,57316],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[57376,57377]},{"pos":[57431,57436],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57495,57496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57833,57851],"content":"WriteLine(Decimal)","needQuote":true,"nodes":[{"content":"WriteLine(Decimal)","pos":[0,18]}]},{"pos":[57992,58001],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[58057,58058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58109,58116],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[58177,58178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58272,58281],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[58337,58338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58389,58396],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[58457,58458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58694,58711],"content":"WriteLine(Double)","needQuote":true,"nodes":[{"content":"WriteLine(Double)","pos":[0,17]}]},{"pos":[58850,58859],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[58915,58916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58966,58972],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[59032,59033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59126,59135],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[59191,59192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59242,59248],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[59308,59309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59542,59558],"content":"WriteLine(Int32)","needQuote":true,"nodes":[{"content":"WriteLine(Int32)","pos":[0,16]}]},{"pos":[59695,59704],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[59760,59761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59810,59815],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59874,59875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59967,59976],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[60032,60033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60082,60087],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60146,60147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60378,60394],"content":"WriteLine(Int64)","needQuote":true,"nodes":[{"content":"WriteLine(Int64)","pos":[0,16]}]},{"pos":[60531,60540],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[60596,60597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60646,60651],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[60710,60711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60803,60812],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[60868,60869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60918,60923],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[60982,60983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61215,61232],"content":"WriteLine(Object)","needQuote":true,"nodes":[{"content":"WriteLine(Object)","pos":[0,17]}]},{"pos":[61371,61380],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[61436,61437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61487,61493],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61553,61554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61647,61656],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[61712,61713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61763,61769],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61829,61830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62064,62081],"content":"WriteLine(Single)","needQuote":true,"nodes":[{"content":"WriteLine(Single)","pos":[0,17]}]},{"pos":[62220,62229],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[62285,62286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62336,62342],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[62402,62403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62496,62505],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[62561,62562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62612,62618],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[62678,62679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62913,62930],"content":"WriteLine(String)","needQuote":true,"nodes":[{"content":"WriteLine(String)","pos":[0,17]}]},{"pos":[63069,63078],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[63134,63135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63185,63191],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63251,63252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63345,63354],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[63410,63411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63461,63467],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63527,63528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63776,63801],"content":"WriteLine(String, Object)","needQuote":true,"nodes":[{"content":"WriteLine(String, Object)","pos":[0,25]}]},{"pos":[63969,63978],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[64034,64035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64085,64091],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[64152,64153]},{"pos":[64208,64214],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64274,64275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64382,64391],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[64447,64448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64498,64504],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[64565,64566]},{"pos":[64621,64627],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64687,64688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64972,65005],"content":"WriteLine(String, Object, Object)","needQuote":true,"nodes":[{"content":"WriteLine(String, Object, Object)","pos":[0,33]}]},{"pos":[65202,65211],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[65267,65268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65318,65324],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[65385,65386]},{"pos":[65441,65447],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[65508,65509]},{"pos":[65564,65570],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65630,65631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65752,65761],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[65817,65818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65868,65874],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[65935,65936]},{"pos":[65991,65997],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66058,66059]},{"pos":[66114,66120],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66180,66181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66501,66542],"content":"WriteLine(String, Object, Object, Object)","needQuote":true,"nodes":[{"content":"WriteLine(String, Object, Object, Object)","pos":[0,41]}]},{"pos":[66768,66777],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[66833,66834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66884,66890],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[66951,66952]},{"pos":[67007,67013],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67074,67075]},{"pos":[67130,67136],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67197,67198]},{"pos":[67253,67259],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67319,67320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67455,67464],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[67520,67521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67571,67577],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[67638,67639]},{"pos":[67694,67700],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67761,67762]},{"pos":[67817,67823],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67884,67885]},{"pos":[67940,67946],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68006,68007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68323,68350],"content":"WriteLine(String, Object[])","needQuote":true,"nodes":[{"content":"WriteLine(String, Object[])","pos":[0,27]}]},{"pos":[68639,68648],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[68704,68705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68755,68761],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[68822,68823]},{"pos":[68878,68884],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[68945,68947]},{"pos":[68978,68979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69088,69097],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[69153,69154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69204,69210],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[69271,69272]},{"pos":[69327,69333],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69393,69395],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[69423,69424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69742,69759],"content":"WriteLine(UInt32)","needQuote":true,"nodes":[{"content":"WriteLine(UInt32)","pos":[0,17]}]},{"pos":[69898,69907],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[69963,69964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70014,70020],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[70080,70081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70174,70183],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[70239,70240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70290,70296],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[70356,70357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70591,70608],"content":"WriteLine(UInt64)","needQuote":true,"nodes":[{"content":"WriteLine(UInt64)","pos":[0,17]}]},{"pos":[70747,70756],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[70812,70813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70863,70869],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[70929,70930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71023,71032],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[71088,71089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71139,71145],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[71205,71206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71431,71447],"content":"WriteLineAsync()","needQuote":true,"nodes":[{"content":"WriteLineAsync()","pos":[0,16]}]},{"pos":[71568,71582],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[71643,71644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71671,71672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71755,71769],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[71830,71831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71858,71859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72087,72109],"content":"WriteLineAsync(Char[])","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char[])","pos":[0,22]}]},{"pos":[72358,72372],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[72433,72434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72482,72486],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[72545,72547]},{"pos":[72578,72579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72677,72691],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[72752,72753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72801,72805],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[72863,72865],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[72893,72894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73174,73188],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[73307,73313],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[73380,73381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73431,73437],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[73497,73498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73581,73587],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[73654,73655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73705,73711],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[73771,73772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73986,74008],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[74156,74162],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[74229,74230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74280,74286],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[74347,74348]},{"pos":[74403,74409],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74469,74470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74567,74573],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[74640,74641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74691,74697],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[74758,74759]},{"pos":[74814,74820],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74880,74881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75126,75157],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[75323,75338],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[75414,75415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75465,75471],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[75532,75533]},{"pos":[75588,75594],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75654,75655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75761,75776],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[75852,75853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75903,75909],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[75970,75971]},{"pos":[76026,76032],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76092,76093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76323,76336],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[76437,76448],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[76520,76521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76548,76549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76622,76633],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[76705,76706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76733,76734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76909,76918],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[77011,77018],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[77086,77087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77114,77115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77184,77191],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[77259,77260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77287,77288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77463,77480],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[77589,77604],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[77680,77681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77708,77709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77786,77801],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[77877,77878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77905,77906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78051,78057],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[78197,78212],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[78401,78414],"content":"StringBuilder","needQuote":true,"nodes":[{"content":"StringBuilder","pos":[0,13]}]},{"pos":[78571,78582],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[78758,78766],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[78968,78976],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[79181,79197],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[79334,79341],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[79395,79396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79447,79454],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[79515,79516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79608,79615],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[79669,79670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79721,79728],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[79789,79790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79978,79985],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80165,80177],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[80290,80300],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[80357,80358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80385,80386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80465,80475],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[80532,80533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80560,80561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80761,80765],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[80928,80950],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[81144,81154],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[81249,81257],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[81326,81327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81354,81355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81425,81433],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[81502,81503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81530,81531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81686,81692],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[81876,81887],"content":"Write(Char)","needQuote":true,"nodes":[{"content":"Write(Char)","pos":[0,11]}]},{"pos":[82014,82019],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[82071,82072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82120,82124],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[82182,82183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82270,82275],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[82327,82328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82376,82380],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[82438,82439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82614,82618],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[82824,82851],"content":"Write(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Char[], Int32, Int32)","pos":[0,27]}]},{"pos":[83160,83165],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[83217,83218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83266,83270],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[83329,83331]},{"content":",","pos":[83363,83364]},{"pos":[83418,83423],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83483,83484]},{"pos":[83538,83543],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83602,83603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83718,83723],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[83775,83776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83824,83828],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[83886,83888],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[83917,83918]},{"pos":[83972,83977],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84037,84038]},{"pos":[84092,84097],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84156,84157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84399,84405],"content":"Char[]","needQuote":true,"nodes":[{"content":"Char[]","pos":[0,6]}]},{"pos":[84525,84529],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[84588,84590]},{"pos":[84653,84657],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[84715,84717],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[84849,84854],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85037,85050],"content":"Write(String)","needQuote":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"pos":[85181,85186],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[85238,85239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85289,85295],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[85355,85356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85445,85450],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[85502,85503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85553,85559],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[85619,85620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85845,85861],"content":"WriteAsync(Char)","needQuote":true,"nodes":[{"content":"WriteAsync(Char)","pos":[0,16]}]},{"pos":[85998,86008],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[86065,86066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86114,86118],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[86176,86177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86269,86279],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[86336,86337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86385,86389],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[86447,86448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86707,86739],"content":"WriteAsync(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Char[], Int32, Int32)","pos":[0,32]}]},{"pos":[87068,87078],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[87135,87136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87184,87188],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[87247,87249]},{"content":",","pos":[87281,87282]},{"pos":[87336,87341],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[87401,87402]},{"pos":[87456,87461],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[87520,87521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87641,87651],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[87708,87709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87757,87761],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[87819,87821],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[87850,87851]},{"pos":[87905,87910],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[87970,87971]},{"pos":[88025,88030],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[88089,88090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88430,88448],"content":"WriteAsync(String)","needQuote":true,"nodes":[{"content":"WriteAsync(String)","pos":[0,18]}]},{"pos":[88589,88599],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[88656,88657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88707,88713],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[88773,88774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88868,88878],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[88935,88936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88986,88992],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[89052,89053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89292,89312],"content":"WriteLineAsync(Char)","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char)","pos":[0,20]}]},{"pos":[89457,89471],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[89532,89533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89581,89585],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[89643,89644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89740,89754],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[89815,89816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89864,89868],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[89926,89927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90198,90234],"content":"WriteLineAsync(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char[], Int32, Int32)","pos":[0,36]}]},{"pos":[90579,90593],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[90654,90655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90703,90707],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[90766,90768]},{"content":",","pos":[90800,90801]},{"pos":[90855,90860],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[90920,90921]},{"pos":[90975,90980],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91039,91040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91164,91178],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[91239,91240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91288,91292],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[91350,91352],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[91381,91382]},{"pos":[91436,91441],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[91501,91502]},{"pos":[91556,91561],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91620,91621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91977,91999],"content":"WriteLineAsync(String)","needQuote":true,"nodes":[{"content":"WriteLineAsync(String)","pos":[0,22]}]},{"pos":[92148,92162],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[92223,92224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92274,92280],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[92340,92341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92439,92453],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[92514,92515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92565,92571],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[92631,92632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92829,92850],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[93040,93063],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[93263,93290],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[93509,93526],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[93723,93748],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.IO.StringWriter\n  commentId: T:System.IO.StringWriter\n  id: StringWriter\n  parent: System.IO\n  children:\n  - System.IO.StringWriter.#ctor\n  - System.IO.StringWriter.#ctor(System.IFormatProvider)\n  - System.IO.StringWriter.#ctor(System.Text.StringBuilder)\n  - System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)\n  - System.IO.StringWriter.Dispose(System.Boolean)\n  - System.IO.StringWriter.Encoding\n  - System.IO.StringWriter.FlushAsync\n  - System.IO.StringWriter.GetStringBuilder\n  - System.IO.StringWriter.ToString\n  - System.IO.StringWriter.Write(System.Char)\n  - System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)\n  - System.IO.StringWriter.Write(System.String)\n  - System.IO.StringWriter.WriteAsync(System.Char)\n  - System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  - System.IO.StringWriter.WriteAsync(System.String)\n  - System.IO.StringWriter.WriteLineAsync(System.Char)\n  - System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  - System.IO.StringWriter.WriteLineAsync(System.String)\n  langs:\n  - csharp\n  - vb\n  name: StringWriter\n  fullName: System.IO.StringWriter\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StringWriter\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 27\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Implements a <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for writing information to a string. The information is stored in an underlying <xref href=\\\"System.Text.StringBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class StringWriter : TextWriter, IDisposable\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class StringWriter\n          Inherits TextWriter\n          Implements IDisposable\n  seealso:\n  - type: System.Text.StringBuilder\n    commentId: T:System.Text.StringBuilder\n  - type: System.IO.StringReader\n    commentId: T:System.IO.StringReader\n  inheritance:\n  - System.Object\n  - System.IO.TextWriter\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.IO.TextWriter.CoreNewLine\n  - System.IO.TextWriter.Null\n  - System.IO.TextWriter.FormatProvider\n  - System.IO.TextWriter.NewLine\n  - System.IO.TextWriter.Dispose\n  - System.IO.TextWriter.Flush\n  - System.IO.TextWriter.Write(System.Boolean)\n  - System.IO.TextWriter.Write(System.Char[])\n  - System.IO.TextWriter.Write(System.Decimal)\n  - System.IO.TextWriter.Write(System.Double)\n  - System.IO.TextWriter.Write(System.Int32)\n  - System.IO.TextWriter.Write(System.Int64)\n  - System.IO.TextWriter.Write(System.Object)\n  - System.IO.TextWriter.Write(System.Single)\n  - System.IO.TextWriter.Write(System.String,System.Object)\n  - System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n  - System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n  - System.IO.TextWriter.Write(System.String,System.Object[])\n  - System.IO.TextWriter.Write(System.UInt32)\n  - System.IO.TextWriter.Write(System.UInt64)\n  - System.IO.TextWriter.WriteAsync(System.Char[])\n  - System.IO.TextWriter.WriteLine\n  - System.IO.TextWriter.WriteLine(System.Boolean)\n  - System.IO.TextWriter.WriteLine(System.Char)\n  - System.IO.TextWriter.WriteLine(System.Char[])\n  - System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n  - System.IO.TextWriter.WriteLine(System.Decimal)\n  - System.IO.TextWriter.WriteLine(System.Double)\n  - System.IO.TextWriter.WriteLine(System.Int32)\n  - System.IO.TextWriter.WriteLine(System.Int64)\n  - System.IO.TextWriter.WriteLine(System.Object)\n  - System.IO.TextWriter.WriteLine(System.Single)\n  - System.IO.TextWriter.WriteLine(System.String)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object[])\n  - System.IO.TextWriter.WriteLine(System.UInt32)\n  - System.IO.TextWriter.WriteLine(System.UInt64)\n  - System.IO.TextWriter.WriteLineAsync\n  - System.IO.TextWriter.WriteLineAsync(System.Char[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: StringWriter\n- uid: System.IO.StringWriter.#ctor\n  commentId: M:System.IO.StringWriter.#ctor\n  id: '#ctor'\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: StringWriter()\n  fullName: System.IO.StringWriter.StringWriter()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 38\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.StringWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public StringWriter()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StringWriter.StringWriter()\n- uid: System.IO.StringWriter.#ctor(System.IFormatProvider)\n  commentId: M:System.IO.StringWriter.#ctor(System.IFormatProvider)\n  id: '#ctor(System.IFormatProvider)'\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: StringWriter(IFormatProvider)\n  fullName: System.IO.StringWriter.StringWriter(System.IFormatProvider)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 43\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.StringWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified format control.</p>\\n\"\n  syntax:\n    content: public StringWriter(IFormatProvider formatProvider)\n    content.vb: Public Sub New(formatProvider As IFormatProvider)\n    parameters:\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that controls formatting. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StringWriter.StringWriter(IFormatProvider)\n- uid: System.IO.StringWriter.#ctor(System.Text.StringBuilder)\n  commentId: M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)\n  id: '#ctor(System.Text.StringBuilder)'\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: StringWriter(StringBuilder)\n  fullName: System.IO.StringWriter.StringWriter(System.Text.StringBuilder)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 49\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.StringWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that writes to the specified <xref href=\\\"System.Text.StringBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public StringWriter(StringBuilder sb)\n    content.vb: Public Sub New(sb As StringBuilder)\n    parameters:\n    - id: sb\n      type: System.Text.StringBuilder\n      description: \"\\n<p>The <xref href=\\\"System.Text.StringBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to write to. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>sb</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StringWriter.StringWriter(StringBuilder)\n- uid: System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)\n  commentId: M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)\n  id: '#ctor(System.Text.StringBuilder,System.IFormatProvider)'\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: StringWriter(StringBuilder, IFormatProvider)\n  fullName: System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 52\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.StringWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that writes to the specified <xref href=\\\"System.Text.StringBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and has the specified format provider.</p>\\n\"\n  syntax:\n    content: public StringWriter(StringBuilder sb, IFormatProvider formatProvider)\n    content.vb: Public Sub New(sb As StringBuilder, formatProvider As IFormatProvider)\n    parameters:\n    - id: sb\n      type: System.Text.StringBuilder\n      description: \"\\n<p>The <xref href=\\\"System.Text.StringBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to write to. </p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that controls formatting. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>sb</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StringWriter.StringWriter(StringBuilder, IFormatProvider)\n- uid: System.IO.StringWriter.Encoding\n  commentId: P:System.IO.StringWriter.Encoding\n  id: Encoding\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: Encoding\n  fullName: System.IO.StringWriter.Encoding\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Encoding\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 74\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Text.Encoding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in which the output is written.</p>\\n\"\n  syntax:\n    content: public override Encoding Encoding { get; }\n    content.vb: Public Overrides ReadOnly Property Encoding As Encoding\n    parameters: []\n    return:\n      type: System.Text.Encoding\n      description: \"\\n<p>The <strong>Encoding</strong> in which the output is written.</p>\\n\"\n  overridden: System.IO.TextWriter.Encoding\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: StringWriter.Encoding\n- uid: System.IO.StringWriter.Dispose(System.Boolean)\n  commentId: M:System.IO.StringWriter.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.StringWriter.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 65\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.StringWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\\n\"\n  overridden: System.IO.TextWriter.Dispose(System.Boolean)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: StringWriter.Dispose(Boolean)\n- uid: System.IO.StringWriter.FlushAsync\n  commentId: M:System.IO.StringWriter.FlushAsync\n  id: FlushAsync\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: FlushAsync()\n  fullName: System.IO.StringWriter.FlushAsync()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FlushAsync\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 180\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device. </p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task FlushAsync()\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function FlushAsync As Task\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous flush operation.</p>\\n\"\n  overridden: System.IO.TextWriter.FlushAsync\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StringWriter.FlushAsync()\n- uid: System.IO.StringWriter.GetStringBuilder\n  commentId: M:System.IO.StringWriter.GetStringBuilder\n  id: GetStringBuilder\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: GetStringBuilder()\n  fullName: System.IO.StringWriter.GetStringBuilder()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetStringBuilder\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 87\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Returns the underlying <xref href=\\\"System.Text.StringBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual StringBuilder GetStringBuilder()\n    content.vb: Public Overridable Function GetStringBuilder As StringBuilder\n    return:\n      type: System.Text.StringBuilder\n      description: \"\\n<p>The underlying <strong>StringBuilder</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: StringWriter.GetStringBuilder()\n- uid: System.IO.StringWriter.ToString\n  commentId: M:System.IO.StringWriter.ToString\n  id: ToString\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.IO.StringWriter.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 191\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Returns a string containing the characters written to the current <strong>StringWriter</strong> so far.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string containing the characters written to the current <strong>StringWriter</strong>.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StringWriter.ToString()\n- uid: System.IO.StringWriter.Write(System.Char)\n  commentId: M:System.IO.StringWriter.Write(System.Char)\n  id: Write(System.Char)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: Write(Char)\n  fullName: System.IO.StringWriter.Write(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 93\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a character to the string.</p>\\n\"\n  syntax:\n    content: public override void Write(char value)\n    content.vb: Public Overrides Sub Write(value As Char)\n    parameters:\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The character to write. </p>\\n\"\n  overridden: System.IO.TextWriter.Write(System.Char)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The writer is closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StringWriter.Write(Char)\n- uid: System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)\n  id: Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: Write(Char[], Int32, Int32)\n  fullName: System.IO.StringWriter.Write(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 104\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a subarray of characters to the string.</p>\\n\"\n  syntax:\n    content: public override void Write(char[] buffer, int index, int count)\n    content.vb: Public Overrides Sub Write(buffer As Char(), index As Integer, count As Integer)\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The character array to write data from. </p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The position in the buffer at which to start reading data.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters to write. </p>\\n\"\n  overridden: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> or <em>count</em> is negative. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>(<em>index</em> + <em>count</em>)> <em>buffer</em>. <strong>Length</strong>. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The writer is closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.StringWriter.Write(System.Char(), System.Int32, System.Int32)\n  name.vb: Write(Char(), Int32, Int32)\n  nameWithType: StringWriter.Write(Char[], Int32, Int32)\n  nameWithType.vb: StringWriter.Write(Char(), Int32, Int32)\n- uid: System.IO.StringWriter.Write(System.String)\n  commentId: M:System.IO.StringWriter.Write(System.String)\n  id: Write(System.String)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: Write(String)\n  fullName: System.IO.StringWriter.Write(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 124\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a string to the current string.</p>\\n\"\n  syntax:\n    content: public override void Write(string value)\n    content.vb: Public Overrides Sub Write(value As String)\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The string to write. </p>\\n\"\n  overridden: System.IO.TextWriter.Write(System.String)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The writer is closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StringWriter.Write(String)\n- uid: System.IO.StringWriter.WriteAsync(System.Char)\n  commentId: M:System.IO.StringWriter.WriteAsync(System.Char)\n  id: WriteAsync(System.Char)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Char)\n  fullName: System.IO.StringWriter.WriteAsync(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAsync\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 132\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a character to the string asynchronously.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteAsync(char value)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteAsync(value As Char) As Task\n    parameters:\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The character to write to the string.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteAsync(System.Char)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The string writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The string writer is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StringWriter.WriteAsync(Char)\n- uid: System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  id: WriteAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Char[], Int32, Int32)\n  fullName: System.IO.StringWriter.WriteAsync(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAsync\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 148\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a subarray of characters to the string asynchronously.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteAsync(char[] buffer, int index, int count)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteAsync(buffer As Char(), index As Integer, count As Integer) As Task\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The character array to write data from.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The position in the buffer at which to start reading data.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters to write.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> or <em>count</em> is negative.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The string writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The string writer is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.StringWriter.WriteAsync(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Char(), Int32, Int32)\n  nameWithType: StringWriter.WriteAsync(Char[], Int32, Int32)\n  nameWithType.vb: StringWriter.WriteAsync(Char(), Int32, Int32)\n- uid: System.IO.StringWriter.WriteAsync(System.String)\n  commentId: M:System.IO.StringWriter.WriteAsync(System.String)\n  id: WriteAsync(System.String)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(String)\n  fullName: System.IO.StringWriter.WriteAsync(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAsync\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 140\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a string to the current string asynchronously.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteAsync(string value)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteAsync(value As String) As Task\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The string to write. If <em>value</em> is <strong>null</strong>, nothing is written to the text stream.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteAsync(System.String)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The string writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The string writer is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StringWriter.WriteAsync(String)\n- uid: System.IO.StringWriter.WriteLineAsync(System.Char)\n  commentId: M:System.IO.StringWriter.WriteLineAsync(System.Char)\n  id: WriteLineAsync(System.Char)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteLineAsync(Char)\n  fullName: System.IO.StringWriter.WriteLineAsync(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteLineAsync\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 156\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a character followed by a line terminator asynchronously to the string.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteLineAsync(char value)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteLineAsync(value As Char) As Task\n    parameters:\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The character to write to the string.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteLineAsync(System.Char)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The string writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The string writer is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StringWriter.WriteLineAsync(Char)\n- uid: System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  id: WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteLineAsync(Char[], Int32, Int32)\n  fullName: System.IO.StringWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteLineAsync\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 172\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a subarray of characters followed by a line terminator asynchronously to the string.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteLineAsync(char[] buffer, int index, int count)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteLineAsync(buffer As Char(), index As Integer, count As Integer) As Task\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The character array to write data from.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The position in the buffer at which to start reading data.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters to write. </p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> or <em>count</em> is negative.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The string writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The string writer is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.StringWriter.WriteLineAsync(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteLineAsync(Char(), Int32, Int32)\n  nameWithType: StringWriter.WriteLineAsync(Char[], Int32, Int32)\n  nameWithType.vb: StringWriter.WriteLineAsync(Char(), Int32, Int32)\n- uid: System.IO.StringWriter.WriteLineAsync(System.String)\n  commentId: M:System.IO.StringWriter.WriteLineAsync(System.String)\n  id: WriteLineAsync(System.String)\n  parent: System.IO.StringWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteLineAsync(String)\n  fullName: System.IO.StringWriter.WriteLineAsync(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StringWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteLineAsync\n    path: src/mscorlib/src/System/IO/StringWriter.cs\n    startLine: 164\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a string followed by a line terminator asynchronously to the current string.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteLineAsync(string value)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteLineAsync(value As String) As Task\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The string to write. If the value is <strong>null</strong>, only a line terminator is written.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteLineAsync(System.String)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The string writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The string writer is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StringWriter.WriteLineAsync(String)\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  fullName: System.IO.TextWriter\n  nameWithType: TextWriter\n  commentId: T:System.IO.TextWriter\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.IO.TextWriter.CoreNewLine\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: CoreNewLine\n  fullName: System.IO.TextWriter.CoreNewLine\n  nameWithType: TextWriter.CoreNewLine\n  commentId: F:System.IO.TextWriter.CoreNewLine\n- uid: System.IO.TextWriter.Null\n  parent: System.IO.TextWriter\n  isExternal: false\n  fullName: System.IO.TextWriter.Null\n  nameWithType: TextWriter.Null\n  commentId: F:System.IO.TextWriter.Null\n- uid: System.IO.TextWriter.FormatProvider\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: FormatProvider\n  fullName: System.IO.TextWriter.FormatProvider\n  nameWithType: TextWriter.FormatProvider\n  commentId: P:System.IO.TextWriter.FormatProvider\n- uid: System.IO.TextWriter.NewLine\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: NewLine\n  fullName: System.IO.TextWriter.NewLine\n  nameWithType: TextWriter.NewLine\n  commentId: P:System.IO.TextWriter.NewLine\n- uid: System.IO.TextWriter.Dispose\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Dispose()\n  fullName: System.IO.TextWriter.Dispose()\n  spec.csharp:\n  - uid: System.IO.TextWriter.Dispose\n    name: Dispose\n    fullName: System.IO.TextWriter.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Dispose\n    name: Dispose\n    fullName: System.IO.TextWriter.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Dispose()\n  commentId: M:System.IO.TextWriter.Dispose\n- uid: System.IO.TextWriter.Flush\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Flush()\n  fullName: System.IO.TextWriter.Flush()\n  spec.csharp:\n  - uid: System.IO.TextWriter.Flush\n    name: Flush\n    fullName: System.IO.TextWriter.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Flush\n    name: Flush\n    fullName: System.IO.TextWriter.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Flush()\n  commentId: M:System.IO.TextWriter.Flush\n- uid: System.IO.TextWriter.Write(System.Boolean)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Boolean)\n  fullName: System.IO.TextWriter.Write(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Boolean)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Boolean)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Boolean)\n  commentId: M:System.IO.TextWriter.Write(System.Boolean)\n- uid: System.IO.TextWriter.Write(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Char[])\n  fullName: System.IO.TextWriter.Write(System.Char[])\n  fullname.vb: System.IO.TextWriter.Write(System.Char())\n  name.vb: Write(Char())\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Char[])\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Char[])\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Char[])\n  nameWithType.vb: TextWriter.Write(Char())\n  commentId: M:System.IO.TextWriter.Write(System.Char[])\n- uid: System.IO.TextWriter.Write(System.Decimal)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Decimal)\n  fullName: System.IO.TextWriter.Write(System.Decimal)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Decimal)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Decimal)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Decimal)\n  commentId: M:System.IO.TextWriter.Write(System.Decimal)\n- uid: System.IO.TextWriter.Write(System.Double)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Double)\n  fullName: System.IO.TextWriter.Write(System.Double)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Double)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Double)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Double)\n  commentId: M:System.IO.TextWriter.Write(System.Double)\n- uid: System.IO.TextWriter.Write(System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Int32)\n  fullName: System.IO.TextWriter.Write(System.Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Int32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Int32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Int32)\n  commentId: M:System.IO.TextWriter.Write(System.Int32)\n- uid: System.IO.TextWriter.Write(System.Int64)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Int64)\n  fullName: System.IO.TextWriter.Write(System.Int64)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Int64)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Int64)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Int64)\n  commentId: M:System.IO.TextWriter.Write(System.Int64)\n- uid: System.IO.TextWriter.Write(System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Object)\n  fullName: System.IO.TextWriter.Write(System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Object)\n  commentId: M:System.IO.TextWriter.Write(System.Object)\n- uid: System.IO.TextWriter.Write(System.Single)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Single)\n  fullName: System.IO.TextWriter.Write(System.Single)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Single)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Single)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Single)\n  commentId: M:System.IO.TextWriter.Write(System.Single)\n- uid: System.IO.TextWriter.Write(System.String,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String, Object)\n  fullName: System.IO.TextWriter.Write(System.String, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String, Object)\n  commentId: M:System.IO.TextWriter.Write(System.String,System.Object)\n- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String, Object, Object)\n  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String, Object, Object)\n  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String, Object, Object, Object)\n  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String, Object, Object, Object)\n  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n- uid: System.IO.TextWriter.Write(System.String,System.Object[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String, Object[])\n  fullName: System.IO.TextWriter.Write(System.String, System.Object[])\n  fullname.vb: System.IO.TextWriter.Write(System.String, System.Object())\n  name.vb: Write(String, Object())\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object[])\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object[])\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String, Object[])\n  nameWithType.vb: TextWriter.Write(String, Object())\n  commentId: M:System.IO.TextWriter.Write(System.String,System.Object[])\n- uid: System.IO.TextWriter.Write(System.UInt32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(UInt32)\n  fullName: System.IO.TextWriter.Write(System.UInt32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.UInt32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.UInt32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(UInt32)\n  commentId: M:System.IO.TextWriter.Write(System.UInt32)\n- uid: System.IO.TextWriter.Write(System.UInt64)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(UInt64)\n  fullName: System.IO.TextWriter.Write(System.UInt64)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.UInt64)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.UInt64)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(UInt64)\n  commentId: M:System.IO.TextWriter.Write(System.UInt64)\n- uid: System.IO.TextWriter.WriteAsync(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteAsync(Char[])\n  fullName: System.IO.TextWriter.WriteAsync(System.Char[])\n  fullname.vb: System.IO.TextWriter.WriteAsync(System.Char())\n  name.vb: WriteAsync(Char())\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char[])\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char[])\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteAsync(Char[])\n  nameWithType.vb: TextWriter.WriteAsync(Char())\n  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[])\n- uid: System.IO.TextWriter.WriteLine\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine()\n  fullName: System.IO.TextWriter.WriteLine()\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine()\n  commentId: M:System.IO.TextWriter.WriteLine\n- uid: System.IO.TextWriter.WriteLine(System.Boolean)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Boolean)\n  fullName: System.IO.TextWriter.WriteLine(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Boolean)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Boolean)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Boolean)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Boolean)\n- uid: System.IO.TextWriter.WriteLine(System.Char)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Char)\n  fullName: System.IO.TextWriter.WriteLine(System.Char)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Char)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Char)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Char)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Char)\n- uid: System.IO.TextWriter.WriteLine(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Char[])\n  fullName: System.IO.TextWriter.WriteLine(System.Char[])\n  fullname.vb: System.IO.TextWriter.WriteLine(System.Char())\n  name.vb: WriteLine(Char())\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Char[])\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Char[])\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Char[])\n  nameWithType.vb: TextWriter.WriteLine(Char())\n  commentId: M:System.IO.TextWriter.WriteLine(System.Char[])\n- uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Char[], Int32, Int32)\n  fullName: System.IO.TextWriter.WriteLine(System.Char[], System.Int32, System.Int32)\n  fullname.vb: System.IO.TextWriter.WriteLine(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteLine(Char(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Char[], Int32, Int32)\n  nameWithType.vb: TextWriter.WriteLine(Char(), Int32, Int32)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n- uid: System.IO.TextWriter.WriteLine(System.Decimal)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Decimal)\n  fullName: System.IO.TextWriter.WriteLine(System.Decimal)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Decimal)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Decimal)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Decimal)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Decimal)\n- uid: System.IO.TextWriter.WriteLine(System.Double)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Double)\n  fullName: System.IO.TextWriter.WriteLine(System.Double)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Double)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Double)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Double)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Double)\n- uid: System.IO.TextWriter.WriteLine(System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Int32)\n  fullName: System.IO.TextWriter.WriteLine(System.Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Int32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Int32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Int32)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Int32)\n- uid: System.IO.TextWriter.WriteLine(System.Int64)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Int64)\n  fullName: System.IO.TextWriter.WriteLine(System.Int64)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Int64)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Int64)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Int64)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Int64)\n- uid: System.IO.TextWriter.WriteLine(System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Object)\n  fullName: System.IO.TextWriter.WriteLine(System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Object)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Object)\n- uid: System.IO.TextWriter.WriteLine(System.Single)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Single)\n  fullName: System.IO.TextWriter.WriteLine(System.Single)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Single)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Single)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Single)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Single)\n- uid: System.IO.TextWriter.WriteLine(System.String)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String)\n  fullName: System.IO.TextWriter.WriteLine(System.String)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String)\n  commentId: M:System.IO.TextWriter.WriteLine(System.String)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String, Object)\n  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String, Object)\n  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String, Object, Object)\n  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String, Object, Object)\n  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String, Object, Object, Object)\n  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String, Object, Object, Object)\n  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String, Object[])\n  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object[])\n  fullname.vb: System.IO.TextWriter.WriteLine(System.String, System.Object())\n  name.vb: WriteLine(String, Object())\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String, Object[])\n  nameWithType.vb: TextWriter.WriteLine(String, Object())\n  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object[])\n- uid: System.IO.TextWriter.WriteLine(System.UInt32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(UInt32)\n  fullName: System.IO.TextWriter.WriteLine(System.UInt32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.UInt32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.UInt32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(UInt32)\n  commentId: M:System.IO.TextWriter.WriteLine(System.UInt32)\n- uid: System.IO.TextWriter.WriteLine(System.UInt64)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(UInt64)\n  fullName: System.IO.TextWriter.WriteLine(System.UInt64)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.UInt64)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.UInt64)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(UInt64)\n  commentId: M:System.IO.TextWriter.WriteLine(System.UInt64)\n- uid: System.IO.TextWriter.WriteLineAsync\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLineAsync()\n  fullName: System.IO.TextWriter.WriteLineAsync()\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync()\n  commentId: M:System.IO.TextWriter.WriteLineAsync\n- uid: System.IO.TextWriter.WriteLineAsync(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLineAsync(Char[])\n  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[])\n  fullname.vb: System.IO.TextWriter.WriteLineAsync(System.Char())\n  name.vb: WriteLineAsync(Char())\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[])\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[])\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync(Char[])\n  nameWithType.vb: TextWriter.WriteLineAsync(Char())\n  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[])\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  nameWithType: IFormatProvider\n  commentId: T:System.IFormatProvider\n- uid: System.Text.StringBuilder\n  parent: System.Text\n  isExternal: false\n  name: StringBuilder\n  fullName: System.Text.StringBuilder\n  nameWithType: StringBuilder\n  commentId: T:System.Text.StringBuilder\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.IO.TextWriter.Encoding\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Encoding\n  fullName: System.IO.TextWriter.Encoding\n  nameWithType: TextWriter.Encoding\n  commentId: P:System.IO.TextWriter.Encoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  fullName: System.Text.Encoding\n  nameWithType: Encoding\n  commentId: T:System.Text.Encoding\n- uid: System.IO.TextWriter.Dispose(System.Boolean)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.IO.TextWriter.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.TextWriter.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.TextWriter.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Dispose(Boolean)\n  commentId: M:System.IO.TextWriter.Dispose(System.Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IO.TextWriter.FlushAsync\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: FlushAsync()\n  fullName: System.IO.TextWriter.FlushAsync()\n  spec.csharp:\n  - uid: System.IO.TextWriter.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.TextWriter.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.TextWriter.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.FlushAsync()\n  commentId: M:System.IO.TextWriter.FlushAsync\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  nameWithType: Task\n  commentId: T:System.Threading.Tasks.Task\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.IO.TextWriter.Write(System.Char)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Char)\n  fullName: System.IO.TextWriter.Write(System.Char)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Char)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Char)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Char)\n  commentId: M:System.IO.TextWriter.Write(System.Char)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Char[], Int32, Int32)\n  fullName: System.IO.TextWriter.Write(System.Char[], System.Int32, System.Int32)\n  fullname.vb: System.IO.TextWriter.Write(System.Char(), System.Int32, System.Int32)\n  name.vb: Write(Char(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Char[], Int32, Int32)\n  nameWithType.vb: TextWriter.Write(Char(), Int32, Int32)\n  commentId: M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n- uid: System.Char[]\n  name: Char[]\n  fullName: System.Char[]\n  fullname.vb: System.Char()\n  name.vb: Char()\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Char[]\n  nameWithType.vb: Char()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.IO.TextWriter.Write(System.String)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String)\n  fullName: System.IO.TextWriter.Write(System.String)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String)\n  commentId: M:System.IO.TextWriter.Write(System.String)\n- uid: System.IO.TextWriter.WriteAsync(System.Char)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteAsync(Char)\n  fullName: System.IO.TextWriter.WriteAsync(System.Char)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteAsync(Char)\n  commentId: M:System.IO.TextWriter.WriteAsync(System.Char)\n- uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteAsync(Char[], Int32, Int32)\n  fullName: System.IO.TextWriter.WriteAsync(System.Char[], System.Int32, System.Int32)\n  fullname.vb: System.IO.TextWriter.WriteAsync(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Char(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteAsync(Char[], Int32, Int32)\n  nameWithType.vb: TextWriter.WriteAsync(Char(), Int32, Int32)\n  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n- uid: System.IO.TextWriter.WriteAsync(System.String)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteAsync(String)\n  fullName: System.IO.TextWriter.WriteAsync(System.String)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteAsync(System.String)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteAsync(System.String)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteAsync(String)\n  commentId: M:System.IO.TextWriter.WriteAsync(System.String)\n- uid: System.IO.TextWriter.WriteLineAsync(System.Char)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLineAsync(Char)\n  fullName: System.IO.TextWriter.WriteLineAsync(System.Char)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync(Char)\n  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char)\n- uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLineAsync(Char[], Int32, Int32)\n  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32)\n  fullname.vb: System.IO.TextWriter.WriteLineAsync(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteLineAsync(Char(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync(Char[], Int32, Int32)\n  nameWithType.vb: TextWriter.WriteLineAsync(Char(), Int32, Int32)\n  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n- uid: System.IO.TextWriter.WriteLineAsync(System.String)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLineAsync(String)\n  fullName: System.IO.TextWriter.WriteLineAsync(System.String)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.String)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.String)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync(String)\n  commentId: M:System.IO.TextWriter.WriteLineAsync(System.String)\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}