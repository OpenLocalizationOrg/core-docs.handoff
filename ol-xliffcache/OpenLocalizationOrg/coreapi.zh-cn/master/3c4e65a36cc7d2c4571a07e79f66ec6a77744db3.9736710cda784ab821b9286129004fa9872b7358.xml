{"nodes":[{"pos":[801,820],"content":"CustomAttributeData","needQuote":true,"nodes":[{"content":"CustomAttributeData","pos":[0,19]}]},{"pos":[2602,2615],"content":"AttributeType","needQuote":true,"nodes":[{"content":"AttributeType","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The type of the attribute.&lt;/p&gt;\\n","pos":[3280,3317],"source":"\\n<p>The type of the attribute.</p>\\n"},{"pos":[3726,3746],"content":"ConstructorArguments","needQuote":true,"nodes":[{"content":"ConstructorArguments","pos":[0,20]}]},{"content":"\\n&lt;p&gt;A collection of structures that represent the positional arguments specified for the custom attribute instance.&lt;/p&gt;\\n","pos":[4831,4953],"source":"\\n<p>A collection of structures that represent the positional arguments specified for the custom attribute instance.</p>\\n"},{"pos":[5806,5820],"content":"NamedArguments","needQuote":true,"nodes":[{"content":"NamedArguments","pos":[0,14]}]},{"content":"\\n&lt;p&gt;A collection of structures that represent the named arguments specified for the custom attribute instance.&lt;/p&gt;\\n","pos":[6806,6923],"source":"\\n<p>A collection of structures that represent the named arguments specified for the custom attribute instance.</p>\\n"},{"pos":[7773,7784],"content":"Constructor","needQuote":true,"nodes":[{"content":"Constructor","pos":[0,11]}]},{"pos":[9792,9821],"content":"GetCustomAttributes(Assembly)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Assembly)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The assembly whose custom attribute data is to be retrieved.&lt;/p&gt;\\n","pos":[10810,10881],"source":"\\n<p>The assembly whose custom attribute data is to be retrieved.</p>\\n"},{"content":"\\n&lt;p&gt;A list of objects that represent data about the attributes that have been applied to the target assembly.&lt;/p&gt;\\n","pos":[10999,11115],"source":"\\n<p>A list of objects that represent data about the attributes that have been applied to the target assembly.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;target&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11234,11288],"source":"\\n<p>\\n<em>target</em> is <strong>null</strong>.</p>\\n"},{"pos":[12095,12126],"content":"GetCustomAttributes(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The member whose attribute data is to be retrieved.&lt;/p&gt;\\n","pos":[13121,13183],"source":"\\n<p>The member whose attribute data is to be retrieved.</p>\\n"},{"content":"\\n&lt;p&gt;A list of objects that represent data about the attributes that have been applied to the target member.&lt;/p&gt;\\n","pos":[13301,13415],"source":"\\n<p>A list of objects that represent data about the attributes that have been applied to the target member.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;target&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13534,13588],"source":"\\n<p>\\n<em>target</em> is <strong>null</strong>.</p>\\n"},{"pos":[14385,14412],"content":"GetCustomAttributes(Module)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Module)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The module whose custom attribute data is to be retrieved.&lt;/p&gt;\\n","pos":[15392,15461],"source":"\\n<p>The module whose custom attribute data is to be retrieved.</p>\\n"},{"content":"\\n&lt;p&gt;A list of objects that represent data about the attributes that have been applied to the target module.&lt;/p&gt;\\n","pos":[15579,15693],"source":"\\n<p>A list of objects that represent data about the attributes that have been applied to the target module.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;target&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15812,15866],"source":"\\n<p>\\n<em>target</em> is <strong>null</strong>.</p>\\n"},{"pos":[16358,16392],"content":"GetCustomAttributes(ParameterInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(ParameterInfo)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The parameter whose attribute data is to be retrieved.&lt;/p&gt;\\n","pos":[17402,17467],"source":"\\n<p>The parameter whose attribute data is to be retrieved.</p>\\n"},{"content":"\\n&lt;p&gt;A list of objects that represent data about the attributes that have been applied to the target parameter.&lt;/p&gt;\\n","pos":[17585,17702],"source":"\\n<p>A list of objects that represent data about the attributes that have been applied to the target parameter.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;target&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17821,17875],"source":"\\n<p>\\n<em>target</em> is <strong>null</strong>.</p>\\n"},{"pos":[18415,18432],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[18596,18602],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18762,18772],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[18867,18875],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[18944,18945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18972,18973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19043,19051],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[19120,19121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19148,19149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19332,19346],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[19465,19471],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19538,19539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19589,19595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19655,19656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19739,19745],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19812,19813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19863,19869],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19929,19930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20144,20166],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[20314,20320],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20387,20388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20438,20444],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20505,20506]},{"pos":[20561,20567],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20627,20628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20725,20731],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20798,20799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20849,20855],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20916,20917]},{"pos":[20972,20978],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21038,21039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21284,21315],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[21481,21496],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21572,21573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21623,21629],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21690,21691]},{"pos":[21746,21752],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21812,21813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21919,21934],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22010,22011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22061,22067],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22128,22129]},{"pos":[22184,22190],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22250,22251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22481,22494],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22595,22606],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22678,22679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22706,22707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22780,22791],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22863,22864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22891,22892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23067,23076],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[23169,23176],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23244,23245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23272,23273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23342,23349],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23417,23418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23445,23446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23621,23638],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[23747,23762],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[23838,23839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23866,23867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23944,23959],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24035,24036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24063,24064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24209,24215],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[24344,24348],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[24603,24638],"content":"IList<CustomAttributeTypedArgument>","needQuote":true,"nodes":[{"content":"IList&lt;CustomAttributeTypedArgument&gt;","pos":[0,35],"source":"IList<CustomAttributeTypedArgument>"}]},{"pos":[24950,24955],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[25034,25035],"content":"<","needQuote":true,"nodes":[]},{"pos":[25118,25146],"content":"CustomAttributeTypedArgument","needQuote":true,"nodes":[{"content":"CustomAttributeTypedArgument","pos":[0,28]}]},{"pos":[25305,25310],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[25390,25393]},{"pos":[25483,25511],"content":"CustomAttributeTypedArgument","needQuote":true,"nodes":[{"content":"CustomAttributeTypedArgument","pos":[0,28]}]},{"pos":[25583,25584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25877,25885],"content":"IList<T>","needQuote":true,"nodes":[{"content":"IList&lt;T&gt;","pos":[0,8],"source":"IList<T>"}]},{"pos":[26080,26085],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[26143,26144],"content":"<","needQuote":true,"nodes":[]},{"pos":[26171,26172],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26286,26291],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[26350,26353]},{"pos":[26387,26388],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26415,26416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26601,26627],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[26934,26969],"content":"IList<CustomAttributeNamedArgument>","needQuote":true,"nodes":[{"content":"IList&lt;CustomAttributeNamedArgument&gt;","pos":[0,35],"source":"IList<CustomAttributeNamedArgument>"}]},{"pos":[27281,27286],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[27365,27366],"content":"<","needQuote":true,"nodes":[]},{"pos":[27449,27477],"content":"CustomAttributeNamedArgument","needQuote":true,"nodes":[{"content":"CustomAttributeNamedArgument","pos":[0,28]}]},{"pos":[27636,27641],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[27721,27724]},{"pos":[27814,27842],"content":"CustomAttributeNamedArgument","needQuote":true,"nodes":[{"content":"CustomAttributeNamedArgument","pos":[0,28]}]},{"pos":[27914,27915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28235,28250],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[28468,28476],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[28756,28782],"content":"IList<CustomAttributeData>","needQuote":true,"nodes":[{"content":"IList&lt;CustomAttributeData&gt;","pos":[0,26],"source":"IList<CustomAttributeData>"}]},{"pos":[29067,29072],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[29151,29152],"content":"<","needQuote":true,"nodes":[]},{"pos":[29226,29245],"content":"CustomAttributeData","needQuote":true,"nodes":[{"content":"CustomAttributeData","pos":[0,19]}]},{"pos":[29395,29400],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[29480,29483]},{"pos":[29564,29583],"content":"CustomAttributeData","needQuote":true,"nodes":[{"content":"CustomAttributeData","pos":[0,19]}]},{"pos":[29646,29647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29935,29945],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[30146,30152],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[30348,30361],"content":"ParameterInfo","needQuote":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"pos":[30547,30568],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Reflection.CustomAttributeData\n  commentId: T:System.Reflection.CustomAttributeData\n  id: CustomAttributeData\n  parent: System.Reflection\n  children:\n  - System.Reflection.CustomAttributeData.AttributeType\n  - System.Reflection.CustomAttributeData.Constructor\n  - System.Reflection.CustomAttributeData.ConstructorArguments\n  - System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)\n  - System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Reflection.CustomAttributeData.NamedArguments\n  langs:\n  - csharp\n  - vb\n  name: CustomAttributeData\n  fullName: System.Reflection.CustomAttributeData\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CustomAttributeData\n    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n    startLine: 23\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class CustomAttributeData\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class CustomAttributeData\n  seealso:\n  - type: System.Reflection.Assembly.ReflectionOnlyLoad\n    commentId: Overload:System.Reflection.Assembly.ReflectionOnlyLoad\n  - type: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n    commentId: M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: CustomAttributeData\n- uid: System.Reflection.CustomAttributeData.AttributeType\n  commentId: P:System.Reflection.CustomAttributeData.AttributeType\n  id: AttributeType\n  parent: System.Reflection.CustomAttributeData\n  langs:\n  - csharp\n  - vb\n  name: AttributeType\n  fullName: System.Reflection.CustomAttributeData.AttributeType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AttributeType\n    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n    startLine: 522\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the type of the attribute.</p>\\n\"\n  syntax:\n    content: public Type AttributeType { get; }\n    content.vb: Public ReadOnly Property AttributeType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The type of the attribute.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CustomAttributeData.AttributeType\n- uid: System.Reflection.CustomAttributeData.ConstructorArguments\n  commentId: P:System.Reflection.CustomAttributeData.ConstructorArguments\n  id: ConstructorArguments\n  parent: System.Reflection.CustomAttributeData\n  langs:\n  - csharp\n  - vb\n  name: ConstructorArguments\n  fullName: System.Reflection.CustomAttributeData.ConstructorArguments\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ConstructorArguments\n    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n    startLine: 527\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the list of positional arguments specified for the attribute instance represented by the <xref href=\\\"System.Reflection.CustomAttributeData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public virtual IList<CustomAttributeTypedArgument> ConstructorArguments { get; }\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeTypedArgument}\n      description: \"\\n<p>A collection of structures that represent the positional arguments specified for the custom attribute instance.</p>\\n\"\n  seealso:\n  - type: System.Reflection.CustomAttributeData.NamedArguments\n    commentId: P:System.Reflection.CustomAttributeData.NamedArguments\n  - type: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n    commentId: M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  - type: System.Reflection.Assembly.ReflectionOnlyLoad\n    commentId: Overload:System.Reflection.Assembly.ReflectionOnlyLoad\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CustomAttributeData.ConstructorArguments\n- uid: System.Reflection.CustomAttributeData.NamedArguments\n  commentId: P:System.Reflection.CustomAttributeData.NamedArguments\n  id: NamedArguments\n  parent: System.Reflection.CustomAttributeData\n  langs:\n  - csharp\n  - vb\n  name: NamedArguments\n  fullName: System.Reflection.CustomAttributeData.NamedArguments\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NamedArguments\n    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n    startLine: 550\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the list of named arguments specified for the attribute instance represented by the <xref href=\\\"System.Reflection.CustomAttributeData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual IList<CustomAttributeNamedArgument> NamedArguments { get; }\n    content.vb: Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeNamedArgument}\n      description: \"\\n<p>A collection of structures that represent the named arguments specified for the custom attribute instance.</p>\\n\"\n  seealso:\n  - type: System.Reflection.CustomAttributeData.ConstructorArguments\n    commentId: P:System.Reflection.CustomAttributeData.ConstructorArguments\n  - type: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n    commentId: M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  - type: System.Reflection.Assembly.ReflectionOnlyLoad\n    commentId: Overload:System.Reflection.Assembly.ReflectionOnlyLoad\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CustomAttributeData.NamedArguments\n- uid: System.Reflection.CustomAttributeData.Constructor\n  commentId: P:System.Reflection.CustomAttributeData.Constructor\n  id: Constructor\n  parent: System.Reflection.CustomAttributeData\n  langs:\n  - csharp\n  - vb\n  name: Constructor\n  fullName: System.Reflection.CustomAttributeData.Constructor\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Constructor\n    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n    startLine: 524\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Reflection.ConstructorInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the constructor that would have initialized the custom attribute.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public virtual ConstructorInfo Constructor { get; }\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Overridable ReadOnly Property Constructor As ConstructorInfo\n    parameters: []\n    return:\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <xref href=\\\"System.Reflection.CustomAttributeData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  seealso:\n  - type: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n    commentId: M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  - type: System.Reflection.Assembly.ReflectionOnlyLoad\n    commentId: Overload:System.Reflection.Assembly.ReflectionOnlyLoad\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CustomAttributeData.Constructor\n- uid: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)\n  commentId: M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)\n  id: GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Reflection.CustomAttributeData\n  langs:\n  - csharp\n  - vb\n  name: GetCustomAttributes(Assembly)\n  fullName: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCustomAttributes\n    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n    startLine: 45\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Returns a list of <xref href=\\\"System.Reflection.CustomAttributeData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects representing data about the attributes that have been applied to the target assembly.</p>\\n\"\n  syntax:\n    content: public static IList<CustomAttributeData> GetCustomAttributes(Assembly target)\n    content.vb: Public Shared Function GetCustomAttributes(target As Assembly) As IList(Of CustomAttributeData)\n    parameters:\n    - id: target\n      type: System.Reflection.Assembly\n      description: \"\\n<p>The assembly whose custom attribute data is to be retrieved.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n      description: \"\\n<p>A list of objects that represent data about the attributes that have been applied to the target assembly.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>target</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n    commentId: M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  - type: System.Reflection.Assembly.ReflectionOnlyLoad\n    commentId: Overload:System.Reflection.Assembly.ReflectionOnlyLoad\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CustomAttributeData.GetCustomAttributes(Assembly)\n- uid: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)\n  id: GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeData\n  langs:\n  - csharp\n  - vb\n  name: GetCustomAttributes(MemberInfo)\n  fullName: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCustomAttributes\n    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n    startLine: 28\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Returns a list of <xref href=\\\"System.Reflection.CustomAttributeData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects representing data about the attributes that have been applied to the target member.</p>\\n\"\n  syntax:\n    content: public static IList<CustomAttributeData> GetCustomAttributes(MemberInfo target)\n    content.vb: Public Shared Function GetCustomAttributes(target As MemberInfo) As IList(Of CustomAttributeData)\n    parameters:\n    - id: target\n      type: System.Reflection.MemberInfo\n      description: \"\\n<p>The member whose attribute data is to be retrieved.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n      description: \"\\n<p>A list of objects that represent data about the attributes that have been applied to the target member.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>target</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n    commentId: M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  - type: System.Reflection.Assembly.ReflectionOnlyLoad\n    commentId: Overload:System.Reflection.Assembly.ReflectionOnlyLoad\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CustomAttributeData.GetCustomAttributes(MemberInfo)\n- uid: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)\n  commentId: M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)\n  id: GetCustomAttributes(System.Reflection.Module)\n  parent: System.Reflection.CustomAttributeData\n  langs:\n  - csharp\n  - vb\n  name: GetCustomAttributes(Module)\n  fullName: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCustomAttributes\n    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n    startLine: 36\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Returns a list of <xref href=\\\"System.Reflection.CustomAttributeData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects representing data about the attributes that have been applied to the target module.</p>\\n\"\n  syntax:\n    content: public static IList<CustomAttributeData> GetCustomAttributes(Module target)\n    content.vb: Public Shared Function GetCustomAttributes(target As  Module) As IList(Of CustomAttributeData)\n    parameters:\n    - id: target\n      type: System.Reflection.Module\n      description: \"\\n<p>The module whose custom attribute data is to be retrieved.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n      description: \"\\n<p>A list of objects that represent data about the attributes that have been applied to the target module.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>target</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CustomAttributeData.GetCustomAttributes(Module)\n- uid: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)\n  commentId: M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)\n  id: GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Reflection.CustomAttributeData\n  langs:\n  - csharp\n  - vb\n  name: GetCustomAttributes(ParameterInfo)\n  fullName: System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCustomAttributes\n    path: src/mscorlib/src/System/Reflection/CustomAttribute.cs\n    startLine: 54\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Returns a list of <xref href=\\\"System.Reflection.CustomAttributeData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects representing data about the attributes that have been applied to the target parameter.</p>\\n\"\n  syntax:\n    content: public static IList<CustomAttributeData> GetCustomAttributes(ParameterInfo target)\n    content.vb: Public Shared Function GetCustomAttributes(target As ParameterInfo) As IList(Of CustomAttributeData)\n    parameters:\n    - id: target\n      type: System.Reflection.ParameterInfo\n      description: \"\\n<p>The parameter whose attribute data is to be retrieved.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n      description: \"\\n<p>A list of objects that represent data about the attributes that have been applied to the target parameter.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>target</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n    commentId: M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  - type: System.Reflection.Assembly.ReflectionOnlyLoad\n    commentId: Overload:System.Reflection.Assembly.ReflectionOnlyLoad\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CustomAttributeData.GetCustomAttributes(ParameterInfo)\nreferences:\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeTypedArgument}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IList`1\n  name: IList<CustomAttributeTypedArgument>\n  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeTypedArgument>\n  fullname.vb: System.Collections.Generic.IList(Of System.Reflection.CustomAttributeTypedArgument)\n  name.vb: IList(Of CustomAttributeTypedArgument)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.CustomAttributeTypedArgument\n    name: CustomAttributeTypedArgument\n    fullName: System.Reflection.CustomAttributeTypedArgument\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.CustomAttributeTypedArgument\n    name: CustomAttributeTypedArgument\n    fullName: System.Reflection.CustomAttributeTypedArgument\n  - name: )\n    fullName: )\n  nameWithType: IList<CustomAttributeTypedArgument>\n  nameWithType.vb: IList(Of CustomAttributeTypedArgument)\n  commentId: T:System.Collections.Generic.IList{System.Reflection.CustomAttributeTypedArgument}\n- uid: System.Collections.Generic.IList`1\n  isExternal: false\n  name: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n  fullname.vb: System.Collections.Generic.IList(Of T)\n  name.vb: IList(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IList<T>\n  nameWithType.vb: IList(Of T)\n  commentId: T:System.Collections.Generic.IList`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeNamedArgument}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IList`1\n  name: IList<CustomAttributeNamedArgument>\n  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeNamedArgument>\n  fullname.vb: System.Collections.Generic.IList(Of System.Reflection.CustomAttributeNamedArgument)\n  name.vb: IList(Of CustomAttributeNamedArgument)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.CustomAttributeNamedArgument\n    name: CustomAttributeNamedArgument\n    fullName: System.Reflection.CustomAttributeNamedArgument\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.CustomAttributeNamedArgument\n    name: CustomAttributeNamedArgument\n    fullName: System.Reflection.CustomAttributeNamedArgument\n  - name: )\n    fullName: )\n  nameWithType: IList<CustomAttributeNamedArgument>\n  nameWithType.vb: IList(Of CustomAttributeNamedArgument)\n  commentId: T:System.Collections.Generic.IList{System.Reflection.CustomAttributeNamedArgument}\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  nameWithType: ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  fullName: System.Reflection.Assembly\n  nameWithType: Assembly\n  commentId: T:System.Reflection.Assembly\n- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IList`1\n  name: IList<CustomAttributeData>\n  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>\n  fullname.vb: System.Collections.Generic.IList(Of System.Reflection.CustomAttributeData)\n  name.vb: IList(Of CustomAttributeData)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.CustomAttributeData\n    name: CustomAttributeData\n    fullName: System.Reflection.CustomAttributeData\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.CustomAttributeData\n    name: CustomAttributeData\n    fullName: System.Reflection.CustomAttributeData\n  - name: )\n    fullName: )\n  nameWithType: IList<CustomAttributeData>\n  nameWithType.vb: IList(Of CustomAttributeData)\n  commentId: T:System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  fullName: System.Reflection.MemberInfo\n  nameWithType: MemberInfo\n  commentId: T:System.Reflection.MemberInfo\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.Module\n  nameWithType: Module\n  commentId: T:System.Reflection.Module\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n  nameWithType: ParameterInfo\n  commentId: T:System.Reflection.ParameterInfo\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}