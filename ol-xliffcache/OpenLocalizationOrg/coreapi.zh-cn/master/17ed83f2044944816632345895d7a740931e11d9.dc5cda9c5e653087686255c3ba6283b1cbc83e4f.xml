{"nodes":[{"pos":[663,682],"content":"FileFormatException","needQuote":true,"nodes":[{"content":"FileFormatException","pos":[0,19]}]},{"pos":[2738,2759],"content":"FileFormatException()","needQuote":true,"nodes":[{"content":"FileFormatException()","pos":[0,21]}]},{"pos":[3731,3758],"content":"FileFormatException(String)","needQuote":true,"nodes":[{"content":"FileFormatException(String)","pos":[0,27]}]},{"pos":[5073,5111],"content":"FileFormatException(String, Exception)","needQuote":true,"nodes":[{"content":"FileFormatException(String, Exception)","pos":[0,38]}]},{"pos":[6727,6751],"content":"FileFormatException(Uri)","needQuote":true,"nodes":[{"content":"FileFormatException(Uri)","pos":[0,24]}]},{"pos":[8041,8076],"content":"FileFormatException(Uri, Exception)","needQuote":true,"nodes":[{"content":"FileFormatException(Uri, Exception)","pos":[0,35]}]},{"pos":[9721,9753],"content":"FileFormatException(Uri, String)","needQuote":true,"nodes":[{"content":"FileFormatException(Uri, String)","pos":[0,32]}]},{"pos":[11366,11409],"content":"FileFormatException(Uri, String, Exception)","needQuote":true,"nodes":[{"content":"FileFormatException(Uri, String, Exception)","pos":[0,43]}]},{"pos":[13265,13274],"content":"SourceUri","needQuote":true,"nodes":[{"content":"SourceUri","pos":[0,9]}]},{"pos":[14325,14334],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[14474,14480],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14628,14637],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[14799,14814],"content":"SystemException","needQuote":true,"nodes":[{"content":"SystemException","pos":[0,15]}]},{"pos":[14995,15010],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]},{"pos":[15233,15246],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[15507,15517],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[15752,15770],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[15887,15903],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[15962,15963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15990,15991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16072,16088],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[16147,16148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16175,16176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16375,16385],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16486,16494],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16545,16546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16573,16574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16647,16655],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16706,16707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16734,16735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17016,17066],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[17364,17377],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[17454,17455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17538,17555],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[17649,17650]},{"pos":[17737,17753],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[17845,17846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18018,18031],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[18108,18109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18192,18209],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[18303,18304]},{"pos":[18391,18407],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[18499,18500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18820,18829],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18928,18935],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19006,19007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19034,19035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19107,19114],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19185,19186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19213,19214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19394,19401],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[19597,19601],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[19798,19812],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[20034,20044],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[20255,20265],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[20474,20482],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[20683,20689],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[20885,20892],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[21103,21123],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[21368,21382],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21501,21507],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21574,21575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21625,21631],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21691,21692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21775,21781],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21848,21849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21899,21905],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21965,21966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22180,22202],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[22350,22356],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22423,22424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22474,22480],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22541,22542]},{"pos":[22597,22603],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22663,22664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22761,22767],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22834,22835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22885,22891],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22952,22953]},{"pos":[23008,23014],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23074,23075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23320,23351],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[23517,23532],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23608,23609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23659,23665],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23726,23727]},{"pos":[23782,23788],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23848,23849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23955,23970],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24046,24047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24097,24103],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24164,24165]},{"pos":[24220,24226],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24286,24287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24517,24530],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[24631,24642],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24714,24715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24742,24743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24816,24827],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24899,24900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24927,24928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25111,25128],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[25237,25252],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25328,25329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25356,25357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25434,25449],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25525,25526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25553,25554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25699,25705],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[25834,25862],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[26059,26089],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[26292,26298],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26440,26443],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]}],"content":"items:\n- uid: System.IO.FileFormatException\n  commentId: T:System.IO.FileFormatException\n  id: FileFormatException\n  parent: System.IO\n  children:\n  - System.IO.FileFormatException.#ctor\n  - System.IO.FileFormatException.#ctor(System.String)\n  - System.IO.FileFormatException.#ctor(System.String,System.Exception)\n  - System.IO.FileFormatException.#ctor(System.Uri)\n  - System.IO.FileFormatException.#ctor(System.Uri,System.Exception)\n  - System.IO.FileFormatException.#ctor(System.Uri,System.String)\n  - System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)\n  - System.IO.FileFormatException.SourceUri\n  langs:\n  - csharp\n  - vb\n  name: FileFormatException\n  fullName: System.IO.FileFormatException\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FileFormatException\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 10\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO\n  summary: \"\\n<p>The exception that is thrown when an input file or a data stream that is supposed to conform to a certain file format specification is malformed.</p>\\n\"\n  syntax:\n    content: 'public class FileFormatException : FormatException, ISerializable, _Exception'\n    content.vb: >-\n      Public Class FileFormatException\n          Inherits FormatException\n          Implements ISerializable, _Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.SystemException\n  - System.FormatException\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: FileFormatException\n- uid: System.IO.FileFormatException.#ctor\n  commentId: M:System.IO.FileFormatException.#ctor\n  id: '#ctor'\n  parent: System.IO.FileFormatException\n  langs:\n  - csharp\n  - vb\n  name: FileFormatException()\n  fullName: System.IO.FileFormatException.FileFormatException()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 12\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.IO.FileFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public FileFormatException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileFormatException.FileFormatException()\n- uid: System.IO.FileFormatException.#ctor(System.String)\n  commentId: M:System.IO.FileFormatException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.FileFormatException\n  langs:\n  - csharp\n  - vb\n  name: FileFormatException(String)\n  fullName: System.IO.FileFormatException.FileFormatException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 13\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.IO.FileFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public FileFormatException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that represents the error message.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileFormatException.FileFormatException(String)\n- uid: System.IO.FileFormatException.#ctor(System.String,System.Exception)\n  commentId: M:System.IO.FileFormatException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.IO.FileFormatException\n  langs:\n  - csharp\n  - vb\n  name: FileFormatException(String, Exception)\n  fullName: System.IO.FileFormatException.FileFormatException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 14\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.IO.FileFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and exception type.</p>\\n\"\n  syntax:\n    content: public FileFormatException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that represents the error message.</p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The value of the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property, which represents the cause of the current exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileFormatException.FileFormatException(String, Exception)\n- uid: System.IO.FileFormatException.#ctor(System.Uri)\n  commentId: M:System.IO.FileFormatException.#ctor(System.Uri)\n  id: '#ctor(System.Uri)'\n  parent: System.IO.FileFormatException\n  langs:\n  - csharp\n  - vb\n  name: FileFormatException(Uri)\n  fullName: System.IO.FileFormatException.FileFormatException(System.Uri)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 15\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.IO.FileFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a source URI value.</p>\\n\"\n  syntax:\n    content: public FileFormatException(Uri sourceUri)\n    content.vb: Public Sub New(sourceUri As Uri)\n    parameters:\n    - id: sourceUri\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value of the file that caused this error.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileFormatException.FileFormatException(Uri)\n- uid: System.IO.FileFormatException.#ctor(System.Uri,System.Exception)\n  commentId: M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)\n  id: '#ctor(System.Uri,System.Exception)'\n  parent: System.IO.FileFormatException\n  langs:\n  - csharp\n  - vb\n  name: FileFormatException(Uri, Exception)\n  fullName: System.IO.FileFormatException.FileFormatException(System.Uri, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 16\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.IO.FileFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a source URI value and an exception type.</p>\\n\"\n  syntax:\n    content: public FileFormatException(Uri sourceUri, Exception innerException)\n    content.vb: Public Sub New(sourceUri As Uri, innerException As Exception)\n    parameters:\n    - id: sourceUri\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value of the file that caused this error.</p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The value of the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property, which represents the cause of the current exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileFormatException.FileFormatException(Uri, Exception)\n- uid: System.IO.FileFormatException.#ctor(System.Uri,System.String)\n  commentId: M:System.IO.FileFormatException.#ctor(System.Uri,System.String)\n  id: '#ctor(System.Uri,System.String)'\n  parent: System.IO.FileFormatException\n  langs:\n  - csharp\n  - vb\n  name: FileFormatException(Uri, String)\n  fullName: System.IO.FileFormatException.FileFormatException(System.Uri, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 17\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.IO.FileFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a source URI value and a specified error message.</p>\\n\"\n  syntax:\n    content: public FileFormatException(Uri sourceUri, string message)\n    content.vb: Public Sub New(sourceUri As Uri, message As String)\n    parameters:\n    - id: sourceUri\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value of the file that caused this error.</p>\\n\"\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that represents the error message.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileFormatException.FileFormatException(Uri, String)\n- uid: System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)\n  commentId: M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)\n  id: '#ctor(System.Uri,System.String,System.Exception)'\n  parent: System.IO.FileFormatException\n  langs:\n  - csharp\n  - vb\n  name: FileFormatException(Uri, String, Exception)\n  fullName: System.IO.FileFormatException.FileFormatException(System.Uri, System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 18\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.IO.FileFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a source URI value, a specified error message, and an exception type.</p>\\n\"\n  syntax:\n    content: public FileFormatException(Uri sourceUri, string message, Exception innerException)\n    content.vb: Public Sub New(sourceUri As Uri, message As String, innerException As Exception)\n    parameters:\n    - id: sourceUri\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value of the file that caused this error.</p>\\n\"\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that represents the error message.</p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The value of the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property, which represents the cause of the current exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileFormatException.FileFormatException(Uri, String, Exception)\n- uid: System.IO.FileFormatException.SourceUri\n  commentId: P:System.IO.FileFormatException.SourceUri\n  id: SourceUri\n  parent: System.IO.FileFormatException\n  langs:\n  - csharp\n  - vb\n  name: SourceUri\n  fullName: System.IO.FileFormatException.SourceUri\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SourceUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 19\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO\n  summary: \"\\n<p>Gets the name of a file that caused the <xref href=\\\"System.IO.FileFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public Uri SourceUri { get; }\n    content.vb: Public ReadOnly Property SourceUri As Uri\n    parameters: []\n    return:\n      type: System.Uri\n      description: \"\\n<p>A <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the name the file that caused the exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FileFormatException.SourceUri\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n- uid: System.SystemException\n  parent: System\n  isExternal: true\n  name: SystemException\n  fullName: System.SystemException\n  commentId: T:System.SystemException\n  nameWithType: SystemException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  commentId: T:System.FormatException\n  nameWithType: FormatException\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.GetBaseException\n  nameWithType: Exception.GetBaseException()\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.ToString\n  nameWithType: Exception.ToString()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Exception.GetType\n  nameWithType: Exception.GetType()\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  commentId: P:System.Exception.Message\n  nameWithType: Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  commentId: P:System.Exception.Data\n  nameWithType: Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  commentId: P:System.Exception.InnerException\n  nameWithType: Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  commentId: P:System.Exception.Source\n  nameWithType: Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  commentId: P:System.Exception.HResult\n  nameWithType: Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n"}