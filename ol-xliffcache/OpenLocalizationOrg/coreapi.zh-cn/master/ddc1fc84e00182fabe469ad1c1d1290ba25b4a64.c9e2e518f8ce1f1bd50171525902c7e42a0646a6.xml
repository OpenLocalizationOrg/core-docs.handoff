{"nodes":[{"pos":[1197,1205],"content":"SqlChars","needQuote":true,"nodes":[{"content":"SqlChars","pos":[0,8]}]},{"pos":[2803,2813],"content":"SqlChars()","needQuote":true,"nodes":[{"content":"SqlChars()","pos":[0,10]}]},{"pos":[3782,3798],"content":"SqlChars(Char[])","needQuote":true,"nodes":[{"content":"SqlChars(Char[])","pos":[0,16]}]},{"pos":[5221,5240],"content":"SqlChars(SqlString)","needQuote":true,"nodes":[{"content":"SqlChars(SqlString)","pos":[0,19]}]},{"pos":[6560,6566],"content":"Buffer","needQuote":true,"nodes":[{"content":"Buffer","pos":[0,6]}]},{"pos":[7781,7787],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"pos":[9127,9138],"content":"Item[Int64]","needQuote":true,"nodes":[{"content":"Item[Int64]","pos":[0,11]}]},{"pos":[10602,10608],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[12180,12189],"content":"MaxLength","needQuote":true,"nodes":[{"content":"MaxLength","pos":[0,9]}]},{"pos":[14805,14810],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[16215,16246],"content":"Explicit(SqlChars to SqlString)","needQuote":true,"nodes":[{"content":"Explicit(SqlChars to SqlString)","pos":[0,31]}]},{"pos":[18308,18339],"content":"Explicit(SqlString to SqlChars)","needQuote":true,"nodes":[{"content":"Explicit(SqlString to SqlChars)","pos":[0,31]}]},{"pos":[20356,20389],"content":"Read(Int64, Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Int64, Char[], Int32, Int32)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The character array buffer to copy into.&lt;/p&gt;\\n","pos":[21701,21752],"source":"\\n<p>The character array buffer to copy into.</p>\\n"},{"pos":[22955,22971],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[24166,24175],"content":"SetNull()","needQuote":true,"nodes":[{"content":"SetNull()","pos":[0,9]}]},{"pos":[25106,25119],"content":"ToSqlString()","needQuote":true,"nodes":[{"content":"ToSqlString()","pos":[0,13]}]},{"pos":[26566,26600],"content":"Write(Int64, Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Int64, Char[], Int32, Int32)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The character array buffer to copy into.&lt;/p&gt;\\n","pos":[27786,27837],"source":"\\n<p>The character array buffer to copy into.</p>\\n"},{"pos":[28658,28678],"content":"System.Data.SqlTypes","needQuote":true,"nodes":[{"content":"System.Data.SqlTypes","pos":[0,20]}]},{"pos":[28851,28857],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29033,29042],"content":"INullable","needQuote":true,"nodes":[{"content":"INullable","pos":[0,9]}]},{"pos":[29239,29249],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[29344,29352],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29421,29422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29449,29450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29520,29528],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29597,29598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29625,29626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29809,29823],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[29942,29948],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30015,30016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30066,30072],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30132,30133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30216,30222],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30289,30290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30340,30346],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30406,30407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30621,30643],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[30791,30797],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30864,30865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30915,30921],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30982,30983]},{"pos":[31038,31044],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31104,31105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31202,31208],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31275,31276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31326,31332],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31393,31394]},{"pos":[31449,31455],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31515,31516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31761,31792],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[31958,31973],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[32049,32050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32100,32106],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32167,32168]},{"pos":[32223,32229],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32289,32290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32396,32411],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[32487,32488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32538,32544],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32605,32606]},{"pos":[32661,32667],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32727,32728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32958,32971],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[33072,33083],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33155,33156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33183,33184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33257,33268],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33340,33341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33368,33369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33544,33553],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[33646,33653],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[33721,33722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33749,33750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33819,33826],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[33894,33895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33922,33923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34098,34115],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[34224,34239],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34315,34316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34343,34344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34421,34436],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34512,34513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34540,34541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34686,34692],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[34786,34792],"content":"Char[]","needQuote":true,"nodes":[{"content":"Char[]","pos":[0,6]}]},{"pos":[34912,34916],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[34975,34977]},{"pos":[35040,35044],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[35102,35104],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[35268,35277],"content":"SqlString","needQuote":true,"nodes":[{"content":"SqlString","pos":[0,9]}]},{"pos":[35507,35513],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"pos":[35717,35724],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35871,35876],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[36016,36020],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[36189,36197],"content":"SqlChars","needQuote":true,"nodes":[{"content":"SqlChars","pos":[0,8]}]},{"pos":[36375,36380],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Data.SqlTypes.SqlChars\n  commentId: T:System.Data.SqlTypes.SqlChars\n  id: SqlChars\n  parent: System.Data.SqlTypes\n  children:\n  - System.Data.SqlTypes.SqlChars.#ctor\n  - System.Data.SqlTypes.SqlChars.#ctor(System.Char[])\n  - System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)\n  - System.Data.SqlTypes.SqlChars.Buffer\n  - System.Data.SqlTypes.SqlChars.IsNull\n  - System.Data.SqlTypes.SqlChars.Item(System.Int64)\n  - System.Data.SqlTypes.SqlChars.Length\n  - System.Data.SqlTypes.SqlChars.MaxLength\n  - System.Data.SqlTypes.SqlChars.Null\n  - System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString\n  - System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars\n  - System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)\n  - System.Data.SqlTypes.SqlChars.SetLength(System.Int64)\n  - System.Data.SqlTypes.SqlChars.SetNull\n  - System.Data.SqlTypes.SqlChars.ToSqlString\n  - System.Data.SqlTypes.SqlChars.Value\n  - System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: SqlChars\n  fullName: System.Data.SqlTypes.SqlChars\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlChars\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 14\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>\\n<xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a mutable reference type that wraps a <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array or a <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: 'public sealed class SqlChars : INullable'\n    content.vb: >-\n      Public NotInheritable Class SqlChars\n          Implements INullable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Data.SqlTypes.INullable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SqlChars\n- uid: System.Data.SqlTypes.SqlChars.#ctor\n  commentId: M:System.Data.SqlTypes.SqlChars.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: SqlChars()\n  fullName: System.Data.SqlTypes.SqlChars.SqlChars()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 52\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public SqlChars()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlChars.SqlChars()\n- uid: System.Data.SqlTypes.SqlChars.#ctor(System.Char[])\n  commentId: M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])\n  id: '#ctor(System.Char[])'\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: SqlChars(Char[])\n  fullName: System.Data.SqlTypes.SqlChars.SqlChars(System.Char[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 58\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class based on the specified character array.</p>\\n\"\n  syntax:\n    content: public SqlChars(char[] buffer)\n    content.vb: Public Sub New(buffer As Char())\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>A <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlChars.SqlChars(System.Char())\n  name.vb: SqlChars(Char())\n  nameWithType: SqlChars.SqlChars(Char[])\n  nameWithType.vb: SqlChars.SqlChars(Char())\n- uid: System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)\n  commentId: M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)\n  id: '#ctor(System.Data.SqlTypes.SqlString)'\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: SqlChars(SqlString)\n  fullName: System.Data.SqlTypes.SqlChars.SqlChars(System.Data.SqlTypes.SqlString)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 79\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class based on the specified <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public SqlChars(SqlString value)\n    content.vb: Public Sub New(value As SqlString)\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlChars.SqlChars(SqlString)\n- uid: System.Data.SqlTypes.SqlChars.Buffer\n  commentId: P:System.Data.SqlTypes.SqlChars.Buffer\n  id: Buffer\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: Buffer\n  fullName: System.Data.SqlTypes.SqlChars.Buffer\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Buffer\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 113\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns a reference to the internal buffer. </p>\\n\"\n  syntax:\n    content: public char[] Buffer { get; }\n    content.vb: Public ReadOnly Property Buffer As Char()\n    parameters: []\n    return:\n      type: System.Char[]\n      description: \"\\n<p>Returns a reference to the internal buffer. For <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlChars.Buffer\n- uid: System.Data.SqlTypes.SqlChars.IsNull\n  commentId: P:System.Data.SqlTypes.SqlChars.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: IsNull\n  fullName: System.Data.SqlTypes.SqlChars.IsNull\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNull\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 102\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets a Boolean value that indicates whether this <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null.</p>\\n\"\n  syntax:\n    content: public bool IsNull { get; }\n    content.vb: Public ReadOnly Property IsNull As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null. Otherwise, <strong>false</strong>. </p>\\n\"\n  implements:\n  - System.Data.SqlTypes.INullable.IsNull\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlChars.IsNull\n- uid: System.Data.SqlTypes.SqlChars.Item(System.Int64)\n  commentId: P:System.Data.SqlTypes.SqlChars.Item(System.Int64)\n  id: Item(System.Int64)\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: Item[Int64]\n  fullName: System.Data.SqlTypes.SqlChars.Item[System.Int64]\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 198\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance at the specified index.</p>\\n\"\n  syntax:\n    content: public char this[long offset] { get; set; }\n    content.vb: Public Property Item(offset As Long) As Char\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>A <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlChars.Item(System.Int64)\n  name.vb: Item(Int64)\n  nameWithType: SqlChars.Item[Int64]\n  nameWithType.vb: SqlChars.Item(Int64)\n- uid: System.Data.SqlTypes.SqlChars.Length\n  commentId: P:System.Data.SqlTypes.SqlChars.Length\n  id: Length\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.Data.SqlTypes.SqlChars.Length\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 126\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the length of the value that is contained in the <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public long Length { get; }\n    content.vb: Public ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates the length in characters of the value that is contained in the <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n<p>Returns -1 if no buffer is available to the instance, or if the value is null. </p>\\n<p>Returns a <xref href=\\\"System.IO.Stream.Length\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for a stream-wrapped instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlChars.Length\n- uid: System.Data.SqlTypes.SqlChars.MaxLength\n  commentId: P:System.Data.SqlTypes.SqlChars.MaxLength\n  id: MaxLength\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: MaxLength\n  fullName: System.Data.SqlTypes.SqlChars.MaxLength\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxLength\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 149\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the maximum length in two-byte characters of the value the internal buffer can hold.</p>\\n\"\n  syntax:\n    content: public long MaxLength { get; }\n    content.vb: Public ReadOnly Property MaxLength As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value representing the maximum length in two-byte characters of the value of the internal buffer. </p>\\n<p>Returns -1 for a stream-wrapped <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlChars.MaxLength\n- uid: System.Data.SqlTypes.SqlChars.Null\n  commentId: P:System.Data.SqlTypes.SqlChars.Null\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  fullName: System.Data.SqlTypes.SqlChars.Null\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 499\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns a null instance of this <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static SqlChars Null { get; }\n    content.vb: Public Shared ReadOnly Property Null As SqlChars\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlChars\n      description: \"\\n<p>Returns an instance in such a way that <xref href=\\\"System.Data.SqlTypes.SqlChars.IsNull\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>. For more information, see Handling Null Values.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlChars.Null\n- uid: System.Data.SqlTypes.SqlChars.Value\n  commentId: P:System.Data.SqlTypes.SqlChars.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Data.SqlTypes.SqlChars.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 166\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns a managed copy of the value held by this <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public char[] Value { get; }\n    content.vb: Public ReadOnly Property Value As Char()\n    parameters: []\n    return:\n      type: System.Char[]\n      description: \"\\n<p>The value of this <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> as an array of characters.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlChars.Value\n- uid: System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString\n  commentId: M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString\n  id: op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlChars to SqlString)\n  fullName: System.Data.SqlTypes.SqlChars.Explicit(System.Data.SqlTypes.SqlChars to System.Data.SqlTypes.SqlString)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 430\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts a <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlString(SqlChars value)\n    content.vb: Public Shared Narrowing Operator CType(value As SqlChars) As SqlString\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlChars\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlChars.Narrowing(System.Data.SqlTypes.SqlChars to System.Data.SqlTypes.SqlString)\n  name.vb: Narrowing(SqlChars to SqlString)\n  nameWithType: SqlChars.Explicit(SqlChars to SqlString)\n  nameWithType.vb: SqlChars.Narrowing(SqlChars to SqlString)\n- uid: System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars\n  commentId: M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars\n  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlString to SqlChars)\n  fullName: System.Data.SqlTypes.SqlChars.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlChars)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 436\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts a <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlChars(SqlString value)\n    content.vb: Public Shared Narrowing Operator CType(value As SqlString) As SqlChars\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlChars\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlChars.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlChars)\n  name.vb: Narrowing(SqlString to SqlChars)\n  nameWithType: SqlChars.Explicit(SqlString to SqlChars)\n  nameWithType.vb: SqlChars.Narrowing(SqlString to SqlChars)\n- uid: System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)\n  id: Read(System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: Read(Int64, Char[], Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlChars.Read(System.Int64, System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 306\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Copies characters from this <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to the passed-in buffer and returns the number of copied characters.</p>\\n\"\n  syntax:\n    content: public long Read(long offset, char[] buffer, int offsetInBuffer, int count)\n    content.vb: Public Function Read(offset As Long, buffer As Char(), offsetInBuffer As Integer, count As Integer) As Long\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref><strong>long</strong> value offset into the value that is contained in the <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The character array buffer to copy into.</p>\\n\"\n    - id: offsetInBuffer\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> integer offset into the buffer to start copying into.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> integer value representing the number of characters to copy.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref><strong>long</strong> value representing the number of copied bytes.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlChars.Read(System.Int64, System.Char(), System.Int32, System.Int32)\n  name.vb: Read(Int64, Char(), Int32, Int32)\n  nameWithType: SqlChars.Read(Int64, Char[], Int32, Int32)\n  nameWithType.vb: SqlChars.Read(Int64, Char(), Int32, Int32)\n- uid: System.Data.SqlTypes.SqlChars.SetLength(System.Int64)\n  commentId: M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: SetLength(Int64)\n  fullName: System.Data.SqlTypes.SqlChars.SetLength(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetLength\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 272\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Sets the length of this <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public void SetLength(long value)\n    content.vb: Public Sub SetLength(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref><strong>long</strong> value representing the length.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlChars.SetLength(Int64)\n- uid: System.Data.SqlTypes.SqlChars.SetNull\n  commentId: M:System.Data.SqlTypes.SqlChars.SetNull\n  id: SetNull\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: SetNull()\n  fullName: System.Data.SqlTypes.SqlChars.SetNull()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetNull\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 261\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Sets this <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to null.</p>\\n\"\n  syntax:\n    content: public void SetNull()\n    content.vb: Public Sub SetNull\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlChars.SetNull()\n- uid: System.Data.SqlTypes.SqlChars.ToSqlString\n  commentId: M:System.Data.SqlTypes.SqlChars.ToSqlString\n  id: ToSqlString\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: ToSqlString()\n  fullName: System.Data.SqlTypes.SqlChars.ToSqlString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlString\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 420\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to its equivalent <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representation.</p>\\n\"\n  syntax:\n    content: public SqlString ToSqlString()\n    content.vb: Public Function ToSqlString As SqlString\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representation of this type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlChars.ToSqlString()\n- uid: System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)\n  id: Write(System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.SqlTypes.SqlChars\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Char[], Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlChars.Write(System.Int64, System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLChars.cs\n    startLine: 350\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Copies characters from the passed-in buffer to this <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public void Write(long offset, char[] buffer, int offsetInBuffer, int count)\n    content.vb: Public Sub Write(offset As Long, buffer As Char(), offsetInBuffer As Integer, count As Integer)\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>A <strong>long</strong> value offset into the value that is contained in the <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The character array buffer to copy into.</p>\\n\"\n    - id: offsetInBuffer\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> integer offset into the buffer to start copying into.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> integer representing the number of characters to copy.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlChars.Write(System.Int64, System.Char(), System.Int32, System.Int32)\n  name.vb: Write(Int64, Char(), Int32, Int32)\n  nameWithType: SqlChars.Write(Int64, Char[], Int32, Int32)\n  nameWithType.vb: SqlChars.Write(Int64, Char(), Int32, Int32)\nreferences:\n- uid: System.Data.SqlTypes\n  isExternal: false\n  name: System.Data.SqlTypes\n  fullName: System.Data.SqlTypes\n  nameWithType: System.Data.SqlTypes\n  commentId: N:System.Data.SqlTypes\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Data.SqlTypes.INullable\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: INullable\n  fullName: System.Data.SqlTypes.INullable\n  nameWithType: INullable\n  commentId: T:System.Data.SqlTypes.INullable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Char[]\n  name: Char[]\n  fullName: System.Char[]\n  fullname.vb: System.Char()\n  name.vb: Char()\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Char[]\n  nameWithType.vb: Char()\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n  nameWithType: SqlString\n  commentId: T:System.Data.SqlTypes.SqlString\n- uid: System.Data.SqlTypes.INullable.IsNull\n  parent: System.Data.SqlTypes.INullable\n  isExternal: false\n  name: IsNull\n  fullName: System.Data.SqlTypes.INullable.IsNull\n  nameWithType: INullable.IsNull\n  commentId: P:System.Data.SqlTypes.INullable.IsNull\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.Data.SqlTypes.SqlChars\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlChars\n  fullName: System.Data.SqlTypes.SqlChars\n  nameWithType: SqlChars\n  commentId: T:System.Data.SqlTypes.SqlChars\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}