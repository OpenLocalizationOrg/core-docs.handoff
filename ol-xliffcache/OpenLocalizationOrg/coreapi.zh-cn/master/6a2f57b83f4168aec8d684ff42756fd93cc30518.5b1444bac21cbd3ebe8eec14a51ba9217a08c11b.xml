{"nodes":[{"pos":[2316,2336],"content":"XmlElementAttributes","needQuote":true,"nodes":[{"content":"XmlElementAttributes","pos":[0,20]}]},{"pos":[4520,4542],"content":"XmlElementAttributes()","needQuote":true,"nodes":[{"content":"XmlElementAttributes()","pos":[0,22]}]},{"pos":[5636,5647],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The zero-based index of the element to get or set.","pos":[6401,6456],"source":"\\n<p>The zero-based index of the element to get or set."},{"content":"&lt;/p&gt;\\n","pos":[6457,6463],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The element at the specified index.&lt;/p&gt;\\n","pos":[6554,6600],"source":"\\n<p>The element at the specified index.</p>\\n"},{"pos":[7799,7823],"content":"Add(XmlElementAttribute)","needQuote":true,"nodes":[{"content":"Add(XmlElementAttribute)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The zero-based index of the newly added item.&lt;/p&gt;\\n","pos":[8901,8957],"source":"\\n<p>The zero-based index of the newly added item.</p>\\n"},{"pos":[9455,9484],"content":"Contains(XmlElementAttribute)","needQuote":true,"nodes":[{"content":"Contains(XmlElementAttribute)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the object exists in the collection; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10523,10632],"source":"\\n<p>\\n<strong>true</strong> if the object exists in the collection; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[11174,11210],"content":"CopyTo(XmlElementAttribute[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(XmlElementAttribute[], Int32)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which copying begins.","pos":[12388,12456],"source":"\\n<p>The zero-based index in <em>array</em> at which copying begins."},{"content":"&lt;/p&gt;\\n","pos":[12457,12463],"source":" </p>\\n"},{"pos":[13225,13253],"content":"IndexOf(XmlElementAttribute)","needQuote":true,"nodes":[{"content":"IndexOf(XmlElementAttribute)","pos":[0,28]}]},{"pos":[15055,15089],"content":"Insert(Int32, XmlElementAttribute)","needQuote":true,"nodes":[{"content":"Insert(Int32, XmlElementAttribute)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The zero-based index where the member is inserted.","pos":[15989,16044],"source":"\\n<p>The zero-based index where the member is inserted."},{"content":"&lt;/p&gt;\\n","pos":[16045,16051],"source":" </p>\\n"},{"pos":[16783,16810],"content":"Remove(XmlElementAttribute)","needQuote":true,"nodes":[{"content":"Remove(XmlElementAttribute)","pos":[0,27]}]},{"pos":[18121,18126],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[19274,19300],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"pos":[20759,20779],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"pos":[22175,22192],"content":"IList.IsFixedSize","needQuote":true,"nodes":[{"content":"IList.IsFixedSize","pos":[0,17]}]},{"pos":[23558,23574],"content":"IList.IsReadOnly","needQuote":true,"nodes":[{"content":"IList.IsReadOnly","pos":[0,16]}]},{"pos":[24955,24972],"content":"IList.Item[Int32]","needQuote":true,"nodes":[{"content":"IList.Item[Int32]","pos":[0,17]}]},{"pos":[26378,26385],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[27311,27326],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[28415,28430],"content":"RemoveAt(Int32)","needQuote":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[29656,29688],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"pos":[31179,31196],"content":"IList.Add(Object)","needQuote":true,"nodes":[{"content":"IList.Add(Object)","pos":[0,17]}]},{"pos":[32563,32585],"content":"IList.Contains(Object)","needQuote":true,"nodes":[{"content":"IList.Contains(Object)","pos":[0,22]}]},{"pos":[33997,34018],"content":"IList.IndexOf(Object)","needQuote":true,"nodes":[{"content":"IList.IndexOf(Object)","pos":[0,21]}]},{"pos":[35454,35481],"content":"IList.Insert(Int32, Object)","needQuote":true,"nodes":[{"content":"IList.Insert(Int32, Object)","pos":[0,27]}]},{"pos":[36935,36955],"content":"IList.Remove(Object)","needQuote":true,"nodes":[{"content":"IList.Remove(Object)","pos":[0,20]}]},{"pos":[37997,38021],"content":"System.Xml.Serialization","needQuote":true,"nodes":[{"content":"System.Xml.Serialization","pos":[0,24]}]},{"pos":[38206,38212],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38380,38385],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[38580,38591],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[38804,38815],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[39014,39024],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[39119,39127],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[39196,39197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39224,39225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39295,39303],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[39372,39373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39400,39401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39584,39598],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[39717,39723],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[39790,39791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39841,39847],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39907,39908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39991,39997],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40064,40065],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40115,40121],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40181,40182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40396,40418],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[40566,40572],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40639,40640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40690,40696],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[40757,40758]},{"pos":[40813,40819],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40879,40880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40977,40983],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41050,41051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41101,41107],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41168,41169]},{"pos":[41224,41230],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41290,41291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41536,41567],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[41733,41748],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[41824,41825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41875,41881],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41942,41943]},{"pos":[41998,42004],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42064,42065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42171,42186],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[42262,42263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42313,42319],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42380,42381]},{"pos":[42436,42442],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42502,42503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42733,42746],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[42847,42858],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[42930,42931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42958,42959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43032,43043],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43115,43116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43143,43144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43319,43328],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[43421,43428],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[43496,43497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43524,43525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43594,43601],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[43669,43670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43697,43698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43873,43890],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[43999,44014],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[44090,44091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44118,44119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44196,44211],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[44287,44288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44315,44316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44611,44624],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[44741,44752],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[44811,44812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44839,44840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44921,44932],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[44991,44992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45019,45020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45375,45387],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[45520,45530],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[45597,45598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45625,45626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45715,45725],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[45792,45793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45820,45821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46162,46177],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[46381,46394],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[46456,46457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46484,46485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46563,46579],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[46644,46645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46672,46673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47051,47068],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[47280,47295],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[47359,47360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47387,47388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47468,47486],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[47553,47554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47581,47582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47817,47823],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[47942,47960],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[48161,48185],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[48364,48375],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[48434,48435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48502,48513],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[48590,48591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48704,48715],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[48774,48775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48842,48853],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[48930,48931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49159,49168],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[49374,49397],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[49592,49602],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[49669,49670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49737,49748],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[49825,49826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49947,49957],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[50024,50025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50092,50103],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[50180,50181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50434,50452],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[50674,50700],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[51007,51020],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[51082,51083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51150,51161],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[51238,51239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51349,51365],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[51430,51431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51498,51509],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[51586,51587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51876,51886],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[52086,52114],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[52429,52444],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[52508,52509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52576,52587],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[52664,52665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52777,52795],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[52862,52863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52930,52941],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[53018,53019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53281,53292],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[53437,53442],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53633,53652],"content":"XmlElementAttribute","needQuote":true,"nodes":[{"content":"XmlElementAttribute","pos":[0,19]}]},{"pos":[53873,53880],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54024,54045],"content":"XmlElementAttribute[]","needQuote":true,"nodes":[{"content":"XmlElementAttribute[]","pos":[0,21]}]},{"pos":[54279,54298],"content":"XmlElementAttribute","needQuote":true,"nodes":[{"content":"XmlElementAttribute","pos":[0,19]}]},{"content":"[]","pos":[54369,54371]},{"pos":[54467,54486],"content":"XmlElementAttribute","needQuote":true,"nodes":[{"content":"XmlElementAttribute","pos":[0,19]}]},{"pos":[54556,54558],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[54768,54773],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[55031,55045],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[55324,55332],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[55584,55595],"content":"IsFixedSize","needQuote":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[55837,55847],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[56093,56104],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"pos":[56321,56325],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[56381,56382]},{"pos":[56434,56439],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":"]","pos":[56499,56500]},{"pos":[56594,56598],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[56653,56654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56703,56708],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56767,56768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57016,57023],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[57134,57139],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[57195,57196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57223,57224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57302,57307],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[57363,57364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57391,57392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57606,57621],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[57760,57773],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[57843,57844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57871,57872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57964,57977],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[58047,58048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58075,58076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58292,58303],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[58538,58553],"content":"RemoveAt(Int32)","needQuote":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[58696,58704],"content":"RemoveAt","needQuote":true,"nodes":[{"content":"RemoveAt","pos":[0,8]}]},{"pos":[58763,58764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58813,58818],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58877,58878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58973,58981],"content":"RemoveAt","needQuote":true,"nodes":[{"content":"RemoveAt","pos":[0,8]}]},{"pos":[59040,59041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59090,59095],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59154,59155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59413,59433],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[59611,59617],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[59680,59681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59730,59735],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[59774,59775]},{"pos":[59829,59834],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59893,59894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60006,60012],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[60075,60076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60125,60130],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[60169,60170]},{"pos":[60224,60229],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60288,60289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60500,60505],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[60694,60705],"content":"Add(Object)","needQuote":true,"nodes":[{"content":"Add(Object)","pos":[0,11]}]},{"pos":[60840,60843],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[60897,60898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60948,60954],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61014,61015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61106,61109],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[61163,61164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61214,61220],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61280,61281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61509,61525],"content":"Contains(Object)","needQuote":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[61670,61678],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[61737,61738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61788,61794],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61854,61855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61951,61959],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[62018,62019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62069,62075],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62135,62136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62373,62388],"content":"IndexOf(Object)","needQuote":true,"nodes":[{"content":"IndexOf(Object)","pos":[0,15]}]},{"pos":[62531,62538],"content":"IndexOf","needQuote":true,"nodes":[{"content":"IndexOf","pos":[0,7]}]},{"pos":[62596,62597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62647,62653],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62713,62714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62809,62816],"content":"IndexOf","needQuote":true,"nodes":[{"content":"IndexOf","pos":[0,7]}]},{"pos":[62874,62875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62925,62931],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62991,62992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63239,63260],"content":"Insert(Int32, Object)","needQuote":true,"nodes":[{"content":"Insert(Int32, Object)","pos":[0,21]}]},{"pos":[63428,63434],"content":"Insert","needQuote":true,"nodes":[{"content":"Insert","pos":[0,6]}]},{"pos":[63491,63492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63541,63546],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[63606,63607]},{"pos":[63662,63668],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63728,63729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63836,63842],"content":"Insert","needQuote":true,"nodes":[{"content":"Insert","pos":[0,6]}]},{"pos":[63899,63900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63949,63954],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[64014,64015]},{"pos":[64070,64076],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64136,64137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64389,64403],"content":"Remove(Object)","needQuote":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"pos":[64544,64550],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[64607,64608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64658,64664],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64724,64725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64819,64825],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[64882,64883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64933,64939],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64999,65000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65186,65213],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[65436,65457],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.Xml.Serialization.XmlElementAttributes\n  commentId: T:System.Xml.Serialization.XmlElementAttributes\n  id: XmlElementAttributes\n  parent: System.Xml.Serialization\n  children:\n  - System.Xml.Serialization.XmlElementAttributes.#ctor\n  - System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)\n  - System.Xml.Serialization.XmlElementAttributes.Clear\n  - System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)\n  - System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)\n  - System.Xml.Serialization.XmlElementAttributes.Count\n  - System.Xml.Serialization.XmlElementAttributes.GetEnumerator\n  - System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)\n  - System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)\n  - System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)\n  - System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)\n  - System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)\n  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  - vb\n  name: XmlElementAttributes\n  fullName: System.Xml.Serialization.XmlElementAttributes\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlElementAttributes\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 49\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Represents a collection of <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects used by the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to override the default way it serializes a class.</p>\\n\"\n  syntax:\n    content: 'public class XmlElementAttributes : IList, ICollection, IEnumerable'\n    content.vb: >-\n      Public Class XmlElementAttributes\n          Implements IList, ICollection, IEnumerable\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlElementAttributes\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Xml.Serialization.XmlElementAttributes.#ctor\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.#ctor\n  id: '#ctor'\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: XmlElementAttributes()\n  fullName: System.Xml.Serialization.XmlElementAttributes.XmlElementAttributes()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 136\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlElementAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public XmlElementAttributes()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlElementAttributes.XmlElementAttributes()\n- uid: System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)\n  commentId: P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Xml.Serialization.XmlElementAttributes.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 137\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Gets or sets the element at the specified index.</p>\\n\"\n  syntax:\n    content: public XmlElementAttribute this[int index] { get; set; }\n    content.vb: Public Property Item(index As Integer) As XmlElementAttribute\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the element to get or set. </p>\\n\"\n    return:\n      type: System.Xml.Serialization.XmlElementAttribute\n      description: \"\\n<p>The element at the specified index.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is not a valid index in the <xref href=\\\"System.Xml.Serialization.XmlElementAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The property is set and the <xref href=\\\"System.Xml.Serialization.XmlElementAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: XmlElementAttributes.Item[Int32]\n  nameWithType.vb: XmlElementAttributes.Item(Int32)\n- uid: System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)\n  id: Add(System.Xml.Serialization.XmlElementAttribute)\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: Add(XmlElementAttribute)\n  fullName: System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 138\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Adds an <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the collection.</p>\\n\"\n  syntax:\n    content: public int Add(XmlElementAttribute attribute)\n    content.vb: Public Function Add(attribute As XmlElementAttribute) As Integer\n    parameters:\n    - id: attribute\n      type: System.Xml.Serialization.XmlElementAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the newly added item.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlElementAttributes.Add(XmlElementAttribute)\n- uid: System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)\n  id: Contains(System.Xml.Serialization.XmlElementAttribute)\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: Contains(XmlElementAttribute)\n  fullName: System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 139\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Determines whether the collection contains the specified object.</p>\\n\"\n  syntax:\n    content: public bool Contains(XmlElementAttribute attribute)\n    content.vb: Public Function Contains(attribute As XmlElementAttribute) As Boolean\n    parameters:\n    - id: attribute\n      type: System.Xml.Serialization.XmlElementAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to look for. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the object exists in the collection; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlElementAttributes.Contains(XmlElementAttribute)\n- uid: System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)\n  id: CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(XmlElementAttribute[], Int32)\n  fullName: System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 140\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Copies the <xref href=\\\"System.Xml.Serialization.XmlElementAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or a portion of it to a one-dimensional array.</p>\\n\"\n  syntax:\n    content: public void CopyTo(XmlElementAttribute[] array, int index)\n    content.vb: Public Sub CopyTo(array As XmlElementAttribute(), index As Integer)\n    parameters:\n    - id: array\n      type: System.Xml.Serialization.XmlElementAttribute[]\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array to hold the copied elements. </p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which copying begins. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute(), System.Int32)\n  name.vb: CopyTo(XmlElementAttribute(), Int32)\n  nameWithType: XmlElementAttributes.CopyTo(XmlElementAttribute[], Int32)\n  nameWithType.vb: XmlElementAttributes.CopyTo(XmlElementAttribute(), Int32)\n- uid: System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)\n  id: IndexOf(System.Xml.Serialization.XmlElementAttribute)\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: IndexOf(XmlElementAttribute)\n  fullName: System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IndexOf\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 141\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Gets the index of the specified <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int IndexOf(XmlElementAttribute attribute)\n    content.vb: Public Function IndexOf(attribute As XmlElementAttribute) As Integer\n    parameters:\n    - id: attribute\n      type: System.Xml.Serialization.XmlElementAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> whose index is being retrieved.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlElementAttributes.IndexOf(XmlElementAttribute)\n- uid: System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)\n  id: Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: Insert(Int32, XmlElementAttribute)\n  fullName: System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32, System.Xml.Serialization.XmlElementAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Insert\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 142\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Inserts an <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the collection.</p>\\n\"\n  syntax:\n    content: public void Insert(int index, XmlElementAttribute attribute)\n    content.vb: Public Sub Insert(index As Integer, attribute As XmlElementAttribute)\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index where the member is inserted. </p>\\n\"\n    - id: attribute\n      type: System.Xml.Serialization.XmlElementAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to insert. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlElementAttributes.Insert(Int32, XmlElementAttribute)\n- uid: System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)\n  id: Remove(System.Xml.Serialization.XmlElementAttribute)\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: Remove(XmlElementAttribute)\n  fullName: System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 143\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Removes the specified object from the collection.</p>\\n\"\n  syntax:\n    content: public void Remove(XmlElementAttribute attribute)\n    content.vb: Public Sub Remove(attribute As XmlElementAttribute)\n    parameters:\n    - id: attribute\n      type: System.Xml.Serialization.XmlElementAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlElementAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove from the collection. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlElementAttributes.Remove(XmlElementAttribute)\n- uid: System.Xml.Serialization.XmlElementAttributes.Count\n  commentId: P:System.Xml.Serialization.XmlElementAttributes.Count\n  id: Count\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Xml.Serialization.XmlElementAttributes.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 51\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n  implements:\n  - System.Collections.ICollection.Count\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XmlElementAttributes.Count\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: ICollection.IsSynchronized\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.ICollection.IsSynchronized\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.IsSynchronized\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 52\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: bool ICollection.IsSynchronized { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.ICollection.IsSynchronized\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.IsSynchronized\n  nameWithType: XmlElementAttributes.ICollection.IsSynchronized\n  nameWithType.vb: XmlElementAttributes.System.Collections.ICollection.IsSynchronized\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: ICollection.SyncRoot\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.ICollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.SyncRoot\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 53\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: object ICollection.SyncRoot { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot\n    parameters: []\n    return:\n      type: System.Object\n  implements:\n  - System.Collections.ICollection.SyncRoot\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.SyncRoot\n  nameWithType: XmlElementAttributes.ICollection.SyncRoot\n  nameWithType.vb: XmlElementAttributes.System.Collections.ICollection.SyncRoot\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize\n  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.IsFixedSize\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.IsFixedSize\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.IsFixedSize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 54\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: bool IList.IsFixedSize { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.IList.IsFixedSize\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.IList.IsFixedSize\n  nameWithType: XmlElementAttributes.IList.IsFixedSize\n  nameWithType.vb: XmlElementAttributes.System.Collections.IList.IsFixedSize\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly\n  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.IsReadOnly\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.IsReadOnly\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 55\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: bool IList.IsReadOnly { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.IList.IsReadOnly\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.IList.IsReadOnly\n  nameWithType: XmlElementAttributes.IList.IsReadOnly\n  nameWithType.vb: XmlElementAttributes.System.Collections.IList.IsReadOnly\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Item[Int32]\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.this[]\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 56\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: object IList.this[int index] { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this\n    parameters:\n    - id: index\n      type: System.Int32\n    return:\n      type: System.Object\n  implements:\n  - System.Collections.IList.Item(System.Int32)\n  modifiers.csharp:\n  - get\n  - set\n  fullName.vb: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Item(System.Int32)\n  name.vb: System.Collections.IList.Item(Int32)\n  nameWithType: XmlElementAttributes.IList.Item[Int32]\n  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Item(Int32)\n- uid: System.Xml.Serialization.XmlElementAttributes.Clear\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.Clear\n  id: Clear\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Xml.Serialization.XmlElementAttributes.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 57\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: public void Clear()\n    content.vb: Public Sub Clear\n  implements:\n  - System.Collections.IList.Clear\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlElementAttributes.Clear()\n- uid: System.Xml.Serialization.XmlElementAttributes.GetEnumerator\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.GetEnumerator\n  id: GetEnumerator\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Xml.Serialization.XmlElementAttributes.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 58\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: public IEnumerator GetEnumerator()\n    content.vb: Public Function GetEnumerator As IEnumerator\n    return:\n      type: System.Collections.IEnumerator\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlElementAttributes.GetEnumerator()\n- uid: System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: RemoveAt(Int32)\n  fullName: System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAt\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 59\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: public void RemoveAt(int index)\n    content.vb: Public Sub RemoveAt(index As Integer)\n    parameters:\n    - id: index\n      type: System.Int32\n  implements:\n  - System.Collections.IList.RemoveAt(System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlElementAttributes.RemoveAt(Int32)\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.CopyTo\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 60\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: void ICollection.CopyTo(Array array, int index)\n    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo\n    parameters:\n    - id: array\n      type: System.Array\n    - id: index\n      type: System.Int32\n  implements:\n  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  nameWithType: XmlElementAttributes.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: XmlElementAttributes.System.Collections.ICollection.CopyTo(Array, Int32)\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Add(Object)\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Add(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.Add\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 61\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: int IList.Add(object value)\n    content.vb: Function System.Collections.IList.Add(value As Object) As Integer Implements IList.Add\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Int32\n  implements:\n  - System.Collections.IList.Add(System.Object)\n  name.vb: System.Collections.IList.Add(Object)\n  nameWithType: XmlElementAttributes.IList.Add(Object)\n  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Add(Object)\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Contains(Object)\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Contains(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.Contains\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 62\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: bool IList.Contains(object value)\n    content.vb: Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.IList.Contains(System.Object)\n  name.vb: System.Collections.IList.Contains(Object)\n  nameWithType: XmlElementAttributes.IList.Contains(Object)\n  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Contains(Object)\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.IndexOf(Object)\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.IndexOf(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.IndexOf\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 63\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: int IList.IndexOf(object value)\n    content.vb: Function System.Collections.IList.IndexOf(value As Object) As Integer Implements IList.IndexOf\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Int32\n  implements:\n  - System.Collections.IList.IndexOf(System.Object)\n  name.vb: System.Collections.IList.IndexOf(Object)\n  nameWithType: XmlElementAttributes.IList.IndexOf(Object)\n  nameWithType.vb: XmlElementAttributes.System.Collections.IList.IndexOf(Object)\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Insert(Int32, Object)\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Insert(System.Int32, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.Insert\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 64\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: void IList.Insert(int index, object value)\n    content.vb: Sub System.Collections.IList.Insert(index As Integer, value As Object) Implements IList.Insert\n    parameters:\n    - id: index\n      type: System.Int32\n    - id: value\n      type: System.Object\n  implements:\n  - System.Collections.IList.Insert(System.Int32,System.Object)\n  name.vb: System.Collections.IList.Insert(Int32, Object)\n  nameWithType: XmlElementAttributes.IList.Insert(Int32, Object)\n  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Insert(Int32, Object)\n- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlElementAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Remove(Object)\n  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Remove(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.Remove\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 65\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: void IList.Remove(object value)\n    content.vb: Sub System.Collections.IList.Remove(value As Object) Implements IList.Remove\n    parameters:\n    - id: value\n      type: System.Object\n  implements:\n  - System.Collections.IList.Remove(System.Object)\n  name.vb: System.Collections.IList.Remove(Object)\n  nameWithType: XmlElementAttributes.IList.Remove(Object)\n  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Remove(Object)\nreferences:\n- uid: System.Xml.Serialization\n  isExternal: false\n  name: System.Xml.Serialization\n  fullName: System.Xml.Serialization\n  commentId: N:System.Xml.Serialization\n  nameWithType: System.Xml.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  fullName: System.Collections.IList\n  commentId: T:System.Collections.IList\n  nameWithType: IList\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  commentId: T:System.Collections.ICollection\n  nameWithType: ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Xml.Serialization.XmlElementAttribute\n  parent: System.Xml.Serialization\n  isExternal: false\n  name: XmlElementAttribute\n  fullName: System.Xml.Serialization.XmlElementAttribute\n  commentId: T:System.Xml.Serialization.XmlElementAttribute\n  nameWithType: XmlElementAttribute\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.Serialization.XmlElementAttribute[]\n  name: XmlElementAttribute[]\n  fullName: System.Xml.Serialization.XmlElementAttribute[]\n  fullname.vb: System.Xml.Serialization.XmlElementAttribute()\n  name.vb: XmlElementAttribute()\n  spec.csharp:\n  - uid: System.Xml.Serialization.XmlElementAttribute\n    name: XmlElementAttribute\n    fullName: System.Xml.Serialization.XmlElementAttribute\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Xml.Serialization.XmlElementAttribute\n    name: XmlElementAttribute\n    fullName: System.Xml.Serialization.XmlElementAttribute\n  - name: ()\n    fullName: ()\n  nameWithType: XmlElementAttribute[]\n  nameWithType.vb: XmlElementAttribute()\n- uid: System.Collections.ICollection.Count\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: Count\n  fullName: System.Collections.ICollection.Count\n  commentId: P:System.Collections.ICollection.Count\n  nameWithType: ICollection.Count\n- uid: System.Collections.ICollection.IsSynchronized\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Collections.ICollection.IsSynchronized\n  commentId: P:System.Collections.ICollection.IsSynchronized\n  nameWithType: ICollection.IsSynchronized\n- uid: System.Collections.ICollection.SyncRoot\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Collections.ICollection.SyncRoot\n  commentId: P:System.Collections.ICollection.SyncRoot\n  nameWithType: ICollection.SyncRoot\n- uid: System.Collections.IList.IsFixedSize\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsFixedSize\n  fullName: System.Collections.IList.IsFixedSize\n  commentId: P:System.Collections.IList.IsFixedSize\n  nameWithType: IList.IsFixedSize\n- uid: System.Collections.IList.IsReadOnly\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.IList.IsReadOnly\n  commentId: P:System.Collections.IList.IsReadOnly\n  nameWithType: IList.IsReadOnly\n- uid: System.Collections.IList.Item(System.Int32)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Item[Int32]\n  fullName: System.Collections.IList.Item[System.Int32]\n  fullname.vb: System.Collections.IList.Item(System.Int32)\n  name.vb: Item(Int32)\n  spec.csharp:\n  - uid: System.Collections.IList.Item(System.Int32)\n    name: Item\n    fullName: System.Collections.IList.Item\n  - name: '['\n    fullName: '['\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.IList.Item(System.Int32)\n    name: Item\n    fullName: System.Collections.IList.Item\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Collections.IList.Item(System.Int32)\n  nameWithType: IList.Item[Int32]\n  nameWithType.vb: IList.Item(Int32)\n- uid: System.Collections.IList.Clear\n  parent: System.Collections.IList\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.IList.Clear()\n  spec.csharp:\n  - uid: System.Collections.IList.Clear\n    name: Clear\n    fullName: System.Collections.IList.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Clear\n    name: Clear\n    fullName: System.Collections.IList.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Clear\n  nameWithType: IList.Clear()\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n  nameWithType: IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.Collections.IList.RemoveAt(System.Int32)\n  parent: System.Collections.IList\n  isExternal: true\n  name: RemoveAt(Int32)\n  fullName: System.Collections.IList.RemoveAt(System.Int32)\n  spec.csharp:\n  - uid: System.Collections.IList.RemoveAt(System.Int32)\n    name: RemoveAt\n    fullName: System.Collections.IList.RemoveAt\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.RemoveAt(System.Int32)\n    name: RemoveAt\n    fullName: System.Collections.IList.RemoveAt\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.RemoveAt(System.Int32)\n  nameWithType: IList.RemoveAt(Int32)\n- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ICollection\n  isExternal: true\n  name: CopyTo(Array, Int32)\n  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  spec.csharp:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  nameWithType: ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  commentId: T:System.Array\n  nameWithType: Array\n- uid: System.Collections.IList.Add(System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Add(Object)\n  fullName: System.Collections.IList.Add(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.Add(System.Object)\n    name: Add\n    fullName: System.Collections.IList.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Add(System.Object)\n    name: Add\n    fullName: System.Collections.IList.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Add(System.Object)\n  nameWithType: IList.Add(Object)\n- uid: System.Collections.IList.Contains(System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Contains(Object)\n  fullName: System.Collections.IList.Contains(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IList.Contains\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IList.Contains\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Contains(System.Object)\n  nameWithType: IList.Contains(Object)\n- uid: System.Collections.IList.IndexOf(System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: IndexOf(Object)\n  fullName: System.Collections.IList.IndexOf(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.IndexOf(System.Object)\n    name: IndexOf\n    fullName: System.Collections.IList.IndexOf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.IndexOf(System.Object)\n    name: IndexOf\n    fullName: System.Collections.IList.IndexOf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.IndexOf(System.Object)\n  nameWithType: IList.IndexOf(Object)\n- uid: System.Collections.IList.Insert(System.Int32,System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Insert(Int32, Object)\n  fullName: System.Collections.IList.Insert(System.Int32, System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.Insert(System.Int32,System.Object)\n    name: Insert\n    fullName: System.Collections.IList.Insert\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Insert(System.Int32,System.Object)\n    name: Insert\n    fullName: System.Collections.IList.Insert\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Insert(System.Int32,System.Object)\n  nameWithType: IList.Insert(Int32, Object)\n- uid: System.Collections.IList.Remove(System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Remove(Object)\n  fullName: System.Collections.IList.Remove(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IList.Remove\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IList.Remove\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Remove(System.Object)\n  nameWithType: IList.Remove(Object)\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}