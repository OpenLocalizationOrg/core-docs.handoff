{"nodes":[{"pos":[1198,1218],"content":"CustomTypeDescriptor","needQuote":true,"nodes":[{"content":"CustomTypeDescriptor","pos":[0,20]}]},{"pos":[3211,3233],"content":"CustomTypeDescriptor()","needQuote":true,"nodes":[{"content":"CustomTypeDescriptor()","pos":[0,22]}]},{"pos":[4712,4755],"content":"CustomTypeDescriptor(ICustomTypeDescriptor)","needQuote":true,"nodes":[{"content":"CustomTypeDescriptor(ICustomTypeDescriptor)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The parent custom type descriptor.&lt;/p&gt;\\n","pos":[5778,5823],"source":"\\n<p>The parent custom type descriptor.</p>\\n"},{"pos":[6338,6353],"content":"GetAttributes()","needQuote":true,"nodes":[{"content":"GetAttributes()","pos":[0,15]}]},{"pos":[8557,8571],"content":"GetClassName()","needQuote":true,"nodes":[{"content":"GetClassName()","pos":[0,14]}]},{"pos":[10352,10370],"content":"GetComponentName()","needQuote":true,"nodes":[{"content":"GetComponentName()","pos":[0,18]}]},{"pos":[12139,12153],"content":"GetConverter()","needQuote":true,"nodes":[{"content":"GetConverter()","pos":[0,14]}]},{"pos":[14142,14159],"content":"GetDefaultEvent()","needQuote":true,"nodes":[{"content":"GetDefaultEvent()","pos":[0,17]}]},{"pos":[16148,16168],"content":"GetDefaultProperty()","needQuote":true,"nodes":[{"content":"GetDefaultProperty()","pos":[0,20]}]},{"pos":[18212,18227],"content":"GetEditor(Type)","needQuote":true,"nodes":[{"content":"GetEditor(Type)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The base type of the editor to retrieve.&lt;/p&gt;\\n","pos":[19131,19182],"source":"\\n<p>The base type of the editor to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;An editor of the given type that is to be associated with the class represented by this type descriptor.","pos":[19242,19351],"source":"\\n<p>An editor of the given type that is to be associated with the class represented by this type descriptor."},{"content":"The default is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[19352,19395],"source":" The default is <strong>null</strong>.</p>\\n"},{"pos":[20164,20175],"content":"GetEvents()","needQuote":true,"nodes":[{"content":"GetEvents()","pos":[0,11]}]},{"pos":[22439,22461],"content":"GetEvents(Attribute[])","needQuote":true,"nodes":[{"content":"GetEvents(Attribute[])","pos":[0,22]}]},{"content":"\\n&lt;p&gt;An array of attributes to use as a filter.","pos":[23405,23452],"source":"\\n<p>An array of attributes to use as a filter."},{"content":"This can be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[23453,23493],"source":" This can be <strong>null</strong>.</p>\\n"},{"pos":[25148,25163],"content":"GetProperties()","needQuote":true,"nodes":[{"content":"GetProperties()","pos":[0,15]}]},{"pos":[27643,27669],"content":"GetProperties(Attribute[])","needQuote":true,"nodes":[{"content":"GetProperties(Attribute[])","pos":[0,26]}]},{"content":"\\n&lt;p&gt;An array of attributes to use as a filter.","pos":[28638,28685],"source":"\\n<p>An array of attributes to use as a filter."},{"content":"This can be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[28686,28726],"source":" This can be <strong>null</strong>.</p>\\n"},{"pos":[30903,30939],"content":"GetPropertyOwner(PropertyDescriptor)","needQuote":true,"nodes":[{"content":"GetPropertyOwner(PropertyDescriptor)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The property descriptor for which to retrieve the owning object.&lt;/p&gt;\\n","pos":[31897,31972],"source":"\\n<p>The property descriptor for which to retrieve the owning object.</p>\\n"},{"pos":[32833,32854],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[33030,33036],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33226,33247],"content":"ICustomTypeDescriptor","needQuote":true,"nodes":[{"content":"ICustomTypeDescriptor","pos":[0,21]}]},{"pos":[33482,33492],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[33587,33595],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[33664,33665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33692,33693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33763,33771],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[33840,33841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33868,33869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34052,34066],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[34185,34191],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[34258,34259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34309,34315],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34375,34376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34459,34465],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[34532,34533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34583,34589],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34649,34650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34864,34886],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[35034,35040],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[35107,35108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35158,35164],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[35225,35226]},{"pos":[35281,35287],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35347,35348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35445,35451],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[35518,35519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35569,35575],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[35636,35637]},{"pos":[35692,35698],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35758,35759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36004,36035],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[36201,36216],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[36292,36293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36343,36349],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36410,36411]},{"pos":[36466,36472],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36532,36533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36639,36654],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[36730,36731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36781,36787],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36848,36849]},{"pos":[36904,36910],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36970,36971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37201,37214],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[37315,37326],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[37398,37399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37426,37427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37500,37511],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[37583,37584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37611,37612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37787,37796],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[37889,37896],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[37964,37965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37992,37993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38062,38069],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[38137,38138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38165,38166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38341,38358],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[38467,38482],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[38558,38559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38586,38587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38664,38679],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[38755,38756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38783,38784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38929,38935],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[39147,39162],"content":"GetAttributes()","needQuote":true,"nodes":[{"content":"GetAttributes()","pos":[0,15]}]},{"pos":[39327,39340],"content":"GetAttributes","needQuote":true,"nodes":[{"content":"GetAttributes","pos":[0,13]}]},{"pos":[39423,39424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39451,39452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39557,39570],"content":"GetAttributes","needQuote":true,"nodes":[{"content":"GetAttributes","pos":[0,13]}]},{"pos":[39653,39654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39681,39682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39935,39954],"content":"AttributeCollection","needQuote":true,"nodes":[{"content":"AttributeCollection","pos":[0,19]}]},{"pos":[40248,40262],"content":"GetClassName()","needQuote":true,"nodes":[{"content":"GetClassName()","pos":[0,14]}]},{"pos":[40425,40437],"content":"GetClassName","needQuote":true,"nodes":[{"content":"GetClassName","pos":[0,12]}]},{"pos":[40519,40520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40547,40548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40652,40664],"content":"GetClassName","needQuote":true,"nodes":[{"content":"GetClassName","pos":[0,12]}]},{"pos":[40746,40747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40774,40775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40983,40989],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[41218,41236],"content":"GetComponentName()","needQuote":true,"nodes":[{"content":"GetComponentName()","pos":[0,18]}]},{"pos":[41407,41423],"content":"GetComponentName","needQuote":true,"nodes":[{"content":"GetComponentName","pos":[0,16]}]},{"pos":[41509,41510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41537,41538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41646,41662],"content":"GetComponentName","needQuote":true,"nodes":[{"content":"GetComponentName","pos":[0,16]}]},{"pos":[41748,41749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41776,41777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42073,42087],"content":"GetConverter()","needQuote":true,"nodes":[{"content":"GetConverter()","pos":[0,14]}]},{"pos":[42250,42262],"content":"GetConverter","needQuote":true,"nodes":[{"content":"GetConverter","pos":[0,12]}]},{"pos":[42344,42345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42372,42373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42477,42489],"content":"GetConverter","needQuote":true,"nodes":[{"content":"GetConverter","pos":[0,12]}]},{"pos":[42571,42572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42599,42600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42845,42858],"content":"TypeConverter","needQuote":true,"nodes":[{"content":"TypeConverter","pos":[0,13]}]},{"pos":[43137,43154],"content":"GetDefaultEvent()","needQuote":true,"nodes":[{"content":"GetDefaultEvent()","pos":[0,17]}]},{"pos":[43323,43338],"content":"GetDefaultEvent","needQuote":true,"nodes":[{"content":"GetDefaultEvent","pos":[0,15]}]},{"pos":[43423,43424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43451,43452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43559,43574],"content":"GetDefaultEvent","needQuote":true,"nodes":[{"content":"GetDefaultEvent","pos":[0,15]}]},{"pos":[43659,43660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43687,43688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43941,43956],"content":"EventDescriptor","needQuote":true,"nodes":[{"content":"EventDescriptor","pos":[0,15]}]},{"pos":[44244,44264],"content":"GetDefaultProperty()","needQuote":true,"nodes":[{"content":"GetDefaultProperty()","pos":[0,20]}]},{"pos":[44439,44457],"content":"GetDefaultProperty","needQuote":true,"nodes":[{"content":"GetDefaultProperty","pos":[0,18]}]},{"pos":[44545,44546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44573,44574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44684,44702],"content":"GetDefaultProperty","needQuote":true,"nodes":[{"content":"GetDefaultProperty","pos":[0,18]}]},{"pos":[44790,44791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44818,44819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45081,45099],"content":"PropertyDescriptor","needQuote":true,"nodes":[{"content":"PropertyDescriptor","pos":[0,18]}]},{"pos":[45399,45414],"content":"GetEditor(Type)","needQuote":true,"nodes":[{"content":"GetEditor(Type)","pos":[0,15]}]},{"pos":[45595,45604],"content":"GetEditor","needQuote":true,"nodes":[{"content":"GetEditor","pos":[0,9]}]},{"pos":[45683,45684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45732,45736],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[45794,45795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45909,45918],"content":"GetEditor","needQuote":true,"nodes":[{"content":"GetEditor","pos":[0,9]}]},{"pos":[45997,45998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46046,46050],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[46108,46109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46326,46330],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[46546,46557],"content":"GetEvents()","needQuote":true,"nodes":[{"content":"GetEvents()","pos":[0,11]}]},{"pos":[46714,46723],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[46802,46803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46830,46831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46932,46941],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[47020,47021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47048,47049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47300,47325],"content":"EventDescriptorCollection","needQuote":true,"nodes":[{"content":"EventDescriptorCollection","pos":[0,25]}]},{"pos":[47653,47675],"content":"GetEvents(Attribute[])","needQuote":true,"nodes":[{"content":"GetEvents(Attribute[])","pos":[0,22]}]},{"pos":[47993,48002],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[48081,48082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48135,48144],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[48208,48210]},{"pos":[48241,48242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48363,48372],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[48451,48452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48505,48514],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[48577,48579],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[48607,48608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48873,48884],"content":"Attribute[]","needQuote":true,"nodes":[{"content":"Attribute[]","pos":[0,11]}]},{"pos":[49024,49033],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[49097,49099]},{"pos":[49167,49176],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[49239,49241],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[49465,49480],"content":"GetProperties()","needQuote":true,"nodes":[{"content":"GetProperties()","pos":[0,15]}]},{"pos":[49645,49658],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[49741,49742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49769,49770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49875,49888],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[49971,49972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49999,50000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50262,50290],"content":"PropertyDescriptorCollection","needQuote":true,"nodes":[{"content":"PropertyDescriptorCollection","pos":[0,28]}]},{"pos":[50631,50657],"content":"GetProperties(Attribute[])","needQuote":true,"nodes":[{"content":"GetProperties(Attribute[])","pos":[0,26]}]},{"pos":[50991,51004],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[51087,51088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51141,51150],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[51214,51216]},{"pos":[51247,51248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51373,51386],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[51469,51470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51523,51532],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[51595,51597],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[51625,51626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52061,52097],"content":"GetPropertyOwner(PropertyDescriptor)","needQuote":true,"nodes":[{"content":"GetPropertyOwner(PropertyDescriptor)","pos":[0,36]}]},{"pos":[52350,52366],"content":"GetPropertyOwner","needQuote":true,"nodes":[{"content":"GetPropertyOwner","pos":[0,16]}]},{"pos":[52452,52453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52530,52548],"content":"PropertyDescriptor","needQuote":true,"nodes":[{"content":"PropertyDescriptor","pos":[0,18]}]},{"pos":[52614,52615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52765,52781],"content":"GetPropertyOwner","needQuote":true,"nodes":[{"content":"GetPropertyOwner","pos":[0,16]}]},{"pos":[52867,52868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52945,52963],"content":"PropertyDescriptor","needQuote":true,"nodes":[{"content":"PropertyDescriptor","pos":[0,18]}]},{"pos":[53029,53030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.ComponentModel.CustomTypeDescriptor\n  commentId: T:System.ComponentModel.CustomTypeDescriptor\n  id: CustomTypeDescriptor\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.CustomTypeDescriptor.#ctor\n  - System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)\n  - System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  - System.ComponentModel.CustomTypeDescriptor.GetClassName\n  - System.ComponentModel.CustomTypeDescriptor.GetComponentName\n  - System.ComponentModel.CustomTypeDescriptor.GetConverter\n  - System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  - System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty\n  - System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)\n  - System.ComponentModel.CustomTypeDescriptor.GetEvents\n  - System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])\n  - System.ComponentModel.CustomTypeDescriptor.GetProperties\n  - System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])\n  - System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  langs:\n  - csharp\n  - vb\n  name: CustomTypeDescriptor\n  fullName: System.ComponentModel.CustomTypeDescriptor\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CustomTypeDescriptor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 8\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides a simple default implementation of the <xref href=\\\"System.ComponentModel.ICustomTypeDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface.</p>\\n\"\n  syntax:\n    content: 'public abstract class CustomTypeDescriptor : ICustomTypeDescriptor'\n    content.vb: >-\n      Public MustInherit Class CustomTypeDescriptor\n          Implements ICustomTypeDescriptor\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.TypeDescriptionProvider\n    commentId: T:System.ComponentModel.TypeDescriptionProvider\n  - type: System.ComponentModel.TypeDescriptor\n    commentId: T:System.ComponentModel.TypeDescriptor\n  inheritance:\n  - System.Object\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: CustomTypeDescriptor\n- uid: System.ComponentModel.CustomTypeDescriptor.#ctor\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: CustomTypeDescriptor()\n  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 21\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.CustomTypeDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected CustomTypeDescriptor()\n    content.vb: Protected Sub New\n  seealso:\n  - type: System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor()\n- uid: System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)\n  id: '#ctor(System.ComponentModel.ICustomTypeDescriptor)'\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: CustomTypeDescriptor(ICustomTypeDescriptor)\n  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor(System.ComponentModel.ICustomTypeDescriptor)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 34\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.CustomTypeDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using a parent custom type descriptor.</p>\\n\"\n  syntax:\n    content: protected CustomTypeDescriptor(ICustomTypeDescriptor parent)\n    content.vb: Protected Sub New(parent As ICustomTypeDescriptor)\n    parameters:\n    - id: parent\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: \"\\n<p>The parent custom type descriptor.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.CustomTypeDescriptor\n    commentId: T:System.ComponentModel.CustomTypeDescriptor\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)\n- uid: System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  id: GetAttributes\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetAttributes()\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetAttributes()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAttributes\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 44\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a collection of custom attributes for the type represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual AttributeCollection GetAttributes()\n    content.vb: Public Overridable Function GetAttributes As AttributeCollection\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.AttributeCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the attributes for the type. The default is <xref href=\\\"System.ComponentModel.AttributeCollection.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n  - type: System.Attribute\n    commentId: T:System.Attribute\n  - type: System.ComponentModel.AttributeCollection\n    commentId: T:System.ComponentModel.AttributeCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetAttributes()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetClassName\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName\n  id: GetClassName\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetClassName()\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetClassName()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetClassName\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 60\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the fully qualified name of the class represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual string GetClassName()\n    content.vb: Public Overridable Function GetClassName As String\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the fully qualified class name of the type this type descriptor is describing. The default is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetClassName\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetClassName\n  - type: System.ComponentModel.CustomTypeDescriptor.GetComponentName\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetComponentName\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetClassName\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetClassName()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetComponentName\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetComponentName\n  id: GetComponentName\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetComponentName()\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetComponentName()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetComponentName\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 74\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the name of the class represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual string GetComponentName()\n    content.vb: Public Overridable Function GetComponentName As String\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the name of the component instance this type descriptor is describing. The default is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetComponentName\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName\n  - type: System.ComponentModel.CustomTypeDescriptor.GetClassName\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetComponentName\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetComponentName()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetConverter\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetConverter\n  id: GetConverter\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetConverter()\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetConverter()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetConverter\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 88\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a type converter for the type represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual TypeConverter GetConverter()\n    content.vb: Public Overridable Function GetConverter As TypeConverter\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.TypeConverter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the type represented by this type descriptor. The default is a newly created <xref href=\\\"System.ComponentModel.TypeConverter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetConverter\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetConverter\n  - type: System.ComponentModel.TypeConverter\n    commentId: T:System.ComponentModel.TypeConverter\n  - type: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetConverter\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetConverter()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  id: GetDefaultEvent\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetDefaultEvent()\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDefaultEvent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 102\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the event descriptor for the default event of the object represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual EventDescriptor GetDefaultEvent()\n    content.vb: Public Overridable Function GetDefaultEvent As EventDescriptor\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.EventDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the default event on the object represented by this type descriptor. The default is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetDefaultEvent()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty\n  id: GetDefaultProperty\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetDefaultProperty()\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDefaultProperty\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 116\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the property descriptor for the default property of the object represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual PropertyDescriptor GetDefaultProperty()\n    content.vb: Public Overridable Function GetDefaultProperty As PropertyDescriptor\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the default property on the object represented by this type descriptor. The default is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetDefaultProperty()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)\n  id: GetEditor(System.Type)\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEditor(Type)\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEditor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 130\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns an editor of the specified type that is to be associated with the class represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual object GetEditor(Type editorBaseType)\n    content.vb: Public Overridable Function GetEditor(editorBaseType As Type) As Object\n    parameters:\n    - id: editorBaseType\n      type: System.Type\n      description: \"\\n<p>The base type of the editor to retrieve.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An editor of the given type that is to be associated with the class represented by this type descriptor. The default is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)\n  - type: System.ComponentModel.CustomTypeDescriptor.GetConverter\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetConverter\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetEditor(Type)\n- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents\n  id: GetEvents\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEvents()\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEvents\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 147\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a collection of event descriptors for the object represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual EventDescriptorCollection GetEvents()\n    content.vb: Public Overridable Function GetEvents As EventDescriptorCollection\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the event descriptors for the object represented by this type descriptor. The default is <xref href=\\\"System.ComponentModel.EventDescriptorCollection.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.EventDescriptorCollection\n    commentId: T:System.ComponentModel.EventDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetAttributes\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetEvents()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])\n  id: GetEvents(System.Attribute[])\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEvents(Attribute[])\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEvents\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 164\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a filtered collection of event descriptors for the object represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual EventDescriptorCollection GetEvents(Attribute[] attributes)\n    content.vb: Public Overridable Function GetEvents(attributes As Attribute()) As EventDescriptorCollection\n    parameters:\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of attributes to use as a filter. This can be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the event descriptions for the object represented by this type descriptor. The default is <xref href=\\\"System.ComponentModel.EventDescriptorCollection.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.EventDescriptorCollection\n    commentId: T:System.ComponentModel.EventDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetAttributes\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute())\n  name.vb: GetEvents(Attribute())\n  nameWithType: CustomTypeDescriptor.GetEvents(Attribute[])\n  nameWithType.vb: CustomTypeDescriptor.GetEvents(Attribute())\n- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties\n  id: GetProperties\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProperties()\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProperties\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 181\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a collection of property descriptors for the object represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual PropertyDescriptorCollection GetProperties()\n    content.vb: Public Overridable Function GetProperties As PropertyDescriptorCollection\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the property descriptions for the object represented by this type descriptor. The default is <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties\n  - type: System.ComponentModel.PropertyDescriptorCollection\n    commentId: T:System.ComponentModel.PropertyDescriptorCollection\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetProperties\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetProperties()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])\n  id: GetProperties(System.Attribute[])\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProperties(Attribute[])\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProperties\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 198\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a filtered collection of property descriptors for the object represented by this type descriptor.</p>\\n\"\n  syntax:\n    content: public virtual PropertyDescriptorCollection GetProperties(Attribute[] attributes)\n    content.vb: Public Overridable Function GetProperties(attributes As Attribute()) As PropertyDescriptorCollection\n    parameters:\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of attributes to use as a filter. This can be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the property descriptions for the object represented by this type descriptor. The default is <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties\n  - type: System.ComponentModel.PropertyDescriptorCollection\n    commentId: T:System.ComponentModel.PropertyDescriptorCollection\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute())\n  name.vb: GetProperties(Attribute())\n  nameWithType: CustomTypeDescriptor.GetProperties(Attribute[])\n  nameWithType.vb: CustomTypeDescriptor.GetProperties(Attribute())\n- uid: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  id: GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  parent: System.ComponentModel.CustomTypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetPropertyOwner(PropertyDescriptor)\n  fullName: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetPropertyOwner\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs\n    startLine: 215\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns an object that contains the property described by the specified property descriptor.</p>\\n\"\n  syntax:\n    content: public virtual object GetPropertyOwner(PropertyDescriptor pd)\n    content.vb: Public Overridable Function GetPropertyOwner(pd As PropertyDescriptor) As Object\n    parameters:\n    - id: pd\n      type: System.ComponentModel.PropertyDescriptor\n      description: \"\\n<p>The property descriptor for which to retrieve the owning object.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that owns the given property specified by the type descriptor. The default is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties\n  implements:\n  - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.ComponentModel.ICustomTypeDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: ICustomTypeDescriptor\n  fullName: System.ComponentModel.ICustomTypeDescriptor\n  nameWithType: ICustomTypeDescriptor\n  commentId: T:System.ComponentModel.ICustomTypeDescriptor\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: false\n  name: GetAttributes()\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n    name: GetAttributes\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n    name: GetAttributes\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetAttributes()\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes\n- uid: System.ComponentModel.AttributeCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: AttributeCollection\n  fullName: System.ComponentModel.AttributeCollection\n  nameWithType: AttributeCollection\n  commentId: T:System.ComponentModel.AttributeCollection\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: false\n  name: GetClassName()\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName\n    name: GetClassName\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName\n    name: GetClassName\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetClassName()\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetClassName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: false\n  name: GetComponentName()\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName\n    name: GetComponentName\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName\n    name: GetComponentName\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetComponentName()\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: false\n  name: GetConverter()\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter\n    name: GetConverter\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter\n    name: GetConverter\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetConverter()\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetConverter\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n  nameWithType: TypeConverter\n  commentId: T:System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: false\n  name: GetDefaultEvent()\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent\n    name: GetDefaultEvent\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent\n    name: GetDefaultEvent\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetDefaultEvent()\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent\n- uid: System.ComponentModel.EventDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventDescriptor\n  fullName: System.ComponentModel.EventDescriptor\n  nameWithType: EventDescriptor\n  commentId: T:System.ComponentModel.EventDescriptor\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: false\n  name: GetDefaultProperty()\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n    name: GetDefaultProperty\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n    name: GetDefaultProperty\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetDefaultProperty()\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty\n- uid: System.ComponentModel.PropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  commentId: T:System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: true\n  name: GetEditor(Type)\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)\n    name: GetEditor\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)\n    name: GetEditor\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetEditor(Type)\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: false\n  name: GetEvents()\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n    name: GetEvents\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n    name: GetEvents\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetEvents()\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents\n- uid: System.ComponentModel.EventDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventDescriptorCollection\n  fullName: System.ComponentModel.EventDescriptorCollection\n  nameWithType: EventDescriptorCollection\n  commentId: T:System.ComponentModel.EventDescriptorCollection\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: true\n  name: GetEvents(Attribute[])\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])\n  fullname.vb: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute())\n  name.vb: GetEvents(Attribute())\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])\n    name: GetEvents\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  - name: (\n    fullName: (\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])\n    name: GetEvents\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents\n  - name: (\n    fullName: (\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetEvents(Attribute[])\n  nameWithType.vb: ICustomTypeDescriptor.GetEvents(Attribute())\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])\n- uid: System.Attribute[]\n  name: Attribute[]\n  fullName: System.Attribute[]\n  fullname.vb: System.Attribute()\n  name.vb: Attribute()\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Attribute[]\n  nameWithType.vb: Attribute()\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: false\n  name: GetProperties()\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties\n    name: GetProperties\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties\n    name: GetProperties\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetProperties()\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  commentId: T:System.ComponentModel.PropertyDescriptorCollection\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: true\n  name: GetProperties(Attribute[])\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])\n  fullname.vb: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute())\n  name.vb: GetProperties(Attribute())\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])\n    name: GetProperties\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])\n    name: GetProperties\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetProperties(Attribute[])\n  nameWithType.vb: ICustomTypeDescriptor.GetProperties(Attribute())\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])\n- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  parent: System.ComponentModel.ICustomTypeDescriptor\n  isExternal: false\n  name: GetPropertyOwner(PropertyDescriptor)\n  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  spec.csharp:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n    name: GetPropertyOwner\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.PropertyDescriptor\n    name: PropertyDescriptor\n    fullName: System.ComponentModel.PropertyDescriptor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n    name: GetPropertyOwner\n    fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.PropertyDescriptor\n    name: PropertyDescriptor\n    fullName: System.ComponentModel.PropertyDescriptor\n  - name: )\n    fullName: )\n  nameWithType: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)\n  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n"}