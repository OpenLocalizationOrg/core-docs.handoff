{"nodes":[{"pos":[653,675],"content":"XmlBinaryReaderSession","needQuote":true,"nodes":[{"content":"XmlBinaryReaderSession","pos":[0,22]}]},{"pos":[2069,2093],"content":"XmlBinaryReaderSession()","needQuote":true,"nodes":[{"content":"XmlBinaryReaderSession()","pos":[0,24]}]},{"pos":[3199,3217],"content":"Add(Int32, String)","needQuote":true,"nodes":[{"content":"Add(Int32, String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The key value.&lt;/p&gt;\\n","pos":[4118,4143],"source":"\\n<p>The key value.</p>\\n"},{"content":"\\n&lt;p&gt;The value.&lt;/p&gt;\\n","pos":[4207,4228],"source":"\\n<p>The value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is less than zero.&lt;/p&gt;\\n","pos":[4596,4639],"source":"\\n<p>\\n<em>id</em> is less than zero.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4744,4797],"source":"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An entry with key = &lt;em&gt;id&lt;/em&gt; already exists.&lt;/p&gt;\\n","pos":[4910,4968],"source":"\\n<p>An entry with key = <em>id</em> already exists.</p>\\n"},{"pos":[5279,5286],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[6328,6369],"content":"TryLookup(Int32, out XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(Int32, out XmlDictionaryString)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The key to search on.&lt;/p&gt;\\n","pos":[7235,7267],"source":"\\n<p>The key to search on.</p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a string if an entry is found; otherwise, &lt;strong&gt;null&lt;/strong&gt;.","pos":[7349,7453],"source":"\\n<p>When this method returns, contains a string if an entry is found; otherwise, <strong>null</strong>."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[7454,7499],"source":" This parameter is passed uninitialized.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if an entry matching the &lt;em&gt;key&lt;/em&gt; was found; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7560,7678],"source":"\\n<p>\\n<strong>true</strong> if an entry matching the <em>key</em> was found; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7797,7848],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[8687,8729],"content":"TryLookup(String, out XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(String, out XmlDictionaryString)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The value to search for.&lt;/p&gt;\\n","pos":[9607,9642],"source":"\\n<p>The value to search for.</p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a string if an entry is found; otherwise, &lt;strong&gt;null&lt;/strong&gt;.","pos":[9724,9828],"source":"\\n<p>When this method returns, contains a string if an entry is found; otherwise, <strong>null</strong>."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[9829,9874],"source":" This parameter is passed uninitialized.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if an entry matching the &lt;em&gt;value&lt;/em&gt; was found; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9935,10055],"source":"\\n<p>\\n<strong>true</strong> if an entry matching the <em>value</em> was found; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10174,10227],"source":"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[11122,11177],"content":"TryLookup(XmlDictionaryString, out XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(XmlDictionaryString, out XmlDictionaryString)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;The value to search for.&lt;/p&gt;\\n","pos":[12115,12150],"source":"\\n<p>The value to search for.</p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a string if an entry is found; otherwise, &lt;strong&gt;null&lt;/strong&gt;.","pos":[12232,12336],"source":"\\n<p>When this method returns, contains a string if an entry is found; otherwise, <strong>null</strong>."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[12337,12382],"source":" This parameter is passed uninitialized.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if an entry matching the &lt;em&gt;value&lt;/em&gt; was found; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12443,12563],"source":"\\n<p>\\n<strong>true</strong> if an entry matching the <em>value</em> was found; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12682,12735],"source":"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[13364,13374],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[13517,13523],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13684,13698],"content":"IXmlDictionary","needQuote":true,"nodes":[{"content":"IXmlDictionary","pos":[0,14]}]},{"pos":[13890,13900],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13995,14003],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14072,14073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14100,14101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14171,14179],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14248,14249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14276,14277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14460,14474],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14593,14599],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14666,14667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14717,14723],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14783,14784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14867,14873],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14940,14941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14991,14997],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15057,15058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15272,15294],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15442,15448],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15515,15516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15566,15572],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15633,15634]},{"pos":[15689,15695],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15755,15756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15853,15859],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15926,15927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15977,15983],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16044,16045]},{"pos":[16100,16106],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16166,16167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16412,16443],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16609,16624],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16700,16701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16751,16757],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16818,16819]},{"pos":[16874,16880],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16940,16941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17047,17062],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17138,17139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17189,17195],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17256,17257]},{"pos":[17312,17318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17378,17379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17609,17622],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17723,17734],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17806,17807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17834,17835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17908,17919],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17991,17992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18019,18020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18195,18204],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18297,18304],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18372,18373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18400,18401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18470,18477],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18545,18546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18573,18574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18749,18766],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18875,18890],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18966,18967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18994,18995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19072,19087],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19163,19164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19191,19192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19337,19343],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19473,19478],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19620,19626],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19792,19811],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[20089,20126],"content":"TryLookup(Int32, XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(Int32, XmlDictionaryString)","pos":[0,37]}]},{"pos":[20337,20346],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[20407,20408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20457,20462],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[20522,20523]},{"pos":[20595,20614],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[20670,20671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20800,20809],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[20870,20871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20920,20925],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[20985,20986]},{"pos":[21058,21077],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[21133,21134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21384,21391],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21626,21664],"content":"TryLookup(String, XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(String, XmlDictionaryString)","pos":[0,38]}]},{"pos":[21877,21886],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[21947,21948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21998,22004],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[22065,22066]},{"pos":[22138,22157],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[22213,22214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22344,22353],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[22414,22415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22465,22471],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[22532,22533]},{"pos":[22605,22624],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[22680,22681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23037,23088],"content":"TryLookup(XmlDictionaryString, XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(XmlDictionaryString, XmlDictionaryString)","pos":[0,51]}]},{"pos":[23335,23344],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[23405,23406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23473,23492],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"content":",","pos":[23549,23550]},{"pos":[23622,23641],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[23697,23698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23845,23854],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[23915,23916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23983,24002],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"content":",","pos":[24059,24060]},{"pos":[24132,24151],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[24207,24208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24493,24520],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[24726,24747],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[24956,24981],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Xml.XmlBinaryReaderSession\n  commentId: T:System.Xml.XmlBinaryReaderSession\n  id: XmlBinaryReaderSession\n  parent: System.Xml\n  children:\n  - System.Xml.XmlBinaryReaderSession.#ctor\n  - System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)\n  - System.Xml.XmlBinaryReaderSession.Clear\n  - System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  - System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  - System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  langs:\n  - csharp\n  - vb\n  name: XmlBinaryReaderSession\n  fullName: System.Xml.XmlBinaryReaderSession\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlBinaryReaderSession\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 108\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Enables optimized strings to be managed in a dynamic way.</p>\\n\"\n  syntax:\n    content: 'public class XmlBinaryReaderSession : IXmlDictionary'\n    content.vb: >-\n      Public Class XmlBinaryReaderSession\n          Implements IXmlDictionary\n  inheritance:\n  - System.Object\n  implements:\n  - System.Xml.IXmlDictionary\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlBinaryReaderSession\n- uid: System.Xml.XmlBinaryReaderSession.#ctor\n  commentId: M:System.Xml.XmlBinaryReaderSession.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlBinaryReaderSession\n  langs:\n  - csharp\n  - vb\n  name: XmlBinaryReaderSession()\n  fullName: System.Xml.XmlBinaryReaderSession.XmlBinaryReaderSession()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 110\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.XmlBinaryReaderSession\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public XmlBinaryReaderSession()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlBinaryReaderSession.XmlBinaryReaderSession()\n- uid: System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)\n  commentId: M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)\n  id: Add(System.Int32,System.String)\n  parent: System.Xml.XmlBinaryReaderSession\n  langs:\n  - csharp\n  - vb\n  name: Add(Int32, String)\n  fullName: System.Xml.XmlBinaryReaderSession.Add(System.Int32, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 111\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Creates an <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from the input parameters and adds it to an internal collection.</p>\\n\"\n  syntax:\n    content: public XmlDictionaryString Add(int id, string value)\n    content.vb: Public Function Add(id As Integer, value As String) As XmlDictionaryString\n    parameters:\n    - id: id\n      type: System.Int32\n      description: \"\\n<p>The key value.</p>\\n\"\n    - id: value\n      type: System.String\n      description: \"\\n<p>The value.</p>\\n\"\n    return:\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>The newly created <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is added to an internal collection.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>id</em> is less than zero.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An entry with key = <em>id</em> already exists.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlBinaryReaderSession.Add(Int32, String)\n- uid: System.Xml.XmlBinaryReaderSession.Clear\n  commentId: M:System.Xml.XmlBinaryReaderSession.Clear\n  id: Clear\n  parent: System.Xml.XmlBinaryReaderSession\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Xml.XmlBinaryReaderSession.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 112\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Clears the internal collection of all contents.</p>\\n\"\n  syntax:\n    content: public void Clear()\n    content.vb: Public Sub Clear\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlBinaryReaderSession.Clear()\n- uid: System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  commentId: M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  id: TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.XmlBinaryReaderSession\n  langs:\n  - csharp\n  - vb\n  name: TryLookup(Int32, out XmlDictionaryString)\n  fullName: System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32, out System.Xml.XmlDictionaryString)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryLookup\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 113\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Checks whether the internal collection contains an entry matching a key.</p>\\n\"\n  syntax:\n    content: public bool TryLookup(int key, out XmlDictionaryString result)\n    content.vb: Public Function TryLookup(key As Integer, ByRef result As XmlDictionaryString) As Boolean\n    parameters:\n    - id: key\n      type: System.Int32\n      description: \"\\n<p>The key to search on.</p>\\n\"\n    - id: result\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>When this method returns, contains a string if an entry is found; otherwise, <strong>null</strong>. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if an entry matching the <em>key</em> was found; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  implements:\n  - System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32, ByRef System.Xml.XmlDictionaryString)\n  name.vb: TryLookup(Int32, ByRef XmlDictionaryString)\n  nameWithType: XmlBinaryReaderSession.TryLookup(Int32, out XmlDictionaryString)\n  nameWithType.vb: XmlBinaryReaderSession.TryLookup(Int32, ByRef XmlDictionaryString)\n- uid: System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  commentId: M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  id: TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.XmlBinaryReaderSession\n  langs:\n  - csharp\n  - vb\n  name: TryLookup(String, out XmlDictionaryString)\n  fullName: System.Xml.XmlBinaryReaderSession.TryLookup(System.String, out System.Xml.XmlDictionaryString)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryLookup\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 114\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Checks whether the internal collection contains an entry matching a value.</p>\\n\"\n  syntax:\n    content: public bool TryLookup(string value, out XmlDictionaryString result)\n    content.vb: Public Function TryLookup(value As String, ByRef result As XmlDictionaryString) As Boolean\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The value to search for.</p>\\n\"\n    - id: result\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>When this method returns, contains a string if an entry is found; otherwise, <strong>null</strong>. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if an entry matching the <em>value</em> was found; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n\"\n  implements:\n  - System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.XmlBinaryReaderSession.TryLookup(System.String, ByRef System.Xml.XmlDictionaryString)\n  name.vb: TryLookup(String, ByRef XmlDictionaryString)\n  nameWithType: XmlBinaryReaderSession.TryLookup(String, out XmlDictionaryString)\n  nameWithType.vb: XmlBinaryReaderSession.TryLookup(String, ByRef XmlDictionaryString)\n- uid: System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  commentId: M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  id: TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.XmlBinaryReaderSession\n  langs:\n  - csharp\n  - vb\n  name: TryLookup(XmlDictionaryString, out XmlDictionaryString)\n  fullName: System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString, out System.Xml.XmlDictionaryString)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryLookup\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 115\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Checks whether the internal collection contains an entry matching a value.</p>\\n\"\n  syntax:\n    content: public bool TryLookup(XmlDictionaryString value, out XmlDictionaryString result)\n    content.vb: Public Function TryLookup(value As XmlDictionaryString, ByRef result As XmlDictionaryString) As Boolean\n    parameters:\n    - id: value\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>The value to search for.</p>\\n\"\n    - id: result\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>When this method returns, contains a string if an entry is found; otherwise, <strong>null</strong>. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if an entry matching the <em>value</em> was found; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n\"\n  implements:\n  - System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString, ByRef System.Xml.XmlDictionaryString)\n  name.vb: TryLookup(XmlDictionaryString, ByRef XmlDictionaryString)\n  nameWithType: XmlBinaryReaderSession.TryLookup(XmlDictionaryString, out XmlDictionaryString)\n  nameWithType.vb: XmlBinaryReaderSession.TryLookup(XmlDictionaryString, ByRef XmlDictionaryString)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.IXmlDictionary\n  parent: System.Xml\n  isExternal: false\n  name: IXmlDictionary\n  fullName: System.Xml.IXmlDictionary\n  commentId: T:System.Xml.IXmlDictionary\n  nameWithType: IXmlDictionary\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XmlDictionaryString\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryString\n  fullName: System.Xml.XmlDictionaryString\n  commentId: T:System.Xml.XmlDictionaryString\n  nameWithType: XmlDictionaryString\n- uid: System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.IXmlDictionary\n  isExternal: true\n  name: TryLookup(Int32, XmlDictionaryString)\n  fullName: System.Xml.IXmlDictionary.TryLookup(System.Int32, System.Xml.XmlDictionaryString)\n  spec.csharp:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  nameWithType: IXmlDictionary.TryLookup(Int32, XmlDictionaryString)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.IXmlDictionary\n  isExternal: true\n  name: TryLookup(String, XmlDictionaryString)\n  fullName: System.Xml.IXmlDictionary.TryLookup(System.String, System.Xml.XmlDictionaryString)\n  spec.csharp:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  nameWithType: IXmlDictionary.TryLookup(String, XmlDictionaryString)\n- uid: System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.IXmlDictionary\n  isExternal: false\n  name: TryLookup(XmlDictionaryString, XmlDictionaryString)\n  fullName: System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)\n  spec.csharp:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  nameWithType: IXmlDictionary.TryLookup(XmlDictionaryString, XmlDictionaryString)\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}