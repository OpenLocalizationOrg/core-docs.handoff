{"nodes":[{"pos":[887,896],"content":"AsyncInfo","needQuote":true,"nodes":[{"content":"AsyncInfo","pos":[0,9]}]},{"pos":[2809,2843],"content":"Run(Func<CancellationToken, Task>)","needQuote":true,"nodes":[{"content":"Run(Func&lt;CancellationToken, Task&gt;)","pos":[0,34],"source":"Run(Func<CancellationToken, Task>)"}]},{"pos":[4764,4831],"content":"Run<TProgress>(Func<CancellationToken, IProgress<TProgress>, Task>)","needQuote":true,"nodes":[{"content":"Run&lt;TProgress&gt;(Func&lt;CancellationToken, IProgress&lt;TProgress&gt;, Task&gt;)","pos":[0,67],"source":"Run<TProgress>(Func<CancellationToken, IProgress<TProgress>, Task>)"}]},{"pos":[7114,7166],"content":"Run<TResult>(Func<CancellationToken, Task<TResult>>)","needQuote":true,"nodes":[{"content":"Run&lt;TResult&gt;(Func&lt;CancellationToken, Task&lt;TResult&gt;&gt;)","pos":[0,52],"source":"Run<TResult>(Func<CancellationToken, Task<TResult>>)"}]},{"pos":[9342,9427],"content":"Run<TResult, TProgress>(Func<CancellationToken, IProgress<TProgress>, Task<TResult>>)","needQuote":true,"nodes":[{"content":"Run&lt;TResult, TProgress&gt;(Func&lt;CancellationToken, IProgress&lt;TProgress&gt;, Task&lt;TResult&gt;&gt;)","pos":[0,85],"source":"Run<TResult, TProgress>(Func<CancellationToken, IProgress<TProgress>, Task<TResult>>)"}]},{"pos":[11560,11605],"content":"System.Runtime.InteropServices.WindowsRuntime","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.WindowsRuntime","pos":[0,45]}]},{"pos":[11821,11827],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11996,12006],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12135,12143],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12246,12247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12294,12295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12385,12393],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12496,12497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12544,12545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12727,12741],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12898,12904],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13003,13004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13074,13080],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13165,13166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13269,13275],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13374,13375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13445,13451],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13536,13537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13747,13769],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13963,13969],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14068,14069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14139,14145],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14231,14232]},{"pos":[14310,14316],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14401,14402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14519,14525],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14624,14625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14695,14701],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14787,14788]},{"pos":[14866,14872],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14957,14958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15186,15217],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15438,15453],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15570,15571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15641,15647],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15733,15734]},{"pos":[15812,15818],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15903,15904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16030,16045],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16162,16163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16233,16239],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16325,16326]},{"pos":[16404,16410],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16495,16496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16658,16671],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16809,16820],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16929,16930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16977,16978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17071,17082],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17191,17192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17239,17240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17394,17403],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[17529,17536],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17637,17638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17685,17686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17775,17782],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17883,17884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17931,17932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18102,18119],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18269,18284],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18401,18402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18449,18450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18547,18562],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18679,18680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18727,18728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18829,18835],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19105,19134],"content":"Func<CancellationToken, Task>","needQuote":true,"nodes":[{"content":"Func&lt;CancellationToken, Task&gt;","pos":[0,29],"source":"Func<CancellationToken, Task>"}]},{"pos":[19509,19513],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[19594,19595],"content":"<","needQuote":true,"nodes":[]},{"pos":[19686,19703],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":",","pos":[19821,19822]},{"pos":[19914,19918],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[20103,20107],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[20189,20192]},{"pos":[20295,20312],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":",","pos":[20430,20431]},{"pos":[20523,20527],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[20624,20625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20728,20740],"content":"IAsyncAction","needQuote":true,"nodes":[{"content":"IAsyncAction","pos":[0,12]}]},{"pos":[20892,20908],"content":"Func<T, TResult>","needQuote":true,"nodes":[{"content":"Func&lt;T, TResult&gt;","pos":[0,16],"source":"Func<T, TResult>"}]},{"pos":[21138,21142],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[21202,21203],"content":"<","needQuote":true,"nodes":[]},{"pos":[21250,21251],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[21299,21300]},{"pos":[21355,21362],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[21509,21513],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[21574,21577]},{"pos":[21636,21637],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[21685,21686]},{"pos":[21741,21748],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[21807,21808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22124,22175],"content":"Func<CancellationToken, IProgress<TProgress>, Task>","needQuote":true,"nodes":[{"content":"Func&lt;CancellationToken, IProgress&lt;TProgress&gt;, Task&gt;","pos":[0,51],"source":"Func<CancellationToken, IProgress<TProgress>, Task>"}]},{"pos":[22683,22687],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[22768,22769],"content":"<","needQuote":true,"nodes":[]},{"pos":[22860,22877],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":",","pos":[22995,22996]},{"pos":[23079,23088],"content":"IProgress","needQuote":true,"nodes":[{"content":"IProgress","pos":[0,9]}]},{"pos":[23179,23180],"content":"<","needQuote":true,"nodes":[]},{"pos":[23227,23236],"content":"TProgress","needQuote":true,"nodes":[{"content":"TProgress","pos":[0,9]}]},{"content":",","pos":[23354,23355]},{"pos":[23447,23451],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[23636,23640],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[23722,23725]},{"pos":[23828,23845],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":",","pos":[23963,23964]},{"pos":[24047,24056],"content":"IProgress","needQuote":true,"nodes":[{"content":"IProgress","pos":[0,9]}]},{"content":"(Of","pos":[24148,24151]},{"pos":[24210,24219],"content":"TProgress","needQuote":true,"nodes":[{"content":"TProgress","pos":[0,9]}]},{"pos":[24282,24283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[24331,24332]},{"pos":[24424,24428],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[24525,24526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24761,24796],"content":"IAsyncActionWithProgress<TProgress>","needQuote":true,"nodes":[{"content":"IAsyncActionWithProgress&lt;TProgress&gt;","pos":[0,35],"source":"IAsyncActionWithProgress<TProgress>"}]},{"pos":[25177,25201],"content":"IAsyncActionWithProgress","needQuote":true,"nodes":[{"content":"IAsyncActionWithProgress","pos":[0,24]}]},{"pos":[25334,25335],"content":"<","needQuote":true,"nodes":[]},{"pos":[25382,25391],"content":"TProgress","needQuote":true,"nodes":[{"content":"TProgress","pos":[0,9]}]},{"pos":[25574,25598],"content":"IAsyncActionWithProgress","needQuote":true,"nodes":[{"content":"IAsyncActionWithProgress","pos":[0,24]}]},{"content":"(Of","pos":[25732,25735]},{"pos":[25794,25803],"content":"TProgress","needQuote":true,"nodes":[{"content":"TProgress","pos":[0,9]}]},{"pos":[25866,25867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25982,26003],"content":"Func<T1, T2, TResult>","needQuote":true,"nodes":[{"content":"Func&lt;T1, T2, TResult&gt;","pos":[0,21],"source":"Func<T1, T2, TResult>"}]},{"pos":[26258,26262],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[26322,26323],"content":"<","needQuote":true,"nodes":[]},{"pos":[26370,26372],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"content":",","pos":[26422,26423]},{"pos":[26478,26480],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"content":",","pos":[26530,26531]},{"pos":[26586,26593],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[26740,26744],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[26805,26808]},{"pos":[26867,26869],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"content":",","pos":[26919,26920]},{"pos":[26975,26977],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"content":",","pos":[27027,27028]},{"pos":[27083,27090],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[27149,27150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27267,27293],"content":"IAsyncActionWithProgress<>","needQuote":true,"nodes":[{"content":"IAsyncActionWithProgress&lt;&gt;","pos":[0,26],"source":"IAsyncActionWithProgress<>"}]},{"pos":[27629,27653],"content":"IAsyncActionWithProgress","needQuote":true,"nodes":[{"content":"IAsyncActionWithProgress","pos":[0,24]}]},{"pos":[27786,27787],"content":"<","needQuote":true,"nodes":[]},{"pos":[27999,28023],"content":"IAsyncActionWithProgress","needQuote":true,"nodes":[{"content":"IAsyncActionWithProgress","pos":[0,24]}]},{"content":"(Of","pos":[28157,28160]},{"pos":[28264,28265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28545,28583],"content":"Func<CancellationToken, Task<TResult>>","needQuote":true,"nodes":[{"content":"Func&lt;CancellationToken, Task&lt;TResult&gt;&gt;","pos":[0,38],"source":"Func<CancellationToken, Task<TResult>>"}]},{"pos":[29012,29016],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[29097,29098],"content":"<","needQuote":true,"nodes":[]},{"pos":[29189,29206],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":",","pos":[29324,29325]},{"pos":[29419,29423],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[29520,29521],"content":"<","needQuote":true,"nodes":[]},{"pos":[29568,29575],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[29776,29780],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[29862,29865]},{"pos":[29968,29985],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":",","pos":[30103,30104]},{"pos":[30198,30202],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[30300,30303]},{"pos":[30362,30369],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[30428,30429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30476,30477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30683,30707],"content":"IAsyncOperation<TResult>","needQuote":true,"nodes":[{"content":"IAsyncOperation&lt;TResult&gt;","pos":[0,24],"source":"IAsyncOperation<TResult>"}]},{"pos":[31024,31039],"content":"IAsyncOperation","needQuote":true,"nodes":[{"content":"IAsyncOperation","pos":[0,15]}]},{"pos":[31154,31155],"content":"<","needQuote":true,"nodes":[]},{"pos":[31202,31209],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[31379,31394],"content":"IAsyncOperation","needQuote":true,"nodes":[{"content":"IAsyncOperation","pos":[0,15]}]},{"content":"(Of","pos":[31510,31513]},{"pos":[31572,31579],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[31638,31639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31747,31764],"content":"IAsyncOperation<>","needQuote":true,"nodes":[{"content":"IAsyncOperation&lt;&gt;","pos":[0,17],"source":"IAsyncOperation<>"}]},{"pos":[32046,32061],"content":"IAsyncOperation","needQuote":true,"nodes":[{"content":"IAsyncOperation","pos":[0,15]}]},{"pos":[32176,32177],"content":"<","needQuote":true,"nodes":[]},{"pos":[32380,32395],"content":"IAsyncOperation","needQuote":true,"nodes":[{"content":"IAsyncOperation","pos":[0,15]}]},{"content":"(Of","pos":[32511,32514]},{"pos":[32618,32619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32951,33011],"content":"Func<CancellationToken, IProgress<TProgress>, Task<TResult>>","needQuote":true,"nodes":[{"content":"Func&lt;CancellationToken, IProgress&lt;TProgress&gt;, Task&lt;TResult&gt;&gt;","pos":[0,60],"source":"Func<CancellationToken, IProgress<TProgress>, Task<TResult>>"}]},{"pos":[33573,33577],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[33658,33659],"content":"<","needQuote":true,"nodes":[]},{"pos":[33750,33767],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":",","pos":[33885,33886]},{"pos":[33969,33978],"content":"IProgress","needQuote":true,"nodes":[{"content":"IProgress","pos":[0,9]}]},{"pos":[34069,34070],"content":"<","needQuote":true,"nodes":[]},{"pos":[34117,34126],"content":"TProgress","needQuote":true,"nodes":[{"content":"TProgress","pos":[0,9]}]},{"content":",","pos":[34244,34245]},{"pos":[34339,34343],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[34440,34441],"content":"<","needQuote":true,"nodes":[]},{"pos":[34488,34495],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[34696,34700],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[34782,34785]},{"pos":[34888,34905],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":",","pos":[35023,35024]},{"pos":[35107,35116],"content":"IProgress","needQuote":true,"nodes":[{"content":"IProgress","pos":[0,9]}]},{"content":"(Of","pos":[35208,35211]},{"pos":[35270,35279],"content":"TProgress","needQuote":true,"nodes":[{"content":"TProgress","pos":[0,9]}]},{"pos":[35342,35343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[35391,35392]},{"pos":[35486,35490],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[35588,35591]},{"pos":[35650,35657],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[35716,35717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35764,35765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36023,36070],"content":"IAsyncOperationWithProgress<TResult, TProgress>","needQuote":true,"nodes":[{"content":"IAsyncOperationWithProgress&lt;TResult, TProgress&gt;","pos":[0,47],"source":"IAsyncOperationWithProgress<TResult, TProgress>"}]},{"pos":[36514,36541],"content":"IAsyncOperationWithProgress","needQuote":true,"nodes":[{"content":"IAsyncOperationWithProgress","pos":[0,27]}]},{"pos":[36680,36681],"content":"<","needQuote":true,"nodes":[]},{"pos":[36728,36735],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[36795,36796]},{"pos":[36851,36860],"content":"TProgress","needQuote":true,"nodes":[{"content":"TProgress","pos":[0,9]}]},{"pos":[37046,37073],"content":"IAsyncOperationWithProgress","needQuote":true,"nodes":[{"content":"IAsyncOperationWithProgress","pos":[0,27]}]},{"content":"(Of","pos":[37213,37216]},{"pos":[37275,37282],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[37342,37343]},{"pos":[37398,37407],"content":"TProgress","needQuote":true,"nodes":[{"content":"TProgress","pos":[0,9]}]},{"pos":[37470,37471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37591,37622],"content":"IAsyncOperationWithProgress<, >","needQuote":true,"nodes":[{"content":"IAsyncOperationWithProgress&lt;, &gt;","pos":[0,31],"source":"IAsyncOperationWithProgress<, >"}]},{"pos":[37986,38013],"content":"IAsyncOperationWithProgress","needQuote":true,"nodes":[{"content":"IAsyncOperationWithProgress","pos":[0,27]}]},{"pos":[38152,38153],"content":"<","needQuote":true,"nodes":[]},{"content":",","pos":[38246,38247]},{"pos":[38470,38497],"content":"IAsyncOperationWithProgress","needQuote":true,"nodes":[{"content":"IAsyncOperationWithProgress","pos":[0,27]}]},{"content":"(Of","pos":[38637,38640]},{"content":",","pos":[38745,38746]},{"pos":[38846,38847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo\n  commentId: T:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo\n  id: AsyncInfo\n  parent: System.Runtime.InteropServices.WindowsRuntime\n  children:\n  - System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})\n  - System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task})\n  - System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})\n  - System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``2(System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}})\n  langs:\n  - csharp\n  - vb\n  name: AsyncInfo\n  nameWithType: AsyncInfo\n  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AsyncInfo\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 77\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      [SecurityCritical]\n\n      public class AsyncInfo\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      <SecurityCritical>\n\n      Public Class AsyncInfo\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})\n  id: Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})\n  parent: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo\n  langs:\n  - csharp\n  - vb\n  name: Run(Func<CancellationToken, Task>)\n  nameWithType: AsyncInfo.Run(Func<CancellationToken, Task>)\n  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Run\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 81\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  syntax:\n    content: public static IAsyncAction Run(Func<CancellationToken, Task> taskProvider)\n    content.vb: Public Shared Function Run(taskProvider As Func(Of CancellationToken, Task)) As IAsyncAction\n    parameters:\n    - id: taskProvider\n      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}\n    return:\n      type: Windows.Foundation.IAsyncAction\n  nameWithType.vb: AsyncInfo.Run(Func(Of CancellationToken, Task))\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task))\n  name.vb: Run(Func(Of CancellationToken, Task))\n- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task})\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task})\n  id: Run``1(System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task})\n  parent: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo\n  langs:\n  - csharp\n  - vb\n  name: Run<TProgress>(Func<CancellationToken, IProgress<TProgress>, Task>)\n  nameWithType: AsyncInfo.Run<TProgress>(Func<CancellationToken, IProgress<TProgress>, Task>)\n  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run<TProgress>(System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, System.Threading.Tasks.Task>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Run\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 82\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  syntax:\n    content: public static IAsyncActionWithProgress<TProgress> Run<TProgress>(Func<CancellationToken, IProgress<TProgress>, Task> taskProvider)\n    content.vb: Public Shared Function Run(Of TProgress)(taskProvider As Func(Of CancellationToken, IProgress(Of TProgress), Task)) As IAsyncActionWithProgress(Of TProgress)\n    parameters:\n    - id: taskProvider\n      type: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},System.Threading.Tasks.Task}\n    typeParameters:\n    - id: TProgress\n    return:\n      type: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}\n  nameWithType.vb: AsyncInfo.Run(Of TProgress)(Func(Of CancellationToken, IProgress(Of TProgress), Task))\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(Of TProgress)(System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), System.Threading.Tasks.Task))\n  name.vb: Run(Of TProgress)(Func(Of CancellationToken, IProgress(Of TProgress), Task))\n- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})\n  id: Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})\n  parent: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo\n  langs:\n  - csharp\n  - vb\n  name: Run<TResult>(Func<CancellationToken, Task<TResult>>)\n  nameWithType: AsyncInfo.Run<TResult>(Func<CancellationToken, Task<TResult>>)\n  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run<TResult>(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<TResult>>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Run\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 83\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  syntax:\n    content: public static IAsyncOperation<TResult> Run<TResult>(Func<CancellationToken, Task<TResult>> taskProvider)\n    content.vb: Public Shared Function Run(Of TResult)(taskProvider As Func(Of CancellationToken, Task(Of TResult))) As IAsyncOperation(Of TResult)\n    parameters:\n    - id: taskProvider\n      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{{TResult}}}\n    typeParameters:\n    - id: TResult\n    return:\n      type: Windows.Foundation.IAsyncOperation{{TResult}}\n  nameWithType.vb: AsyncInfo.Run(Of TResult)(Func(Of CancellationToken, Task(Of TResult)))\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(Of TResult)(System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of TResult)))\n  name.vb: Run(Of TResult)(Func(Of CancellationToken, Task(Of TResult)))\n- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``2(System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}})\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``2(System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}})\n  id: Run``2(System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}})\n  parent: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo\n  langs:\n  - csharp\n  - vb\n  name: Run<TResult, TProgress>(Func<CancellationToken, IProgress<TProgress>, Task<TResult>>)\n  nameWithType: AsyncInfo.Run<TResult, TProgress>(Func<CancellationToken, IProgress<TProgress>, Task<TResult>>)\n  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run<TResult, TProgress>(System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, System.Threading.Tasks.Task<TResult>>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Run\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 84\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  syntax:\n    content: public static IAsyncOperationWithProgress<TResult, TProgress> Run<TResult, TProgress>(Func<CancellationToken, IProgress<TProgress>, Task<TResult>> taskProvider)\n    content.vb: Public Shared Function Run(Of TResult, TProgress)(taskProvider As Func(Of CancellationToken, IProgress(Of TProgress), Task(Of TResult))) As IAsyncOperationWithProgress(Of TResult, TProgress)\n    parameters:\n    - id: taskProvider\n      type: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},System.Threading.Tasks.Task{{TResult}}}\n    typeParameters:\n    - id: TResult\n    - id: TProgress\n    return:\n      type: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}\n  nameWithType.vb: AsyncInfo.Run(Of TResult, TProgress)(Func(Of CancellationToken, IProgress(Of TProgress), Task(Of TResult)))\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(Of TResult, TProgress)(System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), System.Threading.Tasks.Task(Of TResult)))\n  name.vb: Run(Of TResult, TProgress)(Func(Of CancellationToken, IProgress(Of TProgress), Task(Of TResult)))\nreferences:\n- uid: System.Runtime.InteropServices.WindowsRuntime\n  commentId: N:System.Runtime.InteropServices.WindowsRuntime\n  isExternal: false\n  name: System.Runtime.InteropServices.WindowsRuntime\n  nameWithType: System.Runtime.InteropServices.WindowsRuntime\n  fullName: System.Runtime.InteropServices.WindowsRuntime\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}\n  commentId: T:System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}\n  parent: System\n  definition: System.Func`2\n  name: Func<CancellationToken, Task>\n  nameWithType: Func<CancellationToken, Task>\n  fullName: System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task>\n  nameWithType.vb: Func(Of CancellationToken, Task)\n  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task)\n  name.vb: Func(Of CancellationToken, Task)\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    nameWithType: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Threading.Tasks.Task\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    nameWithType: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Threading.Tasks.Task\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: Windows.Foundation.IAsyncAction\n  isExternal: true\n  name: IAsyncAction\n  nameWithType: IAsyncAction\n  fullName: Windows.Foundation.IAsyncAction\n- uid: System.Func`2\n  commentId: T:System.Func`2\n  isExternal: false\n  name: Func<T, TResult>\n  nameWithType: Func<T, TResult>\n  fullName: System.Func<T, TResult>\n  nameWithType.vb: Func(Of T, TResult)\n  fullname.vb: System.Func(Of T, TResult)\n  name.vb: Func(Of T, TResult)\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},System.Threading.Tasks.Task}\n  commentId: T:System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task}\n  parent: System\n  definition: System.Func`3\n  name: Func<CancellationToken, IProgress<TProgress>, Task>\n  nameWithType: Func<CancellationToken, IProgress<TProgress>, Task>\n  fullName: System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, System.Threading.Tasks.Task>\n  nameWithType.vb: Func(Of CancellationToken, IProgress(Of TProgress), Task)\n  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), System.Threading.Tasks.Task)\n  name.vb: Func(Of CancellationToken, IProgress(Of TProgress), Task)\n  spec.csharp:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    nameWithType: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IProgress`1\n    name: IProgress\n    nameWithType: IProgress\n    fullName: System.IProgress\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TProgress\n    nameWithType: TProgress\n    fullName: TProgress\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Threading.Tasks.Task\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    nameWithType: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IProgress`1\n    name: IProgress\n    nameWithType: IProgress\n    fullName: System.IProgress\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TProgress\n    nameWithType: TProgress\n    fullName: TProgress\n  - name: )\n    nameWithType: )\n    fullName: )\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Threading.Tasks.Task\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}\n  commentId: '!:Windows.Foundation.IAsyncActionWithProgress{``0}'\n  definition: Windows.Foundation.IAsyncActionWithProgress`1\n  name: IAsyncActionWithProgress<TProgress>\n  nameWithType: IAsyncActionWithProgress<TProgress>\n  fullName: Windows.Foundation.IAsyncActionWithProgress<TProgress>\n  nameWithType.vb: IAsyncActionWithProgress(Of TProgress)\n  fullname.vb: Windows.Foundation.IAsyncActionWithProgress(Of TProgress)\n  name.vb: IAsyncActionWithProgress(Of TProgress)\n  spec.csharp:\n  - uid: Windows.Foundation.IAsyncActionWithProgress`1\n    name: IAsyncActionWithProgress\n    nameWithType: IAsyncActionWithProgress\n    fullName: Windows.Foundation.IAsyncActionWithProgress\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TProgress\n    nameWithType: TProgress\n    fullName: TProgress\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: Windows.Foundation.IAsyncActionWithProgress`1\n    name: IAsyncActionWithProgress\n    nameWithType: IAsyncActionWithProgress\n    fullName: Windows.Foundation.IAsyncActionWithProgress\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TProgress\n    nameWithType: TProgress\n    fullName: TProgress\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Func`3\n  commentId: T:System.Func`3\n  isExternal: false\n  name: Func<T1, T2, TResult>\n  nameWithType: Func<T1, T2, TResult>\n  fullName: System.Func<T1, T2, TResult>\n  nameWithType.vb: Func(Of T1, T2, TResult)\n  fullname.vb: System.Func(Of T1, T2, TResult)\n  name.vb: Func(Of T1, T2, TResult)\n  spec.csharp:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: Windows.Foundation.IAsyncActionWithProgress`1\n  isExternal: true\n  name: IAsyncActionWithProgress<>\n  nameWithType: IAsyncActionWithProgress<>\n  fullName: Windows.Foundation.IAsyncActionWithProgress<>\n  nameWithType.vb: IAsyncActionWithProgress(Of )\n  fullname.vb: Windows.Foundation.IAsyncActionWithProgress(Of )\n  name.vb: IAsyncActionWithProgress(Of )\n  spec.csharp:\n  - uid: Windows.Foundation.IAsyncActionWithProgress`1\n    name: IAsyncActionWithProgress\n    nameWithType: IAsyncActionWithProgress\n    fullName: Windows.Foundation.IAsyncActionWithProgress\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: \n    nameWithType: \n    fullName: \n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: Windows.Foundation.IAsyncActionWithProgress`1\n    name: IAsyncActionWithProgress\n    nameWithType: IAsyncActionWithProgress\n    fullName: Windows.Foundation.IAsyncActionWithProgress\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: \n    nameWithType: \n    fullName: \n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{{TResult}}}\n  commentId: T:System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}}\n  parent: System\n  definition: System.Func`2\n  name: Func<CancellationToken, Task<TResult>>\n  nameWithType: Func<CancellationToken, Task<TResult>>\n  fullName: System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<TResult>>\n  nameWithType.vb: Func(Of CancellationToken, Task(Of TResult))\n  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of TResult))\n  name.vb: Func(Of CancellationToken, Task(Of TResult))\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    nameWithType: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    nameWithType: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: )\n    nameWithType: )\n    fullName: )\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: Windows.Foundation.IAsyncOperation{{TResult}}\n  commentId: '!:Windows.Foundation.IAsyncOperation{``0}'\n  definition: Windows.Foundation.IAsyncOperation`1\n  name: IAsyncOperation<TResult>\n  nameWithType: IAsyncOperation<TResult>\n  fullName: Windows.Foundation.IAsyncOperation<TResult>\n  nameWithType.vb: IAsyncOperation(Of TResult)\n  fullname.vb: Windows.Foundation.IAsyncOperation(Of TResult)\n  name.vb: IAsyncOperation(Of TResult)\n  spec.csharp:\n  - uid: Windows.Foundation.IAsyncOperation`1\n    name: IAsyncOperation\n    nameWithType: IAsyncOperation\n    fullName: Windows.Foundation.IAsyncOperation\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: Windows.Foundation.IAsyncOperation`1\n    name: IAsyncOperation\n    nameWithType: IAsyncOperation\n    fullName: Windows.Foundation.IAsyncOperation\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: Windows.Foundation.IAsyncOperation`1\n  isExternal: true\n  name: IAsyncOperation<>\n  nameWithType: IAsyncOperation<>\n  fullName: Windows.Foundation.IAsyncOperation<>\n  nameWithType.vb: IAsyncOperation(Of )\n  fullname.vb: Windows.Foundation.IAsyncOperation(Of )\n  name.vb: IAsyncOperation(Of )\n  spec.csharp:\n  - uid: Windows.Foundation.IAsyncOperation`1\n    name: IAsyncOperation\n    nameWithType: IAsyncOperation\n    fullName: Windows.Foundation.IAsyncOperation\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: \n    nameWithType: \n    fullName: \n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: Windows.Foundation.IAsyncOperation`1\n    name: IAsyncOperation\n    nameWithType: IAsyncOperation\n    fullName: Windows.Foundation.IAsyncOperation\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: \n    nameWithType: \n    fullName: \n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},System.Threading.Tasks.Task{{TResult}}}\n  commentId: T:System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}}\n  parent: System\n  definition: System.Func`3\n  name: Func<CancellationToken, IProgress<TProgress>, Task<TResult>>\n  nameWithType: Func<CancellationToken, IProgress<TProgress>, Task<TResult>>\n  fullName: System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, System.Threading.Tasks.Task<TResult>>\n  nameWithType.vb: Func(Of CancellationToken, IProgress(Of TProgress), Task(Of TResult))\n  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), System.Threading.Tasks.Task(Of TResult))\n  name.vb: Func(Of CancellationToken, IProgress(Of TProgress), Task(Of TResult))\n  spec.csharp:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    nameWithType: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IProgress`1\n    name: IProgress\n    nameWithType: IProgress\n    fullName: System.IProgress\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TProgress\n    nameWithType: TProgress\n    fullName: TProgress\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    nameWithType: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IProgress`1\n    name: IProgress\n    nameWithType: IProgress\n    fullName: System.IProgress\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TProgress\n    nameWithType: TProgress\n    fullName: TProgress\n  - name: )\n    nameWithType: )\n    fullName: )\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: )\n    nameWithType: )\n    fullName: )\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}\n  commentId: '!:Windows.Foundation.IAsyncOperationWithProgress{``0,``1}'\n  definition: Windows.Foundation.IAsyncOperationWithProgress`2\n  name: IAsyncOperationWithProgress<TResult, TProgress>\n  nameWithType: IAsyncOperationWithProgress<TResult, TProgress>\n  fullName: Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>\n  nameWithType.vb: IAsyncOperationWithProgress(Of TResult, TProgress)\n  fullname.vb: Windows.Foundation.IAsyncOperationWithProgress(Of TResult, TProgress)\n  name.vb: IAsyncOperationWithProgress(Of TResult, TProgress)\n  spec.csharp:\n  - uid: Windows.Foundation.IAsyncOperationWithProgress`2\n    name: IAsyncOperationWithProgress\n    nameWithType: IAsyncOperationWithProgress\n    fullName: Windows.Foundation.IAsyncOperationWithProgress\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TProgress\n    nameWithType: TProgress\n    fullName: TProgress\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: Windows.Foundation.IAsyncOperationWithProgress`2\n    name: IAsyncOperationWithProgress\n    nameWithType: IAsyncOperationWithProgress\n    fullName: Windows.Foundation.IAsyncOperationWithProgress\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TProgress\n    nameWithType: TProgress\n    fullName: TProgress\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: Windows.Foundation.IAsyncOperationWithProgress`2\n  isExternal: true\n  name: IAsyncOperationWithProgress<, >\n  nameWithType: IAsyncOperationWithProgress<, >\n  fullName: Windows.Foundation.IAsyncOperationWithProgress<, >\n  nameWithType.vb: IAsyncOperationWithProgress(Of , )\n  fullname.vb: Windows.Foundation.IAsyncOperationWithProgress(Of , )\n  name.vb: IAsyncOperationWithProgress(Of , )\n  spec.csharp:\n  - uid: Windows.Foundation.IAsyncOperationWithProgress`2\n    name: IAsyncOperationWithProgress\n    nameWithType: IAsyncOperationWithProgress\n    fullName: Windows.Foundation.IAsyncOperationWithProgress\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: \n    nameWithType: \n    fullName: \n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: \n    nameWithType: \n    fullName: \n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: Windows.Foundation.IAsyncOperationWithProgress`2\n    name: IAsyncOperationWithProgress\n    nameWithType: IAsyncOperationWithProgress\n    fullName: Windows.Foundation.IAsyncOperationWithProgress\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: \n    nameWithType: \n    fullName: \n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: \n    nameWithType: \n    fullName: \n  - name: )\n    nameWithType: )\n    fullName: )\n"}