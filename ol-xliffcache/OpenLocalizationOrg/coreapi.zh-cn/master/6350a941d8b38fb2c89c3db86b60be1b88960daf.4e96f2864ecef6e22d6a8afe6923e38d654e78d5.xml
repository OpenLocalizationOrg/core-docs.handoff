{"nodes":[{"pos":[242,268],"content":"AsyncCompletedEventHandler","needQuote":true,"nodes":[{"content":"AsyncCompletedEventHandler","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The source of the event.","pos":[1230,1259],"source":"\\n<p>The source of the event."},{"content":"&lt;/p&gt;\\n","pos":[1260,1266],"source":" </p>\\n"},{"pos":[2152,2173],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[2521,2536],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2705,2718],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2803,2804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2831,2832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2939,2952],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3037,3038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3065,3066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3301,3307],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3499,3522],"content":"AsyncCompletedEventArgs","needQuote":true,"nodes":[{"content":"AsyncCompletedEventArgs","pos":[0,23]}]},{"pos":[3793,3816],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[4017,4030],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4115,4116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4168,4176],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4238,4239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4363,4376],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4461,4462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4514,4522],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4584,4585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4871,4898],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[5104,5110],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5228,5245],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.ComponentModel.AsyncCompletedEventHandler\n  commentId: T:System.ComponentModel.AsyncCompletedEventHandler\n  id: AsyncCompletedEventHandler\n  parent: System.ComponentModel\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: AsyncCompletedEventHandler\n  fullName: System.ComponentModel.AsyncCompletedEventHandler\n  type: Delegate\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AsyncCompletedEventHandler\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs\n    startLine: 9\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Represents the method that will handle the MethodName<strong>Completed</strong> event of an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);\n    content.vb: Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)\n    parameters:\n    - id: sender\n      type: System.Object\n      description: \"\\n<p>The source of the event. </p>\\n\"\n    - id: e\n      type: System.ComponentModel.AsyncCompletedEventArgs\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.AsyncCompletedEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the event data. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.AsyncCompletedEventArgs\n    commentId: T:System.ComponentModel.AsyncCompletedEventArgs\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  - type: System.ComponentModel.AsyncOperation\n    commentId: T:System.ComponentModel.AsyncOperation\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: AsyncCompletedEventHandler\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.ComponentModel.AsyncCompletedEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: AsyncCompletedEventArgs\n  fullName: System.ComponentModel.AsyncCompletedEventArgs\n  nameWithType: AsyncCompletedEventArgs\n  commentId: T:System.ComponentModel.AsyncCompletedEventArgs\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n"}