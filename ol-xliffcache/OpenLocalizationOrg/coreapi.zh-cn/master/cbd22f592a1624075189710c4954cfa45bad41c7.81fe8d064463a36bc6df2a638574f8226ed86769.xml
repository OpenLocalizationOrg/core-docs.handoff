{"nodes":[{"pos":[481,498],"content":"CallingConvention","needQuote":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[1848,1853],"content":"Cdecl","needQuote":true,"nodes":[{"content":"Cdecl","pos":[0,5]}]},{"pos":[3020,3027],"content":"StdCall","needQuote":true,"nodes":[{"content":"StdCall","pos":[0,7]}]},{"pos":[4104,4112],"content":"ThisCall","needQuote":true,"nodes":[{"content":"ThisCall","pos":[0,8]}]},{"pos":[5294,5300],"content":"Winapi","needQuote":true,"nodes":[{"content":"Winapi","pos":[0,6]}]},{"pos":[6498,6528],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[6790,6807],"content":"CallingConvention","needQuote":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.CallingConvention\n  commentId: T:System.Runtime.InteropServices.CallingConvention\n  id: CallingConvention\n  parent: System.Runtime.InteropServices\n  children:\n  - System.Runtime.InteropServices.CallingConvention.Cdecl\n  - System.Runtime.InteropServices.CallingConvention.StdCall\n  - System.Runtime.InteropServices.CallingConvention.ThisCall\n  - System.Runtime.InteropServices.CallingConvention.Winapi\n  langs:\n  - csharp\n  - vb\n  name: CallingConvention\n  fullName: System.Runtime.InteropServices.CallingConvention\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CallingConvention\n    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n    startLine: 10\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Specifies the calling convention required to call methods implemented in unmanaged code.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public enum CallingConvention\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Enum CallingConvention\n  seealso:\n  - type: System.Runtime.InteropServices.DllImportAttribute\n    commentId: T:System.Runtime.InteropServices.DllImportAttribute\n  - type: System.Reflection.Emit\n    commentId: N:System.Reflection.Emit\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: CallingConvention\n- uid: System.Runtime.InteropServices.CallingConvention.Cdecl\n  commentId: F:System.Runtime.InteropServices.CallingConvention.Cdecl\n  id: Cdecl\n  parent: System.Runtime.InteropServices.CallingConvention\n  langs:\n  - csharp\n  - vb\n  name: Cdecl\n  fullName: System.Runtime.InteropServices.CallingConvention.Cdecl\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Cdecl\n    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n    startLine: 15\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>The caller cleans the stack. This enables calling functions with <strong>varargs</strong>, which makes it appropriate to use for methods that accept a variable number of parameters, such as <strong>Printf</strong>.</p>\\n\"\n  syntax:\n    content: Cdecl = 2\n    return:\n      type: System.Runtime.InteropServices.CallingConvention\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: CallingConvention.Cdecl\n- uid: System.Runtime.InteropServices.CallingConvention.StdCall\n  commentId: F:System.Runtime.InteropServices.CallingConvention.StdCall\n  id: StdCall\n  parent: System.Runtime.InteropServices.CallingConvention\n  langs:\n  - csharp\n  - vb\n  name: StdCall\n  fullName: System.Runtime.InteropServices.CallingConvention.StdCall\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StdCall\n    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n    startLine: 16\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>The callee cleans the stack. This is the default convention for calling unmanaged functions with platform invoke.</p>\\n\"\n  syntax:\n    content: StdCall = 3\n    return:\n      type: System.Runtime.InteropServices.CallingConvention\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: CallingConvention.StdCall\n- uid: System.Runtime.InteropServices.CallingConvention.ThisCall\n  commentId: F:System.Runtime.InteropServices.CallingConvention.ThisCall\n  id: ThisCall\n  parent: System.Runtime.InteropServices.CallingConvention\n  langs:\n  - csharp\n  - vb\n  name: ThisCall\n  fullName: System.Runtime.InteropServices.CallingConvention.ThisCall\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ThisCall\n    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>The first parameter is the <strong>this</strong> pointer and is stored in register ECX. Other parameters are pushed on the stack. This calling convention is used to call methods on classes exported from an unmanaged DLL.</p>\\n\"\n  syntax:\n    content: ThisCall = 4\n    return:\n      type: System.Runtime.InteropServices.CallingConvention\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: CallingConvention.ThisCall\n- uid: System.Runtime.InteropServices.CallingConvention.Winapi\n  commentId: F:System.Runtime.InteropServices.CallingConvention.Winapi\n  id: Winapi\n  parent: System.Runtime.InteropServices.CallingConvention\n  langs:\n  - csharp\n  - vb\n  name: Winapi\n  fullName: System.Runtime.InteropServices.CallingConvention.Winapi\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Winapi\n    path: src/mscorlib/src/System/Runtime/InteropServices/CallingConvention.cs\n    startLine: 14\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>This member is not actually a calling convention, but instead uses the default platform calling convention. For example, on Windows the default is <xref href=\\\"System.Runtime.InteropServices.CallingConvention.StdCall\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and on Windows CE.NET it is <xref href=\\\"System.Runtime.InteropServices.CallingConvention.Cdecl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: Winapi = 1\n    return:\n      type: System.Runtime.InteropServices.CallingConvention\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: CallingConvention.Winapi\nreferences:\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Runtime.InteropServices.CallingConvention\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: CallingConvention\n  fullName: System.Runtime.InteropServices.CallingConvention\n  nameWithType: CallingConvention\n  commentId: T:System.Runtime.InteropServices.CallingConvention\n"}