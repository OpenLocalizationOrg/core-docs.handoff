{"nodes":[{"pos":[2750,2757],"content":"SqlGuid","needQuote":true,"nodes":[{"content":"SqlGuid","pos":[0,7]}]},{"pos":[5360,5375],"content":"SqlGuid(Byte[])","needQuote":true,"nodes":[{"content":"SqlGuid(Byte[])","pos":[0,15]}]},{"content":"\\n&lt;p&gt;A byte array.","pos":[6180,6198],"source":"\\n<p>A byte array."},{"content":"&lt;/p&gt;\\n","pos":[6199,6205],"source":" </p>\\n"},{"pos":[6661,6674],"content":"SqlGuid(Guid)","needQuote":true,"nodes":[{"content":"SqlGuid(Guid)","pos":[0,13]}]},{"pos":[8291,8367],"content":"SqlGuid(Int32, Int16, Int16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte)","needQuote":true,"nodes":[{"content":"SqlGuid(Int32, Int16, Int16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte)","pos":[0,76]}]},{"pos":[11796,11811],"content":"SqlGuid(String)","needQuote":true,"nodes":[{"content":"SqlGuid(String)","pos":[0,15]}]},{"pos":[13044,13050],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;strong&gt;null&lt;/strong&gt;.","pos":[13830,13884],"source":"\\n<p>\\n<strong>true</strong> if <strong>null</strong>."},{"content":"Otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13885,13925],"source":" Otherwise, <strong>false</strong>.</p>\\n"},{"pos":[14271,14276],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[15525,15543],"content":"CompareTo(SqlGuid)","needQuote":true,"nodes":[{"content":"CompareTo(SqlGuid)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A signed number that indicates the relative values of the instance and the object.&lt;/p&gt;\\n&lt;p&gt;Return Value &lt;/p&gt;\\n&lt;p&gt;Condition &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is less than object.","pos":[16794,17024],"source":"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return Value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is the same as object.","pos":[17025,17115],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is greater than object &lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;object is a null reference (&lt;strong&gt;Nothing&lt;/strong&gt;).","pos":[17116,17297],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than object </p>\\n<p>-or- </p>\\n<p>object is a null reference (<strong>Nothing</strong>)."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[17298,17332],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[17670,17687],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A signed number that indicates the relative values of the instance and the object.&lt;/p&gt;\\n&lt;p&gt;Return Value &lt;/p&gt;\\n&lt;p&gt;Condition &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is less than object.","pos":[18810,19040],"source":"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return Value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is the same as object.","pos":[19041,19131],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is greater than object &lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;object is a null reference (&lt;strong&gt;Nothing&lt;/strong&gt;) &lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[19132,19347],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than object </p>\\n<p>-or- </p>\\n<p>object is a null reference (<strong>Nothing</strong>) </p>\\n</td></tr></tbody></table>\\n"},{"pos":[19869,19893],"content":"Equals(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"Equals(SqlGuid, SqlGuid)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the two values are equal.","pos":[21194,21251],"source":"\\n<p>\\n<strong>true</strong> if the two values are equal."},{"content":"Otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[21252,21286],"source":" Otherwise, <strong>false</strong>."},{"content":"If either instance is null, then the &lt;strong&gt;SqlGuid&lt;/strong&gt; will be null.&lt;/p&gt;\\n","pos":[21287,21368],"source":" If either instance is null, then the <strong>SqlGuid</strong> will be null.</p>\\n"},{"pos":[21725,21739],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to be compared.","pos":[22662,22693],"source":"\\n<p>The object to be compared."},{"content":"&lt;/p&gt;\\n","pos":[22694,22700],"source":" </p>\\n"},{"pos":[23344,23357],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[24112,24157],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[24698,24727],"content":"GreaterThan(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"GreaterThan(SqlGuid, SqlGuid)","pos":[0,29]}]},{"pos":[27383,27419],"content":"GreaterThanOrEqual(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(SqlGuid, SqlGuid)","pos":[0,36]}]},{"pos":[30104,30130],"content":"LessThan(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"LessThan(SqlGuid, SqlGuid)","pos":[0,26]}]},{"pos":[32756,32789],"content":"LessThanOrEqual(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(SqlGuid, SqlGuid)","pos":[0,33]}]},{"pos":[35456,35483],"content":"NotEquals(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"NotEquals(SqlGuid, SqlGuid)","pos":[0,27]}]},{"pos":[38111,38137],"content":"Equality(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"Equality(SqlGuid, SqlGuid)","pos":[0,26]}]},{"pos":[40763,40793],"content":"Explicit(SqlBinary to SqlGuid)","needQuote":true,"nodes":[{"content":"Explicit(SqlBinary to SqlGuid)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;SqlBinary&lt;/strong&gt; object.","pos":[41756,41797],"source":"\\n<p>A <strong>SqlBinary</strong> object."},{"content":"&lt;/p&gt;\\n","pos":[41798,41804],"source":" </p>\\n"},{"pos":[42986,43011],"content":"Explicit(SqlGuid to Guid)","needQuote":true,"nodes":[{"content":"Explicit(SqlGuid to Guid)","pos":[0,25]}]},{"pos":[45099,45129],"content":"Explicit(SqlString to SqlGuid)","needQuote":true,"nodes":[{"content":"Explicit(SqlString to SqlGuid)","pos":[0,30]}]},{"pos":[47368,47397],"content":"GreaterThan(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"GreaterThan(SqlGuid, SqlGuid)","pos":[0,29]}]},{"pos":[50054,50090],"content":"GreaterThanOrEqual(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(SqlGuid, SqlGuid)","pos":[0,36]}]},{"pos":[52715,52740],"content":"Implicit(Guid to SqlGuid)","needQuote":true,"nodes":[{"content":"Implicit(Guid to SqlGuid)","pos":[0,25]}]},{"pos":[54809,54837],"content":"Inequality(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"Inequality(SqlGuid, SqlGuid)","pos":[0,28]}]},{"pos":[57468,57494],"content":"LessThan(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"LessThan(SqlGuid, SqlGuid)","pos":[0,26]}]},{"pos":[60129,60162],"content":"LessThanOrEqual(SqlGuid, SqlGuid)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(SqlGuid, SqlGuid)","pos":[0,33]}]},{"pos":[62673,62686],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;String&lt;/strong&gt; to be parsed.","pos":[63537,63583],"source":"\\n<p>The <strong>String</strong> to be parsed."},{"content":"&lt;/p&gt;\\n","pos":[63584,63590],"source":" </p>\\n"},{"pos":[64216,64229],"content":"ToByteArray()","needQuote":true,"nodes":[{"content":"ToByteArray()","pos":[0,13]}]},{"pos":[65510,65523],"content":"ToSqlBinary()","needQuote":true,"nodes":[{"content":"ToSqlBinary()","pos":[0,13]}]},{"pos":[66837,66850],"content":"ToSqlString()","needQuote":true,"nodes":[{"content":"ToSqlString()","pos":[0,13]}]},{"pos":[68235,68245],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[69517,69537],"content":"System.Data.SqlTypes","needQuote":true,"nodes":[{"content":"System.Data.SqlTypes","pos":[0,20]}]},{"pos":[69741,69750],"content":"INullable","needQuote":true,"nodes":[{"content":"INullable","pos":[0,9]}]},{"pos":[69937,69948],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[70150,70172],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[70320,70326],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[70393,70394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70444,70450],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[70511,70512]},{"pos":[70567,70573],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70633,70634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70731,70737],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[70804,70805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70855,70861],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[70922,70923]},{"pos":[70978,70984],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71044,71045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71290,71321],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[71487,71502],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[71578,71579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71629,71635],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[71696,71697]},{"pos":[71752,71758],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71818,71819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71925,71940],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[72016,72017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72067,72073],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[72134,72135]},{"pos":[72190,72196],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[72256,72257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72483,72492],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[72585,72592],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[72660,72661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72688,72689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72758,72765],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[72833,72834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72861,72862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72991,72997],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[73128,73134],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[73308,73315],"content":"SqlGuid","needQuote":true,"nodes":[{"content":"SqlGuid","pos":[0,7]}]},{"pos":[73454,73460],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[73580,73584],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[73643,73645]},{"pos":[73708,73712],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[73770,73772],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[73903,73907],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[74045,74050],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[74191,74196],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[74336,74340],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[74479,74485],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[74678,74684],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"pos":[74888,74895],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75084,75101],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"pos":[75236,75245],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[75299,75300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75350,75356],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75416,75417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75508,75517],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[75571,75572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75622,75628],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75688,75689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75909,75919],"content":"SqlBoolean","needQuote":true,"nodes":[{"content":"SqlBoolean","pos":[0,10]}]},{"pos":[76138,76152],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[76277,76283],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[76332,76333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76383,76389],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76449,76450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76536,76542],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[76591,76592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76642,76648],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76708,76709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76890,76899],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[77078,77091],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[77198,77209],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[77263,77264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77291,77292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77368,77379],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[77433,77434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77461,77462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77660,77669],"content":"SqlBinary","needQuote":true,"nodes":[{"content":"SqlBinary","pos":[0,9]}]},{"pos":[77882,77891],"content":"SqlString","needQuote":true,"nodes":[{"content":"SqlString","pos":[0,9]}]},{"pos":[78095,78105],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[78206,78214],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[78265,78266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78293,78294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78367,78375],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[78426,78427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78454,78455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Data.SqlTypes.SqlGuid\n  commentId: T:System.Data.SqlTypes.SqlGuid\n  id: SqlGuid\n  parent: System.Data.SqlTypes\n  children:\n  - System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])\n  - System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)\n  - System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)\n  - System.Data.SqlTypes.SqlGuid.#ctor(System.String)\n  - System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)\n  - System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.Equals(System.Object)\n  - System.Data.SqlTypes.SqlGuid.GetHashCode\n  - System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.IsNull\n  - System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.Null\n  - System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid\n  - System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid\n  - System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid\n  - System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid\n  - System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  - System.Data.SqlTypes.SqlGuid.Parse(System.String)\n  - System.Data.SqlTypes.SqlGuid.ToByteArray\n  - System.Data.SqlTypes.SqlGuid.ToSqlBinary\n  - System.Data.SqlTypes.SqlGuid.ToSqlString\n  - System.Data.SqlTypes.SqlGuid.ToString\n  - System.Data.SqlTypes.SqlGuid.Value\n  langs:\n  - csharp\n  - vb\n  name: SqlGuid\n  fullName: System.Data.SqlTypes.SqlGuid\n  type: Struct\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlGuid\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 19\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents a GUID to be stored in or retrieved from a database.</p>\\n\"\n  syntax:\n    content: 'public struct SqlGuid : INullable, IComparable'\n    content.vb: >-\n      Public Structure SqlGuid\n          Implements INullable, IComparable\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.IComparable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: SqlGuid\n- uid: System.Data.SqlTypes.SqlGuid.Null\n  commentId: F:System.Data.SqlTypes.SqlGuid.Null\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  fullName: System.Data.SqlTypes.SqlGuid.Null\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 374\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents a <xref href=\\\"System.DBNull\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  that can be assigned to this instance of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static readonly SqlGuid Null\n    content.vb: Public Shared ReadOnly Null As SqlGuid\n    return:\n      type: System.Data.SqlTypes.SqlGuid\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlGuid.Null\n- uid: System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])\n  commentId: M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: SqlGuid(Byte[])\n  fullName: System.Data.SqlTypes.SqlGuid.SqlGuid(System.Byte[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 39\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied byte array parameter.</p>\\n\"\n  syntax:\n    content: public SqlGuid(byte[] value)\n    content.vb: Public Sub New(value As Byte())\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: \"\\n<p>A byte array. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlGuid.SqlGuid(System.Byte())\n  name.vb: SqlGuid(Byte())\n  nameWithType: SqlGuid.SqlGuid(Byte[])\n  nameWithType.vb: SqlGuid.SqlGuid(Byte())\n- uid: System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)\n  id: '#ctor(System.Guid)'\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: SqlGuid(Guid)\n  fullName: System.Data.SqlTypes.SqlGuid.SqlGuid(System.Guid)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 70\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the specified <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  syntax:\n    content: public SqlGuid(Guid g)\n    content.vb: Public Sub New(g As Guid)\n    parameters:\n    - id: g\n      type: System.Guid\n      description: \"\\n<p>A <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlGuid.SqlGuid(Guid)\n- uid: System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)\n  commentId: M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)\n  id: '#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)'\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: SqlGuid(Int32, Int16, Int16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte)\n  fullName: System.Data.SqlTypes.SqlGuid.SqlGuid(System.Int32, System.Int16, System.Int16, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte, System.Byte)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 75\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the specified values.</p>\\n\"\n  syntax:\n    content: public SqlGuid(int a, short b, short c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k)\n    content.vb: Public Sub New(a As Integer, b As Short, c As Short, d As Byte, e As Byte, f As Byte, g As Byte, h As Byte, i As Byte, j As Byte, k As Byte)\n    parameters:\n    - id: a\n      type: System.Int32\n      description: \"\\n<p>The first four bytes of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: b\n      type: System.Int16\n      description: \"\\n<p>The next two bytes of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: c\n      type: System.Int16\n      description: \"\\n<p>The next two bytes of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: d\n      type: System.Byte\n      description: \"\\n<p>The next byte of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: e\n      type: System.Byte\n      description: \"\\n<p>The next byte of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: f\n      type: System.Byte\n      description: \"\\n<p>The next byte of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: g\n      type: System.Byte\n      description: \"\\n<p>The next byte of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: h\n      type: System.Byte\n      description: \"\\n<p>The next byte of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: i\n      type: System.Byte\n      description: \"\\n<p>The next byte of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: j\n      type: System.Byte\n      description: \"\\n<p>The next byte of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: k\n      type: System.Byte\n      description: \"\\n<p>The next byte of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlGuid.SqlGuid(Int32, Int16, Int16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte)\n- uid: System.Data.SqlTypes.SqlGuid.#ctor(System.String)\n  commentId: M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: SqlGuid(String)\n  fullName: System.Data.SqlTypes.SqlGuid.SqlGuid(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 62\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the specified <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  syntax:\n    content: public SqlGuid(string s)\n    content.vb: Public Sub New(s As String)\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlGuid.SqlGuid(String)\n- uid: System.Data.SqlTypes.SqlGuid.IsNull\n  commentId: P:System.Data.SqlTypes.SqlGuid.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: IsNull\n  fullName: System.Data.SqlTypes.SqlGuid.IsNull\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNull\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 85\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets a Boolean value that indicates whether this <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is null.</p>\\n\"\n  syntax:\n    content: public bool IsNull { get; }\n    content.vb: Public ReadOnly Property IsNull As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <strong>null</strong>. Otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Data.SqlTypes.INullable.IsNull\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlGuid.IsNull\n- uid: System.Data.SqlTypes.SqlGuid.Value\n  commentId: P:System.Data.SqlTypes.SqlGuid.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Data.SqlTypes.SqlGuid.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 94\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the value of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. This property is read-only.</p>\\n\"\n  syntax:\n    content: public Guid Value { get; }\n    content.vb: Public ReadOnly Property Value As Guid\n    parameters: []\n    return:\n      type: System.Guid\n      description: \"\\n<p>A <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlGuid.Value\n- uid: System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)\n  id: CompareTo(System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompareTo\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 328\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares this <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to the supplied <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.</p>\\n\"\n  syntax:\n    content: public int CompareTo(SqlGuid value)\n    content.vb: Public Function CompareTo(value As SqlGuid) As Integer\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be compared.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return Value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than object. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as object. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than object </p>\\n<p>-or- </p>\\n<p>object is a null reference (<strong>Nothing</strong>). </p>\\n</td></tr></tbody></table>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlGuid.CompareTo(SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)\n  commentId: M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompareTo\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 317\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares this <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.</p>\\n\"\n  syntax:\n    content: public int CompareTo(object value)\n    content.vb: Public Function CompareTo(value As Object) As Integer\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be compared. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return Value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than object. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as object. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than object </p>\\n<p>-or- </p>\\n<p>object is a null reference (<strong>Nothing</strong>) </p>\\n</td></tr></tbody></table>\\n\"\n  implements:\n  - System.IComparable.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlGuid.CompareTo(Object)\n- uid: System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Equals(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 259\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether they are equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean Equals(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Function Equals(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>\\n<strong>true</strong> if the two values are equal. Otherwise, <strong>false</strong>. If either instance is null, then the <strong>SqlGuid</strong> will be null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.Equals(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.Equals(System.Object)\n  commentId: M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Data.SqlTypes.SqlGuid.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 346\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares the supplied object parameter to the <xref href=\\\"System.Data.SqlTypes.SqlGuid.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object value)\n    content.vb: Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The object to be compared. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if object is an instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and the two are equal; otherwise <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlGuid.Equals(Object)\n- uid: System.Data.SqlTypes.SqlGuid.GetHashCode\n  commentId: M:System.Data.SqlTypes.SqlGuid.GetHashCode\n  id: GetHashCode\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Data.SqlTypes.SqlGuid.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 365\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns the hash code of this <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlGuid.GetHashCode()\n- uid: System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: GreaterThan(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GreaterThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 277\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is greater than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean GreaterThan(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Function GreaterThan(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.GreaterThan(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: GreaterThanOrEqual(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GreaterThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 289\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is greater than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean GreaterThanOrEqual(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.GreaterThanOrEqual(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: LessThan(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LessThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 271\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is less than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean LessThan(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Function LessThan(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.LessThan(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: LessThanOrEqual(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LessThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 283\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is less than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean LessThanOrEqual(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Function LessThanOrEqual(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.LessThanOrEqual(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: NotEquals(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NotEquals\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 265\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison on two <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether they are not equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean NotEquals(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Function NotEquals(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are not equal or <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are equal. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.NotEquals(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Equality(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.Equality(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 201\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether they are equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator ==(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Operator =(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are equal or <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are not equal. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.Equality(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid\n  id: op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlBinary to SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.Explicit(System.Data.SqlTypes.SqlBinary to System.Data.SqlTypes.SqlGuid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 192\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter to <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlGuid(SqlBinary x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlBinary) As SqlGuid\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>A <strong>SqlBinary</strong> object. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> whose <xref href=\\\"System.Data.SqlTypes.SqlGuid.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the <xref href=\\\"System.Data.SqlTypes.SqlBinary.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlGuid.Narrowing(System.Data.SqlTypes.SqlBinary to System.Data.SqlTypes.SqlGuid)\n  name.vb: Narrowing(SqlBinary to SqlGuid)\n  nameWithType: SqlGuid.Explicit(SqlBinary to SqlGuid)\n  nameWithType.vb: SqlGuid.Narrowing(SqlBinary to SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid\n  id: op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlGuid to Guid)\n  fullName: System.Data.SqlTypes.SqlGuid.Explicit(System.Data.SqlTypes.SqlGuid to System.Guid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 118\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter to <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator Guid(SqlGuid x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlGuid) As Guid\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Guid\n      description: \"\\n<p>A new <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equal to the <xref href=\\\"System.Data.SqlTypes.SqlGuid.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlGuid.Narrowing(System.Data.SqlTypes.SqlGuid to System.Guid)\n  name.vb: Narrowing(SqlGuid to Guid)\n  nameWithType: SqlGuid.Explicit(SqlGuid to Guid)\n  nameWithType.vb: SqlGuid.Narrowing(SqlGuid to Guid)\n- uid: System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid\n  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlString to SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlGuid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 183\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlGuid(SqlString x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As SqlGuid\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> whose <xref href=\\\"System.Data.SqlTypes.SqlGuid.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equals the value represented by the <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlGuid.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlGuid)\n  name.vb: Narrowing(SqlString to SqlGuid)\n  nameWithType: SqlGuid.Explicit(SqlString to SqlGuid)\n  nameWithType.vb: SqlGuid.Narrowing(SqlString to SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: GreaterThan(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_GreaterThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 225\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is greater than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator>(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Operator>(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.GreaterThan(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: GreaterThanOrEqual(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_GreaterThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 245\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is greater than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator >=(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Operator >=(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.GreaterThanOrEqual(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid\n  id: op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Implicit(Guid to SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.Implicit(System.Guid to System.Data.SqlTypes.SqlGuid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 109\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter to <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static implicit operator SqlGuid(Guid x)\n    content.vb: Public Shared Widening Operator CType(x As Guid) As SqlGuid\n    parameters:\n    - id: x\n      type: System.Guid\n      description: \"\\n<p>A <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> whose <xref href=\\\"System.Data.SqlTypes.SqlGuid.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlGuid.Widening(System.Guid to System.Data.SqlTypes.SqlGuid)\n  name.vb: Widening(Guid to SqlGuid)\n  nameWithType: SqlGuid.Implicit(Guid to SqlGuid)\n  nameWithType.vb: SqlGuid.Widening(Guid to SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Inequality(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.Inequality(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 209\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison on two <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether they are not equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator !=(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Operator <>(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are not equal or <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are equal. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.Inequality(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: LessThan(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_LessThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 217\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is less than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator <(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Operator <(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.LessThan(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  commentId: M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: LessThanOrEqual(SqlGuid, SqlGuid)\n  fullName: System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid, System.Data.SqlTypes.SqlGuid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_LessThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 233\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is less than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator <=(SqlGuid x, SqlGuid y)\n    content.vb: Public Shared Operator <=(x As SqlGuid, y As SqlGuid) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.LessThanOrEqual(SqlGuid, SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid.Parse(System.String)\n  commentId: M:System.Data.SqlTypes.SqlGuid.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Data.SqlTypes.SqlGuid.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 148\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static SqlGuid Parse(string s)\n    content.vb: Public Shared Function Parse(s As String) As SqlGuid\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>The <strong>String</strong> to be parsed. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent to the value that is contained in the specified <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlGuid.Parse(String)\n- uid: System.Data.SqlTypes.SqlGuid.ToByteArray\n  commentId: M:System.Data.SqlTypes.SqlGuid.ToByteArray\n  id: ToByteArray\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: ToByteArray()\n  fullName: System.Data.SqlTypes.SqlGuid.ToByteArray()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToByteArray\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 126\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a byte array.</p>\\n\"\n  syntax:\n    content: public byte[] ToByteArray()\n    content.vb: Public Function ToByteArray As Byte()\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>An array of bytes representing the <xref href=\\\"System.Data.SqlTypes.SqlGuid.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlGuid.ToByteArray()\n- uid: System.Data.SqlTypes.SqlGuid.ToSqlBinary\n  commentId: M:System.Data.SqlTypes.SqlGuid.ToSqlBinary\n  id: ToSqlBinary\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: ToSqlBinary()\n  fullName: System.Data.SqlTypes.SqlGuid.ToSqlBinary()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlBinary\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 301\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlBinary ToSqlBinary()\n    content.vb: Public Function ToSqlBinary As SqlBinary\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>A <strong>SqlBinary</strong> structure that contains the bytes in the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlGuid.ToSqlBinary()\n- uid: System.Data.SqlTypes.SqlGuid.ToSqlString\n  commentId: M:System.Data.SqlTypes.SqlGuid.ToSqlString\n  id: ToSqlString\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: ToSqlString()\n  fullName: System.Data.SqlTypes.SqlGuid.ToSqlString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlString\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 296\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlString ToSqlString()\n    content.vb: Public Function ToSqlString As SqlString\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that contains the string representation of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlGuid.ToSqlString()\n- uid: System.Data.SqlTypes.SqlGuid.ToString\n  commentId: M:System.Data.SqlTypes.SqlGuid.ToString\n  id: ToString\n  parent: System.Data.SqlTypes.SqlGuid\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Data.SqlTypes.SqlGuid.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLGuid.cs\n    startLine: 136\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the string representation of the <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlGuid.ToString()\nreferences:\n- uid: System.Data.SqlTypes\n  isExternal: false\n  name: System.Data.SqlTypes\n  fullName: System.Data.SqlTypes\n  nameWithType: System.Data.SqlTypes\n  commentId: N:System.Data.SqlTypes\n- uid: System.Data.SqlTypes.INullable\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: INullable\n  fullName: System.Data.SqlTypes.INullable\n  nameWithType: INullable\n  commentId: T:System.Data.SqlTypes.INullable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  fullName: System.IComparable\n  nameWithType: IComparable\n  commentId: T:System.IComparable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Data.SqlTypes.SqlGuid\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlGuid\n  fullName: System.Data.SqlTypes.SqlGuid\n  nameWithType: SqlGuid\n  commentId: T:System.Data.SqlTypes.SqlGuid\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  fullName: System.Guid\n  nameWithType: Guid\n  commentId: T:System.Guid\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  nameWithType: Int16\n  commentId: T:System.Int16\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Data.SqlTypes.INullable.IsNull\n  parent: System.Data.SqlTypes.INullable\n  isExternal: false\n  name: IsNull\n  fullName: System.Data.SqlTypes.INullable.IsNull\n  nameWithType: INullable.IsNull\n  commentId: P:System.Data.SqlTypes.INullable.IsNull\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IComparable.CompareTo(System.Object)\n  parent: System.IComparable\n  isExternal: true\n  name: CompareTo(Object)\n  fullName: System.IComparable.CompareTo(System.Object)\n  spec.csharp:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable.CompareTo(Object)\n  commentId: M:System.IComparable.CompareTo(System.Object)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n  nameWithType: SqlBoolean\n  commentId: T:System.Data.SqlTypes.SqlBoolean\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.Data.SqlTypes.SqlBinary\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBinary\n  fullName: System.Data.SqlTypes.SqlBinary\n  nameWithType: SqlBinary\n  commentId: T:System.Data.SqlTypes.SqlBinary\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n  nameWithType: SqlString\n  commentId: T:System.Data.SqlTypes.SqlString\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n"}