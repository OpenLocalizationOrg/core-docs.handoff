{"nodes":[{"pos":[509,529],"content":"ManifestResourceInfo","needQuote":true,"nodes":[{"content":"ManifestResourceInfo","pos":[0,20]}]},{"pos":[2127,2183],"content":"ManifestResourceInfo(Assembly, String, ResourceLocation)","needQuote":true,"nodes":[{"content":"ManifestResourceInfo(Assembly, String, ResourceLocation)","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The assembly that contains the manifest resource.&lt;/p&gt;\\n","pos":[3333,3393],"source":"\\n<p>The assembly that contains the manifest resource.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the file that contains the manifest resource, if the file is not the same as the manifest file.&lt;/p&gt;\\n","pos":[3470,3588],"source":"\\n<p>The name of the file that contains the manifest resource, if the file is not the same as the manifest file.</p>\\n"},{"content":"\\n&lt;p&gt;A bitwise combination of enumeration values that provides information about the location of the manifest resource.&lt;/p&gt;\\n","pos":[3684,3809],"source":"\\n<p>A bitwise combination of enumeration values that provides information about the location of the manifest resource.</p>\\n"},{"pos":[4180,4188],"content":"FileName","needQuote":true,"nodes":[{"content":"FileName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The manifest resource's file name.&lt;/p&gt;\\n","pos":[4945,4990],"source":"\\n<p>The manifest resource's file name.</p>\\n"},{"pos":[5392,5410],"content":"ReferencedAssembly","needQuote":true,"nodes":[{"content":"ReferencedAssembly","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The manifest resource's containing assembly.&lt;/p&gt;\\n","pos":[6173,6228],"source":"\\n<p>The manifest resource's containing assembly.</p>\\n"},{"pos":[6634,6650],"content":"ResourceLocation","needQuote":true,"nodes":[{"content":"ResourceLocation","pos":[0,16]}]},{"pos":[7830,7847],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[8011,8017],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8177,8187],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8282,8290],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8359,8360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8387,8388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8458,8466],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8535,8536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8563,8564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8747,8761],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8880,8886],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8953,8954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9004,9010],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9070,9071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9154,9160],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9227,9228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9278,9284],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9344,9345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9559,9581],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9729,9735],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9802,9803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9853,9859],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9920,9921]},{"pos":[9976,9982],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10042,10043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10140,10146],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10213,10214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10264,10270],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10331,10332]},{"pos":[10387,10393],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10453,10454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10699,10730],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10896,10911],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10987,10988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11038,11044],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11105,11106]},{"pos":[11161,11167],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11227,11228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11334,11349],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11425,11426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11476,11482],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11543,11544]},{"pos":[11599,11605],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11665,11666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11896,11909],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12010,12021],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12093,12094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12121,12122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12195,12206],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12278,12279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12306,12307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12482,12491],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12584,12591],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12659,12660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12687,12688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12757,12764],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12832,12833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12860,12861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13036,13053],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13162,13177],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13253,13254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13281,13282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13359,13374],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13450,13451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13478,13479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13624,13630],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13785,13793],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[13966,13972],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14149,14165],"content":"ResourceLocation","needQuote":true,"nodes":[{"content":"ResourceLocation","pos":[0,16]}]}],"content":"items:\n- uid: System.Reflection.ManifestResourceInfo\n  commentId: T:System.Reflection.ManifestResourceInfo\n  id: ManifestResourceInfo\n  parent: System.Reflection\n  children:\n  - System.Reflection.ManifestResourceInfo.#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)\n  - System.Reflection.ManifestResourceInfo.FileName\n  - System.Reflection.ManifestResourceInfo.ReferencedAssembly\n  - System.Reflection.ManifestResourceInfo.ResourceLocation\n  langs:\n  - csharp\n  - vb\n  name: ManifestResourceInfo\n  fullName: System.Reflection.ManifestResourceInfo\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ManifestResourceInfo\n    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n    startLine: 18\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Provides access to manifest resources, which are XML files that describe application dependencies.  </p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public class ManifestResourceInfo\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Class ManifestResourceInfo\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ManifestResourceInfo\n- uid: System.Reflection.ManifestResourceInfo.#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)\n  commentId: M:System.Reflection.ManifestResourceInfo.#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)\n  id: '#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)'\n  parent: System.Reflection.ManifestResourceInfo\n  langs:\n  - csharp\n  - vb\n  name: ManifestResourceInfo(Assembly, String, ResourceLocation)\n  fullName: System.Reflection.ManifestResourceInfo.ManifestResourceInfo(System.Reflection.Assembly, System.String, System.Reflection.ResourceLocation)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n    startLine: 24\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Reflection.ManifestResourceInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for a resource that is contained by the specified assembly and file, and that has the specified location.</p>\\n\"\n  syntax:\n    content: public ManifestResourceInfo(Assembly containingAssembly, string containingFileName, ResourceLocation resourceLocation)\n    content.vb: Public Sub New(containingAssembly As Assembly, containingFileName As String, resourceLocation As ResourceLocation)\n    parameters:\n    - id: containingAssembly\n      type: System.Reflection.Assembly\n      description: \"\\n<p>The assembly that contains the manifest resource.</p>\\n\"\n    - id: containingFileName\n      type: System.String\n      description: \"\\n<p>The name of the file that contains the manifest resource, if the file is not the same as the manifest file.</p>\\n\"\n    - id: resourceLocation\n      type: System.Reflection.ResourceLocation\n      description: \"\\n<p>A bitwise combination of enumeration values that provides information about the location of the manifest resource.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ManifestResourceInfo.ManifestResourceInfo(Assembly, String, ResourceLocation)\n- uid: System.Reflection.ManifestResourceInfo.FileName\n  commentId: P:System.Reflection.ManifestResourceInfo.FileName\n  id: FileName\n  parent: System.Reflection.ManifestResourceInfo\n  langs:\n  - csharp\n  - vb\n  name: FileName\n  fullName: System.Reflection.ManifestResourceInfo.FileName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FileName\n    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n    startLine: 40\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the name of the file that contains the manifest resource, if it is not the same as the manifest file. </p>\\n\"\n  syntax:\n    content: public virtual string FileName { get; }\n    content.vb: Public Overridable ReadOnly Property FileName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The manifest resource's file name.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: ManifestResourceInfo.FileName\n- uid: System.Reflection.ManifestResourceInfo.ReferencedAssembly\n  commentId: P:System.Reflection.ManifestResourceInfo.ReferencedAssembly\n  id: ReferencedAssembly\n  parent: System.Reflection.ManifestResourceInfo\n  langs:\n  - csharp\n  - vb\n  name: ReferencedAssembly\n  fullName: System.Reflection.ManifestResourceInfo.ReferencedAssembly\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReferencedAssembly\n    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n    startLine: 33\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the containing assembly for the manifest resource. </p>\\n\"\n  syntax:\n    content: public virtual Assembly ReferencedAssembly { get; }\n    content.vb: Public Overridable ReadOnly Property ReferencedAssembly As Assembly\n    parameters: []\n    return:\n      type: System.Reflection.Assembly\n      description: \"\\n<p>The manifest resource's containing assembly.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: ManifestResourceInfo.ReferencedAssembly\n- uid: System.Reflection.ManifestResourceInfo.ResourceLocation\n  commentId: P:System.Reflection.ManifestResourceInfo.ResourceLocation\n  id: ResourceLocation\n  parent: System.Reflection.ManifestResourceInfo\n  langs:\n  - csharp\n  - vb\n  name: ResourceLocation\n  fullName: System.Reflection.ManifestResourceInfo.ResourceLocation\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ResourceLocation\n    path: src/mscorlib/src/System/Reflection/ManifestResourceInfo.cs\n    startLine: 47\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the manifest resource's location. </p>\\n\"\n  syntax:\n    content: public virtual ResourceLocation ResourceLocation { get; }\n    content.vb: Public Overridable ReadOnly Property ResourceLocation As ResourceLocation\n    parameters: []\n    return:\n      type: System.Reflection.ResourceLocation\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Reflection.ResourceLocation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags that indicates the location of the manifest resource.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: ManifestResourceInfo.ResourceLocation\nreferences:\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  fullName: System.Reflection.Assembly\n  nameWithType: Assembly\n  commentId: T:System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Reflection.ResourceLocation\n  parent: System.Reflection\n  isExternal: false\n  name: ResourceLocation\n  fullName: System.Reflection.ResourceLocation\n  nameWithType: ResourceLocation\n  commentId: T:System.Reflection.ResourceLocation\n"}