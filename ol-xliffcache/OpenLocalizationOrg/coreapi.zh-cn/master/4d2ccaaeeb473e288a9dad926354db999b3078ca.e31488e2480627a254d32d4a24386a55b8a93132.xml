{"nodes":[{"pos":[716,745],"content":"System.Collections.Concurrent","needQuote":true,"nodes":[{"content":"System.Collections.Concurrent","pos":[0,29]}]},{"pos":[998,1019],"content":"BlockingCollection<T>","needQuote":true,"nodes":[{"content":"BlockingCollection&lt;T&gt;","pos":[0,21],"source":"BlockingCollection<T>"}]},{"pos":[1357,1375],"content":"BlockingCollection","needQuote":true,"nodes":[{"content":"BlockingCollection","pos":[0,18]}]},{"pos":[1486,1487],"content":"<","needQuote":true,"nodes":[]},{"pos":[1534,1535],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1707,1725],"content":"BlockingCollection","needQuote":true,"nodes":[{"content":"BlockingCollection","pos":[0,18]}]},{"content":"(Of","pos":[1837,1840]},{"pos":[1899,1900],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1947,1948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2132,2148],"content":"ConcurrentBag<T>","needQuote":true,"nodes":[{"content":"ConcurrentBag&lt;T&gt;","pos":[0,16],"source":"ConcurrentBag<T>"}]},{"pos":[2456,2469],"content":"ConcurrentBag","needQuote":true,"nodes":[{"content":"ConcurrentBag","pos":[0,13]}]},{"pos":[2570,2571],"content":"<","needQuote":true,"nodes":[]},{"pos":[2618,2619],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[2786,2799],"content":"ConcurrentBag","needQuote":true,"nodes":[{"content":"ConcurrentBag","pos":[0,13]}]},{"content":"(Of","pos":[2901,2904]},{"pos":[2963,2964],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[3011,3012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3198,3232],"content":"ConcurrentDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"ConcurrentDictionary&lt;TKey, TValue&gt;","pos":[0,34],"source":"ConcurrentDictionary<TKey, TValue>"}]},{"pos":[3637,3657],"content":"ConcurrentDictionary","needQuote":true,"nodes":[{"content":"ConcurrentDictionary","pos":[0,20]}]},{"pos":[3772,3773],"content":"<","needQuote":true,"nodes":[]},{"pos":[3820,3824],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[3878,3879]},{"pos":[3934,3940],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[4124,4144],"content":"ConcurrentDictionary","needQuote":true,"nodes":[{"content":"ConcurrentDictionary","pos":[0,20]}]},{"content":"(Of","pos":[4260,4263]},{"pos":[4322,4326],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[4380,4381]},{"pos":[4436,4442],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[4499,4500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4688,4706],"content":"ConcurrentQueue<T>","needQuote":true,"nodes":[{"content":"ConcurrentQueue&lt;T&gt;","pos":[0,18],"source":"ConcurrentQueue<T>"}]},{"pos":[5026,5041],"content":"ConcurrentQueue","needQuote":true,"nodes":[{"content":"ConcurrentQueue","pos":[0,15]}]},{"pos":[5146,5147],"content":"<","needQuote":true,"nodes":[]},{"pos":[5194,5195],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[5364,5379],"content":"ConcurrentQueue","needQuote":true,"nodes":[{"content":"ConcurrentQueue","pos":[0,15]}]},{"content":"(Of","pos":[5485,5488]},{"pos":[5547,5548],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[5595,5596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5779,5797],"content":"ConcurrentStack<T>","needQuote":true,"nodes":[{"content":"ConcurrentStack&lt;T&gt;","pos":[0,18],"source":"ConcurrentStack<T>"}]},{"pos":[6117,6132],"content":"ConcurrentStack","needQuote":true,"nodes":[{"content":"ConcurrentStack","pos":[0,15]}]},{"pos":[6237,6238],"content":"<","needQuote":true,"nodes":[]},{"pos":[6285,6286],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[6455,6470],"content":"ConcurrentStack","needQuote":true,"nodes":[{"content":"ConcurrentStack","pos":[0,15]}]},{"content":"(Of","pos":[6576,6579]},{"pos":[6638,6639],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[6686,6687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6921,6949],"content":"EnumerablePartitionerOptions","needQuote":true,"nodes":[{"content":"EnumerablePartitionerOptions","pos":[0,28]}]},{"pos":[7235,7265],"content":"IProducerConsumerCollection<T>","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection&lt;T&gt;","pos":[0,30],"source":"IProducerConsumerCollection<T>"}]},{"pos":[7657,7684],"content":"IProducerConsumerCollection","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection","pos":[0,27]}]},{"pos":[7813,7814],"content":"<","needQuote":true,"nodes":[]},{"pos":[7861,7862],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[8043,8070],"content":"IProducerConsumerCollection","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection","pos":[0,27]}]},{"content":"(Of","pos":[8200,8203]},{"pos":[8262,8263],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[8310,8311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8511,8540],"content":"OrderablePartitioner<TSource>","needQuote":true,"nodes":[{"content":"OrderablePartitioner&lt;TSource&gt;","pos":[0,29],"source":"OrderablePartitioner<TSource>"}]},{"pos":[8920,8940],"content":"OrderablePartitioner","needQuote":true,"nodes":[{"content":"OrderablePartitioner","pos":[0,20]}]},{"pos":[9055,9056],"content":"<","needQuote":true,"nodes":[]},{"pos":[9103,9110],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[9296,9316],"content":"OrderablePartitioner","needQuote":true,"nodes":[{"content":"OrderablePartitioner","pos":[0,20]}]},{"content":"(Of","pos":[9432,9435]},{"pos":[9494,9501],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[9560,9561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9743,9754],"content":"Partitioner","needQuote":true,"nodes":[{"content":"Partitioner","pos":[0,11]}]},{"pos":[9973,9993],"content":"Partitioner<TSource>","needQuote":true,"nodes":[{"content":"Partitioner&lt;TSource&gt;","pos":[0,20],"source":"Partitioner<TSource>"}]},{"pos":[10319,10330],"content":"Partitioner","needQuote":true,"nodes":[{"content":"Partitioner","pos":[0,11]}]},{"pos":[10427,10428],"content":"<","needQuote":true,"nodes":[]},{"pos":[10475,10482],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[10659,10670],"content":"Partitioner","needQuote":true,"nodes":[{"content":"Partitioner","pos":[0,11]}]},{"content":"(Of","pos":[10768,10771]},{"pos":[10830,10837],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[10896,10897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11058,11087],"content":"System.Collections.Concurrent","needQuote":true,"nodes":[{"content":"System.Collections.Concurrent","pos":[0,29]}]}],"content":"items:\n- uid: System.Collections.Concurrent\n  commentId: N:System.Collections.Concurrent\n  id: System.Collections.Concurrent\n  children:\n  - System.Collections.Concurrent.BlockingCollection`1\n  - System.Collections.Concurrent.ConcurrentBag`1\n  - System.Collections.Concurrent.ConcurrentDictionary`2\n  - System.Collections.Concurrent.ConcurrentQueue`1\n  - System.Collections.Concurrent.ConcurrentStack`1\n  - System.Collections.Concurrent.EnumerablePartitionerOptions\n  - System.Collections.Concurrent.IProducerConsumerCollection`1\n  - System.Collections.Concurrent.OrderablePartitioner`1\n  - System.Collections.Concurrent.Partitioner\n  - System.Collections.Concurrent.Partitioner`1\n  langs:\n  - csharp\n  - vb\n  name: System.Collections.Concurrent\n  nameWithType: System.Collections.Concurrent\n  fullName: System.Collections.Concurrent\n  type: Namespace\n  assemblies:\n  - System.Collections.Concurrent\nreferences:\n- uid: System.Collections.Concurrent.BlockingCollection`1\n  isExternal: false\n  name: BlockingCollection<T>\n  nameWithType: BlockingCollection<T>\n  fullName: System.Collections.Concurrent.BlockingCollection<T>\n  nameWithType.vb: BlockingCollection(Of T)\n  fullname.vb: System.Collections.Concurrent.BlockingCollection(Of T)\n  name.vb: BlockingCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.BlockingCollection`1\n    name: BlockingCollection\n    nameWithType: BlockingCollection\n    fullName: System.Collections.Concurrent.BlockingCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.BlockingCollection`1\n    name: BlockingCollection\n    nameWithType: BlockingCollection\n    fullName: System.Collections.Concurrent.BlockingCollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Concurrent.BlockingCollection`1\n- uid: System.Collections.Concurrent.ConcurrentBag`1\n  isExternal: false\n  name: ConcurrentBag<T>\n  nameWithType: ConcurrentBag<T>\n  fullName: System.Collections.Concurrent.ConcurrentBag<T>\n  nameWithType.vb: ConcurrentBag(Of T)\n  fullname.vb: System.Collections.Concurrent.ConcurrentBag(Of T)\n  name.vb: ConcurrentBag(Of T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.ConcurrentBag`1\n    name: ConcurrentBag\n    nameWithType: ConcurrentBag\n    fullName: System.Collections.Concurrent.ConcurrentBag\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.ConcurrentBag`1\n    name: ConcurrentBag\n    nameWithType: ConcurrentBag\n    fullName: System.Collections.Concurrent.ConcurrentBag\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Concurrent.ConcurrentBag`1\n- uid: System.Collections.Concurrent.ConcurrentDictionary`2\n  isExternal: false\n  name: ConcurrentDictionary<TKey, TValue>\n  nameWithType: ConcurrentDictionary<TKey, TValue>\n  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>\n  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)\n  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)\n  name.vb: ConcurrentDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.ConcurrentDictionary`2\n    name: ConcurrentDictionary\n    nameWithType: ConcurrentDictionary\n    fullName: System.Collections.Concurrent.ConcurrentDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.ConcurrentDictionary`2\n    name: ConcurrentDictionary\n    nameWithType: ConcurrentDictionary\n    fullName: System.Collections.Concurrent.ConcurrentDictionary\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2\n- uid: System.Collections.Concurrent.ConcurrentQueue`1\n  isExternal: false\n  name: ConcurrentQueue<T>\n  nameWithType: ConcurrentQueue<T>\n  fullName: System.Collections.Concurrent.ConcurrentQueue<T>\n  nameWithType.vb: ConcurrentQueue(Of T)\n  fullname.vb: System.Collections.Concurrent.ConcurrentQueue(Of T)\n  name.vb: ConcurrentQueue(Of T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.ConcurrentQueue`1\n    name: ConcurrentQueue\n    nameWithType: ConcurrentQueue\n    fullName: System.Collections.Concurrent.ConcurrentQueue\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.ConcurrentQueue`1\n    name: ConcurrentQueue\n    nameWithType: ConcurrentQueue\n    fullName: System.Collections.Concurrent.ConcurrentQueue\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Concurrent.ConcurrentQueue`1\n- uid: System.Collections.Concurrent.ConcurrentStack`1\n  isExternal: false\n  name: ConcurrentStack<T>\n  nameWithType: ConcurrentStack<T>\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>\n  nameWithType.vb: ConcurrentStack(Of T)\n  fullname.vb: System.Collections.Concurrent.ConcurrentStack(Of T)\n  name.vb: ConcurrentStack(Of T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.ConcurrentStack`1\n    name: ConcurrentStack\n    nameWithType: ConcurrentStack\n    fullName: System.Collections.Concurrent.ConcurrentStack\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.ConcurrentStack`1\n    name: ConcurrentStack\n    nameWithType: ConcurrentStack\n    fullName: System.Collections.Concurrent.ConcurrentStack\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Concurrent.ConcurrentStack`1\n- uid: System.Collections.Concurrent.EnumerablePartitionerOptions\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: EnumerablePartitionerOptions\n  nameWithType: EnumerablePartitionerOptions\n  fullName: System.Collections.Concurrent.EnumerablePartitionerOptions\n  commentId: T:System.Collections.Concurrent.EnumerablePartitionerOptions\n- uid: System.Collections.Concurrent.IProducerConsumerCollection`1\n  isExternal: false\n  name: IProducerConsumerCollection<T>\n  nameWithType: IProducerConsumerCollection<T>\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>\n  nameWithType.vb: IProducerConsumerCollection(Of T)\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T)\n  name.vb: IProducerConsumerCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1\n    name: IProducerConsumerCollection\n    nameWithType: IProducerConsumerCollection\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1\n    name: IProducerConsumerCollection\n    nameWithType: IProducerConsumerCollection\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Concurrent.IProducerConsumerCollection`1\n- uid: System.Collections.Concurrent.OrderablePartitioner`1\n  isExternal: false\n  name: OrderablePartitioner<TSource>\n  nameWithType: OrderablePartitioner<TSource>\n  fullName: System.Collections.Concurrent.OrderablePartitioner<TSource>\n  nameWithType.vb: OrderablePartitioner(Of TSource)\n  fullname.vb: System.Collections.Concurrent.OrderablePartitioner(Of TSource)\n  name.vb: OrderablePartitioner(Of TSource)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.OrderablePartitioner`1\n    name: OrderablePartitioner\n    nameWithType: OrderablePartitioner\n    fullName: System.Collections.Concurrent.OrderablePartitioner\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TSource\n    nameWithType: TSource\n    fullName: TSource\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.OrderablePartitioner`1\n    name: OrderablePartitioner\n    nameWithType: OrderablePartitioner\n    fullName: System.Collections.Concurrent.OrderablePartitioner\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    nameWithType: TSource\n    fullName: TSource\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Concurrent.OrderablePartitioner`1\n- uid: System.Collections.Concurrent.Partitioner\n  isExternal: false\n  name: Partitioner\n  nameWithType: Partitioner\n  fullName: System.Collections.Concurrent.Partitioner\n  commentId: T:System.Collections.Concurrent.Partitioner\n- uid: System.Collections.Concurrent.Partitioner`1\n  isExternal: false\n  name: Partitioner<TSource>\n  nameWithType: Partitioner<TSource>\n  fullName: System.Collections.Concurrent.Partitioner<TSource>\n  nameWithType.vb: Partitioner(Of TSource)\n  fullname.vb: System.Collections.Concurrent.Partitioner(Of TSource)\n  name.vb: Partitioner(Of TSource)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.Partitioner`1\n    name: Partitioner\n    nameWithType: Partitioner\n    fullName: System.Collections.Concurrent.Partitioner\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: TSource\n    nameWithType: TSource\n    fullName: TSource\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.Partitioner`1\n    name: Partitioner\n    nameWithType: Partitioner\n    fullName: System.Collections.Concurrent.Partitioner\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    nameWithType: TSource\n    fullName: TSource\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Collections.Concurrent.Partitioner`1\n- uid: System.Collections.Concurrent\n  isExternal: false\n  name: System.Collections.Concurrent\n  nameWithType: System.Collections.Concurrent\n  fullName: System.Collections.Concurrent\n  commentId: N:System.Collections.Concurrent\n"}