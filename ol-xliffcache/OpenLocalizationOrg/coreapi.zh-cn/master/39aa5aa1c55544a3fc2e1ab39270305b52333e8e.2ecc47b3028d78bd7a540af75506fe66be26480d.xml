{"nodes":[{"pos":[4108,4115],"content":"Vector4","needQuote":true,"nodes":[{"content":"Vector4","pos":[0,7]}]},{"pos":[5667,5668],"content":"W","needQuote":true,"nodes":[{"content":"W","pos":[0,1]}]},{"pos":[6455,6456],"content":"X","needQuote":true,"nodes":[{"content":"X","pos":[0,1]}]},{"pos":[7243,7244],"content":"Y","needQuote":true,"nodes":[{"content":"Y","pos":[0,1]}]},{"pos":[8031,8032],"content":"Z","needQuote":true,"nodes":[{"content":"Z","pos":[0,1]}]},{"pos":[8992,9024],"content":"Vector4(Vector2, Single, Single)","needQuote":true,"nodes":[{"content":"Vector4(Vector2, Single, Single)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The vector to use for the X and Y components.","pos":[9983,10033],"source":"\\n<p>The vector to use for the X and Y components."},{"content":"&lt;/p&gt;\\n","pos":[10034,10040],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The Z component.","pos":[10100,10121],"source":"\\n<p>The Z component."},{"content":"&lt;/p&gt;\\n","pos":[10122,10128],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The W component.","pos":[10188,10209],"source":"\\n<p>The W component."},{"content":"&lt;/p&gt;\\n","pos":[10210,10216],"source":" </p>\\n"},{"pos":[10615,10639],"content":"Vector4(Vector3, Single)","needQuote":true,"nodes":[{"content":"Vector4(Vector3, Single)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The vector to use for the X, Y, and Z components.","pos":[11555,11609],"source":"\\n<p>The vector to use for the X, Y, and Z components."},{"content":"&lt;/p&gt;\\n","pos":[11610,11616],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The W component.","pos":[11676,11697],"source":"\\n<p>The W component."},{"content":"&lt;/p&gt;\\n","pos":[11698,11704],"source":" </p>\\n"},{"pos":[12023,12038],"content":"Vector4(Single)","needQuote":true,"nodes":[{"content":"Vector4(Single)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The value to assign to all four elements.","pos":[12801,12847],"source":"\\n<p>The value to assign to all four elements."},{"content":"&lt;/p&gt;\\n","pos":[12848,12854],"source":" </p>\\n"},{"pos":[13290,13329],"content":"Vector4(Single, Single, Single, Single)","needQuote":true,"nodes":[{"content":"Vector4(Single, Single, Single, Single)","pos":[0,39]}]},{"pos":[15090,15093],"content":"One","needQuote":true,"nodes":[{"content":"One","pos":[0,3]}]},{"pos":[16164,16169],"content":"UnitW","needQuote":true,"nodes":[{"content":"UnitW","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The vector &lt;code&gt;(0,0,0,1)&lt;/code&gt;.&lt;/p&gt;\\n","pos":[16828,16873],"source":"\\n<p>The vector <code>(0,0,0,1)</code>.</p>\\n"},{"pos":[17169,17174],"content":"UnitX","needQuote":true,"nodes":[{"content":"UnitX","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The vector &lt;code&gt;(1,0,0,0)&lt;/code&gt;.&lt;/p&gt;\\n","pos":[17833,17878],"source":"\\n<p>The vector <code>(1,0,0,0)</code>.</p>\\n"},{"pos":[18174,18179],"content":"UnitY","needQuote":true,"nodes":[{"content":"UnitY","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The vector &lt;code&gt;(0,1,0,0)&lt;/code&gt;..&lt;/p&gt;\\n","pos":[18838,18884],"source":"\\n<p>The vector <code>(0,1,0,0)</code>..</p>\\n"},{"pos":[19180,19185],"content":"UnitZ","needQuote":true,"nodes":[{"content":"UnitZ","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The vector &lt;code&gt;(0,0,1,0)&lt;/code&gt;.&lt;/p&gt;\\n","pos":[19858,19903],"source":"\\n<p>The vector <code>(0,0,1,0)</code>.</p>\\n"},{"pos":[20196,20200],"content":"Zero","needQuote":true,"nodes":[{"content":"Zero","pos":[0,4]}]},{"content":"\\n&lt;p&gt;A vector whose four elements are equal to zero (that is, it returns the vector &lt;code&gt;(0,0,0,0)&lt;/code&gt;.","pos":[20879,20986],"source":"\\n<p>A vector whose four elements are equal to zero (that is, it returns the vector <code>(0,0,0,0)</code>."},{"content":"&lt;/p&gt;\\n","pos":[20987,20993],"source":" </p>\\n"},{"pos":[21357,21369],"content":"Abs(Vector4)","needQuote":true,"nodes":[{"content":"Abs(Vector4)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;A vector.","pos":[22133,22147],"source":"\\n<p>A vector."},{"content":"&lt;/p&gt;\\n","pos":[22148,22154],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The absolute value vector.","pos":[22224,22255],"source":"\\n<p>The absolute value vector."},{"content":"&lt;/p&gt;\\n","pos":[22256,22262],"source":" </p>\\n"},{"pos":[22685,22706],"content":"Add(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Add(Vector4, Vector4)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The first vector to add.","pos":[23452,23481],"source":"\\n<p>The first vector to add."},{"content":"&lt;/p&gt;\\n","pos":[23482,23488],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector to add.","pos":[23562,23592],"source":"\\n<p>The second vector to add."},{"content":"&lt;/p&gt;\\n","pos":[23593,23599],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The summed vector.","pos":[23669,23692],"source":"\\n<p>The summed vector."},{"content":"&lt;/p&gt;\\n","pos":[23693,23699],"source":" </p>\\n"},{"pos":[24209,24241],"content":"Clamp(Vector4, Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Clamp(Vector4, Vector4, Vector4)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The vector to restrict.","pos":[25082,25110],"source":"\\n<p>The vector to restrict."},{"content":"&lt;/p&gt;\\n","pos":[25111,25117],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The minimum value.","pos":[25189,25212],"source":"\\n<p>The minimum value."},{"content":"&lt;/p&gt;\\n","pos":[25213,25219],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The maximum value.","pos":[25291,25314],"source":"\\n<p>The maximum value."},{"content":"&lt;/p&gt;\\n","pos":[25315,25321],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The restricted vector.","pos":[25391,25418],"source":"\\n<p>The restricted vector."},{"content":"&lt;/p&gt;\\n","pos":[25419,25425],"source":" </p>\\n"},{"pos":[25781,25797],"content":"CopyTo(Single[])","needQuote":true,"nodes":[{"content":"CopyTo(Single[])","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The destination array.","pos":[26481,26508],"source":"\\n<p>The destination array."},{"content":"&lt;/p&gt;\\n","pos":[26509,26515],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[26634,26681],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[26682,26688],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of elements in the current instance is greater than in the array.","pos":[26785,26866],"source":"\\n<p>The number of elements in the current instance is greater than in the array."},{"content":"&lt;/p&gt;\\n","pos":[26867,26873],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\\n","pos":[26962,27010],"source":"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n"},{"pos":[27502,27525],"content":"CopyTo(Single[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Single[], Int32)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The destination array.&lt;/p&gt;\\n","pos":[28291,28324],"source":"\\n<p>The destination array.</p>\\n"},{"content":"\\n&lt;p&gt;The index at which to copy the first element of the vector.","pos":[28387,28451],"source":"\\n<p>The index at which to copy the first element of the vector."},{"content":"&lt;/p&gt;\\n","pos":[28452,28458],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[28577,28624],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[28625,28631],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of elements in the current instance is greater than in the array.","pos":[28728,28809],"source":"\\n<p>The number of elements in the current instance is greater than in the array."},{"content":"&lt;/p&gt;\\n","pos":[28810,28816],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; is less than zero.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; is greater than or equal to the array length.","pos":[28933,29057],"source":"\\n<p>\\n<em>index</em> is less than zero.</p>\\n<p>-or-</p>\\n<p>\\n<em>index</em> is greater than or equal to the array length."},{"content":"&lt;/p&gt;\\n","pos":[29058,29064],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\\n","pos":[29153,29201],"source":"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n"},{"pos":[29791,29817],"content":"Distance(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Distance(Vector4, Vector4)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The first point.","pos":[30623,30644],"source":"\\n<p>The first point."},{"content":"&lt;/p&gt;\\n","pos":[30645,30651],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second point.","pos":[30726,30748],"source":"\\n<p>The second point."},{"content":"&lt;/p&gt;\\n","pos":[30749,30755],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The distance.","pos":[30815,30833],"source":"\\n<p>The distance."},{"content":"&lt;/p&gt;\\n","pos":[30834,30840],"source":" </p>\\n"},{"pos":[31313,31346],"content":"DistanceSquared(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"DistanceSquared(Vector4, Vector4)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The first point.","pos":[32187,32208],"source":"\\n<p>The first point."},{"content":"&lt;/p&gt;\\n","pos":[32209,32215],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second point.","pos":[32290,32312],"source":"\\n<p>The second point."},{"content":"&lt;/p&gt;\\n","pos":[32313,32319],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The distance squared.","pos":[32379,32405],"source":"\\n<p>The distance squared."},{"content":"&lt;/p&gt;\\n","pos":[32406,32412],"source":" </p>\\n"},{"pos":[32865,32889],"content":"Divide(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Divide(Vector4, Vector4)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[33660,33682],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[33683,33689],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[33763,33786],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[33787,33793],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The vector resulting from the division.","pos":[33863,33907],"source":"\\n<p>The vector resulting from the division."},{"content":"&lt;/p&gt;\\n","pos":[33908,33914],"source":" </p>\\n"},{"pos":[34328,34351],"content":"Divide(Vector4, Single)","needQuote":true,"nodes":[{"content":"Divide(Vector4, Single)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The vector.","pos":[35131,35147],"source":"\\n<p>The vector."},{"content":"&lt;/p&gt;\\n","pos":[35148,35154],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scalar value.","pos":[35220,35242],"source":"\\n<p>The scalar value."},{"content":"&lt;/p&gt;\\n","pos":[35243,35249],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The vector that results from the division.","pos":[35319,35366],"source":"\\n<p>The vector that results from the division."},{"content":"&lt;/p&gt;\\n","pos":[35367,35373],"source":" </p>\\n"},{"pos":[35807,35828],"content":"Dot(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Dot(Vector4, Vector4)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[36597,36619],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[36620,36626],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[36702,36725],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[36726,36732],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The dot product.","pos":[36792,36813],"source":"\\n<p>The dot product."},{"content":"&lt;/p&gt;\\n","pos":[36814,36820],"source":" </p>\\n"},{"pos":[37189,37204],"content":"Equals(Vector4)","needQuote":true,"nodes":[{"content":"Equals(Vector4)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The other vector.","pos":[37946,37968],"source":"\\n<p>The other vector."},{"content":"&lt;/p&gt;\\n","pos":[37969,37975],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the two vectors are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[38036,38129],"source":"\\n<p>\\n<strong>true</strong> if the two vectors are equal; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[38130,38136],"source":" </p>\\n"},{"pos":[38540,38554],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current instance.","pos":[39290,39343],"source":"\\n<p>The object to compare with the current instance."},{"content":"&lt;/p&gt;\\n","pos":[39344,39350],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current instance and &lt;em&gt;obj&lt;/em&gt; are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;.","pos":[39411,39543],"source":"\\n<p>\\n<strong>true</strong> if the current instance and <em>obj</em> are equal; otherwise, <strong>false</strong><strong></strong>."},{"content":"If &lt;em&gt;obj&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, the method returns &lt;strong&gt;false&lt;/strong&gt;.","pos":[39544,39628],"source":" If <em>obj</em> is <strong>null</strong>, the method returns <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[39629,39635],"source":" </p>\\n"},{"pos":[39995,40008],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The hash code.","pos":[40661,40680],"source":"\\n<p>The hash code."},{"content":"&lt;/p&gt;\\n","pos":[40681,40687],"source":" </p>\\n"},{"pos":[41021,41029],"content":"Length()","needQuote":true,"nodes":[{"content":"Length()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The vector's length.","pos":[41646,41671],"source":"\\n<p>The vector's length."},{"content":"&lt;/p&gt;\\n","pos":[41672,41678],"source":" </p>\\n"},{"pos":[42072,42087],"content":"LengthSquared()","needQuote":true,"nodes":[{"content":"LengthSquared()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The vector's length squared.","pos":[42732,42765],"source":"\\n<p>The vector's length squared."},{"content":"&lt;/p&gt;\\n","pos":[42766,42772],"source":" </p>\\n"},{"pos":[43321,43351],"content":"Lerp(Vector4, Vector4, Single)","needQuote":true,"nodes":[{"content":"Lerp(Vector4, Vector4, Single)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[44211,44233],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[44234,44240],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[44315,44338],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[44339,44345],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value between 0 and 1 that indicates the weight of &lt;em&gt;value2&lt;/em&gt;.","pos":[44410,44484],"source":"\\n<p>A value between 0 and 1 that indicates the weight of <em>value2</em>."},{"content":"&lt;/p&gt;\\n","pos":[44485,44491],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The interpolated vector.","pos":[44561,44590],"source":"\\n<p>The interpolated vector."},{"content":"&lt;/p&gt;\\n","pos":[44591,44597],"source":" </p>\\n"},{"pos":[45038,45059],"content":"Max(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Max(Vector4, Vector4)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[45892,45914],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[45915,45921],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[45996,46019],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[46020,46026],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The maximized vector.","pos":[46096,46122],"source":"\\n<p>The maximized vector."},{"content":"&lt;/p&gt;\\n","pos":[46123,46129],"source":" </p>\\n"},{"pos":[46561,46582],"content":"Min(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Min(Vector4, Vector4)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[47415,47437],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[47438,47444],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[47519,47542],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[47543,47549],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The minimized vector.","pos":[47619,47645],"source":"\\n<p>The minimized vector."},{"content":"&lt;/p&gt;\\n","pos":[47646,47652],"source":" </p>\\n"},{"pos":[48099,48125],"content":"Multiply(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Multiply(Vector4, Vector4)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[48897,48919],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[48920,48926],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[49000,49023],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[49024,49030],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The product vector.","pos":[49100,49124],"source":"\\n<p>The product vector."},{"content":"&lt;/p&gt;\\n","pos":[49125,49131],"source":" </p>\\n"},{"pos":[49553,49578],"content":"Multiply(Vector4, Single)","needQuote":true,"nodes":[{"content":"Multiply(Vector4, Single)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The vector to multiply.","pos":[50347,50375],"source":"\\n<p>The vector to multiply."},{"content":"&lt;/p&gt;\\n","pos":[50376,50382],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scalar value.","pos":[50446,50468],"source":"\\n<p>The scalar value."},{"content":"&lt;/p&gt;\\n","pos":[50469,50475],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaled vector.","pos":[50545,50568],"source":"\\n<p>The scaled vector."},{"content":"&lt;/p&gt;\\n","pos":[50569,50575],"source":" </p>\\n"},{"pos":[50996,51021],"content":"Multiply(Single, Vector4)","needQuote":true,"nodes":[{"content":"Multiply(Single, Vector4)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The scaled value.","pos":[51785,51807],"source":"\\n<p>The scaled value."},{"content":"&lt;/p&gt;\\n","pos":[51808,51814],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The vector.","pos":[51888,51904],"source":"\\n<p>The vector."},{"content":"&lt;/p&gt;\\n","pos":[51905,51911],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaled vector.","pos":[51981,52004],"source":"\\n<p>The scaled vector."},{"content":"&lt;/p&gt;\\n","pos":[52005,52011],"source":" </p>\\n"},{"pos":[52384,52399],"content":"Negate(Vector4)","needQuote":true,"nodes":[{"content":"Negate(Vector4)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The vector to negate.","pos":[53103,53129],"source":"\\n<p>The vector to negate."},{"content":"&lt;/p&gt;\\n","pos":[53130,53136],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The negated vector.","pos":[53206,53230],"source":"\\n<p>The negated vector."},{"content":"&lt;/p&gt;\\n","pos":[53231,53237],"source":" </p>\\n"},{"pos":[53609,53627],"content":"Normalize(Vector4)","needQuote":true,"nodes":[{"content":"Normalize(Vector4)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The vector to normalize.","pos":[54410,54439],"source":"\\n<p>The vector to normalize."},{"content":"&lt;/p&gt;\\n","pos":[54440,54446],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The normalized vector.","pos":[54516,54543],"source":"\\n<p>The normalized vector."},{"content":"&lt;/p&gt;\\n","pos":[54544,54550],"source":" </p>\\n"},{"pos":[55003,55029],"content":"Addition(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Addition(Vector4, Vector4)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The first vector to add.","pos":[55795,55824],"source":"\\n<p>The first vector to add."},{"content":"&lt;/p&gt;\\n","pos":[55825,55831],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector to add.","pos":[55905,55935],"source":"\\n<p>The second vector to add."},{"content":"&lt;/p&gt;\\n","pos":[55936,55942],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The summed vector.","pos":[56012,56035],"source":"\\n<p>The summed vector."},{"content":"&lt;/p&gt;\\n","pos":[56036,56042],"source":" </p>\\n"},{"pos":[56503,56529],"content":"Division(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Division(Vector4, Vector4)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[57308,57330],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[57331,57337],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[57411,57434],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[57435,57441],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The vector that results from dividing &lt;em&gt;left&lt;/em&gt; by &lt;em&gt;right&lt;/em&gt;.","pos":[57511,57586],"source":"\\n<p>The vector that results from dividing <em>left</em> by <em>right</em>."},{"content":"&lt;/p&gt;\\n","pos":[57587,57593],"source":" </p>\\n"},{"pos":[58024,58049],"content":"Division(Vector4, Single)","needQuote":true,"nodes":[{"content":"Division(Vector4, Single)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The vector.","pos":[58840,58856],"source":"\\n<p>The vector."},{"content":"&lt;/p&gt;\\n","pos":[58857,58863],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scalar value.","pos":[58928,58950],"source":"\\n<p>The scalar value."},{"content":"&lt;/p&gt;\\n","pos":[58951,58957],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The result of the division.","pos":[59027,59059],"source":"\\n<p>The result of the division."},{"content":"&lt;/p&gt;\\n","pos":[59060,59066],"source":" </p>\\n"},{"pos":[59526,59552],"content":"Equality(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Equality(Vector4, Vector4)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The first vector to compare.","pos":[60386,60419],"source":"\\n<p>The first vector to compare."},{"content":"&lt;/p&gt;\\n","pos":[60420,60426],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector to compare.","pos":[60500,60534],"source":"\\n<p>The second vector to compare."},{"content":"&lt;/p&gt;\\n","pos":[60535,60541],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;right&lt;/em&gt; are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[60602,60718],"source":"\\n<p>\\n<strong>true</strong> if <em>left</em> and <em>right</em> are equal; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[61185,61213],"content":"Inequality(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Inequality(Vector4, Vector4)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The first vector to compare.","pos":[62032,62065],"source":"\\n<p>The first vector to compare."},{"content":"&lt;/p&gt;\\n","pos":[62066,62072],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector to compare.","pos":[62146,62180],"source":"\\n<p>The second vector to compare."},{"content":"&lt;/p&gt;\\n","pos":[62181,62187],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;right&lt;/em&gt; are not equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[62248,62362],"source":"\\n<p>\\n<strong>true</strong> if <em>left</em> and <em>right</em> are not equal; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[62363,62369],"source":" </p>\\n"},{"pos":[62832,62858],"content":"Multiply(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Multiply(Vector4, Vector4)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[63630,63652],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[63653,63659],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[63733,63756],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[63757,63763],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The product vector.","pos":[63833,63857],"source":"\\n<p>The product vector."},{"content":"&lt;/p&gt;\\n","pos":[63858,63864],"source":" </p>\\n"},{"pos":[64295,64320],"content":"Multiply(Vector4, Single)","needQuote":true,"nodes":[{"content":"Multiply(Vector4, Single)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The vector.","pos":[65108,65124],"source":"\\n<p>The vector."},{"content":"&lt;/p&gt;\\n","pos":[65125,65131],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scalar value.","pos":[65195,65217],"source":"\\n<p>The scalar value."},{"content":"&lt;/p&gt;\\n","pos":[65218,65224],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaled vector.","pos":[65294,65317],"source":"\\n<p>The scaled vector."},{"content":"&lt;/p&gt;\\n","pos":[65318,65324],"source":" </p>\\n"},{"pos":[65754,65779],"content":"Multiply(Single, Vector4)","needQuote":true,"nodes":[{"content":"Multiply(Single, Vector4)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The vector.","pos":[66547,66563],"source":"\\n<p>The vector."},{"content":"&lt;/p&gt;\\n","pos":[66564,66570],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scalar value.","pos":[66644,66666],"source":"\\n<p>The scalar value."},{"content":"&lt;/p&gt;\\n","pos":[66667,66673],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaled vector.","pos":[66743,66766],"source":"\\n<p>The scaled vector."},{"content":"&lt;/p&gt;\\n","pos":[66767,66773],"source":" </p>\\n"},{"pos":[67242,67271],"content":"Subtraction(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Subtraction(Vector4, Vector4)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[68060,68082],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[68083,68089],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[68163,68186],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[68187,68193],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The vector that results from subtracting &lt;em&gt;right&lt;/em&gt; from &lt;em&gt;left&lt;/em&gt;.","pos":[68263,68343],"source":"\\n<p>The vector that results from subtracting <em>right</em> from <em>left</em>."},{"content":"&lt;/p&gt;\\n","pos":[68344,68350],"source":" </p>\\n"},{"pos":[68757,68779],"content":"UnaryNegation(Vector4)","needQuote":true,"nodes":[{"content":"UnaryNegation(Vector4)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The vector to negate.","pos":[69503,69529],"source":"\\n<p>The vector to negate."},{"content":"&lt;/p&gt;\\n","pos":[69530,69536],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The negated vector.","pos":[69606,69630],"source":"\\n<p>The negated vector."},{"content":"&lt;/p&gt;\\n","pos":[69631,69637],"source":" </p>\\n"},{"pos":[70019,70038],"content":"SquareRoot(Vector4)","needQuote":true,"nodes":[{"content":"SquareRoot(Vector4)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;A vector.","pos":[70823,70837],"source":"\\n<p>A vector."},{"content":"&lt;/p&gt;\\n","pos":[70838,70844],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The square root vector.","pos":[70914,70942],"source":"\\n<p>The square root vector."},{"content":"&lt;/p&gt;\\n","pos":[70943,70949],"source":" </p>\\n"},{"pos":[71394,71420],"content":"Subtract(Vector4, Vector4)","needQuote":true,"nodes":[{"content":"Subtract(Vector4, Vector4)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The first vector.","pos":[72203,72225],"source":"\\n<p>The first vector."},{"content":"&lt;/p&gt;\\n","pos":[72226,72232],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second vector.","pos":[72306,72329],"source":"\\n<p>The second vector."},{"content":"&lt;/p&gt;\\n","pos":[72330,72336],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The difference vector.","pos":[72406,72433],"source":"\\n<p>The difference vector."},{"content":"&lt;/p&gt;\\n","pos":[72434,72440],"source":" </p>\\n"},{"pos":[72745,72755],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The string representation of the current instance.","pos":[73442,73497],"source":"\\n<p>The string representation of the current instance."},{"content":"&lt;/p&gt;\\n","pos":[73498,73504],"source":" </p>\\n"},{"pos":[73883,73899],"content":"ToString(String)","needQuote":true,"nodes":[{"content":"ToString(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A standard or custom numeric format string that defines the format of individual elements.&lt;/p&gt;\\n","pos":[74671,74772],"source":"\\n<p>A standard or custom numeric format string that defines the format of individual elements.</p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the current instance.","pos":[74832,74887],"source":"\\n<p>The string representation of the current instance."},{"content":"&lt;/p&gt;\\n","pos":[74888,74894],"source":" </p>\\n"},{"pos":[75281,75314],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;A standard or custom numeric format string that defines the format of individual elements.","pos":[76248,76343],"source":"\\n<p>A standard or custom numeric format string that defines the format of individual elements."},{"content":"&lt;/p&gt;\\n","pos":[76344,76350],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A format provider that supplies culture-specific formatting information.","pos":[76432,76509],"source":"\\n<p>A format provider that supplies culture-specific formatting information."},{"content":"&lt;/p&gt;\\n","pos":[76510,76516],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the current instance.","pos":[76576,76631],"source":"\\n<p>The string representation of the current instance."},{"content":"&lt;/p&gt;\\n","pos":[76632,76638],"source":" </p>\\n"},{"pos":[77169,77198],"content":"Transform(Vector2, Matrix4x4)","needQuote":true,"nodes":[{"content":"Transform(Vector2, Matrix4x4)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The vector to transform.","pos":[78024,78053],"source":"\\n<p>The vector to transform."},{"content":"&lt;/p&gt;\\n","pos":[78054,78060],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transformation matrix.","pos":[78137,78168],"source":"\\n<p>The transformation matrix."},{"content":"&lt;/p&gt;\\n","pos":[78169,78175],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transformed vector.","pos":[78245,78273],"source":"\\n<p>The transformed vector."},{"content":"&lt;/p&gt;\\n","pos":[78274,78280],"source":" </p>\\n"},{"pos":[78747,78777],"content":"Transform(Vector2, Quaternion)","needQuote":true,"nodes":[{"content":"Transform(Vector2, Quaternion)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The vector to rotate.","pos":[79618,79644],"source":"\\n<p>The vector to rotate."},{"content":"&lt;/p&gt;\\n","pos":[79645,79651],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The rotation to apply.","pos":[79731,79758],"source":"\\n<p>The rotation to apply."},{"content":"&lt;/p&gt;\\n","pos":[79759,79765],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transformed vector.","pos":[79835,79863],"source":"\\n<p>The transformed vector."},{"content":"&lt;/p&gt;\\n","pos":[79864,79870],"source":" </p>\\n"},{"pos":[80335,80364],"content":"Transform(Vector3, Matrix4x4)","needQuote":true,"nodes":[{"content":"Transform(Vector3, Matrix4x4)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The vector to transform.","pos":[81192,81221],"source":"\\n<p>The vector to transform."},{"content":"&lt;/p&gt;\\n","pos":[81222,81228],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transformation matrix.","pos":[81305,81336],"source":"\\n<p>The transformation matrix."},{"content":"&lt;/p&gt;\\n","pos":[81337,81343],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transformed vector.","pos":[81413,81441],"source":"\\n<p>The transformed vector."},{"content":"&lt;/p&gt;\\n","pos":[81442,81448],"source":" </p>\\n"},{"pos":[81915,81945],"content":"Transform(Vector3, Quaternion)","needQuote":true,"nodes":[{"content":"Transform(Vector3, Quaternion)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The vector to rotate.","pos":[82788,82814],"source":"\\n<p>The vector to rotate."},{"content":"&lt;/p&gt;\\n","pos":[82815,82821],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The rotation to apply.","pos":[82901,82928],"source":"\\n<p>The rotation to apply."},{"content":"&lt;/p&gt;\\n","pos":[82929,82935],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transformed vector.","pos":[83005,83033],"source":"\\n<p>The transformed vector."},{"content":"&lt;/p&gt;\\n","pos":[83034,83040],"source":" </p>\\n"},{"pos":[83505,83534],"content":"Transform(Vector4, Matrix4x4)","needQuote":true,"nodes":[{"content":"Transform(Vector4, Matrix4x4)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The vector to transform.","pos":[84355,84384],"source":"\\n<p>The vector to transform."},{"content":"&lt;/p&gt;\\n","pos":[84385,84391],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transformation matrix.","pos":[84468,84499],"source":"\\n<p>The transformation matrix."},{"content":"&lt;/p&gt;\\n","pos":[84500,84506],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transformed vector.","pos":[84576,84604],"source":"\\n<p>The transformed vector."},{"content":"&lt;/p&gt;\\n","pos":[84605,84611],"source":" </p>\\n"},{"pos":[85078,85108],"content":"Transform(Vector4, Quaternion)","needQuote":true,"nodes":[{"content":"Transform(Vector4, Quaternion)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The vector to rotate.","pos":[85950,85976],"source":"\\n<p>The vector to rotate."},{"content":"&lt;/p&gt;\\n","pos":[85977,85983],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The rotation to apply.","pos":[86063,86090],"source":"\\n<p>The rotation to apply."},{"content":"&lt;/p&gt;\\n","pos":[86091,86097],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transformed vector.","pos":[86167,86195],"source":"\\n<p>The transformed vector."},{"content":"&lt;/p&gt;\\n","pos":[86196,86202],"source":" </p>\\n"},{"pos":[86402,86417],"content":"System.Numerics","needQuote":true,"nodes":[{"content":"System.Numerics","pos":[0,15]}]},{"pos":[86618,86637],"content":"IEquatable<Vector4>","needQuote":true,"nodes":[{"content":"IEquatable&lt;Vector4&gt;","pos":[0,19],"source":"IEquatable<Vector4>"}]},{"pos":[86842,86852],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[86916,86917],"content":"<","needQuote":true,"nodes":[]},{"pos":[86977,86984],"content":"Vector4","needQuote":true,"nodes":[{"content":"Vector4","pos":[0,7]}]},{"pos":[87105,87115],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[87180,87183]},{"pos":[87250,87257],"content":"Vector4","needQuote":true,"nodes":[{"content":"Vector4","pos":[0,7]}]},{"pos":[87306,87307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87532,87544],"content":"IFormattable","needQuote":true,"nodes":[{"content":"IFormattable","pos":[0,12]}]},{"pos":[87749,87771],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[87919,87925],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[87992,87993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88043,88049],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[88110,88111]},{"pos":[88166,88172],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88232,88233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88330,88336],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[88403,88404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88454,88460],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[88521,88522]},{"pos":[88577,88583],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88643,88644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88889,88920],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[89086,89101],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[89177,89178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89228,89234],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[89295,89296]},{"pos":[89351,89357],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[89417,89418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89524,89539],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[89615,89616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89666,89672],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[89733,89734]},{"pos":[89789,89795],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[89855,89856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90082,90091],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[90184,90191],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[90259,90260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90287,90288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90357,90364],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[90432,90433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90460,90461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90603,90616],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"pos":[90771,90781],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[90824,90825],"content":"<","needQuote":true,"nodes":[]},{"pos":[90852,90853],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[90952,90962],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[91006,91009]},{"pos":[91043,91044],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[91071,91072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91232,91238],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[91369,91375],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[91520,91526],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[91690,91697],"content":"Vector2","needQuote":true,"nodes":[{"content":"Vector2","pos":[0,7]}]},{"pos":[91882,91889],"content":"Vector3","needQuote":true,"nodes":[{"content":"Vector3","pos":[0,7]}]},{"pos":[92074,92081],"content":"Vector4","needQuote":true,"nodes":[{"content":"Vector4","pos":[0,7]}]},{"pos":[92212,92220],"content":"Single[]","needQuote":true,"nodes":[{"content":"Single[]","pos":[0,8]}]},{"pos":[92348,92354],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"content":"[]","pos":[92415,92417]},{"pos":[92482,92488],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[92548,92550],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[92686,92691],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[92955,92970],"content":"Equals(Vector4)","needQuote":true,"nodes":[{"content":"Equals(Vector4)","pos":[0,15]}]},{"pos":[93216,93222],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[93318,93319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93379,93386],"content":"Vector4","needQuote":true,"nodes":[{"content":"Vector4","pos":[0,7]}]},{"pos":[93435,93436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93514,93520],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[93619,93620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93680,93687],"content":"Vector4","needQuote":true,"nodes":[{"content":"Vector4","pos":[0,7]}]},{"pos":[93736,93737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94021,94028],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[94176,94185],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"pos":[94343,94349],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[94402,94403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94430,94431],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[94458,94459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94537,94543],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[94599,94600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94627,94628],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[94655,94656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94905,94919],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[95044,95050],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[95099,95100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95150,95156],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[95216,95217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95303,95309],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[95358,95359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95409,95415],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[95475,95476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95657,95666],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[95845,95858],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[95965,95976],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[96030,96031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96058,96059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96135,96146],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[96200,96201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96228,96229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96418,96428],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[96529,96537],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[96588,96589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96616,96617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96690,96698],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[96749,96750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96777,96778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96939,96945],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[97155,97188],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"pos":[97370,97378],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[97432,97433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97483,97489],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[97550,97551]},{"pos":[97615,97630],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[97678,97679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97793,97801],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[97855,97856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97906,97912],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[97973,97974]},{"pos":[98038,98053],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[98101,98102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98339,98354],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[98547,98556],"content":"Matrix4x4","needQuote":true,"nodes":[{"content":"Matrix4x4","pos":[0,9]}]},{"pos":[98750,98760],"content":"Quaternion","needQuote":true,"nodes":[{"content":"Quaternion","pos":[0,10]}]},{"pos":[98933,98954],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[99155,99172],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[99340,99353],"content":"RankException","needQuote":true,"nodes":[{"content":"RankException","pos":[0,13]}]},{"pos":[99523,99550],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Numerics.Vector4\n  commentId: T:System.Numerics.Vector4\n  id: Vector4\n  parent: System.Numerics\n  children:\n  - System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)\n  - System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)\n  - System.Numerics.Vector4.#ctor(System.Single)\n  - System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)\n  - System.Numerics.Vector4.Abs(System.Numerics.Vector4)\n  - System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.CopyTo(System.Single[])\n  - System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)\n  - System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Equals(System.Numerics.Vector4)\n  - System.Numerics.Vector4.Equals(System.Object)\n  - System.Numerics.Vector4.GetHashCode\n  - System.Numerics.Vector4.Length\n  - System.Numerics.Vector4.LengthSquared\n  - System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)\n  - System.Numerics.Vector4.Negate(System.Numerics.Vector4)\n  - System.Numerics.Vector4.Normalize(System.Numerics.Vector4)\n  - System.Numerics.Vector4.One\n  - System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)\n  - System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)\n  - System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)\n  - System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)\n  - System.Numerics.Vector4.ToString\n  - System.Numerics.Vector4.ToString(System.String)\n  - System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)\n  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)\n  - System.Numerics.Vector4.UnitW\n  - System.Numerics.Vector4.UnitX\n  - System.Numerics.Vector4.UnitY\n  - System.Numerics.Vector4.UnitZ\n  - System.Numerics.Vector4.W\n  - System.Numerics.Vector4.X\n  - System.Numerics.Vector4.Y\n  - System.Numerics.Vector4.Z\n  - System.Numerics.Vector4.Zero\n  langs:\n  - csharp\n  - vb\n  name: Vector4\n  fullName: System.Numerics.Vector4\n  type: Struct\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Vector4\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 427\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Represents a vector with four single-precision floating-point values. </p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct Vector4 : IEquatable<Vector4>, IFormattable\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure Vector4\n          Implements IEquatable(Of Vector4), IFormattable\n  implements:\n  - System.IEquatable{System.Numerics.Vector4}\n  - System.IFormattable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: Vector4\n- uid: System.Numerics.Vector4.W\n  commentId: F:System.Numerics.Vector4.W\n  id: W\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: W\n  fullName: System.Numerics.Vector4.W\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: W\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 430\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The W component of the vector. </p>\\n\"\n  syntax:\n    content: public float W\n    content.vb: Public W As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.W\n- uid: System.Numerics.Vector4.X\n  commentId: F:System.Numerics.Vector4.X\n  id: X\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: X\n  fullName: System.Numerics.Vector4.X\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 431\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The X component of the vector. </p>\\n\"\n  syntax:\n    content: public float X\n    content.vb: Public X As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.X\n- uid: System.Numerics.Vector4.Y\n  commentId: F:System.Numerics.Vector4.Y\n  id: Y\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Y\n  fullName: System.Numerics.Vector4.Y\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Y\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 432\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The Y component of the vector. </p>\\n\"\n  syntax:\n    content: public float Y\n    content.vb: Public Y As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.Y\n- uid: System.Numerics.Vector4.Z\n  commentId: F:System.Numerics.Vector4.Z\n  id: Z\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Z\n  fullName: System.Numerics.Vector4.Z\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Z\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 433\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The Z component of the vector. </p>\\n\"\n  syntax:\n    content: public float Z\n    content.vb: Public Z As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.Z\n- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)\n  commentId: M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)\n  id: '#ctor(System.Numerics.Vector2,System.Single,System.Single)'\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Vector4(Vector2, Single, Single)\n  fullName: System.Numerics.Vector4.Vector4(System.Numerics.Vector2, System.Single, System.Single)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 434\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a   new <xref href=\\\"System.Numerics.Vector4\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object from the specified <xref href=\\\"System.Numerics.Vector2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and a Z and a W component. </p>\\n\"\n  syntax:\n    content: public Vector4(Vector2 value, float z, float w)\n    content.vb: Public Sub New(value As Vector2, z As Single, w As Single)\n    parameters:\n    - id: value\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The vector to use for the X and Y components. </p>\\n\"\n    - id: z\n      type: System.Single\n      description: \"\\n<p>The Z component. </p>\\n\"\n    - id: w\n      type: System.Single\n      description: \"\\n<p>The W component. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.Vector4(Vector2, Single, Single)\n- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)\n  commentId: M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)\n  id: '#ctor(System.Numerics.Vector3,System.Single)'\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Vector4(Vector3, Single)\n  fullName: System.Numerics.Vector4.Vector4(System.Numerics.Vector3, System.Single)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 435\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Constructs a new <xref href=\\\"System.Numerics.Vector4\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object from the specified <xref href=\\\"System.Numerics.Vector3\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and a W component.  </p>\\n\"\n  syntax:\n    content: public Vector4(Vector3 value, float w)\n    content.vb: Public Sub New(value As Vector3, w As Single)\n    parameters:\n    - id: value\n      type: System.Numerics.Vector3\n      description: \"\\n<p>The vector to use for the X, Y, and Z components. </p>\\n\"\n    - id: w\n      type: System.Single\n      description: \"\\n<p>The W component. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.Vector4(Vector3, Single)\n- uid: System.Numerics.Vector4.#ctor(System.Single)\n  commentId: M:System.Numerics.Vector4.#ctor(System.Single)\n  id: '#ctor(System.Single)'\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Vector4(Single)\n  fullName: System.Numerics.Vector4.Vector4(System.Single)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 436\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Numerics.Vector4\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object whose four elements have the same value.</p>\\n\"\n  syntax:\n    content: public Vector4(float value)\n    content.vb: Public Sub New(value As Single)\n    parameters:\n    - id: value\n      type: System.Single\n      description: \"\\n<p>The value to assign to all four elements. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.Vector4(Single)\n- uid: System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)\n  commentId: M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Vector4(Single, Single, Single, Single)\n  fullName: System.Numerics.Vector4.Vector4(System.Single, System.Single, System.Single, System.Single)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 437\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a vector whose elements have the specified values. </p>\\n\"\n  syntax:\n    content: public Vector4(float x, float y, float z, float w)\n    content.vb: Public Sub New(x As Single, y As Single, z As Single, w As Single)\n    parameters:\n    - id: x\n      type: System.Single\n      description: \"\\n<p>The value to assign to the <xref href=\\\"System.Numerics.Vector4.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> field. </p>\\n\"\n    - id: y\n      type: System.Single\n      description: \"\\n<p>The value to assign to the <xref href=\\\"System.Numerics.Vector4.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> field. </p>\\n\"\n    - id: z\n      type: System.Single\n      description: \"\\n<p>The value to assign to the <xref href=\\\"System.Numerics.Vector4.Z\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> field. </p>\\n\"\n    - id: w\n      type: System.Single\n      description: \"\\n<p>The value to assign to the <xref href=\\\"System.Numerics.Vector4.W\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> field. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.Vector4(Single, Single, Single, Single)\n- uid: System.Numerics.Vector4.One\n  commentId: P:System.Numerics.Vector4.One\n  id: One\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: One\n  fullName: System.Numerics.Vector4.One\n  type: Property\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: One\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 438\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Gets a vector whose 4 elements are equal to one. </p>\\n\"\n  syntax:\n    content: public static Vector4 One { get; }\n    content.vb: Public Shared ReadOnly Property One As Vector4\n    parameters: []\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>Returns <xref href=\\\"System.Numerics.Vector4\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Vector4.One\n- uid: System.Numerics.Vector4.UnitW\n  commentId: P:System.Numerics.Vector4.UnitW\n  id: UnitW\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: UnitW\n  fullName: System.Numerics.Vector4.UnitW\n  type: Property\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnitW\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 439\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Gets the vector (0,0,0,1).</p>\\n\"\n  syntax:\n    content: public static Vector4 UnitW { get; }\n    content.vb: Public Shared ReadOnly Property UnitW As Vector4\n    parameters: []\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector <code>(0,0,0,1)</code>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Vector4.UnitW\n- uid: System.Numerics.Vector4.UnitX\n  commentId: P:System.Numerics.Vector4.UnitX\n  id: UnitX\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: UnitX\n  fullName: System.Numerics.Vector4.UnitX\n  type: Property\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnitX\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 440\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Gets the vector (1,0,0,0).</p>\\n\"\n  syntax:\n    content: public static Vector4 UnitX { get; }\n    content.vb: Public Shared ReadOnly Property UnitX As Vector4\n    parameters: []\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector <code>(1,0,0,0)</code>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Vector4.UnitX\n- uid: System.Numerics.Vector4.UnitY\n  commentId: P:System.Numerics.Vector4.UnitY\n  id: UnitY\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: UnitY\n  fullName: System.Numerics.Vector4.UnitY\n  type: Property\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnitY\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 441\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Gets the vector (0,1,0,0).</p>\\n\"\n  syntax:\n    content: public static Vector4 UnitY { get; }\n    content.vb: Public Shared ReadOnly Property UnitY As Vector4\n    parameters: []\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector <code>(0,1,0,0)</code>..</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Vector4.UnitY\n- uid: System.Numerics.Vector4.UnitZ\n  commentId: P:System.Numerics.Vector4.UnitZ\n  id: UnitZ\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: UnitZ\n  fullName: System.Numerics.Vector4.UnitZ\n  type: Property\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnitZ\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 442\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Gets the vector <code>(0,0,1,0)</code>. </p>\\n\"\n  syntax:\n    content: public static Vector4 UnitZ { get; }\n    content.vb: Public Shared ReadOnly Property UnitZ As Vector4\n    parameters: []\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector <code>(0,0,1,0)</code>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Vector4.UnitZ\n- uid: System.Numerics.Vector4.Zero\n  commentId: P:System.Numerics.Vector4.Zero\n  id: Zero\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Zero\n  fullName: System.Numerics.Vector4.Zero\n  type: Property\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Zero\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 443\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Gets a vector whose 4 elements are equal to zero. </p>\\n\"\n  syntax:\n    content: public static Vector4 Zero { get; }\n    content.vb: Public Shared ReadOnly Property Zero As Vector4\n    parameters: []\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>A vector whose four elements are equal to zero (that is, it returns the vector <code>(0,0,0,0)</code>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Vector4.Zero\n- uid: System.Numerics.Vector4.Abs(System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)\n  id: Abs(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Abs(Vector4)\n  fullName: System.Numerics.Vector4.Abs(System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Abs\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 444\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a vector whose elements are the absolute values of each of the specified vector's elements. </p>\\n\"\n  syntax:\n    content: public static Vector4 Abs(Vector4 value)\n    content.vb: Public Shared Function Abs(value As Vector4) As Vector4\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: \"\\n<p>A vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The absolute value vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Abs(Vector4)\n- uid: System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Add(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Add(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Add(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 445\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Adds two vectors together. </p>\\n\"\n  syntax:\n    content: public static Vector4 Add(Vector4 left, Vector4 right)\n    content.vb: Public Shared Function Add(left As Vector4, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector to add. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector to add. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The summed vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Add(Vector4, Vector4)\n- uid: System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Clamp(Vector4, Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Clamp(System.Numerics.Vector4, System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clamp\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 446\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Restricts a vector between a minimum and a maximum value. </p>\\n\"\n  syntax:\n    content: public static Vector4 Clamp(Vector4 value1, Vector4 min, Vector4 max)\n    content.vb: Public Shared Function Clamp(value1 As Vector4, min As Vector4, max As Vector4) As Vector4\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector to restrict. </p>\\n\"\n    - id: min\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The minimum value. </p>\\n\"\n    - id: max\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The maximum value. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The restricted vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Clamp(Vector4, Vector4, Vector4)\n- uid: System.Numerics.Vector4.CopyTo(System.Single[])\n  commentId: M:System.Numerics.Vector4.CopyTo(System.Single[])\n  id: CopyTo(System.Single[])\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(Single[])\n  fullName: System.Numerics.Vector4.CopyTo(System.Single[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 447\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Copies the elements of the vector to a specified array. </p>\\n\"\n  syntax:\n    content: public void CopyTo(float[] array)\n    content.vb: Public Sub CopyTo(array As Single())\n    parameters:\n    - id: array\n      type: System.Single[]\n      description: \"\\n<p>The destination array. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The number of elements in the current instance is greater than in the array. </p>\\n\"\n  - type: System.RankException\n    commentId: T:System.RankException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Numerics.Vector4.CopyTo(System.Single())\n  name.vb: CopyTo(Single())\n  nameWithType: Vector4.CopyTo(Single[])\n  nameWithType.vb: Vector4.CopyTo(Single())\n- uid: System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)\n  commentId: M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)\n  id: CopyTo(System.Single[],System.Int32)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(Single[], Int32)\n  fullName: System.Numerics.Vector4.CopyTo(System.Single[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 448\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Copies the elements of the vector to a specified array starting at a specified index position. </p>\\n\"\n  syntax:\n    content: public void CopyTo(float[] array, int index)\n    content.vb: Public Sub CopyTo(array As Single(), index As Integer)\n    parameters:\n    - id: array\n      type: System.Single[]\n      description: \"\\n<p>The destination array.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The index at which to copy the first element of the vector. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The number of elements in the current instance is greater than in the array. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than zero.</p>\\n<p>-or-</p>\\n<p>\\n<em>index</em> is greater than or equal to the array length. </p>\\n\"\n  - type: System.RankException\n    commentId: T:System.RankException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Numerics.Vector4.CopyTo(System.Single(), System.Int32)\n  name.vb: CopyTo(Single(), Int32)\n  nameWithType: Vector4.CopyTo(Single[], Int32)\n  nameWithType.vb: Vector4.CopyTo(Single(), Int32)\n- uid: System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Distance(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Distance(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Distance(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Distance\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 449\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Computes the Euclidean distance between the two given points. </p>\\n\"\n  syntax:\n    content: public static float Distance(Vector4 value1, Vector4 value2)\n    content.vb: Public Shared Function Distance(value1 As Vector4, value2 As Vector4) As Single\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first point. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second point. </p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The distance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Distance(Vector4, Vector4)\n- uid: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: DistanceSquared(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DistanceSquared\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 450\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the Euclidean distance squared between two specified points. </p>\\n\"\n  syntax:\n    content: public static float DistanceSquared(Vector4 value1, Vector4 value2)\n    content.vb: Public Shared Function DistanceSquared(value1 As Vector4, value2 As Vector4) As Single\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first point. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second point. </p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The distance squared. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.DistanceSquared(Vector4, Vector4)\n- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Divide(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Divide(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Divide(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Divide\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 451\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Divides the first vector by the second. </p>\\n\"\n  syntax:\n    content: public static Vector4 Divide(Vector4 left, Vector4 right)\n    content.vb: Public Shared Function Divide(left As Vector4, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector resulting from the division. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Divide(Vector4, Vector4)\n- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)\n  commentId: M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)\n  id: Divide(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Divide(Vector4, Single)\n  fullName: System.Numerics.Vector4.Divide(System.Numerics.Vector4, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Divide\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 452\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Divides the specified vector by a specified scalar value. </p>\\n\"\n  syntax:\n    content: public static Vector4 Divide(Vector4 left, float divisor)\n    content.vb: Public Shared Function Divide(left As Vector4, divisor As Single) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector. </p>\\n\"\n    - id: divisor\n      type: System.Single\n      description: \"\\n<p>The scalar value. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector that results from the division. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Divide(Vector4, Single)\n- uid: System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Dot(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Dot(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Dot(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dot\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 453\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the dot product of two vectors. </p>\\n\"\n  syntax:\n    content: public static float Dot(Vector4 vector1, Vector4 vector2)\n    content.vb: Public Shared Function Dot(vector1 As Vector4, vector2 As Vector4) As Single\n    parameters:\n    - id: vector1\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: vector2\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The dot product. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Dot(Vector4, Vector4)\n- uid: System.Numerics.Vector4.Equals(System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)\n  id: Equals(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Equals(Vector4)\n  fullName: System.Numerics.Vector4.Equals(System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 454\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a value that indicates whether this instance and another vector are equal. </p>\\n\"\n  syntax:\n    content: public bool Equals(Vector4 other)\n    content.vb: Public Function Equals(other As Vector4) As Boolean\n    parameters:\n    - id: other\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The other vector. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the two vectors are equal; otherwise, <strong>false</strong>. </p>\\n\"\n  implements:\n  - System.IEquatable{System.Numerics.Vector4}.Equals(System.Numerics.Vector4)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.Equals(Vector4)\n- uid: System.Numerics.Vector4.Equals(System.Object)\n  commentId: M:System.Numerics.Vector4.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Numerics.Vector4.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 455\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a value that indicates whether this instance and a specified object are equal.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current instance and <em>obj</em> are equal; otherwise, <strong>false</strong><strong></strong>. If <em>obj</em> is <strong>null</strong>, the method returns <strong>false</strong>. </p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Vector4.Equals(Object)\n- uid: System.Numerics.Vector4.GetHashCode\n  commentId: M:System.Numerics.Vector4.GetHashCode\n  id: GetHashCode\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Numerics.Vector4.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 456\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the hash code for this instance. </p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code. </p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Vector4.GetHashCode()\n- uid: System.Numerics.Vector4.Length\n  commentId: M:System.Numerics.Vector4.Length\n  id: Length\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Length()\n  fullName: System.Numerics.Vector4.Length()\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 457\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the length of this vector object. </p>\\n\"\n  syntax:\n    content: public float Length()\n    content.vb: Public Function Length As Single\n    return:\n      type: System.Single\n      description: \"\\n<p>The vector's length. </p>\\n\"\n  seealso:\n  - type: System.Numerics.Vector4.LengthSquared\n    commentId: M:System.Numerics.Vector4.LengthSquared\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.Length()\n- uid: System.Numerics.Vector4.LengthSquared\n  commentId: M:System.Numerics.Vector4.LengthSquared\n  id: LengthSquared\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: LengthSquared()\n  fullName: System.Numerics.Vector4.LengthSquared()\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LengthSquared\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 458\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the length of the vector squared. </p>\\n\"\n  syntax:\n    content: public float LengthSquared()\n    content.vb: Public Function LengthSquared As Single\n    return:\n      type: System.Single\n      description: \"\\n<p>The vector's length squared. </p>\\n\"\n  seealso:\n  - type: System.Numerics.Vector4.Length\n    commentId: M:System.Numerics.Vector4.Length\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.LengthSquared()\n- uid: System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)\n  commentId: M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)\n  id: Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Lerp(Vector4, Vector4, Single)\n  fullName: System.Numerics.Vector4.Lerp(System.Numerics.Vector4, System.Numerics.Vector4, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Lerp\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 459\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Performs a linear interpolation between two vectors based on the given weighting. </p>\\n\"\n  syntax:\n    content: public static Vector4 Lerp(Vector4 value1, Vector4 value2, float amount)\n    content.vb: Public Shared Function Lerp(value1 As Vector4, value2 As Vector4, amount As Single) As Vector4\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    - id: amount\n      type: System.Single\n      description: \"\\n<p>A value between 0 and 1 that indicates the weight of <em>value2</em>. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The interpolated vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Lerp(Vector4, Vector4, Single)\n- uid: System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Max(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Max(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Max(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Max\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 460\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</p>\\n\"\n  syntax:\n    content: public static Vector4 Max(Vector4 value1, Vector4 value2)\n    content.vb: Public Shared Function Max(value1 As Vector4, value2 As Vector4) As Vector4\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The maximized vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Max(Vector4, Vector4)\n- uid: System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Min(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Min(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Min(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Min\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 461\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</p>\\n\"\n  syntax:\n    content: public static Vector4 Min(Vector4 value1, Vector4 value2)\n    content.vb: Public Shared Function Min(value1 As Vector4, value2 As Vector4) As Vector4\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The minimized vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Min(Vector4, Vector4)\n- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Multiply(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 462\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Multiplies two vectors together. </p>\\n\"\n  syntax:\n    content: public static Vector4 Multiply(Vector4 left, Vector4 right)\n    content.vb: Public Shared Function Multiply(left As Vector4, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The product vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Multiply(Vector4, Vector4)\n- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)\n  commentId: M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)\n  id: Multiply(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Vector4, Single)\n  fullName: System.Numerics.Vector4.Multiply(System.Numerics.Vector4, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 463\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Multiplies a vector by a specified scalar. </p>\\n\"\n  syntax:\n    content: public static Vector4 Multiply(Vector4 left, float right)\n    content.vb: Public Shared Function Multiply(left As Vector4, right As Single) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector to multiply. </p>\\n\"\n    - id: right\n      type: System.Single\n      description: \"\\n<p>The scalar value. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The scaled vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Multiply(Vector4, Single)\n- uid: System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)\n  id: Multiply(System.Single,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Single, Vector4)\n  fullName: System.Numerics.Vector4.Multiply(System.Single, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 464\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Multiplies a scalar value by a specified vector.</p>\\n\"\n  syntax:\n    content: public static Vector4 Multiply(float left, Vector4 right)\n    content.vb: Public Shared Function Multiply(left As Single, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Single\n      description: \"\\n<p>The scaled value. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The scaled vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Multiply(Single, Vector4)\n- uid: System.Numerics.Vector4.Negate(System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)\n  id: Negate(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Negate(Vector4)\n  fullName: System.Numerics.Vector4.Negate(System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Negate\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 465\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Negates a specified vector. </p>\\n\"\n  syntax:\n    content: public static Vector4 Negate(Vector4 value)\n    content.vb: Public Shared Function Negate(value As Vector4) As Vector4\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector to negate. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The negated vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Negate(Vector4)\n- uid: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)\n  id: Normalize(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Normalize(Vector4)\n  fullName: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Normalize\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 466\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a vector with the same direction as the specified vector, but with a length of one. </p>\\n\"\n  syntax:\n    content: public static Vector4 Normalize(Vector4 vector)\n    content.vb: Public Shared Function Normalize(vector As Vector4) As Vector4\n    parameters:\n    - id: vector\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector to normalize. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The normalized vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Normalize(Vector4)\n- uid: System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Addition(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Addition(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Addition\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 467\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Adds two vectors together. </p>\\n\"\n  syntax:\n    content: public static Vector4 operator +(Vector4 left, Vector4 right)\n    content.vb: Public Shared Operator +(left As Vector4, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector to add. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector to add. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The summed vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Addition(Vector4, Vector4)\n- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Division(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Division(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Division(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Division\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 468\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Divides the first vector by the second. </p>\\n\"\n  syntax:\n    content: public static Vector4 operator /(Vector4 left, Vector4 right)\n    content.vb: Public Shared Operator /(left As Vector4, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector that results from dividing <em>left</em> by <em>right</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Division(Vector4, Vector4)\n- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)\n  commentId: M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)\n  id: op_Division(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Division(Vector4, Single)\n  fullName: System.Numerics.Vector4.Division(System.Numerics.Vector4, System.Single)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Division\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 469\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Divides the specified vector by a specified scalar value.</p>\\n\"\n  syntax:\n    content: public static Vector4 operator /(Vector4 value1, float value2)\n    content.vb: Public Shared Operator /(value1 As Vector4, value2 As Single) As Vector4\n    parameters:\n    - id: value1\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector. </p>\\n\"\n    - id: value2\n      type: System.Single\n      description: \"\\n<p>The scalar value. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The result of the division. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Division(Vector4, Single)\n- uid: System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Equality(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Equality(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 470\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a value that indicates whether each pair of elements in two specified vectors is equal.  </p>\\n\"\n  syntax:\n    content: public static bool operator ==(Vector4 left, Vector4 right)\n    content.vb: Public Shared Operator =(left As Vector4, right As Vector4) As Boolean\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector to compare. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>left</em> and <em>right</em> are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Equality(Vector4, Vector4)\n- uid: System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Inequality(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 471\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a value that indicates whether two specified vectors are not equal.  </p>\\n\"\n  syntax:\n    content: public static bool operator !=(Vector4 left, Vector4 right)\n    content.vb: Public Shared Operator <>(left As Vector4, right As Vector4) As Boolean\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector to compare. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>left</em> and <em>right</em> are not equal; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Inequality(Vector4, Vector4)\n- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Multiply(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 472\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Multiplies two vectors together. </p>\\n\"\n  syntax:\n    content: public static Vector4 operator *(Vector4 left, Vector4 right)\n    content.vb: Public Shared Operator *(left As Vector4, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The product vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Multiply(Vector4, Vector4)\n- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)\n  commentId: M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)\n  id: op_Multiply(System.Numerics.Vector4,System.Single)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Vector4, Single)\n  fullName: System.Numerics.Vector4.Multiply(System.Numerics.Vector4, System.Single)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 473\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Multiples the specified vector by the specified scalar value. </p>\\n\"\n  syntax:\n    content: public static Vector4 operator *(Vector4 left, float right)\n    content.vb: Public Shared Operator *(left As Vector4, right As Single) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector. </p>\\n\"\n    - id: right\n      type: System.Single\n      description: \"\\n<p>The scalar value. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The scaled vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Multiply(Vector4, Single)\n- uid: System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)\n  id: op_Multiply(System.Single,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Single, Vector4)\n  fullName: System.Numerics.Vector4.Multiply(System.Single, System.Numerics.Vector4)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 474\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Multiples the scalar value by the specified vector. </p>\\n\"\n  syntax:\n    content: public static Vector4 operator *(float left, Vector4 right)\n    content.vb: Public Shared Operator *(left As Single, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Single\n      description: \"\\n<p>The vector. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The scalar value. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The scaled vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Multiply(Single, Vector4)\n- uid: System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Subtraction(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Subtraction(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Subtraction\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 475\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Subtracts the second vector from the first. </p>\\n\"\n  syntax:\n    content: public static Vector4 operator -(Vector4 left, Vector4 right)\n    content.vb: Public Shared Operator -(left As Vector4, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector that results from subtracting <em>right</em> from <em>left</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Subtraction(Vector4, Vector4)\n- uid: System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)\n  id: op_UnaryNegation(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: UnaryNegation(Vector4)\n  fullName: System.Numerics.Vector4.UnaryNegation(System.Numerics.Vector4)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_UnaryNegation\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 476\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Negates the specified vector. </p>\\n\"\n  syntax:\n    content: public static Vector4 operator -(Vector4 value)\n    content.vb: Public Shared Operator -(value As Vector4) As Vector4\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector to negate. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The negated vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.UnaryNegation(Vector4)\n- uid: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)\n  id: SquareRoot(System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: SquareRoot(Vector4)\n  fullName: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SquareRoot\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 477\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a vector whose elements are the square root of each of a specified vector's elements.</p>\\n\"\n  syntax:\n    content: public static Vector4 SquareRoot(Vector4 value)\n    content.vb: Public Shared Function SquareRoot(value As Vector4) As Vector4\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: \"\\n<p>A vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The square root vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.SquareRoot(Vector4)\n- uid: System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)\n  id: Subtract(System.Numerics.Vector4,System.Numerics.Vector4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Subtract(Vector4, Vector4)\n  fullName: System.Numerics.Vector4.Subtract(System.Numerics.Vector4, System.Numerics.Vector4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subtract\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 478\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Subtracts the second vector from the first. </p>\\n\"\n  syntax:\n    content: public static Vector4 Subtract(Vector4 left, Vector4 right)\n    content.vb: Public Shared Function Subtract(left As Vector4, right As Vector4) As Vector4\n    parameters:\n    - id: left\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The first vector. </p>\\n\"\n    - id: right\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The second vector. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The difference vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Subtract(Vector4, Vector4)\n- uid: System.Numerics.Vector4.ToString\n  commentId: M:System.Numerics.Vector4.ToString\n  id: ToString\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Numerics.Vector4.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 479\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the string representation of the current instance using default formatting. </p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the current instance. </p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Vector4.ToString()\n- uid: System.Numerics.Vector4.ToString(System.String)\n  commentId: M:System.Numerics.Vector4.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: ToString(String)\n  fullName: System.Numerics.Vector4.ToString(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 480\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the string representation of the current instance using the specified format string to format individual elements. </p>\\n\"\n  syntax:\n    content: public string ToString(string format)\n    content.vb: Public Function ToString(format As String) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom numeric format string that defines the format of individual elements.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.ToString(String)\n- uid: System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: ToString(String, IFormatProvider)\n  fullName: System.Numerics.Vector4.ToString(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 481\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</p>\\n\"\n  syntax:\n    content: public string ToString(string format, IFormatProvider formatProvider)\n    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom numeric format string that defines the format of individual elements. </p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>A format provider that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the current instance. </p>\\n\"\n  implements:\n  - System.IFormattable.ToString(System.String,System.IFormatProvider)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Vector4.ToString(String, IFormatProvider)\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)\n  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)\n  id: Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Transform(Vector2, Matrix4x4)\n  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector2, System.Numerics.Matrix4x4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Transform\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 482\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Transforms a two-dimensional vector by a specified 4x4 matrix. </p>\\n\"\n  syntax:\n    content: public static Vector4 Transform(Vector2 position, Matrix4x4 matrix)\n    content.vb: Public Shared Function Transform(position As Vector2, matrix As Matrix4x4) As Vector4\n    parameters:\n    - id: position\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The vector to transform. </p>\\n\"\n    - id: matrix\n      type: System.Numerics.Matrix4x4\n      description: \"\\n<p>The transformation matrix. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The transformed vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Transform(Vector2, Matrix4x4)\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)\n  id: Transform(System.Numerics.Vector2,System.Numerics.Quaternion)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Transform(Vector2, Quaternion)\n  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector2, System.Numerics.Quaternion)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Transform\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 483\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Transforms a two-dimensional vector by the specified Quaternion rotation value. </p>\\n\"\n  syntax:\n    content: public static Vector4 Transform(Vector2 value, Quaternion rotation)\n    content.vb: Public Shared Function Transform(value As Vector2, rotation As Quaternion) As Vector4\n    parameters:\n    - id: value\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The vector to rotate. </p>\\n\"\n    - id: rotation\n      type: System.Numerics.Quaternion\n      description: \"\\n<p>The rotation to apply. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The transformed vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Transform(Vector2, Quaternion)\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)\n  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)\n  id: Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Transform(Vector3, Matrix4x4)\n  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector3, System.Numerics.Matrix4x4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Transform\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 484\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Transforms a three-dimensional vector by a specified 4x4 matrix. </p>\\n\"\n  syntax:\n    content: public static Vector4 Transform(Vector3 position, Matrix4x4 matrix)\n    content.vb: Public Shared Function Transform(position As Vector3, matrix As Matrix4x4) As Vector4\n    parameters:\n    - id: position\n      type: System.Numerics.Vector3\n      description: \"\\n<p>The vector to transform. </p>\\n\"\n    - id: matrix\n      type: System.Numerics.Matrix4x4\n      description: \"\\n<p>The transformation matrix. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The transformed vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Transform(Vector3, Matrix4x4)\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)\n  id: Transform(System.Numerics.Vector3,System.Numerics.Quaternion)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Transform(Vector3, Quaternion)\n  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector3, System.Numerics.Quaternion)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Transform\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 485\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Transforms a three-dimensional vector by the specified Quaternion rotation value. </p>\\n\"\n  syntax:\n    content: public static Vector4 Transform(Vector3 value, Quaternion rotation)\n    content.vb: Public Shared Function Transform(value As Vector3, rotation As Quaternion) As Vector4\n    parameters:\n    - id: value\n      type: System.Numerics.Vector3\n      description: \"\\n<p>The vector to rotate. </p>\\n\"\n    - id: rotation\n      type: System.Numerics.Quaternion\n      description: \"\\n<p>The rotation to apply. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The transformed vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Transform(Vector3, Quaternion)\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)\n  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)\n  id: Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Transform(Vector4, Matrix4x4)\n  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector4, System.Numerics.Matrix4x4)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Transform\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 486\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Transforms a four-dimensional vector by a specified 4x4 matrix. </p>\\n\"\n  syntax:\n    content: public static Vector4 Transform(Vector4 vector, Matrix4x4 matrix)\n    content.vb: Public Shared Function Transform(vector As Vector4, matrix As Matrix4x4) As Vector4\n    parameters:\n    - id: vector\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector to transform. </p>\\n\"\n    - id: matrix\n      type: System.Numerics.Matrix4x4\n      description: \"\\n<p>The transformation matrix. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The transformed vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Transform(Vector4, Matrix4x4)\n- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)\n  id: Transform(System.Numerics.Vector4,System.Numerics.Quaternion)\n  parent: System.Numerics.Vector4\n  langs:\n  - csharp\n  - vb\n  name: Transform(Vector4, Quaternion)\n  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector4, System.Numerics.Quaternion)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Transform\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 487\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Transforms a four-dimensional vector by the specified Quaternion rotation value. </p>\\n\"\n  syntax:\n    content: public static Vector4 Transform(Vector4 value, Quaternion rotation)\n    content.vb: Public Shared Function Transform(value As Vector4, rotation As Quaternion) As Vector4\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The vector to rotate. </p>\\n\"\n    - id: rotation\n      type: System.Numerics.Quaternion\n      description: \"\\n<p>The rotation to apply. </p>\\n\"\n    return:\n      type: System.Numerics.Vector4\n      description: \"\\n<p>The transformed vector. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Vector4.Transform(Vector4, Quaternion)\nreferences:\n- uid: System.Numerics\n  isExternal: false\n  name: System.Numerics\n  fullName: System.Numerics\n  commentId: N:System.Numerics\n  nameWithType: System.Numerics\n- uid: System.IEquatable{System.Numerics.Vector4}\n  parent: System\n  definition: System.IEquatable`1\n  name: IEquatable<Vector4>\n  fullName: System.IEquatable<System.Numerics.Vector4>\n  fullname.vb: System.IEquatable(Of System.Numerics.Vector4)\n  name.vb: IEquatable(Of Vector4)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Numerics.Vector4\n    name: Vector4\n    fullName: System.Numerics.Vector4\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Numerics.Vector4\n    name: Vector4\n    fullName: System.Numerics.Vector4\n  - name: )\n    fullName: )\n  commentId: T:System.IEquatable{System.Numerics.Vector4}\n  nameWithType: IEquatable<Vector4>\n  nameWithType.vb: IEquatable(Of Vector4)\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  fullName: System.IFormattable\n  commentId: T:System.IFormattable\n  nameWithType: IFormattable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.IEquatable`1\n  isExternal: false\n  name: IEquatable<T>\n  fullName: System.IEquatable<T>\n  fullname.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.IEquatable`1\n  nameWithType: IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  commentId: T:System.Single\n  nameWithType: Single\n- uid: System.Numerics.Vector2\n  parent: System.Numerics\n  isExternal: false\n  name: Vector2\n  fullName: System.Numerics.Vector2\n  commentId: T:System.Numerics.Vector2\n  nameWithType: Vector2\n- uid: System.Numerics.Vector3\n  parent: System.Numerics\n  isExternal: false\n  name: Vector3\n  fullName: System.Numerics.Vector3\n  commentId: T:System.Numerics.Vector3\n  nameWithType: Vector3\n- uid: System.Numerics.Vector4\n  parent: System.Numerics\n  isExternal: false\n  name: Vector4\n  fullName: System.Numerics.Vector4\n  commentId: T:System.Numerics.Vector4\n  nameWithType: Vector4\n- uid: System.Single[]\n  name: Single[]\n  fullName: System.Single[]\n  fullname.vb: System.Single()\n  name.vb: Single()\n  spec.csharp:\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Single[]\n  nameWithType.vb: Single()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.IEquatable{System.Numerics.Vector4}.Equals(System.Numerics.Vector4)\n  parent: System.IEquatable{System.Numerics.Vector4}\n  definition: System.IEquatable`1.Equals(`0)\n  name: Equals(Vector4)\n  fullName: System.IEquatable<System.Numerics.Vector4>.Equals(System.Numerics.Vector4)\n  fullname.vb: System.IEquatable(Of System.Numerics.Vector4).Equals(System.Numerics.Vector4)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<System.Numerics.Vector4>.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Numerics.Vector4\n    name: Vector4\n    fullName: System.Numerics.Vector4\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of System.Numerics.Vector4).Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Numerics.Vector4\n    name: Vector4\n    fullName: System.Numerics.Vector4\n  - name: )\n    fullName: )\n  commentId: M:System.IEquatable{System.Numerics.Vector4}.Equals(System.Numerics.Vector4)\n  nameWithType: IEquatable<Vector4>.Equals(Vector4)\n  nameWithType.vb: IEquatable(Of Vector4).Equals(Vector4)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IEquatable`1.Equals(`0)\n  isExternal: false\n  name: Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  fullname.vb: System.IEquatable(Of T).Equals(T)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<T>.Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of T).Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.IEquatable`1.Equals(`0)\n  nameWithType: IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.Equals(System.Object)\n  nameWithType: ValueType.Equals(Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  commentId: T:System.ValueType\n  nameWithType: ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.GetHashCode\n  nameWithType: ValueType.GetHashCode()\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.ToString\n  nameWithType: ValueType.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  isExternal: true\n  name: ToString(String, IFormatProvider)\n  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  commentId: T:System.IFormatProvider\n  nameWithType: IFormatProvider\n- uid: System.Numerics.Matrix4x4\n  parent: System.Numerics\n  isExternal: false\n  name: Matrix4x4\n  fullName: System.Numerics.Matrix4x4\n  commentId: T:System.Numerics.Matrix4x4\n  nameWithType: Matrix4x4\n- uid: System.Numerics.Quaternion\n  parent: System.Numerics\n  isExternal: false\n  name: Quaternion\n  fullName: System.Numerics.Quaternion\n  commentId: T:System.Numerics.Quaternion\n  nameWithType: Quaternion\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.RankException\n  isExternal: false\n  name: RankException\n  fullName: System.RankException\n  nameWithType: RankException\n  commentId: T:System.RankException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}