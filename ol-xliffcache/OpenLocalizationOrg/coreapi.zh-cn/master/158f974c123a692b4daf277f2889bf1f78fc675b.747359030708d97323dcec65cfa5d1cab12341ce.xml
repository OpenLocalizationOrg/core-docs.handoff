{"nodes":[{"pos":[1576,1591],"content":"AssemblyBuilder","needQuote":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[9573,9581],"content":"FullName","needQuote":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The display name of the dynamic assembly.&lt;/p&gt;\\n","pos":[10297,10349],"source":"\\n<p>The display name of the dynamic assembly.</p>\\n"},{"pos":[10768,10777],"content":"IsDynamic","needQuote":true,"nodes":[{"content":"IsDynamic","pos":[0,9]}]},{"content":"\\n&lt;p&gt;Always &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11518,11558],"source":"\\n<p>Always <strong>true</strong>.</p>\\n"},{"pos":[11994,12008],"content":"ManifestModule","needQuote":true,"nodes":[{"content":"ManifestModule","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The manifest module.&lt;/p&gt;\\n","pos":[12866,12897],"source":"\\n<p>The manifest module.</p>\\n"},{"pos":[13595,13653],"content":"DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)","needQuote":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)","pos":[0,58]}]},{"content":"\\n&lt;p&gt;The name of the assembly.&lt;/p&gt;\\n","pos":[14808,14844],"source":"\\n<p>The name of the assembly.</p>\\n"},{"content":"\\n&lt;p&gt;The access rights of the assembly.&lt;/p&gt;\\n","pos":[14940,14985],"source":"\\n<p>The access rights of the assembly.</p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the new assembly.&lt;/p&gt;\\n","pos":[15070,15124],"source":"\\n<p>An object that represents the new assembly.</p>\\n"},{"pos":[16042,16137],"content":"DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)","needQuote":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable&lt;CustomAttributeBuilder&gt;)","pos":[0,95],"source":"DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)"}]},{"content":"\\n&lt;p&gt;The name of the assembly.&lt;/p&gt;\\n","pos":[17506,17542],"source":"\\n<p>The name of the assembly.</p>\\n"},{"content":"\\n&lt;p&gt;The access rights of the assembly.&lt;/p&gt;\\n","pos":[17638,17683],"source":"\\n<p>The access rights of the assembly.</p>\\n"},{"content":"\\n&lt;p&gt;A collection that contains the attributes of the assembly.&lt;/p&gt;\\n","pos":[17832,17901],"source":"\\n<p>A collection that contains the attributes of the assembly.</p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the new assembly.&lt;/p&gt;\\n","pos":[17986,18040],"source":"\\n<p>An object that represents the new assembly.</p>\\n"},{"pos":[19033,19060],"content":"DefineDynamicModule(String)","needQuote":true,"nodes":[{"content":"DefineDynamicModule(String)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The name of the dynamic module.","pos":[20019,20055],"source":"\\n<p>The name of the dynamic module."},{"content":"Must be less than 260 characters in length.","pos":[20056,20099]},{"content":"&lt;/p&gt;\\n","pos":[20100,20106],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; begins with white space.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is greater than or equal to 260.","pos":[20450,20637],"source":"\\n<p>\\n<em>name</em> begins with white space.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is greater than or equal to 260."},{"content":"&lt;/p&gt;\\n","pos":[20638,20644],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[20749,20795],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[20796,20802],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[20917,20971],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[20972,20978],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The assembly for default symbol writer cannot be loaded.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The type that implements the default symbol writer interface cannot be found.","pos":[21089,21250],"source":"\\n<p>The assembly for default symbol writer cannot be loaded.</p>\\n<p>-or- </p>\\n<p>The type that implements the default symbol writer interface cannot be found."},{"content":"&lt;/p&gt;\\n","pos":[21251,21257],"source":" </p>\\n"},{"pos":[21765,21779],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object to compare with this instance, or &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22538,22615],"source":"\\n<p>An object to compare with this instance, or <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; equals the type and value of this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22676,22805],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> equals the type and value of this instance; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[23288,23312],"content":"GetDynamicModule(String)","needQuote":true,"nodes":[{"content":"GetDynamicModule(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The name of the requested dynamic module.","pos":[24075,24121],"source":"\\n<p>The name of the requested dynamic module."},{"content":"&lt;/p&gt;\\n","pos":[24122,24128],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A ModuleBuilder object representing the requested dynamic module.&lt;/p&gt;\\n","pos":[24211,24287],"source":"\\n<p>A ModuleBuilder object representing the requested dynamic module.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[24406,24452],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[24453,24459],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.","pos":[24556,24597],"source":"\\n<p>The length of <em>name</em> is zero."},{"content":"&lt;/p&gt;\\n","pos":[24598,24604],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[24719,24773],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[24774,24780],"source":" </p>\\n"},{"pos":[25255,25268],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[25943,25988],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[26481,26512],"content":"GetManifestResourceInfo(String)","needQuote":true,"nodes":[{"content":"GetManifestResourceInfo(String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The name of the resource.","pos":[27377,27407],"source":"\\n<p>The name of the resource."},{"content":"&lt;/p&gt;\\n","pos":[27408,27414],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;This method is not currently supported.","pos":[27922,27966],"source":"\\n<p>This method is not currently supported."},{"content":"&lt;/p&gt;\\n","pos":[27967,27973],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[28088,28142],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[28143,28149],"source":" </p>\\n"},{"pos":[28697,28723],"content":"GetManifestResourceNames()","needQuote":true,"nodes":[{"content":"GetManifestResourceNames()","pos":[0,26]}]},{"content":"\\n&lt;p&gt;An array of type &lt;strong&gt;String&lt;/strong&gt; containing the names of all the resources.&lt;/p&gt;\\n","pos":[29476,29570],"source":"\\n<p>An array of type <strong>String</strong> containing the names of all the resources.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[30086,30140],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[30141,30147],"source":" </p>\\n"},{"pos":[30738,30771],"content":"GetManifestResourceStream(String)","needQuote":true,"nodes":[{"content":"GetManifestResourceStream(String)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The name of the manifest resource being requested.","pos":[31581,31636],"source":"\\n<p>The name of the manifest resource being requested."},{"content":"&lt;/p&gt;\\n","pos":[31637,31643],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;This method is not currently supported.","pos":[32033,32077],"source":"\\n<p>This method is not currently supported."},{"content":"&lt;/p&gt;\\n","pos":[32078,32084],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[32199,32253],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[32254,32260],"source":" </p>\\n"},{"pos":[32939,32982],"content":"SetCustomAttribute(ConstructorInfo, Byte[])","needQuote":true,"nodes":[{"content":"SetCustomAttribute(ConstructorInfo, Byte[])","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[33994,34040],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[34041,34047],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A byte blob representing the attributes.","pos":[34121,34166],"source":"\\n<p>A byte blob representing the attributes."},{"content":"&lt;/p&gt;\\n","pos":[34167,34173],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; or &lt;em&gt;binaryAttribute&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[34292,34365],"source":"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[34366,34372],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[34487,34541],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[34542,34548],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; is not a &lt;strong&gt;RuntimeConstructorInfo&lt;/strong&gt; object.","pos":[34645,34721],"source":"\\n<p>\\n<em>con</em> is not a <strong>RuntimeConstructorInfo</strong> object."},{"content":"&lt;/p&gt;\\n","pos":[34722,34728],"source":" </p>\\n"},{"pos":[35641,35683],"content":"SetCustomAttribute(CustomAttributeBuilder)","needQuote":true,"nodes":[{"content":"SetCustomAttribute(CustomAttributeBuilder)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;An instance of a helper class to define the custom attribute.","pos":[36646,36712],"source":"\\n<p>An instance of a helper class to define the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[36713,36719],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[36838,36883],"source":"\\n<p>\\n<em>con</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[36884,36890],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[37005,37059],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[37060,37066],"source":" </p>\\n"},{"pos":[37562,37574],"content":"DefinedTypes","needQuote":true,"nodes":[{"content":"DefinedTypes","pos":[0,12]}]},{"pos":[38719,38726],"content":"Modules","needQuote":true,"nodes":[{"content":"Modules","pos":[0,7]}]},{"pos":[39692,39714],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[39893,39899],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40068,40076],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[40299,40308],"content":"_Assembly","needQuote":true,"nodes":[{"content":"_Assembly","pos":[0,9]}]},{"pos":[40537,40553],"content":"IEvidenceFactory","needQuote":true,"nodes":[{"content":"IEvidenceFactory","pos":[0,16]}]},{"pos":[40786,40810],"content":"ICustomAttributeProvider","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider","pos":[0,24]}]},{"pos":[41082,41095],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[41386,41421],"content":"CreateQualifiedName(String, String)","needQuote":true,"nodes":[{"content":"CreateQualifiedName(String, String)","pos":[0,35]}]},{"pos":[41621,41640],"content":"CreateQualifiedName","needQuote":true,"nodes":[{"content":"CreateQualifiedName","pos":[0,19]}]},{"pos":[41733,41734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41784,41790],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[41851,41852]},{"pos":[41907,41913],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[41973,41974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42097,42116],"content":"CreateQualifiedName","needQuote":true,"nodes":[{"content":"CreateQualifiedName","pos":[0,19]}]},{"pos":[42209,42210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42260,42266],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[42327,42328]},{"pos":[42383,42389],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42449,42450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42742,42759],"content":"GetAssembly(Type)","needQuote":true,"nodes":[{"content":"GetAssembly(Type)","pos":[0,17]}]},{"pos":[42910,42921],"content":"GetAssembly","needQuote":true,"nodes":[{"content":"GetAssembly","pos":[0,11]}]},{"pos":[43006,43007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43055,43059],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43117,43118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43217,43228],"content":"GetAssembly","needQuote":true,"nodes":[{"content":"GetAssembly","pos":[0,11]}]},{"pos":[43313,43314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43362,43366],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43424,43425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43674,43690],"content":"LoadFrom(String)","needQuote":true,"nodes":[{"content":"LoadFrom(String)","pos":[0,16]}]},{"pos":[43839,43847],"content":"LoadFrom","needQuote":true,"nodes":[{"content":"LoadFrom","pos":[0,8]}]},{"pos":[43929,43930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43980,43986],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44046,44047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44145,44153],"content":"LoadFrom","needQuote":true,"nodes":[{"content":"LoadFrom","pos":[0,8]}]},{"pos":[44235,44236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44286,44292],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44352,44353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44614,44644],"content":"ReflectionOnlyLoadFrom(String)","needQuote":true,"nodes":[{"content":"ReflectionOnlyLoadFrom(String)","pos":[0,30]}]},{"pos":[44821,44843],"content":"ReflectionOnlyLoadFrom","needQuote":true,"nodes":[{"content":"ReflectionOnlyLoadFrom","pos":[0,22]}]},{"pos":[44939,44940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44990,44996],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45056,45057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45169,45191],"content":"ReflectionOnlyLoadFrom","needQuote":true,"nodes":[{"content":"ReflectionOnlyLoadFrom","pos":[0,22]}]},{"pos":[45287,45288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45338,45344],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45404,45405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45712,45738],"content":"LoadFrom(String, Evidence)","needQuote":true,"nodes":[{"content":"LoadFrom(String, Evidence)","pos":[0,26]}]},{"pos":[45952,45960],"content":"LoadFrom","needQuote":true,"nodes":[{"content":"LoadFrom","pos":[0,8]}]},{"pos":[46042,46043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46093,46099],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[46160,46161]},{"pos":[46234,46242],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[46320,46321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46451,46459],"content":"LoadFrom","needQuote":true,"nodes":[{"content":"LoadFrom","pos":[0,8]}]},{"pos":[46541,46542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46592,46598],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[46659,46660]},{"pos":[46733,46741],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[46819,46820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47209,47266],"content":"LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)","needQuote":true,"nodes":[{"content":"LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)","pos":[0,57]}]},{"pos":[47856,47864],"content":"LoadFrom","needQuote":true,"nodes":[{"content":"LoadFrom","pos":[0,8]}]},{"pos":[47946,47947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47997,48003],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[48064,48065]},{"pos":[48138,48146],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"content":",","pos":[48225,48226]},{"pos":[48279,48283],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[48342,48344]},{"content":",","pos":[48376,48377]},{"pos":[48472,48493],"content":"AssemblyHashAlgorithm","needQuote":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[48593,48594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48792,48800],"content":"LoadFrom","needQuote":true,"nodes":[{"content":"LoadFrom","pos":[0,8]}]},{"pos":[48882,48883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48933,48939],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[49000,49001]},{"pos":[49074,49082],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"content":",","pos":[49161,49162]},{"pos":[49215,49219],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[49277,49279],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[49308,49309]},{"pos":[49404,49425],"content":"AssemblyHashAlgorithm","needQuote":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[49525,49526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50068,50115],"content":"LoadFrom(String, Byte[], AssemblyHashAlgorithm)","needQuote":true,"nodes":[{"content":"LoadFrom(String, Byte[], AssemblyHashAlgorithm)","pos":[0,47]}]},{"pos":[50597,50605],"content":"LoadFrom","needQuote":true,"nodes":[{"content":"LoadFrom","pos":[0,8]}]},{"pos":[50687,50688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50738,50744],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[50805,50806]},{"pos":[50859,50863],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[50922,50924]},{"content":",","pos":[50956,50957]},{"pos":[51052,51073],"content":"AssemblyHashAlgorithm","needQuote":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[51173,51174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51340,51348],"content":"LoadFrom","needQuote":true,"nodes":[{"content":"LoadFrom","pos":[0,8]}]},{"pos":[51430,51431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51481,51487],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[51548,51549]},{"pos":[51602,51606],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[51664,51666],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[51695,51696]},{"pos":[51791,51812],"content":"AssemblyHashAlgorithm","needQuote":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[51912,51913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52341,52363],"content":"UnsafeLoadFrom(String)","needQuote":true,"nodes":[{"content":"UnsafeLoadFrom(String)","pos":[0,22]}]},{"pos":[52524,52538],"content":"UnsafeLoadFrom","needQuote":true,"nodes":[{"content":"UnsafeLoadFrom","pos":[0,14]}]},{"pos":[52626,52627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52677,52683],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52743,52744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52848,52862],"content":"UnsafeLoadFrom","needQuote":true,"nodes":[{"content":"UnsafeLoadFrom","pos":[0,14]}]},{"pos":[52950,52951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53001,53007],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53067,53068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53323,53335],"content":"Load(String)","needQuote":true,"nodes":[{"content":"Load(String)","pos":[0,12]}]},{"pos":[53476,53480],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[53558,53559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53609,53615],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53675,53676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53770,53774],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[53852,53853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53903,53909],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53969,53970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54219,54245],"content":"ReflectionOnlyLoad(String)","needQuote":true,"nodes":[{"content":"ReflectionOnlyLoad(String)","pos":[0,26]}]},{"pos":[54414,54432],"content":"ReflectionOnlyLoad","needQuote":true,"nodes":[{"content":"ReflectionOnlyLoad","pos":[0,18]}]},{"pos":[54524,54525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54575,54581],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[54641,54642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54750,54768],"content":"ReflectionOnlyLoad","needQuote":true,"nodes":[{"content":"ReflectionOnlyLoad","pos":[0,18]}]},{"pos":[54860,54861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54911,54917],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[54977,54978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55273,55295],"content":"Load(String, Evidence)","needQuote":true,"nodes":[{"content":"Load(String, Evidence)","pos":[0,22]}]},{"pos":[55501,55505],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[55583,55584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55634,55640],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[55701,55702]},{"pos":[55775,55783],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[55861,55862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55988,55992],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[56070,56071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56121,56127],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[56188,56189]},{"pos":[56262,56270],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[56348,56349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56643,56661],"content":"Load(AssemblyName)","needQuote":true,"nodes":[{"content":"Load(AssemblyName)","pos":[0,18]}]},{"pos":[56836,56840],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[56918,56919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56986,56998],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[57075,57076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57187,57191],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[57269,57270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57337,57349],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[57426,57427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57734,57762],"content":"Load(AssemblyName, Evidence)","needQuote":true,"nodes":[{"content":"Load(AssemblyName, Evidence)","pos":[0,28]}]},{"pos":[58002,58006],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[58084,58085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58152,58164],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[58242,58243]},{"pos":[58316,58324],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[58402,58403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58546,58550],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[58628,58629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58696,58708],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[58786,58787]},{"pos":[58860,58868],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[58946,58947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59262,59289],"content":"LoadWithPartialName(String)","needQuote":true,"nodes":[{"content":"LoadWithPartialName(String)","pos":[0,27]}]},{"pos":[59460,59479],"content":"LoadWithPartialName","needQuote":true,"nodes":[{"content":"LoadWithPartialName","pos":[0,19]}]},{"pos":[59572,59573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59623,59629],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59689,59690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59799,59818],"content":"LoadWithPartialName","needQuote":true,"nodes":[{"content":"LoadWithPartialName","pos":[0,19]}]},{"pos":[59911,59912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59962,59968],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[60028,60029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60341,60378],"content":"LoadWithPartialName(String, Evidence)","needQuote":true,"nodes":[{"content":"LoadWithPartialName(String, Evidence)","pos":[0,37]}]},{"pos":[60614,60633],"content":"LoadWithPartialName","needQuote":true,"nodes":[{"content":"LoadWithPartialName","pos":[0,19]}]},{"pos":[60726,60727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60777,60783],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[60844,60845]},{"pos":[60918,60926],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[61004,61005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61146,61165],"content":"LoadWithPartialName","needQuote":true,"nodes":[{"content":"LoadWithPartialName","pos":[0,19]}]},{"pos":[61258,61259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61309,61315],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[61376,61377]},{"pos":[61450,61458],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[61536,61537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61844,61856],"content":"Load(Byte[])","needQuote":true,"nodes":[{"content":"Load(Byte[])","pos":[0,12]}]},{"pos":[62083,62087],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[62165,62166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62214,62218],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[62277,62279]},{"pos":[62310,62311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62405,62409],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[62487,62488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62536,62540],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[62598,62600],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[62628,62629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62919,62945],"content":"ReflectionOnlyLoad(Byte[])","needQuote":true,"nodes":[{"content":"ReflectionOnlyLoad(Byte[])","pos":[0,26]}]},{"pos":[63228,63246],"content":"ReflectionOnlyLoad","needQuote":true,"nodes":[{"content":"ReflectionOnlyLoad","pos":[0,18]}]},{"pos":[63338,63339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63387,63391],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[63450,63452]},{"pos":[63483,63484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63592,63610],"content":"ReflectionOnlyLoad","needQuote":true,"nodes":[{"content":"ReflectionOnlyLoad","pos":[0,18]}]},{"pos":[63702,63703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63751,63755],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[63813,63815],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[63843,63844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64176,64196],"content":"Load(Byte[], Byte[])","needQuote":true,"nodes":[{"content":"Load(Byte[], Byte[])","pos":[0,20]}]},{"pos":[64475,64479],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[64557,64558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64606,64610],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[64669,64671]},{"content":",","pos":[64703,64704]},{"pos":[64757,64761],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[64820,64822]},{"pos":[64853,64854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64962,64966],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[65044,65045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65093,65097],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[65155,65157],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[65186,65187]},{"pos":[65240,65244],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[65302,65304],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[65332,65333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65691,65734],"content":"Load(Byte[], Byte[], SecurityContextSource)","needQuote":true,"nodes":[{"content":"Load(Byte[], Byte[], SecurityContextSource)","pos":[0,43]}]},{"pos":[66152,66156],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[66234,66235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66283,66287],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[66346,66348]},{"content":",","pos":[66380,66381]},{"pos":[66434,66438],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[66497,66499]},{"content":",","pos":[66531,66532]},{"pos":[66611,66632],"content":"SecurityContextSource","needQuote":true,"nodes":[{"content":"SecurityContextSource","pos":[0,21]}]},{"pos":[66716,66717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66863,66867],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[66945,66946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66994,66998],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[67056,67058],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[67087,67088]},{"pos":[67141,67145],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[67203,67205],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[67234,67235]},{"pos":[67314,67335],"content":"SecurityContextSource","needQuote":true,"nodes":[{"content":"SecurityContextSource","pos":[0,21]}]},{"pos":[67419,67420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67856,67886],"content":"Load(Byte[], Byte[], Evidence)","needQuote":true,"nodes":[{"content":"Load(Byte[], Byte[], Evidence)","pos":[0,30]}]},{"pos":[68273,68277],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[68355,68356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68404,68408],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[68467,68469]},{"content":",","pos":[68501,68502]},{"pos":[68555,68559],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[68618,68620]},{"content":",","pos":[68652,68653]},{"pos":[68726,68734],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[68812,68813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68953,68957],"content":"Load","needQuote":true,"nodes":[{"content":"Load","pos":[0,4]}]},{"pos":[69035,69036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69084,69088],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[69146,69148],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[69177,69178]},{"pos":[69231,69235],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[69293,69295],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[69324,69325]},{"pos":[69398,69406],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[69484,69485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69847,69863],"content":"LoadFile(String)","needQuote":true,"nodes":[{"content":"LoadFile(String)","pos":[0,16]}]},{"pos":[70012,70020],"content":"LoadFile","needQuote":true,"nodes":[{"content":"LoadFile","pos":[0,8]}]},{"pos":[70102,70103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70153,70159],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[70219,70220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70318,70326],"content":"LoadFile","needQuote":true,"nodes":[{"content":"LoadFile","pos":[0,8]}]},{"pos":[70408,70409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70459,70465],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[70525,70526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70805,70831],"content":"LoadFile(String, Evidence)","needQuote":true,"nodes":[{"content":"LoadFile(String, Evidence)","pos":[0,26]}]},{"pos":[71045,71053],"content":"LoadFile","needQuote":true,"nodes":[{"content":"LoadFile","pos":[0,8]}]},{"pos":[71135,71136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71186,71192],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[71253,71254]},{"pos":[71327,71335],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[71413,71414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71544,71552],"content":"LoadFile","needQuote":true,"nodes":[{"content":"LoadFile","pos":[0,8]}]},{"pos":[71634,71635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71685,71691],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[71752,71753]},{"pos":[71826,71834],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[71912,71913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72199,72221],"content":"GetExecutingAssembly()","needQuote":true,"nodes":[{"content":"GetExecutingAssembly()","pos":[0,22]}]},{"pos":[72366,72386],"content":"GetExecutingAssembly","needQuote":true,"nodes":[{"content":"GetExecutingAssembly","pos":[0,20]}]},{"pos":[72480,72481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72508,72509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72604,72624],"content":"GetExecutingAssembly","needQuote":true,"nodes":[{"content":"GetExecutingAssembly","pos":[0,20]}]},{"pos":[72718,72719],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72746,72747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72992,73012],"content":"GetCallingAssembly()","needQuote":true,"nodes":[{"content":"GetCallingAssembly()","pos":[0,20]}]},{"pos":[73153,73171],"content":"GetCallingAssembly","needQuote":true,"nodes":[{"content":"GetCallingAssembly","pos":[0,18]}]},{"pos":[73263,73264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73291,73292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73385,73403],"content":"GetCallingAssembly","needQuote":true,"nodes":[{"content":"GetCallingAssembly","pos":[0,18]}]},{"pos":[73495,73496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73523,73524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73763,73781],"content":"GetEntryAssembly()","needQuote":true,"nodes":[{"content":"GetEntryAssembly()","pos":[0,18]}]},{"pos":[73918,73934],"content":"GetEntryAssembly","needQuote":true,"nodes":[{"content":"GetEntryAssembly","pos":[0,16]}]},{"pos":[74024,74025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74052,74053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74144,74160],"content":"GetEntryAssembly","needQuote":true,"nodes":[{"content":"GetEntryAssembly","pos":[0,16]}]},{"pos":[74250,74251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74278,74279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74505,74514],"content":"GetName()","needQuote":true,"nodes":[{"content":"GetName()","pos":[0,9]}]},{"pos":[74633,74640],"content":"GetName","needQuote":true,"nodes":[{"content":"GetName","pos":[0,7]}]},{"pos":[74721,74722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74749,74750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74832,74839],"content":"GetName","needQuote":true,"nodes":[{"content":"GetName","pos":[0,7]}]},{"pos":[74920,74921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74948,74949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75173,75189],"content":"GetName(Boolean)","needQuote":true,"nodes":[{"content":"GetName(Boolean)","pos":[0,16]}]},{"pos":[75338,75345],"content":"GetName","needQuote":true,"nodes":[{"content":"GetName","pos":[0,7]}]},{"pos":[75426,75427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75478,75485],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75546,75547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75645,75652],"content":"GetName","needQuote":true,"nodes":[{"content":"GetName","pos":[0,7]}]},{"pos":[75733,75734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75785,75792],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75853,75854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76126,76145],"content":"_Assembly.GetType()","needQuote":true,"nodes":[{"content":"_Assembly.GetType()","pos":[0,19]}]},{"pos":[76408,76425],"content":"_Assembly.GetType","needQuote":true,"nodes":[{"content":"_Assembly.GetType","pos":[0,17]}]},{"pos":[76547,76548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76575,76576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76699,76747],"content":"System.Runtime.InteropServices._Assembly.GetType","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._Assembly.GetType","pos":[0,48]}]},{"pos":[76869,76870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76897,76898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77251,77266],"content":"GetType(String)","needQuote":true,"nodes":[{"content":"GetType(String)","pos":[0,15]}]},{"pos":[77413,77420],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[77501,77502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77552,77558],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[77618,77619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77716,77723],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[77804,77805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77855,77861],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[77921,77922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78181,78205],"content":"GetType(String, Boolean)","needQuote":true,"nodes":[{"content":"GetType(String, Boolean)","pos":[0,24]}]},{"pos":[78383,78390],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[78471,78472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78522,78528],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[78589,78590]},{"pos":[78646,78653],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[78714,78715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78827,78834],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[78915,78916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78966,78972],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[79033,79034]},{"pos":[79090,79097],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[79158,79159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79457,79490],"content":"GetType(String, Boolean, Boolean)","needQuote":true,"nodes":[{"content":"GetType(String, Boolean, Boolean)","pos":[0,33]}]},{"pos":[79699,79706],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[79787,79788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79838,79844],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[79905,79906]},{"pos":[79962,79969],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[80031,80032]},{"pos":[80088,80095],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80156,80157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80284,80291],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[80372,80373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80423,80429],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[80490,80491]},{"pos":[80547,80554],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[80616,80617]},{"pos":[80673,80680],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80741,80742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81028,81046],"content":"GetExportedTypes()","needQuote":true,"nodes":[{"content":"GetExportedTypes()","pos":[0,18]}]},{"pos":[81183,81199],"content":"GetExportedTypes","needQuote":true,"nodes":[{"content":"GetExportedTypes","pos":[0,16]}]},{"pos":[81289,81290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81317,81318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81409,81425],"content":"GetExportedTypes","needQuote":true,"nodes":[{"content":"GetExportedTypes","pos":[0,16]}]},{"pos":[81515,81516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81543,81544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81771,81781],"content":"GetTypes()","needQuote":true,"nodes":[{"content":"GetTypes()","pos":[0,10]}]},{"pos":[81902,81910],"content":"GetTypes","needQuote":true,"nodes":[{"content":"GetTypes","pos":[0,8]}]},{"pos":[81992,81993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82020,82021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82104,82112],"content":"GetTypes","needQuote":true,"nodes":[{"content":"GetTypes","pos":[0,8]}]},{"pos":[82194,82195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82222,82223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82478,82517],"content":"GetManifestResourceStream(Type, String)","needQuote":true,"nodes":[{"content":"GetManifestResourceStream(Type, String)","pos":[0,39]}]},{"pos":[82725,82750],"content":"GetManifestResourceStream","needQuote":true,"nodes":[{"content":"GetManifestResourceStream","pos":[0,25]}]},{"pos":[82849,82850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82898,82902],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[82961,82962]},{"pos":[83017,83023],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[83083,83084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83211,83236],"content":"GetManifestResourceStream","needQuote":true,"nodes":[{"content":"GetManifestResourceStream","pos":[0,25]}]},{"pos":[83335,83336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83384,83388],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[83447,83448]},{"pos":[83503,83509],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[83569,83570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83900,83933],"content":"GetSatelliteAssembly(CultureInfo)","needQuote":true,"nodes":[{"content":"GetSatelliteAssembly(CultureInfo)","pos":[0,33]}]},{"pos":[84144,84164],"content":"GetSatelliteAssembly","needQuote":true,"nodes":[{"content":"GetSatelliteAssembly","pos":[0,20]}]},{"pos":[84258,84259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84328,84339],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[84418,84419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84548,84568],"content":"GetSatelliteAssembly","needQuote":true,"nodes":[{"content":"GetSatelliteAssembly","pos":[0,20]}]},{"pos":[84662,84663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84732,84743],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[84822,84823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85164,85206],"content":"GetSatelliteAssembly(CultureInfo, Version)","needQuote":true,"nodes":[{"content":"GetSatelliteAssembly(CultureInfo, Version)","pos":[0,42]}]},{"pos":[85448,85468],"content":"GetSatelliteAssembly","needQuote":true,"nodes":[{"content":"GetSatelliteAssembly","pos":[0,20]}]},{"pos":[85562,85563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85632,85643],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[85723,85724]},{"pos":[85780,85787],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[85848,85849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85993,86013],"content":"GetSatelliteAssembly","needQuote":true,"nodes":[{"content":"GetSatelliteAssembly","pos":[0,20]}]},{"pos":[86107,86108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86177,86188],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[86268,86269]},{"pos":[86325,86332],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[86393,86394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86797,86847],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[87165,87178],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[87265,87266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87349,87366],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[87460,87461]},{"pos":[87548,87564],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[87656,87657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87839,87852],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[87939,87940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88023,88040],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[88134,88135]},{"pos":[88222,88238],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[88330,88331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88708,88736],"content":"GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[88909,88928],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[89021,89022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89073,89080],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89141,89142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89252,89271],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[89364,89365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89416,89423],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89484,89485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89780,89814],"content":"GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type, Boolean)","pos":[0,34]}]},{"pos":[90012,90031],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[90124,90125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90173,90177],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[90236,90237]},{"pos":[90293,90300],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[90361,90362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90484,90503],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[90596,90597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90645,90649],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[90708,90709]},{"pos":[90765,90772],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[90833,90834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91137,91161],"content":"IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(Type, Boolean)","pos":[0,24]}]},{"pos":[91339,91348],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[91431,91432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91480,91484],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[91543,91544]},{"pos":[91600,91607],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[91668,91669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91781,91790],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[91873,91874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91922,91926],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[91985,91986]},{"pos":[92042,92049],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[92110,92111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92380,92405],"content":"GetCustomAttributesData()","needQuote":true,"nodes":[{"content":"GetCustomAttributesData()","pos":[0,25]}]},{"pos":[92556,92579],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[92676,92677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92704,92705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92803,92826],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[92923,92924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92951,92952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93224,93250],"content":"LoadModule(String, Byte[])","needQuote":true,"nodes":[{"content":"LoadModule(String, Byte[])","pos":[0,26]}]},{"pos":[93553,93563],"content":"LoadModule","needQuote":true,"nodes":[{"content":"LoadModule","pos":[0,10]}]},{"pos":[93647,93648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93698,93704],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[93765,93766]},{"pos":[93819,93823],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[93882,93884]},{"pos":[93915,93916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94030,94040],"content":"LoadModule","needQuote":true,"nodes":[{"content":"LoadModule","pos":[0,10]}]},{"pos":[94124,94125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94175,94181],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[94242,94243]},{"pos":[94296,94300],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[94358,94360],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[94388,94389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94747,94781],"content":"LoadModule(String, Byte[], Byte[])","needQuote":true,"nodes":[{"content":"LoadModule(String, Byte[], Byte[])","pos":[0,34]}]},{"pos":[95136,95146],"content":"LoadModule","needQuote":true,"nodes":[{"content":"LoadModule","pos":[0,10]}]},{"pos":[95230,95231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95281,95287],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[95348,95349]},{"pos":[95402,95406],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[95465,95467]},{"content":",","pos":[95499,95500]},{"pos":[95553,95557],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[95616,95618]},{"pos":[95649,95650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95778,95788],"content":"LoadModule","needQuote":true,"nodes":[{"content":"LoadModule","pos":[0,10]}]},{"pos":[95872,95873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95923,95929],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[95990,95991]},{"pos":[96044,96048],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[96106,96108],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[96137,96138]},{"pos":[96191,96195],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[96253,96255],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[96283,96284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96648,96670],"content":"CreateInstance(String)","needQuote":true,"nodes":[{"content":"CreateInstance(String)","pos":[0,22]}]},{"pos":[96831,96845],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[96933,96934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96984,96990],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[97050,97051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97155,97169],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[97257,97258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97308,97314],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[97374,97375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97655,97686],"content":"CreateInstance(String, Boolean)","needQuote":true,"nodes":[{"content":"CreateInstance(String, Boolean)","pos":[0,31]}]},{"pos":[97878,97892],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[97980,97981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98031,98037],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[98098,98099]},{"pos":[98155,98162],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[98223,98224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98343,98357],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[98445,98446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98496,98502],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[98563,98564]},{"pos":[98620,98627],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[98688,98689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99114,99200],"content":"CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])","needQuote":true,"nodes":[{"content":"CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])","pos":[0,86]}]},{"pos":[99951,99965],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[100053,100054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100104,100110],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[100171,100172]},{"pos":[100228,100235],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[100297,100298]},{"pos":[100370,100382],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[100460,100461]},{"pos":[100527,100533],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[100605,100606]},{"pos":[100661,100667],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[100728,100730]},{"content":",","pos":[100762,100763]},{"pos":[100837,100848],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[100928,100929]},{"pos":[100984,100990],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[101051,101053]},{"pos":[101084,101085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101325,101339],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[101427,101428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101478,101484],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[101545,101546]},{"pos":[101602,101609],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[101671,101672]},{"pos":[101744,101756],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[101834,101835]},{"pos":[101901,101907],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[101979,101980]},{"pos":[102035,102041],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[102101,102103],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[102132,102133]},{"pos":[102207,102218],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[102298,102299]},{"pos":[102354,102360],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[102420,102422],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[102450,102451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103018,103036],"content":"GetLoadedModules()","needQuote":true,"nodes":[{"content":"GetLoadedModules()","pos":[0,18]}]},{"pos":[103173,103189],"content":"GetLoadedModules","needQuote":true,"nodes":[{"content":"GetLoadedModules","pos":[0,16]}]},{"pos":[103279,103280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103307,103308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103399,103415],"content":"GetLoadedModules","needQuote":true,"nodes":[{"content":"GetLoadedModules","pos":[0,16]}]},{"pos":[103505,103506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103533,103534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103785,103810],"content":"GetLoadedModules(Boolean)","needQuote":true,"nodes":[{"content":"GetLoadedModules(Boolean)","pos":[0,25]}]},{"pos":[103977,103993],"content":"GetLoadedModules","needQuote":true,"nodes":[{"content":"GetLoadedModules","pos":[0,16]}]},{"pos":[104083,104084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104135,104142],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[104203,104204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104311,104327],"content":"GetLoadedModules","needQuote":true,"nodes":[{"content":"GetLoadedModules","pos":[0,16]}]},{"pos":[104417,104418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104469,104476],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[104537,104538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104790,104802],"content":"GetModules()","needQuote":true,"nodes":[{"content":"GetModules()","pos":[0,12]}]},{"pos":[104927,104937],"content":"GetModules","needQuote":true,"nodes":[{"content":"GetModules","pos":[0,10]}]},{"pos":[105021,105022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105049,105050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105135,105145],"content":"GetModules","needQuote":true,"nodes":[{"content":"GetModules","pos":[0,10]}]},{"pos":[105229,105230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105257,105258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105491,105510],"content":"GetModules(Boolean)","needQuote":true,"nodes":[{"content":"GetModules(Boolean)","pos":[0,19]}]},{"pos":[105665,105675],"content":"GetModules","needQuote":true,"nodes":[{"content":"GetModules","pos":[0,10]}]},{"pos":[105759,105760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105811,105818],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[105879,105880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105981,105991],"content":"GetModules","needQuote":true,"nodes":[{"content":"GetModules","pos":[0,10]}]},{"pos":[106075,106076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106127,106134],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[106195,106196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106450,106467],"content":"GetModule(String)","needQuote":true,"nodes":[{"content":"GetModule(String)","pos":[0,17]}]},{"pos":[106618,106627],"content":"GetModule","needQuote":true,"nodes":[{"content":"GetModule","pos":[0,9]}]},{"pos":[106710,106711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106761,106767],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[106827,106828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106927,106936],"content":"GetModule","needQuote":true,"nodes":[{"content":"GetModule","pos":[0,9]}]},{"pos":[107019,107020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107070,107076],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[107136,107137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107385,107400],"content":"GetFile(String)","needQuote":true,"nodes":[{"content":"GetFile(String)","pos":[0,15]}]},{"pos":[107547,107554],"content":"GetFile","needQuote":true,"nodes":[{"content":"GetFile","pos":[0,7]}]},{"pos":[107635,107636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107686,107692],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[107752,107753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107850,107857],"content":"GetFile","needQuote":true,"nodes":[{"content":"GetFile","pos":[0,7]}]},{"pos":[107938,107939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107989,107995],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[108055,108056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108286,108296],"content":"GetFiles()","needQuote":true,"nodes":[{"content":"GetFiles()","pos":[0,10]}]},{"pos":[108417,108425],"content":"GetFiles","needQuote":true,"nodes":[{"content":"GetFiles","pos":[0,8]}]},{"pos":[108507,108508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108535,108536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108619,108627],"content":"GetFiles","needQuote":true,"nodes":[{"content":"GetFiles","pos":[0,8]}]},{"pos":[108709,108710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108737,108738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108965,108982],"content":"GetFiles(Boolean)","needQuote":true,"nodes":[{"content":"GetFiles(Boolean)","pos":[0,17]}]},{"pos":[109133,109141],"content":"GetFiles","needQuote":true,"nodes":[{"content":"GetFiles","pos":[0,8]}]},{"pos":[109223,109224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109275,109282],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[109343,109344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109443,109451],"content":"GetFiles","needQuote":true,"nodes":[{"content":"GetFiles","pos":[0,8]}]},{"pos":[109533,109534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109585,109592],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[109653,109654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109903,109928],"content":"GetReferencedAssemblies()","needQuote":true,"nodes":[{"content":"GetReferencedAssemblies()","pos":[0,25]}]},{"pos":[110079,110102],"content":"GetReferencedAssemblies","needQuote":true,"nodes":[{"content":"GetReferencedAssemblies","pos":[0,23]}]},{"pos":[110199,110200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110227,110228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110326,110349],"content":"GetReferencedAssemblies","needQuote":true,"nodes":[{"content":"GetReferencedAssemblies","pos":[0,23]}]},{"pos":[110446,110447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110474,110475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110716,110726],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[110847,110855],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[110937,110938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110965,110966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111049,111057],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[111139,111140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111167,111168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111379,111387],"content":"CodeBase","needQuote":true,"nodes":[{"content":"CodeBase","pos":[0,8]}]},{"pos":[111635,111650],"content":"EscapedCodeBase","needQuote":true,"nodes":[{"content":"EscapedCodeBase","pos":[0,15]}]},{"pos":[111914,111924],"content":"EntryPoint","needQuote":true,"nodes":[{"content":"EntryPoint","pos":[0,10]}]},{"pos":[112176,112189],"content":"ExportedTypes","needQuote":true,"nodes":[{"content":"ExportedTypes","pos":[0,13]}]},{"pos":[112445,112453],"content":"Evidence","needQuote":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[112699,112712],"content":"PermissionSet","needQuote":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[112974,112988],"content":"IsFullyTrusted","needQuote":true,"nodes":[{"content":"IsFullyTrusted","pos":[0,14]}]},{"pos":[113254,113269],"content":"SecurityRuleSet","needQuote":true,"nodes":[{"content":"SecurityRuleSet","pos":[0,15]}]},{"pos":[113539,113555],"content":"CustomAttributes","needQuote":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[113826,113840],"content":"ReflectionOnly","needQuote":true,"nodes":[{"content":"ReflectionOnly","pos":[0,14]}]},{"pos":[114099,114107],"content":"Location","needQuote":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"pos":[114359,114378],"content":"ImageRuntimeVersion","needQuote":true,"nodes":[{"content":"ImageRuntimeVersion","pos":[0,19]}]},{"pos":[114663,114682],"content":"GlobalAssemblyCache","needQuote":true,"nodes":[{"content":"GlobalAssemblyCache","pos":[0,19]}]},{"pos":[114959,114970],"content":"HostContext","needQuote":true,"nodes":[{"content":"HostContext","pos":[0,11]}]},{"pos":[115225,115238],"content":"ModuleResolve","needQuote":true,"nodes":[{"content":"ModuleResolve","pos":[0,13]}]},{"pos":[115495,115517],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[115665,115671],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[115738,115739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115789,115795],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[115856,115857]},{"pos":[115912,115918],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[115978,115979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116076,116082],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[116149,116150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116200,116206],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[116267,116268]},{"pos":[116323,116329],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[116389,116390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116635,116666],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[116832,116847],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[116923,116924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116974,116980],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[117041,117042]},{"pos":[117097,117103],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[117163,117164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117270,117285],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[117361,117362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117412,117418],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[117479,117480]},{"pos":[117535,117541],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[117601,117602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117828,117837],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[117930,117937],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[118005,118006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118033,118034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118103,118110],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[118178,118179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118206,118207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118382,118399],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[118508,118523],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[118599,118600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118627,118628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118705,118720],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[118796,118797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118824,118825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119253,119284],"content":"TryGetRawMetadata(Byte*, Int32)","needQuote":true,"nodes":[{"content":"TryGetRawMetadata(Byte*, Int32)","pos":[0,31]}]},{"pos":[119516,119533],"content":"TryGetRawMetadata","needQuote":true,"nodes":[{"content":"TryGetRawMetadata","pos":[0,17]}]},{"pos":[119622,119623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119671,119675],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[119766,119767]},{"pos":[119821,119826],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[119885,119886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120026,120043],"content":"TryGetRawMetadata","needQuote":true,"nodes":[{"content":"TryGetRawMetadata","pos":[0,17]}]},{"pos":[120132,120133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120181,120185],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[120276,120277]},{"pos":[120331,120336],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[120395,120396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120854,120872],"content":"GetExportedTypes()","needQuote":true,"nodes":[{"content":"GetExportedTypes()","pos":[0,18]}]},{"pos":[121029,121045],"content":"GetExportedTypes","needQuote":true,"nodes":[{"content":"GetExportedTypes","pos":[0,16]}]},{"pos":[121124,121125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121152,121153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121254,121270],"content":"GetExportedTypes","needQuote":true,"nodes":[{"content":"GetExportedTypes","pos":[0,16]}]},{"pos":[121349,121350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121377,121378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121773,121785],"content":"GetModules()","needQuote":true,"nodes":[{"content":"GetModules()","pos":[0,12]}]},{"pos":[121930,121940],"content":"GetModules","needQuote":true,"nodes":[{"content":"GetModules","pos":[0,10]}]},{"pos":[122013,122014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122041,122042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122137,122147],"content":"GetModules","needQuote":true,"nodes":[{"content":"GetModules","pos":[0,10]}]},{"pos":[122220,122221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122248,122249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122628,122638],"content":"GetTypes()","needQuote":true,"nodes":[{"content":"GetTypes()","pos":[0,10]}]},{"pos":[122779,122787],"content":"GetTypes","needQuote":true,"nodes":[{"content":"GetTypes","pos":[0,8]}]},{"pos":[122858,122859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122886,122887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122980,122988],"content":"GetTypes","needQuote":true,"nodes":[{"content":"GetTypes","pos":[0,8]}]},{"pos":[123059,123060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123087,123088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123529,123553],"content":"GetCustomAttribute(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Type)","pos":[0,24]}]},{"pos":[123752,123770],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[123858,123859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123907,123911],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[123969,123970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124093,124111],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[124199,124200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124248,124252],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[124310,124311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124783,124806],"content":"GetCustomAttribute<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;()","pos":[0,23],"source":"GetCustomAttribute<T>()"}]},{"pos":[125111,125132],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[125223,125224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125251,125252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125365,125389],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[125483,125484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125511,125512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126042,126063],"content":"GetCustomAttributes()","needQuote":true,"nodes":[{"content":"GetCustomAttributes()","pos":[0,21]}]},{"pos":[126240,126259],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[126348,126349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126376,126377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126488,126507],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[126596,126597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126624,126625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127104,127129],"content":"GetCustomAttributes(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type)","pos":[0,25]}]},{"pos":[127330,127349],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[127438,127439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127487,127491],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[127549,127550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127674,127693],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[127782,127783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127831,127835],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[127893,127894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128370,128394],"content":"GetCustomAttributes<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;()","pos":[0,24],"source":"GetCustomAttributes<T>()"}]},{"pos":[128703,128725],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[128817,128818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128845,128846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128960,128985],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[129080,129081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129108,129109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129647,129662],"content":"IsDefined(Type)","needQuote":true,"nodes":[{"content":"IsDefined(Type)","pos":[0,15]}]},{"pos":[129843,129852],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[129931,129932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129980,129984],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[130042,130043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130157,130166],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[130245,130246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130294,130298],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[130356,130357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130583,130589],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[130707,130724],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[130888,130918],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[131106,131121],"content":"System.Security","needQuote":true,"nodes":[{"content":"System.Security","pos":[0,15]}]},{"pos":[131277,131305],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[131590,131631],"content":"TryGetRawMetadata(Assembly, Byte*, Int32)","needQuote":true,"nodes":[{"content":"TryGetRawMetadata(Assembly, Byte*, Int32)","pos":[0,41]}]},{"pos":[131918,131935],"content":"TryGetRawMetadata","needQuote":true,"nodes":[{"content":"TryGetRawMetadata","pos":[0,17]}]},{"pos":[132024,132025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132088,132096],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[132170,132171]},{"pos":[132224,132228],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[132319,132320]},{"pos":[132374,132379],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[132438,132439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132606,132623],"content":"TryGetRawMetadata","needQuote":true,"nodes":[{"content":"TryGetRawMetadata","pos":[0,17]}]},{"pos":[132712,132713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132776,132784],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[132858,132859]},{"pos":[132912,132916],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[133007,133008]},{"pos":[133062,133067],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[133126,133127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133474,133492],"content":"AssemblyExtensions","needQuote":true,"nodes":[{"content":"AssemblyExtensions","pos":[0,18]}]},{"pos":[133763,133789],"content":"GetExportedTypes(Assembly)","needQuote":true,"nodes":[{"content":"GetExportedTypes(Assembly)","pos":[0,26]}]},{"pos":[134000,134016],"content":"GetExportedTypes","needQuote":true,"nodes":[{"content":"GetExportedTypes","pos":[0,16]}]},{"pos":[134095,134096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134159,134167],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[134240,134241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134370,134386],"content":"GetExportedTypes","needQuote":true,"nodes":[{"content":"GetExportedTypes","pos":[0,16]}]},{"pos":[134465,134466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134529,134537],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[134610,134611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134887,134905],"content":"AssemblyExtensions","needQuote":true,"nodes":[{"content":"AssemblyExtensions","pos":[0,18]}]},{"pos":[135152,135172],"content":"GetModules(Assembly)","needQuote":true,"nodes":[{"content":"GetModules(Assembly)","pos":[0,20]}]},{"pos":[135371,135381],"content":"GetModules","needQuote":true,"nodes":[{"content":"GetModules","pos":[0,10]}]},{"pos":[135454,135455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135518,135526],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[135599,135600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135723,135733],"content":"GetModules","needQuote":true,"nodes":[{"content":"GetModules","pos":[0,10]}]},{"pos":[135806,135807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135870,135878],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[135951,135952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136224,136242],"content":"GetTypes(Assembly)","needQuote":true,"nodes":[{"content":"GetTypes(Assembly)","pos":[0,18]}]},{"pos":[136437,136445],"content":"GetTypes","needQuote":true,"nodes":[{"content":"GetTypes","pos":[0,8]}]},{"pos":[136516,136517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136580,136588],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[136661,136662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136783,136791],"content":"GetTypes","needQuote":true,"nodes":[{"content":"GetTypes","pos":[0,8]}]},{"pos":[136862,136863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136926,136934],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[137007,137008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137305,137339],"content":"GetCustomAttribute(Assembly, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Assembly, Type)","pos":[0,34]}]},{"pos":[137593,137611],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[137699,137700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137763,137771],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[137845,137846]},{"pos":[137899,137903],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[137961,137962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138112,138130],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[138218,138219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138282,138290],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[138364,138365]},{"pos":[138418,138422],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[138480,138481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138800,138825],"content":"CustomAttributeExtensions","needQuote":true,"nodes":[{"content":"CustomAttributeExtensions","pos":[0,25]}]},{"pos":[139111,139142],"content":"GetCustomAttribute<T>(Assembly)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(Assembly)","pos":[0,31],"source":"GetCustomAttribute<T>(Assembly)"}]},{"pos":[139535,139556],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[139647,139648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139711,139719],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[139792,139793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139934,139958],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[140052,140053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140116,140124],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[140197,140198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140604,140633],"content":"GetCustomAttributes(Assembly)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Assembly)","pos":[0,29]}]},{"pos":[140864,140883],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[140972,140973],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141036,141044],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[141117,141118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141257,141276],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[141365,141366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141429,141437],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[141510,141511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141845,141880],"content":"GetCustomAttributes(Assembly, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Assembly, Type)","pos":[0,35]}]},{"pos":[142136,142155],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[142244,142245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142308,142316],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[142390,142391]},{"pos":[142444,142448],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[142506,142507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142658,142677],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[142766,142767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142830,142838],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[142912,142913]},{"pos":[142966,142970],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[143028,143029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143372,143404],"content":"GetCustomAttributes<T>(Assembly)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(Assembly)","pos":[0,32],"source":"GetCustomAttributes<T>(Assembly)"}]},{"pos":[143801,143823],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[143915,143916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143979,143987],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[144060,144061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144203,144228],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[144323,144324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144387,144395],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[144468,144469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144880,144905],"content":"IsDefined(Assembly, Type)","needQuote":true,"nodes":[{"content":"IsDefined(Assembly, Type)","pos":[0,25]}]},{"pos":[145141,145150],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[145229,145230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145293,145301],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[145375,145376]},{"pos":[145429,145433],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[145491,145492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145633,145642],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[145721,145722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145785,145793],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[145867,145868]},{"pos":[145921,145925],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[145983,145984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146240,146266],"content":"System.Reflection.Metadata","needQuote":true,"nodes":[{"content":"System.Reflection.Metadata","pos":[0,26]}]},{"pos":[146498,146506],"content":"FullName","needQuote":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"pos":[146706,146712],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[146899,146908],"content":"IsDynamic","needQuote":true,"nodes":[{"content":"IsDynamic","pos":[0,9]}]},{"pos":[147112,147119],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[147314,147328],"content":"ManifestModule","needQuote":true,"nodes":[{"content":"ManifestModule","pos":[0,14]}]},{"pos":[147568,147574],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[147769,147781],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[148013,148034],"content":"AssemblyBuilderAccess","needQuote":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[148297,148312],"content":"AssemblyBuilder","needQuote":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[148643,148678],"content":"IEnumerable<CustomAttributeBuilder>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;CustomAttributeBuilder&gt;","pos":[0,35],"source":"IEnumerable<CustomAttributeBuilder>"}]},{"pos":[149006,149017],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[149102,149103],"content":"<","needQuote":true,"nodes":[]},{"pos":[149185,149207],"content":"CustomAttributeBuilder","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder","pos":[0,22]}]},{"pos":[149392,149403],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[149489,149492]},{"pos":[149581,149603],"content":"CustomAttributeBuilder","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder","pos":[0,22]}]},{"pos":[149695,149696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150000,150014],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[150233,150244],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[150308,150309],"content":"<","needQuote":true,"nodes":[]},{"pos":[150336,150337],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[150457,150468],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[150533,150536]},{"pos":[150570,150571],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[150598,150599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150802,150828],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[151058,151071],"content":"ModuleBuilder","needQuote":true,"nodes":[{"content":"ModuleBuilder","pos":[0,13]}]},{"pos":[151323,151337],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[151482,151488],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[151568,151569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151619,151625],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[151685,151686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151782,151788],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[151868,151869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151919,151925],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[151985,151986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152217,152230],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[152357,152368],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[152453,152454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152481,152482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152568,152579],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[152664,152665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152692,152693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152868,152873],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[153086,153117],"content":"GetManifestResourceInfo(String)","needQuote":true,"nodes":[{"content":"GetManifestResourceInfo(String)","pos":[0,31]}]},{"pos":[153296,153319],"content":"GetManifestResourceInfo","needQuote":true,"nodes":[{"content":"GetManifestResourceInfo","pos":[0,23]}]},{"pos":[153416,153417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153467,153473],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[153533,153534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153647,153670],"content":"GetManifestResourceInfo","needQuote":true,"nodes":[{"content":"GetManifestResourceInfo","pos":[0,23]}]},{"pos":[153767,153768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153818,153824],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[153884,153885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154142,154162],"content":"ManifestResourceInfo","needQuote":true,"nodes":[{"content":"ManifestResourceInfo","pos":[0,20]}]},{"pos":[154428,154454],"content":"GetManifestResourceNames()","needQuote":true,"nodes":[{"content":"GetManifestResourceNames()","pos":[0,26]}]},{"pos":[154607,154631],"content":"GetManifestResourceNames","needQuote":true,"nodes":[{"content":"GetManifestResourceNames","pos":[0,24]}]},{"pos":[154729,154730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154757,154758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154857,154881],"content":"GetManifestResourceNames","needQuote":true,"nodes":[{"content":"GetManifestResourceNames","pos":[0,24]}]},{"pos":[154979,154980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155007,155008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155175,155183],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[155311,155317],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[155378,155380]},{"pos":[155445,155451],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[155511,155513],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[155723,155756],"content":"GetManifestResourceStream(String)","needQuote":true,"nodes":[{"content":"GetManifestResourceStream(String)","pos":[0,33]}]},{"pos":[155939,155964],"content":"GetManifestResourceStream","needQuote":true,"nodes":[{"content":"GetManifestResourceStream","pos":[0,25]}]},{"pos":[156063,156064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156114,156120],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[156180,156181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156296,156321],"content":"GetManifestResourceStream","needQuote":true,"nodes":[{"content":"GetManifestResourceStream","pos":[0,25]}]},{"pos":[156420,156421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156471,156477],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[156537,156538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156769,156775],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[156905,156914],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[157085,157100],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[157257,157263],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[157383,157387],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[157446,157448]},{"pos":[157511,157515],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[157573,157575],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[157756,157778],"content":"CustomAttributeBuilder","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder","pos":[0,22]}]},{"pos":[158048,158060],"content":"DefinedTypes","needQuote":true,"nodes":[{"content":"DefinedTypes","pos":[0,12]}]},{"pos":[158380,158401],"content":"IEnumerable<TypeInfo>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;TypeInfo&gt;","pos":[0,21],"source":"IEnumerable<TypeInfo>"}]},{"pos":[158677,158688],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[158773,158774],"content":"<","needQuote":true,"nodes":[]},{"pos":[158837,158845],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[158990,159001],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[159087,159090]},{"pos":[159160,159168],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[159220,159221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159508,159515],"content":"Modules","needQuote":true,"nodes":[{"content":"Modules","pos":[0,7]}]},{"pos":[159818,159837],"content":"IEnumerable<Module>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Module&gt;","pos":[0,19],"source":"IEnumerable<Module>"}]},{"pos":[160107,160118],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[160203,160204],"content":"<","needQuote":true,"nodes":[]},{"pos":[160265,160271],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[160414,160425],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[160511,160514]},{"pos":[160582,160588],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[160638,160639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160891,160908],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[161084,161105],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[161298,161315],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[161565,161586],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.Reflection.Emit.AssemblyBuilder\n  commentId: T:System.Reflection.Emit.AssemblyBuilder\n  id: AssemblyBuilder\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.AssemblyBuilder.DefinedTypes\n  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)\n  - System.Reflection.Emit.AssemblyBuilder.FullName\n  - System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.GetHashCode\n  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames\n  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.IsDynamic\n  - System.Reflection.Emit.AssemblyBuilder.ManifestModule\n  - System.Reflection.Emit.AssemblyBuilder.Modules\n  - System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  langs:\n  - csharp\n  - vb\n  name: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AssemblyBuilder\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 170\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines and represents a dynamic assembly.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(MayLeakOnAbort = true)]\n\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_AssemblyBuilder))]\n\n      [ComVisible(true)]\n\n      public sealed class AssemblyBuilder : Assembly, _Assembly, IEvidenceFactory, ICustomAttributeProvider, ISerializable, _AssemblyBuilder\n    content.vb: >-\n      <HostProtection(MayLeakOnAbort:=True)>\n\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_AssemblyBuilder))>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class AssemblyBuilder\n          Inherits Assembly\n          Implements _Assembly, IEvidenceFactory, ICustomAttributeProvider, ISerializable, _AssemblyBuilder\n  seealso:\n  - type: System.AppDomain.DefineDynamicAssembly\n    commentId: Overload:System.AppDomain.DefineDynamicAssembly\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  inheritance:\n  - System.Object\n  - System.Reflection.Assembly\n  implements:\n  - System.Runtime.InteropServices._Assembly\n  - System.Security.IEvidenceFactory\n  - System.Reflection.ICustomAttributeProvider\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n  - System.Reflection.Assembly.GetAssembly(System.Type)\n  - System.Reflection.Assembly.LoadFrom(System.String)\n  - System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  - System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  - System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n  - System.Reflection.Assembly.Load(System.String)\n  - System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n  - System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.LoadWithPartialName(System.String)\n  - System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.Load(System.Byte[])\n  - System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.LoadFile(System.String)\n  - System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.GetExecutingAssembly\n  - System.Reflection.Assembly.GetCallingAssembly\n  - System.Reflection.Assembly.GetEntryAssembly\n  - System.Reflection.Assembly.GetName\n  - System.Reflection.Assembly.GetName(System.Boolean)\n  - System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n  - System.Reflection.Assembly.GetType(System.String)\n  - System.Reflection.Assembly.GetType(System.String,System.Boolean)\n  - System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)\n  - System.Reflection.Assembly.GetExportedTypes\n  - System.Reflection.Assembly.GetTypes\n  - System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)\n  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  - System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\n  - System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Assembly.GetCustomAttributesData\n  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n  - System.Reflection.Assembly.CreateInstance(System.String)\n  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  - System.Reflection.Assembly.GetLoadedModules\n  - System.Reflection.Assembly.GetLoadedModules(System.Boolean)\n  - System.Reflection.Assembly.GetModules\n  - System.Reflection.Assembly.GetModules(System.Boolean)\n  - System.Reflection.Assembly.GetModule(System.String)\n  - System.Reflection.Assembly.GetFile(System.String)\n  - System.Reflection.Assembly.GetFiles\n  - System.Reflection.Assembly.GetFiles(System.Boolean)\n  - System.Reflection.Assembly.GetReferencedAssemblies\n  - System.Reflection.Assembly.ToString\n  - System.Reflection.Assembly.CodeBase\n  - System.Reflection.Assembly.EscapedCodeBase\n  - System.Reflection.Assembly.EntryPoint\n  - System.Reflection.Assembly.ExportedTypes\n  - System.Reflection.Assembly.Evidence\n  - System.Reflection.Assembly.PermissionSet\n  - System.Reflection.Assembly.IsFullyTrusted\n  - System.Reflection.Assembly.SecurityRuleSet\n  - System.Reflection.Assembly.CustomAttributes\n  - System.Reflection.Assembly.ReflectionOnly\n  - System.Reflection.Assembly.Location\n  - System.Reflection.Assembly.ImageRuntimeVersion\n  - System.Reflection.Assembly.GlobalAssemblyCache\n  - System.Reflection.Assembly.HostContext\n  - System.Reflection.Assembly.ModuleResolve\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: AssemblyBuilder\n  extensionMethods:\n  - System.Reflection.Assembly.System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Byte*@,System.Int32@)\n  - System.Reflection.Assembly.System.Reflection.AssemblyExtensions.GetExportedTypes\n  - System.Reflection.Assembly.System.Reflection.AssemblyExtensions.GetModules\n  - System.Reflection.Assembly.System.Reflection.AssemblyExtensions.GetTypes\n  - System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  - System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  - System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  - System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  - System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n- uid: System.Reflection.Emit.AssemblyBuilder.FullName\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.FullName\n  id: FullName\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: FullName\n  fullName: System.Reflection.Emit.AssemblyBuilder.FullName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FullName\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1259\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the display name of the current dynamic assembly. </p>\\n\"\n  syntax:\n    content: public override string FullName { get; }\n    content.vb: Public Overrides ReadOnly Property FullName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The display name of the dynamic assembly.</p>\\n\"\n  overridden: System.Reflection.Assembly.FullName\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: AssemblyBuilder.FullName\n- uid: System.Reflection.Emit.AssemblyBuilder.IsDynamic\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.IsDynamic\n  id: IsDynamic\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsDynamic\n  fullName: System.Reflection.Emit.AssemblyBuilder.IsDynamic\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsDynamic\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1366\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a value that indicates that the current assembly is a dynamic assembly.</p>\\n\"\n  syntax:\n    content: public override bool IsDynamic { get; }\n    content.vb: Public Overrides ReadOnly Property IsDynamic As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Always <strong>true</strong>.</p>\\n\"\n  overridden: System.Reflection.Assembly.IsDynamic\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: AssemblyBuilder.IsDynamic\n- uid: System.Reflection.Emit.AssemblyBuilder.ManifestModule\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.ManifestModule\n  id: ManifestModule\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: ManifestModule\n  fullName: System.Reflection.Emit.AssemblyBuilder.ManifestModule\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ManifestModule\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1299\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the module in the current <xref href=\\\"System.Reflection.Emit.AssemblyBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the assembly manifest.</p>\\n\"\n  syntax:\n    content: public override Module ManifestModule { get; }\n    content.vb: 'Public Overrides ReadOnly Property ManifestModule As '\n    parameters: []\n    return:\n      type: System.Reflection.Module\n      description: \"\\n<p>The manifest module.</p>\\n\"\n  overridden: System.Reflection.Assembly.ManifestModule\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: AssemblyBuilder.ManifestModule\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)\n  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineDynamicAssembly\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 489\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a dynamic assembly that has the specified name and access rights.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function DefineDynamicAssembly(name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: \"\\n<p>The name of the assembly.</p>\\n\"\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: \"\\n<p>The access rights of the assembly.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: \"\\n<p>An object that represents the new assembly.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)\n  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder>)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineDynamicAssembly\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 502\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a new assembly that has the specified name, access rights, and attributes.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, IEnumerable<CustomAttributeBuilder> assemblyAttributes)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function DefineDynamicAssembly(name As AssemblyName, access As AssemblyBuilderAccess, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: \"\\n<p>The name of the assembly.</p>\\n\"\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: \"\\n<p>The access rights of the assembly.</p>\\n\"\n    - id: assemblyAttributes\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n      description: \"\\n<p>A collection that contains the attributes of the assembly.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: \"\\n<p>An object that represents the new assembly.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Collections.Generic.IEnumerable(Of System.Reflection.Emit.CustomAttributeBuilder))\n  name.vb: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable(Of CustomAttributeBuilder))\n  nameWithType: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)\n  nameWithType.vb: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable(Of CustomAttributeBuilder))\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)\n  id: DefineDynamicModule(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineDynamicModule(String)\n  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineDynamicModule\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 583\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a named transient dynamic module in this assembly.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public ModuleBuilder DefineDynamicModule(string name)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Function DefineDynamicModule(name As String) As ModuleBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the dynamic module. Must be less than 260 characters in length. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.ModuleBuilder\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.Emit.ModuleBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the defined dynamic module.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>name</em> begins with white space.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is greater than or equal to 260. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ExecutionEngineException\n    commentId: T:System.ExecutionEngineException\n    description: \"\\n<p>The assembly for default symbol writer cannot be loaded.</p>\\n<p>-or- </p>\\n<p>The type that implements the default symbol writer interface cannot be found. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AssemblyBuilder.DefineDynamicModule(String)\n- uid: System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1137\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a value that indicates whether this instance is equal to the specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare with this instance, or <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> equals the type and value of this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Reflection.Assembly.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: AssemblyBuilder.Equals(Object)\n- uid: System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)\n  id: GetDynamicModule(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetDynamicModule(String)\n  fullName: System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDynamicModule\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1515\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the dynamic module with the specified name.</p>\\n\"\n  syntax:\n    content: public ModuleBuilder GetDynamicModule(string name)\n    content.vb: Public Function GetDynamicModule(name As String) As ModuleBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the requested dynamic module. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.ModuleBuilder\n      description: \"\\n<p>A ModuleBuilder object representing the requested dynamic module.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AssemblyBuilder.GetDynamicModule(String)\n- uid: System.Reflection.Emit.AssemblyBuilder.GetHashCode\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Reflection.Emit.AssemblyBuilder.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1142\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.Reflection.Assembly.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: AssemblyBuilder.GetHashCode()\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)\n  id: GetManifestResourceInfo(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetManifestResourceInfo(String)\n  fullName: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetManifestResourceInfo\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1200\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns information about how the given resource has been persisted.</p>\\n\"\n  syntax:\n    content: public override ManifestResourceInfo GetManifestResourceInfo(string resourceName)\n    content.vb: Public Overrides Function GetManifestResourceInfo(resourceName As String) As ManifestResourceInfo\n    parameters:\n    - id: resourceName\n      type: System.String\n      description: \"\\n<p>The name of the resource. </p>\\n\"\n    return:\n      type: System.Reflection.ManifestResourceInfo\n      description: \"\\n<p>\\n<xref href=\\\"System.Reflection.ManifestResourceInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> populated with information about the resource's topology, or <strong>null</strong> if the resource is not found.</p>\\n\"\n  overridden: System.Reflection.Assembly.GetManifestResourceInfo(System.String)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is not currently supported. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: AssemblyBuilder.GetManifestResourceInfo(String)\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames\n  id: GetManifestResourceNames\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetManifestResourceNames()\n  fullName: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetManifestResourceNames\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1169\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Loads the specified manifest resource from this assembly.</p>\\n\"\n  syntax:\n    content: public override string[] GetManifestResourceNames()\n    content.vb: Public Overrides Function GetManifestResourceNames As String()\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of type <strong>String</strong> containing the names of all the resources.</p>\\n\"\n  overridden: System.Reflection.Assembly.GetManifestResourceNames\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is not supported on a dynamic assembly. To get the manifest resource names, use <xref href=\\\"System.Reflection.Assembly.GetManifestResourceNames\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: AssemblyBuilder.GetManifestResourceNames()\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)\n  id: GetManifestResourceStream(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetManifestResourceStream(String)\n  fullName: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetManifestResourceStream\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1195\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Loads the specified manifest resource from this assembly.</p>\\n\"\n  syntax:\n    content: public override Stream GetManifestResourceStream(string name)\n    content.vb: Public Overrides Function GetManifestResourceStream(name As String) As Stream\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the manifest resource being requested. </p>\\n\"\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing this manifest resource.</p>\\n\"\n  overridden: System.Reflection.Assembly.GetManifestResourceStream(System.String)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is not currently supported. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: AssemblyBuilder.GetManifestResourceStream(String)\n- uid: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1609\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Set a custom attribute on this assembly using a specified custom attribute blob.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [ComVisible(true)]\n\n      public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)\n    content.vb: >-\n      <SecurityCritical>\n\n      <ComVisible(True)>\n\n      Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: \"\\n<p>A byte blob representing the attributes. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>con</em> is not a <strong>RuntimeConstructorInfo</strong> object. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())\n  name.vb: SetCustomAttribute(ConstructorInfo, Byte())\n  nameWithType: AssemblyBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType.vb: AssemblyBuilder.SetCustomAttribute(ConstructorInfo, Byte())\n- uid: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  fullName: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilder.cs\n    startLine: 1650\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Set a custom attribute on this assembly using a custom attribute builder.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetCustomAttribute(CustomAttributeBuilder customBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: \"\\n<p>An instance of a helper class to define the custom attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AssemblyBuilder.SetCustomAttribute(CustomAttributeBuilder)\n- uid: System.Reflection.Emit.AssemblyBuilder.DefinedTypes\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.DefinedTypes\n  id: DefinedTypes\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefinedTypes\n  fullName: System.Reflection.Emit.AssemblyBuilder.DefinedTypes\n  type: Property\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DefinedTypes\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 105\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override IEnumerable<TypeInfo> DefinedTypes { get; }\n    content.vb: Public Overrides ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n  overridden: System.Reflection.Assembly.DefinedTypes\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: AssemblyBuilder.DefinedTypes\n- uid: System.Reflection.Emit.AssemblyBuilder.Modules\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.Modules\n  id: Modules\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  - vb\n  name: Modules\n  fullName: System.Reflection.Emit.AssemblyBuilder.Modules\n  type: Property\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Modules\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 107\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override IEnumerable<Module> Modules { get; }\n    content.vb: Public Overrides ReadOnly Property Modules As IEnumerable(Of  Module)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Module}\n  overridden: System.Reflection.Assembly.Modules\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: AssemblyBuilder.Modules\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  fullName: System.Reflection.Assembly\n  nameWithType: Assembly\n  commentId: T:System.Reflection.Assembly\n- uid: System.Runtime.InteropServices._Assembly\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Assembly\n  fullName: System.Runtime.InteropServices._Assembly\n  nameWithType: _Assembly\n  commentId: T:System.Runtime.InteropServices._Assembly\n- uid: System.Security.IEvidenceFactory\n  parent: System.Security\n  isExternal: true\n  name: IEvidenceFactory\n  fullName: System.Security.IEvidenceFactory\n  nameWithType: IEvidenceFactory\n  commentId: T:System.Security.IEvidenceFactory\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  commentId: T:System.Reflection.ICustomAttributeProvider\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: CreateQualifiedName(String, String)\n  fullName: System.Reflection.Assembly.CreateQualifiedName(System.String, System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n    name: CreateQualifiedName\n    fullName: System.Reflection.Assembly.CreateQualifiedName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n    name: CreateQualifiedName\n    fullName: System.Reflection.Assembly.CreateQualifiedName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.CreateQualifiedName(String, String)\n  commentId: M:System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n- uid: System.Reflection.Assembly.GetAssembly(System.Type)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetAssembly(Type)\n  fullName: System.Reflection.Assembly.GetAssembly(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetAssembly(System.Type)\n    name: GetAssembly\n    fullName: System.Reflection.Assembly.GetAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetAssembly(System.Type)\n    name: GetAssembly\n    fullName: System.Reflection.Assembly.GetAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetAssembly(Type)\n  commentId: M:System.Reflection.Assembly.GetAssembly(System.Type)\n- uid: System.Reflection.Assembly.LoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadFrom(String)\n  fullName: System.Reflection.Assembly.LoadFrom(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadFrom(System.String)\n    name: LoadFrom\n    fullName: System.Reflection.Assembly.LoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadFrom(System.String)\n    name: LoadFrom\n    fullName: System.Reflection.Assembly.LoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadFrom(String)\n  commentId: M:System.Reflection.Assembly.LoadFrom(System.String)\n- uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: ReflectionOnlyLoadFrom(String)\n  fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n    name: ReflectionOnlyLoadFrom\n    fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n    name: ReflectionOnlyLoadFrom\n    fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.ReflectionOnlyLoadFrom(String)\n  commentId: M:System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadFrom(String, Evidence)\n  fullName: System.Reflection.Assembly.LoadFrom(System.String, System.Security.Policy.Evidence)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n    name: LoadFrom\n    fullName: System.Reflection.Assembly.LoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n    name: LoadFrom\n    fullName: System.Reflection.Assembly.LoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadFrom(String, Evidence)\n  commentId: M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)\n  fullName: System.Reflection.Assembly.LoadFrom(System.String, System.Security.Policy.Evidence, System.Byte[], System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  fullname.vb: System.Reflection.Assembly.LoadFrom(System.String, System.Security.Policy.Evidence, System.Byte(), System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  name.vb: LoadFrom(String, Evidence, Byte(), AssemblyHashAlgorithm)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n    name: LoadFrom\n    fullName: System.Reflection.Assembly.LoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n    name: AssemblyHashAlgorithm\n    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n    name: LoadFrom\n    fullName: System.Reflection.Assembly.LoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n    name: AssemblyHashAlgorithm\n    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)\n  nameWithType.vb: Assembly.LoadFrom(String, Evidence, Byte(), AssemblyHashAlgorithm)\n  commentId: M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadFrom(String, Byte[], AssemblyHashAlgorithm)\n  fullName: System.Reflection.Assembly.LoadFrom(System.String, System.Byte[], System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  fullname.vb: System.Reflection.Assembly.LoadFrom(System.String, System.Byte(), System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  name.vb: LoadFrom(String, Byte(), AssemblyHashAlgorithm)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n    name: LoadFrom\n    fullName: System.Reflection.Assembly.LoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n    name: AssemblyHashAlgorithm\n    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n    name: LoadFrom\n    fullName: System.Reflection.Assembly.LoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n    name: AssemblyHashAlgorithm\n    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadFrom(String, Byte[], AssemblyHashAlgorithm)\n  nameWithType.vb: Assembly.LoadFrom(String, Byte(), AssemblyHashAlgorithm)\n  commentId: M:System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n- uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: UnsafeLoadFrom(String)\n  fullName: System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n    name: UnsafeLoadFrom\n    fullName: System.Reflection.Assembly.UnsafeLoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n    name: UnsafeLoadFrom\n    fullName: System.Reflection.Assembly.UnsafeLoadFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.UnsafeLoadFrom(String)\n  commentId: M:System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n- uid: System.Reflection.Assembly.Load(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Load(String)\n  fullName: System.Reflection.Assembly.Load(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.Load(System.String)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.Load(System.String)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.Load(String)\n  commentId: M:System.Reflection.Assembly.Load(System.String)\n- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: ReflectionOnlyLoad(String)\n  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n    name: ReflectionOnlyLoad\n    fullName: System.Reflection.Assembly.ReflectionOnlyLoad\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n    name: ReflectionOnlyLoad\n    fullName: System.Reflection.Assembly.ReflectionOnlyLoad\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.ReflectionOnlyLoad(String)\n  commentId: M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n- uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Load(String, Evidence)\n  fullName: System.Reflection.Assembly.Load(System.String, System.Security.Policy.Evidence)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.Load(String, Evidence)\n  commentId: M:System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Load(AssemblyName)\n  fullName: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.Load(AssemblyName)\n  commentId: M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Load(AssemblyName, Evidence)\n  fullName: System.Reflection.Assembly.Load(System.Reflection.AssemblyName, System.Security.Policy.Evidence)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.Load(AssemblyName, Evidence)\n  commentId: M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n- uid: System.Reflection.Assembly.LoadWithPartialName(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadWithPartialName(String)\n  fullName: System.Reflection.Assembly.LoadWithPartialName(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String)\n    name: LoadWithPartialName\n    fullName: System.Reflection.Assembly.LoadWithPartialName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String)\n    name: LoadWithPartialName\n    fullName: System.Reflection.Assembly.LoadWithPartialName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadWithPartialName(String)\n  commentId: M:System.Reflection.Assembly.LoadWithPartialName(System.String)\n- uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadWithPartialName(String, Evidence)\n  fullName: System.Reflection.Assembly.LoadWithPartialName(System.String, System.Security.Policy.Evidence)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n    name: LoadWithPartialName\n    fullName: System.Reflection.Assembly.LoadWithPartialName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n    name: LoadWithPartialName\n    fullName: System.Reflection.Assembly.LoadWithPartialName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadWithPartialName(String, Evidence)\n  commentId: M:System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n- uid: System.Reflection.Assembly.Load(System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Load(Byte[])\n  fullName: System.Reflection.Assembly.Load(System.Byte[])\n  fullname.vb: System.Reflection.Assembly.Load(System.Byte())\n  name.vb: Load(Byte())\n  spec.csharp:\n  - uid: System.Reflection.Assembly.Load(System.Byte[])\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.Load(System.Byte[])\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Assembly.Load(Byte[])\n  nameWithType.vb: Assembly.Load(Byte())\n  commentId: M:System.Reflection.Assembly.Load(System.Byte[])\n- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: ReflectionOnlyLoad(Byte[])\n  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n  fullname.vb: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte())\n  name.vb: ReflectionOnlyLoad(Byte())\n  spec.csharp:\n  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n    name: ReflectionOnlyLoad\n    fullName: System.Reflection.Assembly.ReflectionOnlyLoad\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n    name: ReflectionOnlyLoad\n    fullName: System.Reflection.Assembly.ReflectionOnlyLoad\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Assembly.ReflectionOnlyLoad(Byte[])\n  nameWithType.vb: Assembly.ReflectionOnlyLoad(Byte())\n  commentId: M:System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Load(Byte[], Byte[])\n  fullName: System.Reflection.Assembly.Load(System.Byte[], System.Byte[])\n  fullname.vb: System.Reflection.Assembly.Load(System.Byte(), System.Byte())\n  name.vb: Load(Byte(), Byte())\n  spec.csharp:\n  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Assembly.Load(Byte[], Byte[])\n  nameWithType.vb: Assembly.Load(Byte(), Byte())\n  commentId: M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Load(Byte[], Byte[], SecurityContextSource)\n  fullName: System.Reflection.Assembly.Load(System.Byte[], System.Byte[], System.Security.SecurityContextSource)\n  fullname.vb: System.Reflection.Assembly.Load(System.Byte(), System.Byte(), System.Security.SecurityContextSource)\n  name.vb: Load(Byte(), Byte(), SecurityContextSource)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.SecurityContextSource\n    name: SecurityContextSource\n    fullName: System.Security.SecurityContextSource\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.SecurityContextSource\n    name: SecurityContextSource\n    fullName: System.Security.SecurityContextSource\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.Load(Byte[], Byte[], SecurityContextSource)\n  nameWithType.vb: Assembly.Load(Byte(), Byte(), SecurityContextSource)\n  commentId: M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Load(Byte[], Byte[], Evidence)\n  fullName: System.Reflection.Assembly.Load(System.Byte[], System.Byte[], System.Security.Policy.Evidence)\n  fullname.vb: System.Reflection.Assembly.Load(System.Byte(), System.Byte(), System.Security.Policy.Evidence)\n  name.vb: Load(Byte(), Byte(), Evidence)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n    name: Load\n    fullName: System.Reflection.Assembly.Load\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.Load(Byte[], Byte[], Evidence)\n  nameWithType.vb: Assembly.Load(Byte(), Byte(), Evidence)\n  commentId: M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n- uid: System.Reflection.Assembly.LoadFile(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadFile(String)\n  fullName: System.Reflection.Assembly.LoadFile(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadFile(System.String)\n    name: LoadFile\n    fullName: System.Reflection.Assembly.LoadFile\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadFile(System.String)\n    name: LoadFile\n    fullName: System.Reflection.Assembly.LoadFile\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadFile(String)\n  commentId: M:System.Reflection.Assembly.LoadFile(System.String)\n- uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadFile(String, Evidence)\n  fullName: System.Reflection.Assembly.LoadFile(System.String, System.Security.Policy.Evidence)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n    name: LoadFile\n    fullName: System.Reflection.Assembly.LoadFile\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n    name: LoadFile\n    fullName: System.Reflection.Assembly.LoadFile\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.Policy.Evidence\n    name: Evidence\n    fullName: System.Security.Policy.Evidence\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadFile(String, Evidence)\n  commentId: M:System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n- uid: System.Reflection.Assembly.GetExecutingAssembly\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetExecutingAssembly()\n  fullName: System.Reflection.Assembly.GetExecutingAssembly()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetExecutingAssembly\n    name: GetExecutingAssembly\n    fullName: System.Reflection.Assembly.GetExecutingAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetExecutingAssembly\n    name: GetExecutingAssembly\n    fullName: System.Reflection.Assembly.GetExecutingAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetExecutingAssembly()\n  commentId: M:System.Reflection.Assembly.GetExecutingAssembly\n- uid: System.Reflection.Assembly.GetCallingAssembly\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetCallingAssembly()\n  fullName: System.Reflection.Assembly.GetCallingAssembly()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetCallingAssembly\n    name: GetCallingAssembly\n    fullName: System.Reflection.Assembly.GetCallingAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetCallingAssembly\n    name: GetCallingAssembly\n    fullName: System.Reflection.Assembly.GetCallingAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetCallingAssembly()\n  commentId: M:System.Reflection.Assembly.GetCallingAssembly\n- uid: System.Reflection.Assembly.GetEntryAssembly\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetEntryAssembly()\n  fullName: System.Reflection.Assembly.GetEntryAssembly()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetEntryAssembly\n    name: GetEntryAssembly\n    fullName: System.Reflection.Assembly.GetEntryAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetEntryAssembly\n    name: GetEntryAssembly\n    fullName: System.Reflection.Assembly.GetEntryAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetEntryAssembly()\n  commentId: M:System.Reflection.Assembly.GetEntryAssembly\n- uid: System.Reflection.Assembly.GetName\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetName()\n  fullName: System.Reflection.Assembly.GetName()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetName\n    name: GetName\n    fullName: System.Reflection.Assembly.GetName\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetName\n    name: GetName\n    fullName: System.Reflection.Assembly.GetName\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetName()\n  commentId: M:System.Reflection.Assembly.GetName\n- uid: System.Reflection.Assembly.GetName(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetName(Boolean)\n  fullName: System.Reflection.Assembly.GetName(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetName(System.Boolean)\n    name: GetName\n    fullName: System.Reflection.Assembly.GetName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetName(System.Boolean)\n    name: GetName\n    fullName: System.Reflection.Assembly.GetName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetName(Boolean)\n  commentId: M:System.Reflection.Assembly.GetName(System.Boolean)\n- uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: _Assembly.GetType()\n  fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType()\n  name.vb: System.Runtime.InteropServices._Assembly.GetType()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n    name: _Assembly.GetType\n    fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n    name: System.Runtime.InteropServices._Assembly.GetType\n    fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly._Assembly.GetType()\n  nameWithType.vb: Assembly.System.Runtime.InteropServices._Assembly.GetType()\n  commentId: M:System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n- uid: System.Reflection.Assembly.GetType(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetType(String)\n  fullName: System.Reflection.Assembly.GetType(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetType(System.String)\n    name: GetType\n    fullName: System.Reflection.Assembly.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetType(System.String)\n    name: GetType\n    fullName: System.Reflection.Assembly.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetType(String)\n  commentId: M:System.Reflection.Assembly.GetType(System.String)\n- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetType(String, Boolean)\n  fullName: System.Reflection.Assembly.GetType(System.String, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)\n    name: GetType\n    fullName: System.Reflection.Assembly.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)\n    name: GetType\n    fullName: System.Reflection.Assembly.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetType(String, Boolean)\n  commentId: M:System.Reflection.Assembly.GetType(System.String,System.Boolean)\n- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetType(String, Boolean, Boolean)\n  fullName: System.Reflection.Assembly.GetType(System.String, System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)\n    name: GetType\n    fullName: System.Reflection.Assembly.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)\n    name: GetType\n    fullName: System.Reflection.Assembly.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetType(String, Boolean, Boolean)\n  commentId: M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)\n- uid: System.Reflection.Assembly.GetExportedTypes\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetExportedTypes()\n  fullName: System.Reflection.Assembly.GetExportedTypes()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetExportedTypes\n    name: GetExportedTypes\n    fullName: System.Reflection.Assembly.GetExportedTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetExportedTypes\n    name: GetExportedTypes\n    fullName: System.Reflection.Assembly.GetExportedTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetExportedTypes()\n  commentId: M:System.Reflection.Assembly.GetExportedTypes\n- uid: System.Reflection.Assembly.GetTypes\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetTypes()\n  fullName: System.Reflection.Assembly.GetTypes()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetTypes\n    name: GetTypes\n    fullName: System.Reflection.Assembly.GetTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetTypes\n    name: GetTypes\n    fullName: System.Reflection.Assembly.GetTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetTypes()\n  commentId: M:System.Reflection.Assembly.GetTypes\n- uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetManifestResourceStream(Type, String)\n  fullName: System.Reflection.Assembly.GetManifestResourceStream(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)\n    name: GetManifestResourceStream\n    fullName: System.Reflection.Assembly.GetManifestResourceStream\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)\n    name: GetManifestResourceStream\n    fullName: System.Reflection.Assembly.GetManifestResourceStream\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetManifestResourceStream(Type, String)\n  commentId: M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)\n- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetSatelliteAssembly(CultureInfo)\n  fullName: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\n    name: GetSatelliteAssembly\n    fullName: System.Reflection.Assembly.GetSatelliteAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\n    name: GetSatelliteAssembly\n    fullName: System.Reflection.Assembly.GetSatelliteAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo)\n  commentId: M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\n- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetSatelliteAssembly(CultureInfo, Version)\n  fullName: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo, System.Version)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n    name: GetSatelliteAssembly\n    fullName: System.Reflection.Assembly.GetSatelliteAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Version\n    name: Version\n    fullName: System.Version\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n    name: GetSatelliteAssembly\n    fullName: System.Reflection.Assembly.GetSatelliteAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Version\n    name: Version\n    fullName: System.Version\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo, Version)\n  commentId: M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n- uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Reflection.Assembly.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Reflection.Assembly.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetCustomAttributes(Boolean)\n  fullName: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.Assembly.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.Assembly.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\n- uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.Assembly.GetCustomAttributes(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.Assembly.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.Assembly.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)\n- uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: IsDefined(Type, Boolean)\n  fullName: System.Reflection.Assembly.IsDefined(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.Assembly.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.Assembly.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)\n- uid: System.Reflection.Assembly.GetCustomAttributesData\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetCustomAttributesData()\n  fullName: System.Reflection.Assembly.GetCustomAttributesData()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.Assembly.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.Assembly.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetCustomAttributesData()\n  commentId: M:System.Reflection.Assembly.GetCustomAttributesData\n- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadModule(String, Byte[])\n  fullName: System.Reflection.Assembly.LoadModule(System.String, System.Byte[])\n  fullname.vb: System.Reflection.Assembly.LoadModule(System.String, System.Byte())\n  name.vb: LoadModule(String, Byte())\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n    name: LoadModule\n    fullName: System.Reflection.Assembly.LoadModule\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n    name: LoadModule\n    fullName: System.Reflection.Assembly.LoadModule\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadModule(String, Byte[])\n  nameWithType.vb: Assembly.LoadModule(String, Byte())\n  commentId: M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: LoadModule(String, Byte[], Byte[])\n  fullName: System.Reflection.Assembly.LoadModule(System.String, System.Byte[], System.Byte[])\n  fullname.vb: System.Reflection.Assembly.LoadModule(System.String, System.Byte(), System.Byte())\n  name.vb: LoadModule(String, Byte(), Byte())\n  spec.csharp:\n  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n    name: LoadModule\n    fullName: System.Reflection.Assembly.LoadModule\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n    name: LoadModule\n    fullName: System.Reflection.Assembly.LoadModule\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Assembly.LoadModule(String, Byte[], Byte[])\n  nameWithType.vb: Assembly.LoadModule(String, Byte(), Byte())\n  commentId: M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n- uid: System.Reflection.Assembly.CreateInstance(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: CreateInstance(String)\n  fullName: System.Reflection.Assembly.CreateInstance(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.CreateInstance(System.String)\n    name: CreateInstance\n    fullName: System.Reflection.Assembly.CreateInstance\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.CreateInstance(System.String)\n    name: CreateInstance\n    fullName: System.Reflection.Assembly.CreateInstance\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.CreateInstance(String)\n  commentId: M:System.Reflection.Assembly.CreateInstance(System.String)\n- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: CreateInstance(String, Boolean)\n  fullName: System.Reflection.Assembly.CreateInstance(System.String, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n    name: CreateInstance\n    fullName: System.Reflection.Assembly.CreateInstance\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n    name: CreateInstance\n    fullName: System.Reflection.Assembly.CreateInstance\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.CreateInstance(String, Boolean)\n  commentId: M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])\n  fullName: System.Reflection.Assembly.CreateInstance(System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])\n  fullname.vb: System.Reflection.Assembly.CreateInstance(System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object())\n  name.vb: CreateInstance(String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object())\n  spec.csharp:\n  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n    name: CreateInstance\n    fullName: System.Reflection.Assembly.CreateInstance\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n    name: CreateInstance\n    fullName: System.Reflection.Assembly.CreateInstance\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Assembly.CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])\n  nameWithType.vb: Assembly.CreateInstance(String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object())\n  commentId: M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n- uid: System.Reflection.Assembly.GetLoadedModules\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetLoadedModules()\n  fullName: System.Reflection.Assembly.GetLoadedModules()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetLoadedModules\n    name: GetLoadedModules\n    fullName: System.Reflection.Assembly.GetLoadedModules\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetLoadedModules\n    name: GetLoadedModules\n    fullName: System.Reflection.Assembly.GetLoadedModules\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetLoadedModules()\n  commentId: M:System.Reflection.Assembly.GetLoadedModules\n- uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetLoadedModules(Boolean)\n  fullName: System.Reflection.Assembly.GetLoadedModules(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)\n    name: GetLoadedModules\n    fullName: System.Reflection.Assembly.GetLoadedModules\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)\n    name: GetLoadedModules\n    fullName: System.Reflection.Assembly.GetLoadedModules\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetLoadedModules(Boolean)\n  commentId: M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)\n- uid: System.Reflection.Assembly.GetModules\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetModules()\n  fullName: System.Reflection.Assembly.GetModules()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetModules\n    name: GetModules\n    fullName: System.Reflection.Assembly.GetModules\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetModules\n    name: GetModules\n    fullName: System.Reflection.Assembly.GetModules\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetModules()\n  commentId: M:System.Reflection.Assembly.GetModules\n- uid: System.Reflection.Assembly.GetModules(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetModules(Boolean)\n  fullName: System.Reflection.Assembly.GetModules(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetModules(System.Boolean)\n    name: GetModules\n    fullName: System.Reflection.Assembly.GetModules\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetModules(System.Boolean)\n    name: GetModules\n    fullName: System.Reflection.Assembly.GetModules\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetModules(Boolean)\n  commentId: M:System.Reflection.Assembly.GetModules(System.Boolean)\n- uid: System.Reflection.Assembly.GetModule(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetModule(String)\n  fullName: System.Reflection.Assembly.GetModule(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetModule(System.String)\n    name: GetModule\n    fullName: System.Reflection.Assembly.GetModule\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetModule(System.String)\n    name: GetModule\n    fullName: System.Reflection.Assembly.GetModule\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetModule(String)\n  commentId: M:System.Reflection.Assembly.GetModule(System.String)\n- uid: System.Reflection.Assembly.GetFile(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetFile(String)\n  fullName: System.Reflection.Assembly.GetFile(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetFile(System.String)\n    name: GetFile\n    fullName: System.Reflection.Assembly.GetFile\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetFile(System.String)\n    name: GetFile\n    fullName: System.Reflection.Assembly.GetFile\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetFile(String)\n  commentId: M:System.Reflection.Assembly.GetFile(System.String)\n- uid: System.Reflection.Assembly.GetFiles\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetFiles()\n  fullName: System.Reflection.Assembly.GetFiles()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetFiles\n    name: GetFiles\n    fullName: System.Reflection.Assembly.GetFiles\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetFiles\n    name: GetFiles\n    fullName: System.Reflection.Assembly.GetFiles\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetFiles()\n  commentId: M:System.Reflection.Assembly.GetFiles\n- uid: System.Reflection.Assembly.GetFiles(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetFiles(Boolean)\n  fullName: System.Reflection.Assembly.GetFiles(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetFiles(System.Boolean)\n    name: GetFiles\n    fullName: System.Reflection.Assembly.GetFiles\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetFiles(System.Boolean)\n    name: GetFiles\n    fullName: System.Reflection.Assembly.GetFiles\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetFiles(Boolean)\n  commentId: M:System.Reflection.Assembly.GetFiles(System.Boolean)\n- uid: System.Reflection.Assembly.GetReferencedAssemblies\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetReferencedAssemblies()\n  fullName: System.Reflection.Assembly.GetReferencedAssemblies()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetReferencedAssemblies\n    name: GetReferencedAssemblies\n    fullName: System.Reflection.Assembly.GetReferencedAssemblies\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetReferencedAssemblies\n    name: GetReferencedAssemblies\n    fullName: System.Reflection.Assembly.GetReferencedAssemblies\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetReferencedAssemblies()\n  commentId: M:System.Reflection.Assembly.GetReferencedAssemblies\n- uid: System.Reflection.Assembly.ToString\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: ToString()\n  fullName: System.Reflection.Assembly.ToString()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.ToString\n    name: ToString\n    fullName: System.Reflection.Assembly.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.ToString\n    name: ToString\n    fullName: System.Reflection.Assembly.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.ToString()\n  commentId: M:System.Reflection.Assembly.ToString\n- uid: System.Reflection.Assembly.CodeBase\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: CodeBase\n  fullName: System.Reflection.Assembly.CodeBase\n  nameWithType: Assembly.CodeBase\n  commentId: P:System.Reflection.Assembly.CodeBase\n- uid: System.Reflection.Assembly.EscapedCodeBase\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: EscapedCodeBase\n  fullName: System.Reflection.Assembly.EscapedCodeBase\n  nameWithType: Assembly.EscapedCodeBase\n  commentId: P:System.Reflection.Assembly.EscapedCodeBase\n- uid: System.Reflection.Assembly.EntryPoint\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: EntryPoint\n  fullName: System.Reflection.Assembly.EntryPoint\n  nameWithType: Assembly.EntryPoint\n  commentId: P:System.Reflection.Assembly.EntryPoint\n- uid: System.Reflection.Assembly.ExportedTypes\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: ExportedTypes\n  fullName: System.Reflection.Assembly.ExportedTypes\n  nameWithType: Assembly.ExportedTypes\n  commentId: P:System.Reflection.Assembly.ExportedTypes\n- uid: System.Reflection.Assembly.Evidence\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Evidence\n  fullName: System.Reflection.Assembly.Evidence\n  nameWithType: Assembly.Evidence\n  commentId: P:System.Reflection.Assembly.Evidence\n- uid: System.Reflection.Assembly.PermissionSet\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: PermissionSet\n  fullName: System.Reflection.Assembly.PermissionSet\n  nameWithType: Assembly.PermissionSet\n  commentId: P:System.Reflection.Assembly.PermissionSet\n- uid: System.Reflection.Assembly.IsFullyTrusted\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: IsFullyTrusted\n  fullName: System.Reflection.Assembly.IsFullyTrusted\n  nameWithType: Assembly.IsFullyTrusted\n  commentId: P:System.Reflection.Assembly.IsFullyTrusted\n- uid: System.Reflection.Assembly.SecurityRuleSet\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: SecurityRuleSet\n  fullName: System.Reflection.Assembly.SecurityRuleSet\n  nameWithType: Assembly.SecurityRuleSet\n  commentId: P:System.Reflection.Assembly.SecurityRuleSet\n- uid: System.Reflection.Assembly.CustomAttributes\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: CustomAttributes\n  fullName: System.Reflection.Assembly.CustomAttributes\n  nameWithType: Assembly.CustomAttributes\n  commentId: P:System.Reflection.Assembly.CustomAttributes\n- uid: System.Reflection.Assembly.ReflectionOnly\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: ReflectionOnly\n  fullName: System.Reflection.Assembly.ReflectionOnly\n  nameWithType: Assembly.ReflectionOnly\n  commentId: P:System.Reflection.Assembly.ReflectionOnly\n- uid: System.Reflection.Assembly.Location\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Location\n  fullName: System.Reflection.Assembly.Location\n  nameWithType: Assembly.Location\n  commentId: P:System.Reflection.Assembly.Location\n- uid: System.Reflection.Assembly.ImageRuntimeVersion\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: ImageRuntimeVersion\n  fullName: System.Reflection.Assembly.ImageRuntimeVersion\n  nameWithType: Assembly.ImageRuntimeVersion\n  commentId: P:System.Reflection.Assembly.ImageRuntimeVersion\n- uid: System.Reflection.Assembly.GlobalAssemblyCache\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GlobalAssemblyCache\n  fullName: System.Reflection.Assembly.GlobalAssemblyCache\n  nameWithType: Assembly.GlobalAssemblyCache\n  commentId: P:System.Reflection.Assembly.GlobalAssemblyCache\n- uid: System.Reflection.Assembly.HostContext\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: HostContext\n  fullName: System.Reflection.Assembly.HostContext\n  nameWithType: Assembly.HostContext\n  commentId: P:System.Reflection.Assembly.HostContext\n- uid: System.Reflection.Assembly.ModuleResolve\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: ModuleResolve\n  fullName: System.Reflection.Assembly.ModuleResolve\n  nameWithType: Assembly.ModuleResolve\n  commentId: E:System.Reflection.Assembly.ModuleResolve\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Reflection.Assembly.System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Byte*@,System.Int32@)\n  parent: System.Reflection.Metadata.AssemblyExtensions\n  definition: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)\n  name: TryGetRawMetadata(Byte*, Int32)\n  fullName: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Byte*, System.Int32)\n  spec.csharp:\n  - uid: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Byte*@,System.Int32@)\n    name: TryGetRawMetadata\n    fullName: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '*'\n    fullName: '*'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Byte*@,System.Int32@)\n    name: TryGetRawMetadata\n    fullName: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '*'\n    fullName: '*'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: AssemblyExtensions.TryGetRawMetadata(Byte*, Int32)\n  commentId: M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)\n- uid: System.Reflection.Assembly.System.Reflection.AssemblyExtensions.GetExportedTypes\n  parent: System.Reflection.AssemblyExtensions\n  definition: System.Reflection.AssemblyExtensions.GetExportedTypes(System.Reflection.Assembly)\n  name: GetExportedTypes()\n  fullName: System.Reflection.AssemblyExtensions.GetExportedTypes()\n  spec.csharp:\n  - uid: System.Reflection.AssemblyExtensions.GetExportedTypes\n    name: GetExportedTypes\n    fullName: System.Reflection.AssemblyExtensions.GetExportedTypes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.AssemblyExtensions.GetExportedTypes\n    name: GetExportedTypes\n    fullName: System.Reflection.AssemblyExtensions.GetExportedTypes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: AssemblyExtensions.GetExportedTypes()\n  commentId: M:System.Reflection.AssemblyExtensions.GetExportedTypes(System.Reflection.Assembly)\n- uid: System.Reflection.Assembly.System.Reflection.AssemblyExtensions.GetModules\n  parent: System.Reflection.AssemblyExtensions\n  definition: System.Reflection.AssemblyExtensions.GetModules(System.Reflection.Assembly)\n  name: GetModules()\n  fullName: System.Reflection.AssemblyExtensions.GetModules()\n  spec.csharp:\n  - uid: System.Reflection.AssemblyExtensions.GetModules\n    name: GetModules\n    fullName: System.Reflection.AssemblyExtensions.GetModules\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.AssemblyExtensions.GetModules\n    name: GetModules\n    fullName: System.Reflection.AssemblyExtensions.GetModules\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: AssemblyExtensions.GetModules()\n  commentId: M:System.Reflection.AssemblyExtensions.GetModules(System.Reflection.Assembly)\n- uid: System.Reflection.Assembly.System.Reflection.AssemblyExtensions.GetTypes\n  parent: System.Reflection.AssemblyExtensions\n  definition: System.Reflection.AssemblyExtensions.GetTypes(System.Reflection.Assembly)\n  name: GetTypes()\n  fullName: System.Reflection.AssemblyExtensions.GetTypes()\n  spec.csharp:\n  - uid: System.Reflection.AssemblyExtensions.GetTypes\n    name: GetTypes\n    fullName: System.Reflection.AssemblyExtensions.GetTypes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.AssemblyExtensions.GetTypes\n    name: GetTypes\n    fullName: System.Reflection.AssemblyExtensions.GetTypes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: AssemblyExtensions.GetTypes()\n  commentId: M:System.Reflection.AssemblyExtensions.GetTypes(System.Reflection.Assembly)\n- uid: System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  name: GetCustomAttribute(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n- uid: System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)\n  name: GetCustomAttribute<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  name.vb: GetCustomAttribute(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)\n- uid: System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)\n  name: GetCustomAttributes()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)\n- uid: System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  name: GetCustomAttributes(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n- uid: System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)\n  name: GetCustomAttributes<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  name.vb: GetCustomAttributes(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)\n- uid: System.Reflection.Assembly.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)\n  name: IsDefined(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Security\n  isExternal: false\n  name: System.Security\n  fullName: System.Security\n  nameWithType: System.Security\n  commentId: N:System.Security\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)\n  isExternal: true\n  name: TryGetRawMetadata(Assembly, Byte*, Int32)\n  fullName: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly, System.Byte*, System.Int32)\n  spec.csharp:\n  - uid: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)\n    name: TryGetRawMetadata\n    fullName: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '*'\n    fullName: '*'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)\n    name: TryGetRawMetadata\n    fullName: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '*'\n    fullName: '*'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: AssemblyExtensions.TryGetRawMetadata(Assembly, Byte*, Int32)\n  commentId: M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)\n- uid: System.Reflection.Metadata.AssemblyExtensions\n  parent: System.Reflection.Metadata\n  isExternal: false\n  name: AssemblyExtensions\n  fullName: System.Reflection.Metadata.AssemblyExtensions\n  nameWithType: AssemblyExtensions\n  commentId: T:System.Reflection.Metadata.AssemblyExtensions\n- uid: System.Reflection.AssemblyExtensions.GetExportedTypes(System.Reflection.Assembly)\n  isExternal: true\n  name: GetExportedTypes(Assembly)\n  fullName: System.Reflection.AssemblyExtensions.GetExportedTypes(System.Reflection.Assembly)\n  spec.csharp:\n  - uid: System.Reflection.AssemblyExtensions.GetExportedTypes(System.Reflection.Assembly)\n    name: GetExportedTypes\n    fullName: System.Reflection.AssemblyExtensions.GetExportedTypes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.AssemblyExtensions.GetExportedTypes(System.Reflection.Assembly)\n    name: GetExportedTypes\n    fullName: System.Reflection.AssemblyExtensions.GetExportedTypes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: AssemblyExtensions.GetExportedTypes(Assembly)\n  commentId: M:System.Reflection.AssemblyExtensions.GetExportedTypes(System.Reflection.Assembly)\n- uid: System.Reflection.AssemblyExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyExtensions\n  fullName: System.Reflection.AssemblyExtensions\n  nameWithType: AssemblyExtensions\n  commentId: T:System.Reflection.AssemblyExtensions\n- uid: System.Reflection.AssemblyExtensions.GetModules(System.Reflection.Assembly)\n  isExternal: true\n  name: GetModules(Assembly)\n  fullName: System.Reflection.AssemblyExtensions.GetModules(System.Reflection.Assembly)\n  spec.csharp:\n  - uid: System.Reflection.AssemblyExtensions.GetModules(System.Reflection.Assembly)\n    name: GetModules\n    fullName: System.Reflection.AssemblyExtensions.GetModules\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.AssemblyExtensions.GetModules(System.Reflection.Assembly)\n    name: GetModules\n    fullName: System.Reflection.AssemblyExtensions.GetModules\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: AssemblyExtensions.GetModules(Assembly)\n  commentId: M:System.Reflection.AssemblyExtensions.GetModules(System.Reflection.Assembly)\n- uid: System.Reflection.AssemblyExtensions.GetTypes(System.Reflection.Assembly)\n  isExternal: true\n  name: GetTypes(Assembly)\n  fullName: System.Reflection.AssemblyExtensions.GetTypes(System.Reflection.Assembly)\n  spec.csharp:\n  - uid: System.Reflection.AssemblyExtensions.GetTypes(System.Reflection.Assembly)\n    name: GetTypes\n    fullName: System.Reflection.AssemblyExtensions.GetTypes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.AssemblyExtensions.GetTypes(System.Reflection.Assembly)\n    name: GetTypes\n    fullName: System.Reflection.AssemblyExtensions.GetTypes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: AssemblyExtensions.GetTypes(Assembly)\n  commentId: M:System.Reflection.AssemblyExtensions.GetTypes(System.Reflection.Assembly)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  isExternal: true\n  name: GetCustomAttribute(Assembly, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Assembly, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: CustomAttributeExtensions\n  fullName: System.Reflection.CustomAttributeExtensions\n  nameWithType: CustomAttributeExtensions\n  commentId: T:System.Reflection.CustomAttributeExtensions\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)\n  isExternal: true\n  name: GetCustomAttribute<T>(Assembly)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.Assembly)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.Assembly)\n  name.vb: GetCustomAttribute(Of T)(Assembly)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Assembly)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(Assembly)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)\n  isExternal: true\n  name: GetCustomAttributes(Assembly)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  isExternal: true\n  name: GetCustomAttributes(Assembly, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)\n  isExternal: true\n  name: GetCustomAttributes<T>(Assembly)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.Assembly)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.Assembly)\n  name.vb: GetCustomAttributes(Of T)(Assembly)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Assembly)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(Assembly)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)\n  isExternal: true\n  name: IsDefined(Assembly, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Assembly, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)\n- uid: System.Reflection.Metadata\n  isExternal: false\n  name: System.Reflection.Metadata\n  fullName: System.Reflection.Metadata\n  nameWithType: System.Reflection.Metadata\n  commentId: N:System.Reflection.Metadata\n- uid: System.Reflection.Assembly.FullName\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: FullName\n  fullName: System.Reflection.Assembly.FullName\n  nameWithType: Assembly.FullName\n  commentId: P:System.Reflection.Assembly.FullName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Reflection.Assembly.IsDynamic\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: IsDynamic\n  fullName: System.Reflection.Assembly.IsDynamic\n  nameWithType: Assembly.IsDynamic\n  commentId: P:System.Reflection.Assembly.IsDynamic\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Reflection.Assembly.ManifestModule\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: ManifestModule\n  fullName: System.Reflection.Assembly.ManifestModule\n  nameWithType: Assembly.ManifestModule\n  commentId: P:System.Reflection.Assembly.ManifestModule\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.Module\n  nameWithType: Module\n  commentId: T:System.Reflection.Module\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  fullName: System.Reflection.AssemblyName\n  nameWithType: AssemblyName\n  commentId: T:System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  commentId: T:System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  commentId: T:System.Reflection.Emit.AssemblyBuilder\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<CustomAttributeBuilder>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Emit.CustomAttributeBuilder)\n  name.vb: IEnumerable(Of CustomAttributeBuilder)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.Emit.CustomAttributeBuilder\n    name: CustomAttributeBuilder\n    fullName: System.Reflection.Emit.CustomAttributeBuilder\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.Emit.CustomAttributeBuilder\n    name: CustomAttributeBuilder\n    fullName: System.Reflection.Emit.CustomAttributeBuilder\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<CustomAttributeBuilder>\n  nameWithType.vb: IEnumerable(Of CustomAttributeBuilder)\n  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Reflection.Emit.ModuleBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ModuleBuilder\n  fullName: System.Reflection.Emit.ModuleBuilder\n  nameWithType: ModuleBuilder\n  commentId: T:System.Reflection.Emit.ModuleBuilder\n- uid: System.Reflection.Assembly.Equals(System.Object)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Reflection.Assembly.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.Assembly.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.Assembly.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.Equals(Object)\n  commentId: M:System.Reflection.Assembly.Equals(System.Object)\n- uid: System.Reflection.Assembly.GetHashCode\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Reflection.Assembly.GetHashCode()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.Assembly.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.Assembly.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetHashCode()\n  commentId: M:System.Reflection.Assembly.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetManifestResourceInfo(String)\n  fullName: System.Reflection.Assembly.GetManifestResourceInfo(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)\n    name: GetManifestResourceInfo\n    fullName: System.Reflection.Assembly.GetManifestResourceInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)\n    name: GetManifestResourceInfo\n    fullName: System.Reflection.Assembly.GetManifestResourceInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetManifestResourceInfo(String)\n  commentId: M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)\n- uid: System.Reflection.ManifestResourceInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ManifestResourceInfo\n  fullName: System.Reflection.ManifestResourceInfo\n  nameWithType: ManifestResourceInfo\n  commentId: T:System.Reflection.ManifestResourceInfo\n- uid: System.Reflection.Assembly.GetManifestResourceNames\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetManifestResourceNames()\n  fullName: System.Reflection.Assembly.GetManifestResourceNames()\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetManifestResourceNames\n    name: GetManifestResourceNames\n    fullName: System.Reflection.Assembly.GetManifestResourceNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetManifestResourceNames\n    name: GetManifestResourceNames\n    fullName: System.Reflection.Assembly.GetManifestResourceNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetManifestResourceNames()\n  commentId: M:System.Reflection.Assembly.GetManifestResourceNames\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: GetManifestResourceStream(String)\n  fullName: System.Reflection.Assembly.GetManifestResourceStream(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)\n    name: GetManifestResourceStream\n    fullName: System.Reflection.Assembly.GetManifestResourceStream\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)\n    name: GetManifestResourceStream\n    fullName: System.Reflection.Assembly.GetManifestResourceStream\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Assembly.GetManifestResourceStream(String)\n  commentId: M:System.Reflection.Assembly.GetManifestResourceStream(System.String)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  nameWithType: Stream\n  commentId: T:System.IO.Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  nameWithType: ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  commentId: T:System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.Reflection.Assembly.DefinedTypes\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: DefinedTypes\n  fullName: System.Reflection.Assembly.DefinedTypes\n  nameWithType: Assembly.DefinedTypes\n  commentId: P:System.Reflection.Assembly.DefinedTypes\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<TypeInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.TypeInfo)\n  name.vb: IEnumerable(Of TypeInfo)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    fullName: System.Reflection.TypeInfo\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    fullName: System.Reflection.TypeInfo\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<TypeInfo>\n  nameWithType.vb: IEnumerable(Of TypeInfo)\n  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n- uid: System.Reflection.Assembly.Modules\n  parent: System.Reflection.Assembly\n  isExternal: true\n  name: Modules\n  fullName: System.Reflection.Assembly.Modules\n  nameWithType: Assembly.Modules\n  commentId: P:System.Reflection.Assembly.Modules\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Module}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Module>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Module>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Module)\n  name.vb: IEnumerable(Of Module)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<Module>\n  nameWithType.vb: IEnumerable(Of Module)\n  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.Module}\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.ExecutionEngineException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}