{"nodes":[{"pos":[485,493],"content":"STATDATA","needQuote":true,"nodes":[{"content":"STATDATA","pos":[0,8]}]},{"pos":[2150,2154],"content":"advf","needQuote":true,"nodes":[{"content":"advf","pos":[0,4]}]},{"pos":[3344,3351],"content":"advSink","needQuote":true,"nodes":[{"content":"advSink","pos":[0,7]}]},{"pos":[4550,4560],"content":"connection","needQuote":true,"nodes":[{"content":"connection","pos":[0,10]}]},{"pos":[5689,5698],"content":"formatetc","needQuote":true,"nodes":[{"content":"formatetc","pos":[0,9]}]},{"pos":[6938,6977],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[7241,7255],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7380,7386],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7435,7436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7486,7492],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7552,7553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7639,7645],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7694,7695],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7745,7751],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7811,7812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8015,8028],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8135,8146],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8200,8201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8228,8229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8305,8316],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8370,8371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8398,8399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8588,8598],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8699,8707],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8758,8759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8786,8787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8860,8868],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8919,8920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8947,8948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9151,9173],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9321,9327],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9394,9395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9445,9451],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9512,9513]},{"pos":[9568,9574],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9634,9635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9732,9738],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9805,9806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9856,9862],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9923,9924]},{"pos":[9979,9985],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10045,10046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10291,10322],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10488,10503],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10579,10580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10630,10636],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10697,10698]},{"pos":[10753,10759],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10819,10820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10926,10941],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11017,11018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11068,11074],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11135,11136]},{"pos":[11191,11197],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11257,11258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11484,11493],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11586,11593],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11661,11662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11689,11690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11759,11766],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11834,11835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11862,11863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12019,12028],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[12182,12188],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12309,12315],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12510,12514],"content":"ADVF","needQuote":true,"nodes":[{"content":"ADVF","pos":[0,4]}]},{"pos":[12790,12801],"content":"IAdviseSink","needQuote":true,"nodes":[{"content":"IAdviseSink","pos":[0,11]}]},{"pos":[13026,13031],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13242,13251],"content":"FORMATETC","needQuote":true,"nodes":[{"content":"FORMATETC","pos":[0,9]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.STATDATA\n  commentId: T:System.Runtime.InteropServices.ComTypes.STATDATA\n  id: STATDATA\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.STATDATA.advf\n  - System.Runtime.InteropServices.ComTypes.STATDATA.advSink\n  - System.Runtime.InteropServices.ComTypes.STATDATA.connection\n  - System.Runtime.InteropServices.ComTypes.STATDATA.formatetc\n  langs:\n  - csharp\n  - vb\n  name: STATDATA\n  fullName: System.Runtime.InteropServices.ComTypes.STATDATA\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: STATDATA\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1386\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Provides the managed definition of the <strong>STATDATA</strong> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct STATDATA\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure STATDATA\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: STATDATA\n- uid: System.Runtime.InteropServices.ComTypes.STATDATA.advf\n  commentId: F:System.Runtime.InteropServices.ComTypes.STATDATA.advf\n  id: advf\n  parent: System.Runtime.InteropServices.ComTypes.STATDATA\n  langs:\n  - csharp\n  - vb\n  name: advf\n  fullName: System.Runtime.InteropServices.ComTypes.STATDATA.advf\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: advf\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1390\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents the <xref href=\\\"System.Runtime.InteropServices.ComTypes.ADVF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration value that determines when the advisory sink is notified of changes in the data.</p>\\n\"\n  syntax:\n    content: public ADVF advf\n    content.vb: Public advf As ADVF\n    return:\n      type: System.Runtime.InteropServices.ComTypes.ADVF\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: STATDATA.advf\n- uid: System.Runtime.InteropServices.ComTypes.STATDATA.advSink\n  commentId: F:System.Runtime.InteropServices.ComTypes.STATDATA.advSink\n  id: advSink\n  parent: System.Runtime.InteropServices.ComTypes.STATDATA\n  langs:\n  - csharp\n  - vb\n  name: advSink\n  fullName: System.Runtime.InteropServices.ComTypes.STATDATA.advSink\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: advSink\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1391\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents the <xref href=\\\"System.Runtime.InteropServices.ComTypes.IAdviseSink\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface that will receive change notifications.</p>\\n\"\n  syntax:\n    content: public IAdviseSink advSink\n    content.vb: Public advSink As IAdviseSink\n    return:\n      type: System.Runtime.InteropServices.ComTypes.IAdviseSink\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: STATDATA.advSink\n- uid: System.Runtime.InteropServices.ComTypes.STATDATA.connection\n  commentId: F:System.Runtime.InteropServices.ComTypes.STATDATA.connection\n  id: connection\n  parent: System.Runtime.InteropServices.ComTypes.STATDATA\n  langs:\n  - csharp\n  - vb\n  name: connection\n  fullName: System.Runtime.InteropServices.ComTypes.STATDATA.connection\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: connection\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1392\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents the token that uniquely identifies the advisory connection. This token is returned by the method that sets up the advisory connection.</p>\\n\"\n  syntax:\n    content: public int connection\n    content.vb: Public connection As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: STATDATA.connection\n- uid: System.Runtime.InteropServices.ComTypes.STATDATA.formatetc\n  commentId: F:System.Runtime.InteropServices.ComTypes.STATDATA.formatetc\n  id: formatetc\n  parent: System.Runtime.InteropServices.ComTypes.STATDATA\n  langs:\n  - csharp\n  - vb\n  name: formatetc\n  fullName: System.Runtime.InteropServices.ComTypes.STATDATA.formatetc\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: formatetc\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1393\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents the <xref href=\\\"System.Runtime.InteropServices.ComTypes.FORMATETC\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure for the data of interest to the advise sink. The advise sink receives notification of changes to the data specified by this <xref href=\\\"System.Runtime.InteropServices.ComTypes.FORMATETC\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public FORMATETC formatetc\n    content.vb: Public formatetc As FORMATETC\n    return:\n      type: System.Runtime.InteropServices.ComTypes.FORMATETC\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: STATDATA.formatetc\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.Equals(System.Object)\n  nameWithType: ValueType.Equals(Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.GetHashCode\n  nameWithType: ValueType.GetHashCode()\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.ToString\n  nameWithType: ValueType.ToString()\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  commentId: T:System.ValueType\n  nameWithType: ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.InteropServices.ComTypes.ADVF\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: ADVF\n  fullName: System.Runtime.InteropServices.ComTypes.ADVF\n  commentId: T:System.Runtime.InteropServices.ComTypes.ADVF\n  nameWithType: ADVF\n- uid: System.Runtime.InteropServices.ComTypes.IAdviseSink\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IAdviseSink\n  fullName: System.Runtime.InteropServices.ComTypes.IAdviseSink\n  commentId: T:System.Runtime.InteropServices.ComTypes.IAdviseSink\n  nameWithType: IAdviseSink\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Runtime.InteropServices.ComTypes.FORMATETC\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: FORMATETC\n  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC\n  commentId: T:System.Runtime.InteropServices.ComTypes.FORMATETC\n  nameWithType: FORMATETC\n"}