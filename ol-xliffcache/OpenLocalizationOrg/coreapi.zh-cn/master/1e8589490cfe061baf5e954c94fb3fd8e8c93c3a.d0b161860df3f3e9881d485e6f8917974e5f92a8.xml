{"nodes":[{"pos":[361,372],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[2059,2072],"content":"IOException()","needQuote":true,"nodes":[{"content":"IOException()","pos":[0,13]}]},{"pos":[3087,3106],"content":"IOException(String)","needQuote":true,"nodes":[{"content":"IOException(String)","pos":[0,19]}]},{"pos":[4610,4640],"content":"IOException(String, Exception)","needQuote":true,"nodes":[{"content":"IOException(String, Exception)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[5523,5589],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[5590,5596],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[5672,5734],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[5735,5905],"source":" If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[5906,5912],"source":" </p>\\n"},{"pos":[6346,6372],"content":"IOException(String, Int32)","needQuote":true,"nodes":[{"content":"IOException(String, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;An integer identifying the error that has occurred.","pos":[7571,7627],"source":"\\n<p>An integer identifying the error that has occurred."},{"content":"&lt;/p&gt;\\n","pos":[7628,7634],"source":" </p>\\n"},{"pos":[7806,7815],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[7955,7961],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8109,8118],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[8290,8294],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[8485,8493],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[8695,8702],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[8908,8922],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[9142,9149],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[9347,9353],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[9552,9562],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[9779,9797],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[9914,9930],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[9989,9990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10017,10018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10099,10115],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[10174,10175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10202,10203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10402,10412],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10513,10521],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10572,10573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10600,10601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10674,10682],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10733,10734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10761,10762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10951,10965],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11084,11090],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11157,11158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11208,11214],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11274,11275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11358,11364],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11431,11432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11482,11488],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11548,11549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11763,11785],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[11933,11939],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12006,12007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12057,12063],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12124,12125]},{"pos":[12180,12186],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12246,12247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12344,12350],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12417,12418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12468,12474],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12535,12536]},{"pos":[12591,12597],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12657,12658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12903,12934],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13100,13115],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13191,13192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13242,13248],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13309,13310]},{"pos":[13365,13371],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13431,13432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13538,13553],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13629,13630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13680,13686],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13747,13748]},{"pos":[13803,13809],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13869,13870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14100,14113],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14214,14225],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14297,14298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14325,14326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14399,14410],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14482,14483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14510,14511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14686,14695],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[14788,14795],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14863,14864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14891,14892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14961,14968],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15036,15037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15064,15065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15240,15257],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15366,15381],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15457,15458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15485,15486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15563,15578],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15654,15655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15682,15683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15828,15834],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[15965,15971],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16115,16120],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.IO.IOException\n  commentId: T:System.IO.IOException\n  id: IOException\n  parent: System.IO\n  children:\n  - System.IO.IOException.#ctor\n  - System.IO.IOException.#ctor(System.String)\n  - System.IO.IOException.#ctor(System.String,System.Exception)\n  - System.IO.IOException.#ctor(System.String,System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: IOException\n  fullName: System.IO.IOException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/IOException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IOException\n    path: src/mscorlib/src/System/IO/IOException.cs\n    startLine: 20\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>The exception that is thrown when an I/O error occurs.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class IOException : SystemException, ISerializable, _Exception\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class IOException\n          Inherits SystemException\n          Implements ISerializable, _Exception\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: IOException\n- uid: System.IO.IOException.#ctor\n  commentId: M:System.IO.IOException.#ctor\n  id: '#ctor'\n  parent: System.IO.IOException\n  langs:\n  - csharp\n  - vb\n  name: IOException()\n  fullName: System.IO.IOException.IOException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/IOException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/IOException.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.IOException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with its message string set to the empty string (\\\"\\\"), its HRESULT set to COR_E_IO, and its inner exception set to a null reference.</p>\\n\"\n  syntax:\n    content: public IOException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: IOException.IOException()\n- uid: System.IO.IOException.#ctor(System.String)\n  commentId: M:System.IO.IOException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.IOException\n  langs:\n  - csharp\n  - vb\n  name: IOException(String)\n  fullName: System.IO.IOException.IOException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/IOException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/IOException.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.IOException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with its message string set to <em>message</em>, its HRESULT set to COR_E_IO, and its inner exception set to <strong>null</strong>.</p>\\n\"\n  syntax:\n    content: public IOException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that describes the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: IOException.IOException(String)\n- uid: System.IO.IOException.#ctor(System.String,System.Exception)\n  commentId: M:System.IO.IOException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.IO.IOException\n  langs:\n  - csharp\n  - vb\n  name: IOException(String, Exception)\n  fullName: System.IO.IOException.IOException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/IOException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/IOException.cs\n    startLine: 59\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.IOException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public IOException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: IOException.IOException(String, Exception)\n- uid: System.IO.IOException.#ctor(System.String,System.Int32)\n  commentId: M:System.IO.IOException.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.IO.IOException\n  langs:\n  - csharp\n  - vb\n  name: IOException(String, Int32)\n  fullName: System.IO.IOException.IOException(System.String, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/IOException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/IOException.cs\n    startLine: 45\n  assemblies:\n  - System.Runtime\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.IOException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with its message string set to <em>message</em> and its HRESULT user-defined.</p>\\n\"\n  syntax:\n    content: public IOException(string message, int hresult)\n    content.vb: Public Sub New(message As String, hresult As Integer)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that describes the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\\n\"\n    - id: hresult\n      type: System.Int32\n      description: \"\\n<p>An integer identifying the error that has occurred. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: IOException.IOException(String, Int32)\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}