{"nodes":[{"pos":[1082,1097],"content":"X509ChainPolicy","needQuote":true,"nodes":[{"content":"X509ChainPolicy","pos":[0,15]}]},{"pos":[2676,2693],"content":"X509ChainPolicy()","needQuote":true,"nodes":[{"content":"X509ChainPolicy()","pos":[0,17]}]},{"pos":[3970,3987],"content":"ApplicationPolicy","needQuote":true,"nodes":[{"content":"ApplicationPolicy","pos":[0,17]}]},{"pos":[5572,5589],"content":"CertificatePolicy","needQuote":true,"nodes":[{"content":"CertificatePolicy","pos":[0,17]}]},{"pos":[7122,7132],"content":"ExtraStore","needQuote":true,"nodes":[{"content":"ExtraStore","pos":[0,10]}]},{"pos":[8750,8764],"content":"RevocationFlag","needQuote":true,"nodes":[{"content":"RevocationFlag","pos":[0,14]}]},{"pos":[10562,10576],"content":"RevocationMode","needQuote":true,"nodes":[{"content":"RevocationMode","pos":[0,14]}]},{"pos":[12400,12419],"content":"UrlRetrievalTimeout","needQuote":true,"nodes":[{"content":"UrlRetrievalTimeout","pos":[0,19]}]},{"pos":[13922,13939],"content":"VerificationFlags","needQuote":true,"nodes":[{"content":"VerificationFlags","pos":[0,17]}]},{"pos":[15947,15963],"content":"VerificationTime","needQuote":true,"nodes":[{"content":"VerificationTime","pos":[0,16]}]},{"pos":[17355,17362],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[18393,18438],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[18686,18692],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18852,18862],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[18957,18965],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[19034,19035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19062,19063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19133,19141],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[19210,19211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19238,19239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19422,19436],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[19555,19561],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19628,19629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19679,19685],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19745,19746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19829,19835],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19902,19903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19953,19959],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20019,20020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20234,20256],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[20404,20410],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20477,20478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20528,20534],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20595,20596]},{"pos":[20651,20657],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20717,20718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20815,20821],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20888,20889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20939,20945],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21006,21007]},{"pos":[21062,21068],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21128,21129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21374,21405],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[21571,21586],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21662,21663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21713,21719],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21780,21781]},{"pos":[21836,21842],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21902,21903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22009,22024],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22100,22101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22151,22157],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22218,22219]},{"pos":[22274,22280],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22340,22341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22571,22584],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22685,22696],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22768,22769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22796,22797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22870,22881],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22953,22954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22981,22982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23157,23166],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[23259,23266],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23334,23335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23362,23363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23432,23439],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23507,23508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23535,23536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23711,23728],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[23837,23852],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[23928,23929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23956,23957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24034,24049],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24125,24126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24153,24154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24299,24305],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[24448,24461],"content":"OidCollection","needQuote":true,"nodes":[{"content":"OidCollection","pos":[0,13]}]},{"pos":[24769,24795],"content":"X509Certificate2Collection","needQuote":true,"nodes":[{"content":"X509Certificate2Collection","pos":[0,26]}]},{"pos":[25168,25186],"content":"X509RevocationFlag","needQuote":true,"nodes":[{"content":"X509RevocationFlag","pos":[0,18]}]},{"pos":[25535,25553],"content":"X509RevocationMode","needQuote":true,"nodes":[{"content":"X509RevocationMode","pos":[0,18]}]},{"pos":[25814,25822],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[26066,26087],"content":"X509VerificationFlags","needQuote":true,"nodes":[{"content":"X509VerificationFlags","pos":[0,21]}]},{"pos":[26357,26365],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[26527,26544],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  commentId: T:System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  id: X509ChainPolicy\n  parent: System.Security.Cryptography.X509Certificates\n  children:\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.#ctor\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags\n  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime\n  langs:\n  - csharp\n  - vb\n  name: X509ChainPolicy\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X509ChainPolicy\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 255\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Represents the chain policy to be applied when building an X509 certificate chain. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public sealed class X509ChainPolicy\n    content.vb: Public NotInheritable Class X509ChainPolicy\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: X509ChainPolicy\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.#ctor\n  commentId: M:System.Security.Cryptography.X509Certificates.X509ChainPolicy.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: X509ChainPolicy()\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.X509ChainPolicy()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 257\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public X509ChainPolicy()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509ChainPolicy.X509ChainPolicy()\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy\n  id: ApplicationPolicy\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: ApplicationPolicy\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ApplicationPolicy\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 258\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets a collection of object identifiers (OIDs) specifying which application policies or enhanced key usages (EKUs) the certificate supports.</p>\\n\"\n  syntax:\n    content: public OidCollection ApplicationPolicy { get; }\n    content.vb: Public ReadOnly Property ApplicationPolicy As OidCollection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.OidCollection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509ChainPolicy.ApplicationPolicy\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy\n  id: CertificatePolicy\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: CertificatePolicy\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CertificatePolicy\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 259\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets a collection of object identifiers (OIDs) specifying which certificate policies the certificate supports.</p>\\n\"\n  syntax:\n    content: public OidCollection CertificatePolicy { get; }\n    content.vb: Public ReadOnly Property CertificatePolicy As OidCollection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.OidCollection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509ChainPolicy.CertificatePolicy\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore\n  id: ExtraStore\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: ExtraStore\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExtraStore\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 260\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Represents an additional collection of certificates that can be searched by the chaining engine when validating a certificate chain.</p>\\n\"\n  syntax:\n    content: public X509Certificate2Collection ExtraStore { get; }\n    content.vb: Public ReadOnly Property ExtraStore As X509Certificate2Collection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509ChainPolicy.ExtraStore\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag\n  id: RevocationFlag\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: RevocationFlag\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RevocationFlag\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 261\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets or sets values for X509 revocation flags.</p>\\n\"\n  syntax:\n    content: public X509RevocationFlag RevocationFlag { get; set; }\n    content.vb: Public Property RevocationFlag As X509RevocationFlag\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509RevocationFlag\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509RevocationFlag\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.X509Certificates.X509RevocationFlag\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value supplied is not a valid flag. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: X509ChainPolicy.RevocationFlag\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode\n  id: RevocationMode\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: RevocationMode\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RevocationMode\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 262\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets or sets values for X509 certificate revocation mode.</p>\\n\"\n  syntax:\n    content: public X509RevocationMode RevocationMode { get; set; }\n    content.vb: Public Property RevocationMode As X509RevocationMode\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509RevocationMode\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509RevocationMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.X509Certificates.X509RevocationMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value supplied is not a valid flag. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: X509ChainPolicy.RevocationMode\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout\n  id: UrlRetrievalTimeout\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: UrlRetrievalTimeout\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UrlRetrievalTimeout\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 263\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets the time span that elapsed during online revocation verification or downloading the certificate revocation list (CRL).</p>\\n\"\n  syntax:\n    content: public TimeSpan UrlRetrievalTimeout { get; set; }\n    content.vb: Public Property UrlRetrievalTimeout As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: X509ChainPolicy.UrlRetrievalTimeout\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags\n  id: VerificationFlags\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: VerificationFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: VerificationFlags\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 264\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets verification flags for the certificate.</p>\\n\"\n  syntax:\n    content: public X509VerificationFlags VerificationFlags { get; set; }\n    content.vb: Public Property VerificationFlags As X509VerificationFlags\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509VerificationFlags\n      description: \"\\n<p>A value from the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509VerificationFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.X509Certificates.X509VerificationFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value supplied is not a valid flag. <xref href=\\\"System.Security.Cryptography.X509Certificates.X509VerificationFlags.NoFlag\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is the default value. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: X509ChainPolicy.VerificationFlags\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime\n  id: VerificationTime\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: VerificationTime\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: VerificationTime\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 265\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>The time that the certificate was verified expressed in local time.</p>\\n\"\n  syntax:\n    content: public DateTime VerificationTime { get; set; }\n    content.vb: Public Property VerificationTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: X509ChainPolicy.VerificationTime\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset\n  commentId: M:System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset\n  id: Reset\n  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Reset\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 266\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Resets the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> members to their default values.</p>\\n\"\n  syntax:\n    content: public void Reset()\n    content.vb: Public Sub Reset\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509ChainPolicy.Reset()\nreferences:\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.OidCollection\n  isExternal: false\n  name: OidCollection\n  fullName: System.Security.Cryptography.OidCollection\n  commentId: T:System.Security.Cryptography.OidCollection\n  nameWithType: OidCollection\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2Collection\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  nameWithType: X509Certificate2Collection\n- uid: System.Security.Cryptography.X509Certificates.X509RevocationFlag\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509RevocationFlag\n  fullName: System.Security.Cryptography.X509Certificates.X509RevocationFlag\n  commentId: T:System.Security.Cryptography.X509Certificates.X509RevocationFlag\n  nameWithType: X509RevocationFlag\n- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509RevocationMode\n  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode\n  commentId: T:System.Security.Cryptography.X509Certificates.X509RevocationMode\n  nameWithType: X509RevocationMode\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  commentId: T:System.TimeSpan\n  nameWithType: TimeSpan\n- uid: System.Security.Cryptography.X509Certificates.X509VerificationFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509VerificationFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509VerificationFlags\n  commentId: T:System.Security.Cryptography.X509Certificates.X509VerificationFlags\n  nameWithType: X509VerificationFlags\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  commentId: T:System.DateTime\n  nameWithType: DateTime\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}