{"nodes":[{"pos":[340,345],"content":"ISite","needQuote":true,"nodes":[{"content":"ISite","pos":[0,5]}]},{"pos":[1743,1752],"content":"Component","needQuote":true,"nodes":[{"content":"Component","pos":[0,9]}]},{"pos":[3090,3099],"content":"Container","needQuote":true,"nodes":[{"content":"Container","pos":[0,9]}]},{"pos":[4523,4533],"content":"DesignMode","needQuote":true,"nodes":[{"content":"DesignMode","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the component is in design mode; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5269,5374],"source":"\\n<p>\\n<strong>true</strong> if the component is in design mode; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[5638,5642],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[6792,6813],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[7039,7055],"content":"GetService(Type)","needQuote":true,"nodes":[{"content":"GetService(Type)","pos":[0,16]}]},{"pos":[7198,7208],"content":"GetService","needQuote":true,"nodes":[{"content":"GetService","pos":[0,10]}]},{"pos":[7289,7290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7338,7342],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7400,7401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7496,7506],"content":"GetService","needQuote":true,"nodes":[{"content":"GetService","pos":[0,10]}]},{"pos":[7587,7588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7636,7640],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7698,7699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7905,7921],"content":"IServiceProvider","needQuote":true,"nodes":[{"content":"IServiceProvider","pos":[0,16]}]},{"pos":[8072,8078],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[8243,8253],"content":"IComponent","needQuote":true,"nodes":[{"content":"IComponent","pos":[0,10]}]},{"pos":[8474,8484],"content":"IContainer","needQuote":true,"nodes":[{"content":"IContainer","pos":[0,10]}]},{"pos":[8672,8679],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8827,8833],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.ComponentModel.ISite\n  commentId: T:System.ComponentModel.ISite\n  id: ISite\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.ISite.Component\n  - System.ComponentModel.ISite.Container\n  - System.ComponentModel.ISite.DesignMode\n  - System.ComponentModel.ISite.Name\n  langs:\n  - csharp\n  - vb\n  name: ISite\n  fullName: System.ComponentModel.ISite\n  type: Interface\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ISite\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n    startLine: 24\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides functionality required by sites.</p>\\n\"\n  syntax:\n    content: 'public interface ISite : IServiceProvider'\n    content.vb: >-\n      Public Interface ISite\n          Inherits IServiceProvider\n  seealso:\n  - type: System.ComponentModel.Component\n    commentId: T:System.ComponentModel.Component\n  - type: System.ComponentModel.IComponent\n    commentId: T:System.ComponentModel.IComponent\n  - type: System.ComponentModel.Container\n    commentId: T:System.ComponentModel.Container\n  - type: System.ComponentModel.IContainer\n    commentId: T:System.ComponentModel.IContainer\n  inheritedMembers:\n  - System.IServiceProvider.GetService(System.Type)\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: ISite\n- uid: System.ComponentModel.ISite.Component\n  commentId: P:System.ComponentModel.ISite.Component\n  id: Component\n  parent: System.ComponentModel.ISite\n  langs:\n  - csharp\n  - vb\n  name: Component\n  fullName: System.ComponentModel.ISite.Component\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Component\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n    startLine: 30\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the component associated with the <xref href=\\\"System.ComponentModel.ISite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> when implemented by a class.</p>\\n\"\n  syntax:\n    content: IComponent Component { get; }\n    content.vb: ReadOnly Property Component As IComponent\n    parameters: []\n    return:\n      type: System.ComponentModel.IComponent\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.IComponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance associated with the <xref href=\\\"System.ComponentModel.ISite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: ISite.Component\n- uid: System.ComponentModel.ISite.Container\n  commentId: P:System.ComponentModel.ISite.Container\n  id: Container\n  parent: System.ComponentModel.ISite\n  langs:\n  - csharp\n  - vb\n  name: Container\n  fullName: System.ComponentModel.ISite.Container\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Container\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n    startLine: 36\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the <xref href=\\\"System.ComponentModel.IContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with the <xref href=\\\"System.ComponentModel.ISite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> when implemented by a class.</p>\\n\"\n  syntax:\n    content: IContainer Container { get; }\n    content.vb: ReadOnly Property Container As IContainer\n    parameters: []\n    return:\n      type: System.ComponentModel.IContainer\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.IContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance associated with the <xref href=\\\"System.ComponentModel.ISite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: ISite.Container\n- uid: System.ComponentModel.ISite.DesignMode\n  commentId: P:System.ComponentModel.ISite.DesignMode\n  id: DesignMode\n  parent: System.ComponentModel.ISite\n  langs:\n  - csharp\n  - vb\n  name: DesignMode\n  fullName: System.ComponentModel.ISite.DesignMode\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DesignMode\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n    startLine: 42\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Determines whether the component is in design mode when implemented by a class.</p>\\n\"\n  syntax:\n    content: bool DesignMode { get; }\n    content.vb: ReadOnly Property DesignMode As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the component is in design mode; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: ISite.DesignMode\n- uid: System.ComponentModel.ISite.Name\n  commentId: P:System.ComponentModel.ISite.Name\n  id: Name\n  parent: System.ComponentModel.ISite\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.ComponentModel.ISite.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/ISite.cs\n    startLine: 50\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets or sets the name of the component associated with the <xref href=\\\"System.ComponentModel.ISite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> when implemented by a class.</p>\\n\"\n  syntax:\n    content: string Name { get; set; }\n    content.vb: Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the component associated with the <xref href=\\\"System.ComponentModel.ISite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; or <strong>null</strong>, if no name is assigned to the component.</p>\\n\"\n  modifiers.csharp:\n  - get\n  - set\n  nameWithType: ISite.Name\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.IServiceProvider.GetService(System.Type)\n  parent: System.IServiceProvider\n  isExternal: true\n  name: GetService(Type)\n  fullName: System.IServiceProvider.GetService(System.Type)\n  spec.csharp:\n  - uid: System.IServiceProvider.GetService(System.Type)\n    name: GetService\n    fullName: System.IServiceProvider.GetService\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IServiceProvider.GetService(System.Type)\n    name: GetService\n    fullName: System.IServiceProvider.GetService\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IServiceProvider.GetService(Type)\n  commentId: M:System.IServiceProvider.GetService(System.Type)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  fullName: System.IServiceProvider\n  nameWithType: IServiceProvider\n  commentId: T:System.IServiceProvider\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  fullName: System.ComponentModel.IComponent\n  nameWithType: IComponent\n  commentId: T:System.ComponentModel.IComponent\n- uid: System.ComponentModel.IContainer\n  parent: System.ComponentModel\n  isExternal: false\n  name: IContainer\n  fullName: System.ComponentModel.IContainer\n  nameWithType: IContainer\n  commentId: T:System.ComponentModel.IContainer\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}