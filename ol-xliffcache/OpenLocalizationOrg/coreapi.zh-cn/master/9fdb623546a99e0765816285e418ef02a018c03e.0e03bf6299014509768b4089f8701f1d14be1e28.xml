{"nodes":[{"pos":[509,520],"content":"ProjectData","needQuote":true,"nodes":[{"content":"ProjectData","pos":[0,11]}]},{"pos":[1899,1918],"content":"ClearProjectError()","needQuote":true,"nodes":[{"content":"ClearProjectError()","pos":[0,19]}]},{"pos":[3309,3335],"content":"SetProjectError(Exception)","needQuote":true,"nodes":[{"content":"SetProjectError(Exception)","pos":[0,26]}]},{"pos":[5000,5033],"content":"SetProjectError(Exception, Int32)","needQuote":true,"nodes":[{"content":"SetProjectError(Exception, Int32)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The line number of the exception.&lt;/p&gt;\\n","pos":[6147,6191],"source":"\\n<p>The line number of the exception.</p>\\n"},{"pos":[6571,6609],"content":"Microsoft.VisualBasic.CompilerServices","needQuote":true,"nodes":[{"content":"Microsoft.VisualBasic.CompilerServices","pos":[0,38]}]},{"pos":[6836,6842],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7002,7012],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7107,7115],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7184,7185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7212,7213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7283,7291],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7360,7361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7388,7389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7572,7586],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7705,7711],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7778,7779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7829,7835],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7895,7896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7979,7985],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8052,8053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8103,8109],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8169,8170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8384,8406],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8554,8560],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8627,8628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8678,8684],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8745,8746]},{"pos":[8801,8807],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8867,8868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8965,8971],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9038,9039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9089,9095],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9156,9157]},{"pos":[9212,9218],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9278,9279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9524,9555],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9721,9736],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9812,9813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9863,9869],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9930,9931]},{"pos":[9986,9992],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10052,10053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10159,10174],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10250,10251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10301,10307],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10368,10369]},{"pos":[10424,10430],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10490,10491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10721,10734],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10835,10846],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10918,10919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10946,10947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11020,11031],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11103,11104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11131,11132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11307,11316],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11409,11416],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11484,11485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11512,11513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11582,11589],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11657,11658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11685,11686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11861,11878],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11987,12002],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12078,12079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12106,12107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12184,12199],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12275,12276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12303,12304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12449,12455],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12589,12598],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[12751,12756],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: Microsoft.VisualBasic.CompilerServices.ProjectData\n  commentId: T:Microsoft.VisualBasic.CompilerServices.ProjectData\n  id: ProjectData\n  parent: Microsoft.VisualBasic.CompilerServices\n  children:\n  - Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError\n  - Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)\n  - Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: ProjectData\n  fullName: Microsoft.VisualBasic.CompilerServices.ProjectData\n  type: Class\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProjectData\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 196\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Provides helpers for the Visual Basic <strong>Err</strong> object. </p>\\n\"\n  syntax:\n    content: public sealed class ProjectData\n    content.vb: Public NotInheritable Class ProjectData\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: ProjectData\n- uid: Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError\n  id: ClearProjectError\n  parent: Microsoft.VisualBasic.CompilerServices.ProjectData\n  langs:\n  - csharp\n  - vb\n  name: ClearProjectError()\n  fullName: Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError()\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ClearProjectError\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 200\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Performs the work for the <strong>Clear</strong> method of the <strong>Err</strong> object. A helper method.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void ClearProjectError()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub ClearProjectError\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ProjectData.ClearProjectError()\n- uid: Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)\n  id: SetProjectError(System.Exception)\n  parent: Microsoft.VisualBasic.CompilerServices.ProjectData\n  langs:\n  - csharp\n  - vb\n  name: SetProjectError(Exception)\n  fullName: Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetProjectError\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 202\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>The Visual Basic compiler uses this helper method to capture exceptions in the <strong>Err</strong> object.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void SetProjectError(Exception ex)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub SetProjectError(ex As Exception)\n    parameters:\n    - id: ex\n      type: System.Exception\n      description: \"\\n<p>The <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be caught.</p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ProjectData.SetProjectError(Exception)\n- uid: Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)\n  id: SetProjectError(System.Exception,System.Int32)\n  parent: Microsoft.VisualBasic.CompilerServices.ProjectData\n  langs:\n  - csharp\n  - vb\n  name: SetProjectError(Exception, Int32)\n  fullName: Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetProjectError\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 204\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>The Visual Basic compiler uses this helper method to capture exceptions in the <strong>Err</strong> object.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void SetProjectError(Exception ex, int lErl)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub SetProjectError(ex As Exception, lErl As Integer)\n    parameters:\n    - id: ex\n      type: System.Exception\n      description: \"\\n<p>The <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be caught.</p>\\n\"\n    - id: lErl\n      type: System.Int32\n      description: \"\\n<p>The line number of the exception.</p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ProjectData.SetProjectError(Exception, Int32)\nreferences:\n- uid: Microsoft.VisualBasic.CompilerServices\n  isExternal: false\n  name: Microsoft.VisualBasic.CompilerServices\n  fullName: Microsoft.VisualBasic.CompilerServices\n  commentId: N:Microsoft.VisualBasic.CompilerServices\n  nameWithType: Microsoft.VisualBasic.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n"}