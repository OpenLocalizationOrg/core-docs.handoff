{"nodes":[{"pos":[1114,1124],"content":"ThreadPool","needQuote":true,"nodes":[{"content":"ThreadPool","pos":[0,10]}]},{"pos":[2689,2711],"content":"BindHandle(SafeHandle)","needQuote":true,"nodes":[{"content":"BindHandle(SafeHandle)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the handle is bound; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4122,4215],"source":"\\n<p>\\n<strong>true</strong> if the handle is bound; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;osHandle&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[4334,4384],"source":"\\n<p>\\n<em>osHandle</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[4385,4391],"source":" </p>\\n"},{"pos":[5097,5128],"content":"QueueUserWorkItem(WaitCallback)","needQuote":true,"nodes":[{"content":"QueueUserWorkItem(WaitCallback)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;callBack&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6673,6729],"source":"\\n<p>\\n<em>callBack</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The common language runtime (CLR) is hosted, and the host does not support this action.&lt;/p&gt;\\n","pos":[6834,6932],"source":"\\n<p>The common language runtime (CLR) is hosted, and the host does not support this action.</p>\\n"},{"pos":[7419,7458],"content":"QueueUserWorkItem(WaitCallback, Object)","needQuote":true,"nodes":[{"content":"QueueUserWorkItem(WaitCallback, Object)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;An object containing data to be used by the method.","pos":[8783,8839],"source":"\\n<p>An object containing data to be used by the method."},{"content":"&lt;/p&gt;\\n","pos":[8840,8846],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The common language runtime (CLR) is hosted, and the host does not support this action.&lt;/p&gt;\\n","pos":[9235,9333],"source":"\\n<p>The common language runtime (CLR) is hosted, and the host does not support this action.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;callBack&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9438,9494],"source":"\\n<p>\\n<em>callBack</em> is <strong>null</strong>.</p>\\n"},{"pos":[10208,10292],"content":"RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, Int32, Boolean)","needQuote":true,"nodes":[{"content":"RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, Int32, Boolean)","pos":[0,84]}]},{"content":"\\n&lt;p&gt;The object that is passed to the delegate.","pos":[12405,12452],"source":"\\n<p>The object that is passed to the delegate."},{"content":"&lt;/p&gt;\\n","pos":[12453,12459],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The time-out in milliseconds.","pos":[12544,12578],"source":"\\n<p>The time-out in milliseconds."},{"content":"If the &lt;em&gt;millisecondsTimeOutInterval&lt;/em&gt; parameter is 0 (zero), the function tests the object's state and returns immediately.","pos":[12579,12708],"source":" If the <em>millisecondsTimeOutInterval</em> parameter is 0 (zero), the function tests the object's state and returns immediately."},{"content":"If &lt;em&gt;millisecondsTimeOutInterval&lt;/em&gt; is -1, the function's time-out interval never elapses.","pos":[12709,12803],"source":" If <em>millisecondsTimeOutInterval</em> is -1, the function's time-out interval never elapses."},{"content":"&lt;/p&gt;\\n","pos":[12804,12810],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to indicate that the thread will no longer wait on the &lt;em&gt;waitObject&lt;/em&gt; parameter after the delegate has been called; &lt;strong&gt;false&lt;/strong&gt; to indicate that the timer is reset every time the wait operation completes until the wait is unregistered.","pos":[12885,13165],"source":"\\n<p>\\n<strong>true</strong> to indicate that the thread will no longer wait on the <em>waitObject</em> parameter after the delegate has been called; <strong>false</strong> to indicate that the timer is reset every time the wait operation completes until the wait is unregistered."},{"content":"&lt;/p&gt;\\n","pos":[13166,13172],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;millisecondsTimeOutInterval&lt;/em&gt; parameter is less than -1.","pos":[13536,13608],"source":"\\n<p>The <em>millisecondsTimeOutInterval</em> parameter is less than -1."},{"content":"&lt;/p&gt;\\n","pos":[13609,13615],"source":" </p>\\n"},{"pos":[14374,14458],"content":"RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, Int64, Boolean)","needQuote":true,"nodes":[{"content":"RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, Int64, Boolean)","pos":[0,84]}]},{"content":"\\n&lt;p&gt;The object passed to the delegate.","pos":[16569,16608],"source":"\\n<p>The object passed to the delegate."},{"content":"&lt;/p&gt;\\n","pos":[16609,16615],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The time-out in milliseconds.","pos":[16700,16734],"source":"\\n<p>The time-out in milliseconds."},{"content":"If the &lt;em&gt;millisecondsTimeOutInterval&lt;/em&gt; parameter is 0 (zero), the function tests the object's state and returns immediately.","pos":[16735,16864],"source":" If the <em>millisecondsTimeOutInterval</em> parameter is 0 (zero), the function tests the object's state and returns immediately."},{"content":"If &lt;em&gt;millisecondsTimeOutInterval&lt;/em&gt; is -1, the function's time-out interval never elapses.","pos":[16865,16959],"source":" If <em>millisecondsTimeOutInterval</em> is -1, the function's time-out interval never elapses."},{"content":"&lt;/p&gt;\\n","pos":[16960,16966],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to indicate that the thread will no longer wait on the &lt;em&gt;waitObject&lt;/em&gt; parameter after the delegate has been called; &lt;strong&gt;false&lt;/strong&gt; to indicate that the timer is reset every time the wait operation completes until the wait is unregistered.","pos":[17041,17321],"source":"\\n<p>\\n<strong>true</strong> to indicate that the thread will no longer wait on the <em>waitObject</em> parameter after the delegate has been called; <strong>false</strong> to indicate that the timer is reset every time the wait operation completes until the wait is unregistered."},{"content":"&lt;/p&gt;\\n","pos":[17322,17328],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;millisecondsTimeOutInterval&lt;/em&gt; parameter is less than -1.","pos":[17692,17764],"source":"\\n<p>The <em>millisecondsTimeOutInterval</em> parameter is less than -1."},{"content":"&lt;/p&gt;\\n","pos":[17765,17771],"source":" </p>\\n"},{"pos":[18539,18626],"content":"RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, TimeSpan, Boolean)","needQuote":true,"nodes":[{"content":"RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, TimeSpan, Boolean)","pos":[0,87]}]},{"content":"\\n&lt;p&gt;The object passed to the delegate.","pos":[20752,20791],"source":"\\n<p>The object passed to the delegate."},{"content":"&lt;/p&gt;\\n","pos":[20792,20798],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to indicate that the thread will no longer wait on the &lt;em&gt;waitObject&lt;/em&gt; parameter after the delegate has been called; &lt;strong&gt;false&lt;/strong&gt; to indicate that the timer is reset every time the wait operation completes until the wait is unregistered.","pos":[21230,21510],"source":"\\n<p>\\n<strong>true</strong> to indicate that the thread will no longer wait on the <em>waitObject</em> parameter after the delegate has been called; <strong>false</strong> to indicate that the timer is reset every time the wait operation completes until the wait is unregistered."},{"content":"&lt;/p&gt;\\n","pos":[21511,21517],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;timeout&lt;/em&gt; parameter is less than -1.","pos":[21881,21933],"source":"\\n<p>The <em>timeout</em> parameter is less than -1."},{"content":"&lt;/p&gt;\\n","pos":[21934,21940],"source":" </p>\\n"},{"pos":[22951,23036],"content":"RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, UInt32, Boolean)","needQuote":true,"nodes":[{"content":"RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, UInt32, Boolean)","pos":[0,85]}]},{"content":"\\n&lt;p&gt;The object passed to the delegate.","pos":[25212,25251],"source":"\\n<p>The object passed to the delegate."},{"content":"&lt;/p&gt;\\n","pos":[25252,25258],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The time-out in milliseconds.","pos":[25344,25378],"source":"\\n<p>The time-out in milliseconds."},{"content":"If the &lt;em&gt;millisecondsTimeOutInterval&lt;/em&gt; parameter is 0 (zero), the function tests the object's state and returns immediately.","pos":[25379,25508],"source":" If the <em>millisecondsTimeOutInterval</em> parameter is 0 (zero), the function tests the object's state and returns immediately."},{"content":"If &lt;em&gt;millisecondsTimeOutInterval&lt;/em&gt; is -1, the function's time-out interval never elapses.","pos":[25509,25603],"source":" If <em>millisecondsTimeOutInterval</em> is -1, the function's time-out interval never elapses."},{"content":"&lt;/p&gt;\\n","pos":[25604,25610],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to indicate that the thread will no longer wait on the &lt;em&gt;waitObject&lt;/em&gt; parameter after the delegate has been called; &lt;strong&gt;false&lt;/strong&gt; to indicate that the timer is reset every time the wait operation completes until the wait is unregistered.","pos":[25685,25965],"source":"\\n<p>\\n<strong>true</strong> to indicate that the thread will no longer wait on the <em>waitObject</em> parameter after the delegate has been called; <strong>false</strong> to indicate that the timer is reset every time the wait operation completes until the wait is unregistered."},{"content":"&lt;/p&gt;\\n","pos":[25966,25972],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;millisecondsTimeOutInterval&lt;/em&gt; parameter is less than -1.","pos":[26357,26429],"source":"\\n<p>The <em>millisecondsTimeOutInterval</em> parameter is less than -1."},{"content":"&lt;/p&gt;\\n","pos":[26430,26436],"source":" </p>\\n"},{"pos":[26870,26886],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[27047,27053],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27213,27223],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[27318,27326],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27395,27396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27423,27424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27494,27502],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27571,27572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27599,27600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27783,27797],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[27916,27922],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27989,27990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28040,28046],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28106,28107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28190,28196],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28263,28264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28314,28320],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28380,28381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28595,28617],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[28765,28771],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28838,28839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28889,28895],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28956,28957]},{"pos":[29012,29018],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29078,29079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29176,29182],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29249,29250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29300,29306],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29367,29368]},{"pos":[29423,29429],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29489,29490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29735,29766],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[29932,29947],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[30023,30024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30074,30080],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30141,30142]},{"pos":[30197,30203],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30263,30264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30370,30385],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[30461,30462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30512,30518],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30579,30580]},{"pos":[30635,30641],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30701,30702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30932,30945],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[31046,31057],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[31129,31130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31157,31158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31231,31242],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[31314,31315],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31342,31343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31518,31527],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[31620,31627],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[31695,31696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31723,31724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31793,31800],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[31868,31869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31896,31897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32072,32089],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[32198,32213],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32289,32290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32317,32318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32395,32410],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32486,32487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32514,32515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32660,32666],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[32849,32859],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[33065,33072],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33220,33250],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[33479,33491],"content":"WaitCallback","needQuote":true,"nodes":[{"content":"WaitCallback","pos":[0,12]}]},{"pos":[33698,33708],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[33918,33937],"content":"WaitOrTimerCallback","needQuote":true,"nodes":[{"content":"WaitOrTimerCallback","pos":[0,19]}]},{"pos":[34140,34145],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34321,34341],"content":"RegisteredWaitHandle","needQuote":true,"nodes":[{"content":"RegisteredWaitHandle","pos":[0,20]}]},{"pos":[34547,34552],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[34696,34704],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[34855,34861],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[35004,35025],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[35230,35251],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[35445,35472],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Threading.ThreadPool\n  commentId: T:System.Threading.ThreadPool\n  id: ThreadPool\n  parent: System.Threading\n  children:\n  - System.Threading.ThreadPool.BindHandle(System.Runtime.InteropServices.SafeHandle)\n  - System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)\n  - System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)\n  - System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)\n  - System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)\n  - System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)\n  - System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)\n  langs:\n  - csharp\n  - vb\n  name: ThreadPool\n  fullName: System.Threading.ThreadPool\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadPool.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ThreadPool\n    path: src/mscorlib/src/System/Threading/ThreadPool.cs\n    startLine: 1393\n  assemblies:\n  - System.Threading.ThreadPool\n  namespace: System.Threading\n  summary: \"\\n<p>Provides a pool of threads that can be used to execute tasks, post work items, process asynchronous I/O, wait on behalf of other threads, and process timers.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(Synchronization = true, ExternalThreading = true)]\n\n      public class ThreadPool\n    content.vb: >-\n      <HostProtection(Synchronization:=True, ExternalThreading:=True)>\n\n      Public Class ThreadPool\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ThreadPool\n- uid: System.Threading.ThreadPool.BindHandle(System.Runtime.InteropServices.SafeHandle)\n  commentId: M:System.Threading.ThreadPool.BindHandle(System.Runtime.InteropServices.SafeHandle)\n  id: BindHandle(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Threading.ThreadPool\n  langs:\n  - csharp\n  - vb\n  name: BindHandle(SafeHandle)\n  fullName: System.Threading.ThreadPool.BindHandle(System.Runtime.InteropServices.SafeHandle)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadPool.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: BindHandle\n    path: src/mscorlib/src/System/Threading/ThreadPool.cs\n    startLine: 1921\n  assemblies:\n  - System.Threading.ThreadPool\n  namespace: System.Threading\n  summary: \"\\n<p>Binds an operating system handle to the <xref href=\\\"System.Threading.ThreadPool\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.UnmanagedCode)]\n\n      public static bool BindHandle(SafeHandle osHandle)\n    content.vb: >-\n      <SecurityCritical>\n\n      <SecurityPermission(SecurityAction.Demand, Flags:=SecurityPermissionFlag.UnmanagedCode)>\n\n      Public Shared Function BindHandle(osHandle As SafeHandle) As Boolean\n    parameters:\n    - id: osHandle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: \"\\n<p>A <xref href=\\\"System.Runtime.InteropServices.SafeHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  that holds the operating system handle. The handle must have been opened for overlapped I/O on the unmanaged side.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the handle is bound; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>osHandle</em> is <strong>null</strong>. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ThreadPool.BindHandle(SafeHandle)\n- uid: System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)\n  commentId: M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)\n  id: QueueUserWorkItem(System.Threading.WaitCallback)\n  parent: System.Threading.ThreadPool\n  langs:\n  - csharp\n  - vb\n  name: QueueUserWorkItem(WaitCallback)\n  fullName: System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadPool.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: QueueUserWorkItem\n    path: src/mscorlib/src/System/Threading/ThreadPool.cs\n    startLine: 1632\n  assemblies:\n  - System.Threading.ThreadPool\n  namespace: System.Threading\n  summary: \"\\n<p>Queues a method for execution. The method executes when a thread pool thread becomes available.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static bool QueueUserWorkItem(WaitCallback callBack)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function QueueUserWorkItem(callBack As WaitCallback) As Boolean\n    parameters:\n    - id: callBack\n      type: System.Threading.WaitCallback\n      description: \"\\n<p>A <xref href=\\\"System.Threading.WaitCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the method to be executed. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the method is successfully queued; <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown if the work item could not be queued.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>callBack</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The common language runtime (CLR) is hosted, and the host does not support this action.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ThreadPool.QueueUserWorkItem(WaitCallback)\n- uid: System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)\n  commentId: M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)\n  id: QueueUserWorkItem(System.Threading.WaitCallback,System.Object)\n  parent: System.Threading.ThreadPool\n  langs:\n  - csharp\n  - vb\n  name: QueueUserWorkItem(WaitCallback, Object)\n  fullName: System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadPool.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: QueueUserWorkItem\n    path: src/mscorlib/src/System/Threading/ThreadPool.cs\n    startLine: 1621\n  assemblies:\n  - System.Threading.ThreadPool\n  namespace: System.Threading\n  summary: \"\\n<p>Queues a method for execution, and specifies an object containing data to be used by the method. The method executes when a thread pool thread becomes available.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static bool QueueUserWorkItem(WaitCallback callBack, object state)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function QueueUserWorkItem(callBack As WaitCallback, state As Object) As Boolean\n    parameters:\n    - id: callBack\n      type: System.Threading.WaitCallback\n      description: \"\\n<p>A <xref href=\\\"System.Threading.WaitCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the method to execute. </p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>An object containing data to be used by the method. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the method is successfully queued; <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown if the work item could not be queued.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The common language runtime (CLR) is hosted, and the host does not support this action.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>callBack</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ThreadPool.QueueUserWorkItem(WaitCallback, Object)\n- uid: System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)\n  commentId: M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)\n  id: RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)\n  parent: System.Threading.ThreadPool\n  langs:\n  - csharp\n  - vb\n  name: RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, Int32, Boolean)\n  fullName: System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.Int32, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadPool.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: RegisterWaitForSingleObject\n    path: src/mscorlib/src/System/Threading/ThreadPool.cs\n    startLine: 1515\n  assemblies:\n  - System.Threading.ThreadPool\n  namespace: System.Threading\n  summary: \"\\n<p>Registers a delegate to wait for a <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, specifying a 32-bit signed integer for the time-out in milliseconds.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, int millisecondsTimeOutInterval, bool executeOnlyOnce)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function RegisterWaitForSingleObject(waitObject As WaitHandle, callBack As WaitOrTimerCallback, state As Object, millisecondsTimeOutInterval As Integer, executeOnlyOnce As Boolean) As RegisteredWaitHandle\n    parameters:\n    - id: waitObject\n      type: System.Threading.WaitHandle\n      description: \"\\n<p>The <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to register. Use a <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: callBack\n      type: System.Threading.WaitOrTimerCallback\n      description: \"\\n<p>The <xref href=\\\"System.Threading.WaitOrTimerCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate to call when the <em>waitObject</em> parameter is signaled. </p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>The object that is passed to the delegate. </p>\\n\"\n    - id: millisecondsTimeOutInterval\n      type: System.Int32\n      description: \"\\n<p>The time-out in milliseconds. If the <em>millisecondsTimeOutInterval</em> parameter is 0 (zero), the function tests the object's state and returns immediately. If <em>millisecondsTimeOutInterval</em> is -1, the function's time-out interval never elapses. </p>\\n\"\n    - id: executeOnlyOnce\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to indicate that the thread will no longer wait on the <em>waitObject</em> parameter after the delegate has been called; <strong>false</strong> to indicate that the timer is reset every time the wait operation completes until the wait is unregistered. </p>\\n\"\n    return:\n      type: System.Threading.RegisteredWaitHandle\n      description: \"\\n<p>The <xref href=\\\"System.Threading.RegisteredWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that encapsulates the native handle.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>millisecondsTimeOutInterval</em> parameter is less than -1. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ThreadPool.RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, Int32, Boolean)\n- uid: System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)\n  commentId: M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)\n  id: RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)\n  parent: System.Threading.ThreadPool\n  langs:\n  - csharp\n  - vb\n  name: RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, Int64, Boolean)\n  fullName: System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.Int64, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadPool.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: RegisterWaitForSingleObject\n    path: src/mscorlib/src/System/Threading/ThreadPool.cs\n    startLine: 1549\n  assemblies:\n  - System.Threading.ThreadPool\n  namespace: System.Threading\n  summary: \"\\n<p>Registers a delegate to wait for a <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, specifying a 64-bit signed integer for the time-out in milliseconds.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, long millisecondsTimeOutInterval, bool executeOnlyOnce)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function RegisterWaitForSingleObject(waitObject As WaitHandle, callBack As WaitOrTimerCallback, state As Object, millisecondsTimeOutInterval As Long, executeOnlyOnce As Boolean) As RegisteredWaitHandle\n    parameters:\n    - id: waitObject\n      type: System.Threading.WaitHandle\n      description: \"\\n<p>The <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to register. Use a <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: callBack\n      type: System.Threading.WaitOrTimerCallback\n      description: \"\\n<p>The <xref href=\\\"System.Threading.WaitOrTimerCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate to call when the <em>waitObject</em> parameter is signaled. </p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>The object passed to the delegate. </p>\\n\"\n    - id: millisecondsTimeOutInterval\n      type: System.Int64\n      description: \"\\n<p>The time-out in milliseconds. If the <em>millisecondsTimeOutInterval</em> parameter is 0 (zero), the function tests the object's state and returns immediately. If <em>millisecondsTimeOutInterval</em> is -1, the function's time-out interval never elapses. </p>\\n\"\n    - id: executeOnlyOnce\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to indicate that the thread will no longer wait on the <em>waitObject</em> parameter after the delegate has been called; <strong>false</strong> to indicate that the timer is reset every time the wait operation completes until the wait is unregistered. </p>\\n\"\n    return:\n      type: System.Threading.RegisteredWaitHandle\n      description: \"\\n<p>The <xref href=\\\"System.Threading.RegisteredWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that encapsulates the native handle.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>millisecondsTimeOutInterval</em> parameter is less than -1. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ThreadPool.RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, Int64, Boolean)\n- uid: System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)\n  commentId: M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)\n  id: RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)\n  parent: System.Threading.ThreadPool\n  langs:\n  - csharp\n  - vb\n  name: RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, TimeSpan, Boolean)\n  fullName: System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.TimeSpan, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadPool.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: RegisterWaitForSingleObject\n    path: src/mscorlib/src/System/Threading/ThreadPool.cs\n    startLine: 1583\n  assemblies:\n  - System.Threading.ThreadPool\n  namespace: System.Threading\n  summary: \"\\n<p>Registers a delegate to wait for a <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, specifying a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value for the time-out.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, TimeSpan timeout, bool executeOnlyOnce)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function RegisterWaitForSingleObject(waitObject As WaitHandle, callBack As WaitOrTimerCallback, state As Object, timeout As TimeSpan, executeOnlyOnce As Boolean) As RegisteredWaitHandle\n    parameters:\n    - id: waitObject\n      type: System.Threading.WaitHandle\n      description: \"\\n<p>The <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to register. Use a <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: callBack\n      type: System.Threading.WaitOrTimerCallback\n      description: \"\\n<p>The <xref href=\\\"System.Threading.WaitOrTimerCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate to call when the <em>waitObject</em> parameter is signaled. </p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>The object passed to the delegate. </p>\\n\"\n    - id: timeout\n      type: System.TimeSpan\n      description: \"\\n<p>The time-out represented by a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If <em>timeout</em> is 0 (zero), the function tests the object's state and returns immediately. If <em>timeout</em> is -1, the function's time-out interval never elapses. </p>\\n\"\n    - id: executeOnlyOnce\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to indicate that the thread will no longer wait on the <em>waitObject</em> parameter after the delegate has been called; <strong>false</strong> to indicate that the timer is reset every time the wait operation completes until the wait is unregistered. </p>\\n\"\n    return:\n      type: System.Threading.RegisteredWaitHandle\n      description: \"\\n<p>The <xref href=\\\"System.Threading.RegisteredWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that encapsulates the native handle.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>timeout</em> parameter is less than -1. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <em>timeout</em> parameter is greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ThreadPool.RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, TimeSpan, Boolean)\n- uid: System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)\n  commentId: M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)\n  id: RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)\n  parent: System.Threading.ThreadPool\n  langs:\n  - csharp\n  - vb\n  name: RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, UInt32, Boolean)\n  fullName: System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle, System.Threading.WaitOrTimerCallback, System.Object, System.UInt32, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadPool.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: RegisterWaitForSingleObject\n    path: src/mscorlib/src/System/Threading/ThreadPool.cs\n    startLine: 1441\n  assemblies:\n  - System.Threading.ThreadPool\n  namespace: System.Threading\n  summary: \"\\n<p>Registers a delegate to wait for a <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, specifying a 32-bit unsigned integer for the time-out in milliseconds.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [CLSCompliant(false)]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public static RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, uint millisecondsTimeOutInterval, bool executeOnlyOnce)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <CLSCompliant(False)>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Shared Function RegisterWaitForSingleObject(waitObject As WaitHandle, callBack As WaitOrTimerCallback, state As Object, millisecondsTimeOutInterval As UInteger, executeOnlyOnce As Boolean) As RegisteredWaitHandle\n    parameters:\n    - id: waitObject\n      type: System.Threading.WaitHandle\n      description: \"\\n<p>The <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to register. Use a <xref href=\\\"System.Threading.WaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: callBack\n      type: System.Threading.WaitOrTimerCallback\n      description: \"\\n<p>The <xref href=\\\"System.Threading.WaitOrTimerCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate to call when the <em>waitObject</em> parameter is signaled. </p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>The object passed to the delegate. </p>\\n\"\n    - id: millisecondsTimeOutInterval\n      type: System.UInt32\n      description: \"\\n<p>The time-out in milliseconds. If the <em>millisecondsTimeOutInterval</em> parameter is 0 (zero), the function tests the object's state and returns immediately. If <em>millisecondsTimeOutInterval</em> is -1, the function's time-out interval never elapses. </p>\\n\"\n    - id: executeOnlyOnce\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to indicate that the thread will no longer wait on the <em>waitObject</em> parameter after the delegate has been called; <strong>false</strong> to indicate that the timer is reset every time the wait operation completes until the wait is unregistered. </p>\\n\"\n    return:\n      type: System.Threading.RegisteredWaitHandle\n      description: \"\\n<p>The <xref href=\\\"System.Threading.RegisteredWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to cancel the registered wait operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>millisecondsTimeOutInterval</em> parameter is less than -1. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ThreadPool.RegisterWaitForSingleObject(WaitHandle, WaitOrTimerCallback, Object, UInt32, Boolean)\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n  nameWithType: SafeHandle\n  commentId: T:System.Runtime.InteropServices.SafeHandle\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Threading.WaitCallback\n  parent: System.Threading\n  isExternal: false\n  name: WaitCallback\n  fullName: System.Threading.WaitCallback\n  nameWithType: WaitCallback\n  commentId: T:System.Threading.WaitCallback\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  fullName: System.Threading.WaitHandle\n  nameWithType: WaitHandle\n  commentId: T:System.Threading.WaitHandle\n- uid: System.Threading.WaitOrTimerCallback\n  parent: System.Threading\n  isExternal: false\n  name: WaitOrTimerCallback\n  fullName: System.Threading.WaitOrTimerCallback\n  nameWithType: WaitOrTimerCallback\n  commentId: T:System.Threading.WaitOrTimerCallback\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Threading.RegisteredWaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: RegisteredWaitHandle\n  fullName: System.Threading.RegisteredWaitHandle\n  nameWithType: RegisteredWaitHandle\n  commentId: T:System.Threading.RegisteredWaitHandle\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  nameWithType: TimeSpan\n  commentId: T:System.TimeSpan\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  nameWithType: UInt32\n  commentId: T:System.UInt32\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}