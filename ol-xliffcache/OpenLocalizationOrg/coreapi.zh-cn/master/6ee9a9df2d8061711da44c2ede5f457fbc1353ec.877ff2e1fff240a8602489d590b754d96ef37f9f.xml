{"nodes":[{"pos":[3024,3033],"content":"Matrix3x2","needQuote":true,"nodes":[{"content":"Matrix3x2","pos":[0,9]}]},{"pos":[4515,4518],"content":"M11","needQuote":true,"nodes":[{"content":"M11","pos":[0,3]}]},{"pos":[5335,5338],"content":"M12","needQuote":true,"nodes":[{"content":"M12","pos":[0,3]}]},{"pos":[6156,6159],"content":"M21","needQuote":true,"nodes":[{"content":"M21","pos":[0,3]}]},{"pos":[6977,6980],"content":"M22","needQuote":true,"nodes":[{"content":"M22","pos":[0,3]}]},{"pos":[7799,7802],"content":"M31","needQuote":true,"nodes":[{"content":"M31","pos":[0,3]}]},{"pos":[8619,8622],"content":"M32","needQuote":true,"nodes":[{"content":"M32","pos":[0,3]}]},{"pos":[9703,9760],"content":"Matrix3x2(Single, Single, Single, Single, Single, Single)","needQuote":true,"nodes":[{"content":"Matrix3x2(Single, Single, Single, Single, Single, Single)","pos":[0,57]}]},{"content":"\\n&lt;p&gt;The value to assign to the first element in the first row.","pos":[10634,10697],"source":"\\n<p>The value to assign to the first element in the first row."},{"content":"&lt;/p&gt;\\n","pos":[10698,10704],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value to assign to the second element in the first row.","pos":[10766,10830],"source":"\\n<p>The value to assign to the second element in the first row."},{"content":"&lt;/p&gt;\\n","pos":[10831,10837],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value to assign to the first element in the second row.","pos":[10899,10963],"source":"\\n<p>The value to assign to the first element in the second row."},{"content":"&lt;/p&gt;\\n","pos":[10964,10970],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value to assign to the second element in the second row.","pos":[11032,11097],"source":"\\n<p>The value to assign to the second element in the second row."},{"content":"&lt;/p&gt;\\n","pos":[11098,11104],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value to assign to the first element in the third row.","pos":[11166,11229],"source":"\\n<p>The value to assign to the first element in the third row."},{"content":"&lt;/p&gt;\\n","pos":[11230,11236],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value to assign to the second element in the third row.","pos":[11298,11362],"source":"\\n<p>The value to assign to the second element in the third row."},{"content":"&lt;/p&gt;\\n","pos":[11363,11369],"source":" </p>\\n"},{"pos":[11691,11699],"content":"Identity","needQuote":true,"nodes":[{"content":"Identity","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The multiplicative identify matrix.","pos":[12392,12432],"source":"\\n<p>The multiplicative identify matrix."},{"content":"&lt;/p&gt;\\n","pos":[12433,12439],"source":" </p>\\n"},{"pos":[12761,12771],"content":"IsIdentity","needQuote":true,"nodes":[{"content":"IsIdentity","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current matrix is the identity matrix; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[13460,13569],"source":"\\n<p>\\n<strong>true</strong> if the current matrix is the identity matrix; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[13570,13576],"source":" </p>\\n"},{"pos":[13881,13892],"content":"Translation","needQuote":true,"nodes":[{"content":"Translation","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The translation component of the current instance.","pos":[14587,14642],"source":"\\n<p>The translation component of the current instance."},{"content":"&lt;/p&gt;\\n","pos":[14643,14649],"source":" </p>\\n"},{"pos":[15085,15110],"content":"Add(Matrix3x2, Matrix3x2)","needQuote":true,"nodes":[{"content":"Add(Matrix3x2, Matrix3x2)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The first matrix.","pos":[15939,15961],"source":"\\n<p>The first matrix."},{"content":"&lt;/p&gt;\\n","pos":[15962,15968],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second matrix.","pos":[16045,16068],"source":"\\n<p>The second matrix."},{"content":"&lt;/p&gt;\\n","pos":[16069,16075],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The matrix that contains the summed values of &lt;em&gt;value1&lt;/em&gt; and &lt;em&gt;value2&lt;/em&gt;.","pos":[16147,16234],"source":"\\n<p>The matrix that contains the summed values of <em>value1</em> and <em>value2</em>."},{"content":"&lt;/p&gt;\\n","pos":[16235,16241],"source":" </p>\\n"},{"pos":[16616,16638],"content":"CreateRotation(Single)","needQuote":true,"nodes":[{"content":"CreateRotation(Single)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The amount of rotation, in radians.","pos":[17397,17437],"source":"\\n<p>The amount of rotation, in radians."},{"content":"&lt;/p&gt;\\n","pos":[17438,17444],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The rotation matrix.","pos":[17516,17541],"source":"\\n<p>The rotation matrix."},{"content":"&lt;/p&gt;\\n","pos":[17542,17548],"source":" </p>\\n"},{"pos":[17992,18023],"content":"CreateRotation(Single, Vector2)","needQuote":true,"nodes":[{"content":"CreateRotation(Single, Vector2)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The amount of rotation, in radians.","pos":[18875,18915],"source":"\\n<p>The amount of rotation, in radians."},{"content":"&lt;/p&gt;\\n","pos":[18916,18922],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The center point.","pos":[19002,19024],"source":"\\n<p>The center point."},{"content":"&lt;/p&gt;\\n","pos":[19025,19031],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The rotation matrix.","pos":[19103,19128],"source":"\\n<p>The rotation matrix."},{"content":"&lt;/p&gt;\\n","pos":[19129,19135],"source":" </p>\\n"},{"pos":[19537,19557],"content":"CreateScale(Vector2)","needQuote":true,"nodes":[{"content":"CreateScale(Vector2)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The scale to use.","pos":[20319,20341],"source":"\\n<p>The scale to use."},{"content":"&lt;/p&gt;\\n","pos":[20342,20348],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaling matrix.","pos":[20420,20444],"source":"\\n<p>The scaling matrix."},{"content":"&lt;/p&gt;\\n","pos":[20445,20451],"source":" </p>\\n"},{"pos":[20914,20943],"content":"CreateScale(Vector2, Vector2)","needQuote":true,"nodes":[{"content":"CreateScale(Vector2, Vector2)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The scale to use.","pos":[21822,21844],"source":"\\n<p>The scale to use."},{"content":"&lt;/p&gt;\\n","pos":[21845,21851],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The center offset.","pos":[21931,21954],"source":"\\n<p>The center offset."},{"content":"&lt;/p&gt;\\n","pos":[21955,21961],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaling matrix.","pos":[22033,22057],"source":"\\n<p>The scaling matrix."},{"content":"&lt;/p&gt;\\n","pos":[22058,22064],"source":" </p>\\n"},{"pos":[22434,22453],"content":"CreateScale(Single)","needQuote":true,"nodes":[{"content":"CreateScale(Single)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The uniform scale to use.","pos":[23200,23230],"source":"\\n<p>The uniform scale to use."},{"content":"&lt;/p&gt;\\n","pos":[23231,23237],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaling matrix.","pos":[23309,23333],"source":"\\n<p>The scaling matrix."},{"content":"&lt;/p&gt;\\n","pos":[23334,23340],"source":" </p>\\n"},{"pos":[23772,23800],"content":"CreateScale(Single, Vector2)","needQuote":true,"nodes":[{"content":"CreateScale(Single, Vector2)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The uniform scale to use.","pos":[24662,24692],"source":"\\n<p>The uniform scale to use."},{"content":"&lt;/p&gt;\\n","pos":[24693,24699],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The center offset.","pos":[24779,24802],"source":"\\n<p>The center offset."},{"content":"&lt;/p&gt;\\n","pos":[24803,24809],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaling matrix.","pos":[24881,24905],"source":"\\n<p>The scaling matrix."},{"content":"&lt;/p&gt;\\n","pos":[24906,24912],"source":" </p>\\n"},{"pos":[25323,25350],"content":"CreateScale(Single, Single)","needQuote":true,"nodes":[{"content":"CreateScale(Single, Single)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The value to scale by on the X axis.","pos":[26142,26183],"source":"\\n<p>The value to scale by on the X axis."},{"content":"&lt;/p&gt;\\n","pos":[26184,26190],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value to scale by on the Y axis.","pos":[26255,26296],"source":"\\n<p>The value to scale by on the Y axis."},{"content":"&lt;/p&gt;\\n","pos":[26297,26303],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaling matrix.","pos":[26375,26399],"source":"\\n<p>The scaling matrix."},{"content":"&lt;/p&gt;\\n","pos":[26400,26406],"source":" </p>\\n"},{"pos":[26888,26924],"content":"CreateScale(Single, Single, Vector2)","needQuote":true,"nodes":[{"content":"CreateScale(Single, Single, Vector2)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The value to scale by on the X axis.","pos":[27787,27828],"source":"\\n<p>The value to scale by on the X axis."},{"content":"&lt;/p&gt;\\n","pos":[27829,27835],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value to scale by on the Y axis.","pos":[27900,27941],"source":"\\n<p>The value to scale by on the Y axis."},{"content":"&lt;/p&gt;\\n","pos":[27942,27948],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The center point.","pos":[28028,28050],"source":"\\n<p>The center point."},{"content":"&lt;/p&gt;\\n","pos":[28051,28057],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaling matrix.","pos":[28129,28153],"source":"\\n<p>The scaling matrix."},{"content":"&lt;/p&gt;\\n","pos":[28154,28160],"source":" </p>\\n"},{"pos":[28576,28602],"content":"CreateSkew(Single, Single)","needQuote":true,"nodes":[{"content":"CreateSkew(Single, Single)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The X angle, in radians.","pos":[29396,29425],"source":"\\n<p>The X angle, in radians."},{"content":"&lt;/p&gt;\\n","pos":[29426,29432],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The Y angle, in radians.","pos":[29499,29528],"source":"\\n<p>The Y angle, in radians."},{"content":"&lt;/p&gt;\\n","pos":[29529,29535],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The skew matrix.","pos":[29607,29628],"source":"\\n<p>The skew matrix."},{"content":"&lt;/p&gt;\\n","pos":[29629,29635],"source":" </p>\\n"},{"pos":[30113,30148],"content":"CreateSkew(Single, Single, Vector2)","needQuote":true,"nodes":[{"content":"CreateSkew(Single, Single, Vector2)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The X angle, in radians.","pos":[31031,31060],"source":"\\n<p>The X angle, in radians."},{"content":"&lt;/p&gt;\\n","pos":[31061,31067],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The Y angle, in radians.","pos":[31134,31163],"source":"\\n<p>The Y angle, in radians."},{"content":"&lt;/p&gt;\\n","pos":[31164,31170],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The center point.","pos":[31250,31272],"source":"\\n<p>The center point."},{"content":"&lt;/p&gt;\\n","pos":[31273,31279],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The skew matrix.","pos":[31351,31372],"source":"\\n<p>The skew matrix."},{"content":"&lt;/p&gt;\\n","pos":[31373,31379],"source":" </p>\\n"},{"pos":[31803,31829],"content":"CreateTranslation(Vector2)","needQuote":true,"nodes":[{"content":"CreateTranslation(Vector2)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The translation position.","pos":[32633,32663],"source":"\\n<p>The translation position."},{"content":"&lt;/p&gt;\\n","pos":[32664,32670],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The translation matrix.","pos":[32742,32770],"source":"\\n<p>The translation matrix."},{"content":"&lt;/p&gt;\\n","pos":[32771,32777],"source":" </p>\\n"},{"pos":[33204,33237],"content":"CreateTranslation(Single, Single)","needQuote":true,"nodes":[{"content":"CreateTranslation(Single, Single)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The X position.","pos":[34072,34092],"source":"\\n<p>The X position."},{"content":"&lt;/p&gt;\\n","pos":[34093,34099],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The Y position.","pos":[34167,34187],"source":"\\n<p>The Y position."},{"content":"&lt;/p&gt;\\n","pos":[34188,34194],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The translation matrix.","pos":[34266,34294],"source":"\\n<p>The translation matrix."},{"content":"&lt;/p&gt;\\n","pos":[34295,34301],"source":" </p>\\n"},{"pos":[34696,34713],"content":"Equals(Matrix3x2)","needQuote":true,"nodes":[{"content":"Equals(Matrix3x2)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The other matrix.","pos":[35468,35490],"source":"\\n<p>The other matrix."},{"content":"&lt;/p&gt;\\n","pos":[35491,35497],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the two matrices are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35558,35658],"source":"\\n<p>\\n<strong>true</strong> if the two matrices are equal; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[36076,36090],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current instance.","pos":[36828,36881],"source":"\\n<p>The object to compare with the current instance."},{"content":"&lt;/p&gt;\\n","pos":[36882,36888],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current instance and &lt;em&gt;obj&lt;/em&gt; are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;.","pos":[36949,37081],"source":"\\n<p>\\n<strong>true</strong> if the current instance and <em>obj</em> are equal; otherwise, <strong>false</strong><strong></strong>."},{"content":"If &lt;em&gt;obj&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, the method returns &lt;strong&gt;false&lt;/strong&gt;.","pos":[37082,37166],"source":" If <em>obj</em> is <strong>null</strong>, the method returns <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[37167,37173],"source":" </p>\\n"},{"pos":[37550,37566],"content":"GetDeterminant()","needQuote":true,"nodes":[{"content":"GetDeterminant()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The determinant.","pos":[38218,38239],"source":"\\n<p>The determinant."},{"content":"&lt;/p&gt;\\n","pos":[38240,38246],"source":" </p>\\n"},{"pos":[38536,38549],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The hash code.","pos":[39203,39222],"source":"\\n<p>The hash code."},{"content":"&lt;/p&gt;\\n","pos":[39223,39229],"source":" </p>\\n"},{"pos":[39733,39765],"content":"Invert(Matrix3x2, out Matrix3x2)","needQuote":true,"nodes":[{"content":"Invert(Matrix3x2, out Matrix3x2)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The matrix to invert.","pos":[40620,40646],"source":"\\n<p>The matrix to invert."},{"content":"&lt;/p&gt;\\n","pos":[40647,40653],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains the inverted matrix if the operation succeeded.","pos":[40730,40817],"source":"\\n<p>When this method returns, contains the inverted matrix if the operation succeeded."},{"content":"&lt;/p&gt;\\n","pos":[40818,40824],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;matrix&lt;/em&gt; was converted successfully; otherwise,  &lt;strong&gt;false&lt;/strong&gt;.","pos":[40885,40996],"source":"\\n<p>\\n<strong>true</strong> if <em>matrix</em> was converted successfully; otherwise,  <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[40997,41003],"source":" </p>\\n"},{"pos":[41729,41763],"content":"Lerp(Matrix3x2, Matrix3x2, Single)","needQuote":true,"nodes":[{"content":"Lerp(Matrix3x2, Matrix3x2, Single)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The first matrix.","pos":[42700,42722],"source":"\\n<p>The first matrix."},{"content":"&lt;/p&gt;\\n","pos":[42723,42729],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second matrix.","pos":[42807,42830],"source":"\\n<p>The second matrix."},{"content":"&lt;/p&gt;\\n","pos":[42831,42837],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The relative weighting of &lt;em&gt;matrix2&lt;/em&gt;.","pos":[42902,42950],"source":"\\n<p>The relative weighting of <em>matrix2</em>."},{"content":"&lt;/p&gt;\\n","pos":[42951,42957],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The interpolated matrix.","pos":[43029,43058],"source":"\\n<p>The interpolated matrix."},{"content":"&lt;/p&gt;\\n","pos":[43059,43065],"source":" </p>\\n"},{"pos":[43545,43575],"content":"Multiply(Matrix3x2, Matrix3x2)","needQuote":true,"nodes":[{"content":"Multiply(Matrix3x2, Matrix3x2)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The first matrix.","pos":[44413,44435],"source":"\\n<p>The first matrix."},{"content":"&lt;/p&gt;\\n","pos":[44436,44442],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second matrix.","pos":[44519,44542],"source":"\\n<p>The second matrix."},{"content":"&lt;/p&gt;\\n","pos":[44543,44549],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The product matrix.","pos":[44621,44645],"source":"\\n<p>The product matrix."},{"content":"&lt;/p&gt;\\n","pos":[44646,44652],"source":" </p>\\n"},{"pos":[45092,45119],"content":"Multiply(Matrix3x2, Single)","needQuote":true,"nodes":[{"content":"Multiply(Matrix3x2, Single)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The matrix to scale.","pos":[45970,45995],"source":"\\n<p>The matrix to scale."},{"content":"&lt;/p&gt;\\n","pos":[45996,46002],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaling value to use.","pos":[46067,46097],"source":"\\n<p>The scaling value to use."},{"content":"&lt;/p&gt;\\n","pos":[46098,46104],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaled matrix.","pos":[46176,46199],"source":"\\n<p>The scaled matrix."},{"content":"&lt;/p&gt;\\n","pos":[46200,46206],"source":" </p>\\n"},{"pos":[46595,46612],"content":"Negate(Matrix3x2)","needQuote":true,"nodes":[{"content":"Negate(Matrix3x2)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The matrix to negate.","pos":[47367,47393],"source":"\\n<p>The matrix to negate."},{"content":"&lt;/p&gt;\\n","pos":[47394,47400],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The negated matrix.","pos":[47472,47496],"source":"\\n<p>The negated matrix."},{"content":"&lt;/p&gt;\\n","pos":[47497,47503],"source":" </p>\\n"},{"pos":[47975,48005],"content":"Addition(Matrix3x2, Matrix3x2)","needQuote":true,"nodes":[{"content":"Addition(Matrix3x2, Matrix3x2)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The first matrix.","pos":[48854,48876],"source":"\\n<p>The first matrix."},{"content":"&lt;/p&gt;\\n","pos":[48877,48883],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second matrix.","pos":[48960,48983],"source":"\\n<p>The second matrix."},{"content":"&lt;/p&gt;\\n","pos":[48984,48990],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The matrix that contains the summed values.","pos":[49062,49110],"source":"\\n<p>The matrix that contains the summed values."},{"content":"&lt;/p&gt;\\n","pos":[49111,49117],"source":" </p>\\n"},{"pos":[49602,49632],"content":"Equality(Matrix3x2, Matrix3x2)","needQuote":true,"nodes":[{"content":"Equality(Matrix3x2, Matrix3x2)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The first matrix to compare.","pos":[50465,50498],"source":"\\n<p>The first matrix to compare."},{"content":"&lt;/p&gt;\\n","pos":[50499,50505],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second matrix to compare.","pos":[50582,50616],"source":"\\n<p>The second matrix to compare."},{"content":"&lt;/p&gt;\\n","pos":[50617,50623],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value1&lt;/em&gt; and &lt;em&gt;value2&lt;/em&gt; are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[50684,50797],"source":"\\n<p>\\n<strong>true</strong> if <em>value1</em> and <em>value2</em> are equal; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[50798,50804],"source":" </p>\\n"},{"pos":[51295,51327],"content":"Inequality(Matrix3x2, Matrix3x2)","needQuote":true,"nodes":[{"content":"Inequality(Matrix3x2, Matrix3x2)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The first matrix to compare.","pos":[52169,52202],"source":"\\n<p>The first matrix to compare."},{"content":"&lt;/p&gt;\\n","pos":[52203,52209],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second matrix to compare.","pos":[52286,52320],"source":"\\n<p>The second matrix to compare."},{"content":"&lt;/p&gt;\\n","pos":[52321,52327],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value1&lt;/em&gt; and &lt;em&gt;value2&lt;/em&gt; are not equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[52388,52505],"source":"\\n<p>\\n<strong>true</strong> if <em>value1</em> and <em>value2</em> are not equal; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[52506,52512],"source":" </p>\\n"},{"pos":[52999,53029],"content":"Multiply(Matrix3x2, Matrix3x2)","needQuote":true,"nodes":[{"content":"Multiply(Matrix3x2, Matrix3x2)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The first matrix.","pos":[53867,53889],"source":"\\n<p>The first matrix."},{"content":"&lt;/p&gt;\\n","pos":[53890,53896],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second matrix.","pos":[53973,53996],"source":"\\n<p>The second matrix."},{"content":"&lt;/p&gt;\\n","pos":[53997,54003],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The product matrix.","pos":[54075,54099],"source":"\\n<p>The product matrix."},{"content":"&lt;/p&gt;\\n","pos":[54100,54106],"source":" </p>\\n"},{"pos":[54555,54582],"content":"Multiply(Matrix3x2, Single)","needQuote":true,"nodes":[{"content":"Multiply(Matrix3x2, Single)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The matrix to scale.","pos":[55433,55458],"source":"\\n<p>The matrix to scale."},{"content":"&lt;/p&gt;\\n","pos":[55459,55465],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaling value to use.","pos":[55530,55560],"source":"\\n<p>The scaling value to use."},{"content":"&lt;/p&gt;\\n","pos":[55561,55567],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The scaled matrix.","pos":[55639,55662],"source":"\\n<p>The scaled matrix."},{"content":"&lt;/p&gt;\\n","pos":[55663,55669],"source":" </p>\\n"},{"pos":[56160,56193],"content":"Subtraction(Matrix3x2, Matrix3x2)","needQuote":true,"nodes":[{"content":"Subtraction(Matrix3x2, Matrix3x2)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The first matrix.","pos":[57057,57079],"source":"\\n<p>The first matrix."},{"content":"&lt;/p&gt;\\n","pos":[57080,57086],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second matrix.","pos":[57163,57186],"source":"\\n<p>The second matrix."},{"content":"&lt;/p&gt;\\n","pos":[57187,57193],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The matrix containing the values that result from subtracting each element in &lt;em&gt;value2&lt;/em&gt; from its corresponding element in &lt;em&gt;value1&lt;/em&gt;.","pos":[57265,57414],"source":"\\n<p>The matrix containing the values that result from subtracting each element in <em>value2</em> from its corresponding element in <em>value1</em>."},{"content":"&lt;/p&gt;\\n","pos":[57415,57421],"source":" </p>\\n"},{"pos":[57846,57870],"content":"UnaryNegation(Matrix3x2)","needQuote":true,"nodes":[{"content":"UnaryNegation(Matrix3x2)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The matrix to negate.","pos":[58643,58669],"source":"\\n<p>The matrix to negate."},{"content":"&lt;/p&gt;\\n","pos":[58670,58676],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The negated matrix.","pos":[58748,58772],"source":"\\n<p>The negated matrix."},{"content":"&lt;/p&gt;\\n","pos":[58773,58779],"source":" </p>\\n"},{"pos":[59407,59437],"content":"Subtract(Matrix3x2, Matrix3x2)","needQuote":true,"nodes":[{"content":"Subtract(Matrix3x2, Matrix3x2)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The first matrix.","pos":[60295,60317],"source":"\\n<p>The first matrix."},{"content":"&lt;/p&gt;\\n","pos":[60318,60324],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second matrix.","pos":[60401,60424],"source":"\\n<p>The second matrix."},{"content":"&lt;/p&gt;\\n","pos":[60425,60431],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The matrix containing the values that result from subtracting each element in &lt;em&gt;value2&lt;/em&gt; from its corresponding element in &lt;em&gt;value1&lt;/em&gt;.","pos":[60503,60652],"source":"\\n<p>The matrix containing the values that result from subtracting each element in <em>value2</em> from its corresponding element in <em>value1</em>."},{"content":"&lt;/p&gt;\\n","pos":[60653,60659],"source":" </p>\\n"},{"pos":[60976,60986],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The string representation of this matrix.","pos":[61636,61682],"source":"\\n<p>The string representation of this matrix."},{"content":"&lt;/p&gt;\\n","pos":[61683,61689],"source":" </p>\\n"},{"pos":[61916,61931],"content":"System.Numerics","needQuote":true,"nodes":[{"content":"System.Numerics","pos":[0,15]}]},{"pos":[62134,62155],"content":"IEquatable<Matrix3x2>","needQuote":true,"nodes":[{"content":"IEquatable&lt;Matrix3x2&gt;","pos":[0,21],"source":"IEquatable<Matrix3x2>"}]},{"pos":[62366,62376],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[62440,62441],"content":"<","needQuote":true,"nodes":[]},{"pos":[62503,62512],"content":"Matrix3x2","needQuote":true,"nodes":[{"content":"Matrix3x2","pos":[0,9]}]},{"pos":[62635,62645],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[62710,62713]},{"pos":[62782,62791],"content":"Matrix3x2","needQuote":true,"nodes":[{"content":"Matrix3x2","pos":[0,9]}]},{"pos":[62842,62843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63110,63132],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[63280,63286],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[63353,63354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63404,63410],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[63471,63472]},{"pos":[63527,63533],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63593,63594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63691,63697],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[63764,63765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63815,63821],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[63882,63883]},{"pos":[63938,63944],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64004,64005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64250,64281],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[64447,64462],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[64538,64539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64589,64595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[64656,64657]},{"pos":[64712,64718],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64778,64779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64885,64900],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[64976,64977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65027,65033],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[65094,65095]},{"pos":[65150,65156],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65216,65217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65443,65452],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[65545,65552],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[65620,65621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65648,65649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65718,65725],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[65793,65794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65821,65822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65964,65977],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"pos":[66132,66142],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[66185,66186],"content":"<","needQuote":true,"nodes":[]},{"pos":[66213,66214],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[66313,66323],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[66367,66370]},{"pos":[66404,66405],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[66432,66433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66593,66599],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[66730,66736],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66881,66887],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[67053,67062],"content":"Matrix3x2","needQuote":true,"nodes":[{"content":"Matrix3x2","pos":[0,9]}]},{"pos":[67235,67242],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[67409,67416],"content":"Vector2","needQuote":true,"nodes":[{"content":"Vector2","pos":[0,7]}]},{"pos":[67710,67727],"content":"Equals(Matrix3x2)","needQuote":true,"nodes":[{"content":"Equals(Matrix3x2)","pos":[0,17]}]},{"pos":[67981,67987],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[68085,68086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68148,68157],"content":"Matrix3x2","needQuote":true,"nodes":[{"content":"Matrix3x2","pos":[0,9]}]},{"pos":[68208,68209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68287,68293],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[68394,68395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68457,68466],"content":"Matrix3x2","needQuote":true,"nodes":[{"content":"Matrix3x2","pos":[0,9]}]},{"pos":[68517,68518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68813,68822],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"pos":[68980,68986],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69039,69040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69067,69068],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[69095,69096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69174,69180],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69236,69237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69264,69265],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[69292,69293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69542,69556],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[69681,69687],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69736,69737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69787,69793],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69853,69854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69940,69946],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69995,69996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70046,70052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70112,70113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70294,70303],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[70482,70495],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[70602,70613],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[70667,70668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70695,70696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70772,70783],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[70837,70838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70865,70866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71032,71037],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71201,71211],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[71312,71320],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[71371,71372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71399,71400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71473,71481],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[71532,71533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71560,71561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71722,71728],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Numerics.Matrix3x2\n  commentId: T:System.Numerics.Matrix3x2\n  id: Matrix3x2\n  parent: System.Numerics\n  children:\n  - System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)\n  - System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.CreateRotation(System.Single)\n  - System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateScale(System.Single)\n  - System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)\n  - System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)\n  - System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)\n  - System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)\n  - System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.Equals(System.Object)\n  - System.Numerics.Matrix3x2.GetDeterminant\n  - System.Numerics.Matrix3x2.GetHashCode\n  - System.Numerics.Matrix3x2.Identity\n  - System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)\n  - System.Numerics.Matrix3x2.IsIdentity\n  - System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)\n  - System.Numerics.Matrix3x2.M11\n  - System.Numerics.Matrix3x2.M12\n  - System.Numerics.Matrix3x2.M21\n  - System.Numerics.Matrix3x2.M22\n  - System.Numerics.Matrix3x2.M31\n  - System.Numerics.Matrix3x2.M32\n  - System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)\n  - System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)\n  - System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  - System.Numerics.Matrix3x2.ToString\n  - System.Numerics.Matrix3x2.Translation\n  langs:\n  - csharp\n  - vb\n  name: Matrix3x2\n  fullName: System.Numerics.Matrix3x2\n  type: Struct\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Matrix3x2\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 10\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Represents a 3x2 matrix. </p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct Matrix3x2 : IEquatable<Matrix3x2>\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure Matrix3x2\n          Implements IEquatable(Of Matrix3x2)\n  implements:\n  - System.IEquatable{System.Numerics.Matrix3x2}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: Matrix3x2\n- uid: System.Numerics.Matrix3x2.M11\n  commentId: F:System.Numerics.Matrix3x2.M11\n  id: M11\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: M11\n  fullName: System.Numerics.Matrix3x2.M11\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: M11\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 13\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The first element of the first row. </p>\\n\"\n  syntax:\n    content: public float M11\n    content.vb: Public M11 As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.M11\n- uid: System.Numerics.Matrix3x2.M12\n  commentId: F:System.Numerics.Matrix3x2.M12\n  id: M12\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: M12\n  fullName: System.Numerics.Matrix3x2.M12\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: M12\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 14\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The second element of the first row. </p>\\n\"\n  syntax:\n    content: public float M12\n    content.vb: Public M12 As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.M12\n- uid: System.Numerics.Matrix3x2.M21\n  commentId: F:System.Numerics.Matrix3x2.M21\n  id: M21\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: M21\n  fullName: System.Numerics.Matrix3x2.M21\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: M21\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 15\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The first element of the second row. </p>\\n\"\n  syntax:\n    content: public float M21\n    content.vb: Public M21 As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.M21\n- uid: System.Numerics.Matrix3x2.M22\n  commentId: F:System.Numerics.Matrix3x2.M22\n  id: M22\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: M22\n  fullName: System.Numerics.Matrix3x2.M22\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: M22\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 16\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The second element of the second row. </p>\\n\"\n  syntax:\n    content: public float M22\n    content.vb: Public M22 As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.M22\n- uid: System.Numerics.Matrix3x2.M31\n  commentId: F:System.Numerics.Matrix3x2.M31\n  id: M31\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: M31\n  fullName: System.Numerics.Matrix3x2.M31\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: M31\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 17\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The first element of the third row. </p>\\n\"\n  syntax:\n    content: public float M31\n    content.vb: Public M31 As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.M31\n- uid: System.Numerics.Matrix3x2.M32\n  commentId: F:System.Numerics.Matrix3x2.M32\n  id: M32\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: M32\n  fullName: System.Numerics.Matrix3x2.M32\n  type: Field\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: M32\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 18\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>The second element of the third row. </p>\\n\"\n  syntax:\n    content: public float M32\n    content.vb: Public M32 As Single\n    return:\n      type: System.Single\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.M32\n- uid: System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)\n  commentId: M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)'\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Matrix3x2(Single, Single, Single, Single, Single, Single)\n  fullName: System.Numerics.Matrix3x2.Matrix3x2(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 19\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a 3x2 matrix from the specified components. </p>\\n\"\n  syntax:\n    content: public Matrix3x2(float m11, float m12, float m21, float m22, float m31, float m32)\n    content.vb: Public Sub New(m11 As Single, m12 As Single, m21 As Single, m22 As Single, m31 As Single, m32 As Single)\n    parameters:\n    - id: m11\n      type: System.Single\n      description: \"\\n<p>The value to assign to the first element in the first row. </p>\\n\"\n    - id: m12\n      type: System.Single\n      description: \"\\n<p>The value to assign to the second element in the first row. </p>\\n\"\n    - id: m21\n      type: System.Single\n      description: \"\\n<p>The value to assign to the first element in the second row. </p>\\n\"\n    - id: m22\n      type: System.Single\n      description: \"\\n<p>The value to assign to the second element in the second row. </p>\\n\"\n    - id: m31\n      type: System.Single\n      description: \"\\n<p>The value to assign to the first element in the third row. </p>\\n\"\n    - id: m32\n      type: System.Single\n      description: \"\\n<p>The value to assign to the second element in the third row. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.Matrix3x2(Single, Single, Single, Single, Single, Single)\n- uid: System.Numerics.Matrix3x2.Identity\n  commentId: P:System.Numerics.Matrix3x2.Identity\n  id: Identity\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Identity\n  fullName: System.Numerics.Matrix3x2.Identity\n  type: Property\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Identity\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 20\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Gets the multiplicative identity matrix. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 Identity { get; }\n    content.vb: Public Shared ReadOnly Property Identity As Matrix3x2\n    parameters: []\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The multiplicative identify matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Matrix3x2.Identity\n- uid: System.Numerics.Matrix3x2.IsIdentity\n  commentId: P:System.Numerics.Matrix3x2.IsIdentity\n  id: IsIdentity\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: IsIdentity\n  fullName: System.Numerics.Matrix3x2.IsIdentity\n  type: Property\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsIdentity\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 21\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Indicates whether the current matrix is the identity matrix. </p>\\n\"\n  syntax:\n    content: public bool IsIdentity { get; }\n    content.vb: Public ReadOnly Property IsIdentity As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current matrix is the identity matrix; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Matrix3x2.IsIdentity\n- uid: System.Numerics.Matrix3x2.Translation\n  commentId: P:System.Numerics.Matrix3x2.Translation\n  id: Translation\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Translation\n  fullName: System.Numerics.Matrix3x2.Translation\n  type: Property\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Translation\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 22\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Gets or sets the translation component of this matrix. </p>\\n\"\n  syntax:\n    content: public Vector2 Translation { get; set; }\n    content.vb: Public Property Translation As Vector2\n    parameters: []\n    return:\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The translation component of the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.Translation\n- uid: System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Add(Matrix3x2, Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 23\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Adds each element in one matrix with its corresponding element in a second matrix. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 Add(Matrix3x2 value1, Matrix3x2 value2)\n    content.vb: Public Shared Function Add(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The first matrix. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The second matrix. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The matrix that contains the summed values of <em>value1</em> and <em>value2</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Add(Matrix3x2, Matrix3x2)\n- uid: System.Numerics.Matrix3x2.CreateRotation(System.Single)\n  commentId: M:System.Numerics.Matrix3x2.CreateRotation(System.Single)\n  id: CreateRotation(System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateRotation(Single)\n  fullName: System.Numerics.Matrix3x2.CreateRotation(System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateRotation\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 24\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a rotation matrix using the given rotation in radians. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateRotation(float radians)\n    content.vb: Public Shared Function CreateRotation(radians As Single) As Matrix3x2\n    parameters:\n    - id: radians\n      type: System.Single\n      description: \"\\n<p>The amount of rotation, in radians. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The rotation matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateRotation(Single)\n- uid: System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)\n  commentId: M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)\n  id: CreateRotation(System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateRotation(Single, Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateRotation(System.Single, System.Numerics.Vector2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateRotation\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 25\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a rotation matrix using the specified rotation in radians and a center point. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateRotation(float radians, Vector2 centerPoint)\n    content.vb: Public Shared Function CreateRotation(radians As Single, centerPoint As Vector2) As Matrix3x2\n    parameters:\n    - id: radians\n      type: System.Single\n      description: \"\\n<p>The amount of rotation, in radians. </p>\\n\"\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The center point. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The rotation matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateRotation(Single, Vector2)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)\n  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)\n  id: CreateScale(System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateScale(Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateScale\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 26\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a scaling matrix from the specified vector scale. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateScale(Vector2 scales)\n    content.vb: Public Shared Function CreateScale(scales As Vector2) As Matrix3x2\n    parameters:\n    - id: scales\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The scale to use. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The scaling matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateScale(Vector2)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)\n  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)\n  id: CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateScale(Vector2, Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2, System.Numerics.Vector2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateScale\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 27\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a scaling matrix from the specified vector scale with an offset from the specified center point. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateScale(Vector2 scales, Vector2 centerPoint)\n    content.vb: Public Shared Function CreateScale(scales As Vector2, centerPoint As Vector2) As Matrix3x2\n    parameters:\n    - id: scales\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The scale to use. </p>\\n\"\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The center offset. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The scaling matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateScale(Vector2, Vector2)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single)\n  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Single)\n  id: CreateScale(System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateScale(Single)\n  fullName: System.Numerics.Matrix3x2.CreateScale(System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateScale\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 28\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a scaling matrix that scales uniformly with the given scale. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateScale(float scale)\n    content.vb: Public Shared Function CreateScale(scale As Single) As Matrix3x2\n    parameters:\n    - id: scale\n      type: System.Single\n      description: \"\\n<p>The uniform scale to use. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The scaling matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateScale(Single)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)\n  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)\n  id: CreateScale(System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateScale(Single, Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(System.Single, System.Numerics.Vector2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateScale\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 29\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateScale(float scale, Vector2 centerPoint)\n    content.vb: Public Shared Function CreateScale(scale As Single, centerPoint As Vector2) As Matrix3x2\n    parameters:\n    - id: scale\n      type: System.Single\n      description: \"\\n<p>The uniform scale to use. </p>\\n\"\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The center offset. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The scaling matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateScale(Single, Vector2)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)\n  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)\n  id: CreateScale(System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateScale(Single, Single)\n  fullName: System.Numerics.Matrix3x2.CreateScale(System.Single, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateScale\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 30\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a scaling matrix from the specified X and Y components. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateScale(float xScale, float yScale)\n    content.vb: Public Shared Function CreateScale(xScale As Single, yScale As Single) As Matrix3x2\n    parameters:\n    - id: xScale\n      type: System.Single\n      description: \"\\n<p>The value to scale by on the X axis. </p>\\n\"\n    - id: yScale\n      type: System.Single\n      description: \"\\n<p>The value to scale by on the Y axis. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The scaling matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateScale(Single, Single)\n- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)\n  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)\n  id: CreateScale(System.Single,System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateScale(Single, Single, Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateScale(System.Single, System.Single, System.Numerics.Vector2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateScale\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 31\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a scaling matrix that is offset by a given center point. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateScale(float xScale, float yScale, Vector2 centerPoint)\n    content.vb: Public Shared Function CreateScale(xScale As Single, yScale As Single, centerPoint As Vector2) As Matrix3x2\n    parameters:\n    - id: xScale\n      type: System.Single\n      description: \"\\n<p>The value to scale by on the X axis. </p>\\n\"\n    - id: yScale\n      type: System.Single\n      description: \"\\n<p>The value to scale by on the Y axis. </p>\\n\"\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The center point. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The scaling matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateScale(Single, Single, Vector2)\n- uid: System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)\n  commentId: M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)\n  id: CreateSkew(System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateSkew(Single, Single)\n  fullName: System.Numerics.Matrix3x2.CreateSkew(System.Single, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateSkew\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 32\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a skew matrix from the specified angles in radians. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateSkew(float radiansX, float radiansY)\n    content.vb: Public Shared Function CreateSkew(radiansX As Single, radiansY As Single) As Matrix3x2\n    parameters:\n    - id: radiansX\n      type: System.Single\n      description: \"\\n<p>The X angle, in radians. </p>\\n\"\n    - id: radiansY\n      type: System.Single\n      description: \"\\n<p>The Y angle, in radians. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The skew matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateSkew(Single, Single)\n- uid: System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)\n  commentId: M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)\n  id: CreateSkew(System.Single,System.Single,System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateSkew(Single, Single, Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateSkew(System.Single, System.Single, System.Numerics.Vector2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateSkew\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 33\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a skew matrix from the specified angles in radians and a center point. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateSkew(float radiansX, float radiansY, Vector2 centerPoint)\n    content.vb: Public Shared Function CreateSkew(radiansX As Single, radiansY As Single, centerPoint As Vector2) As Matrix3x2\n    parameters:\n    - id: radiansX\n      type: System.Single\n      description: \"\\n<p>The X angle, in radians. </p>\\n\"\n    - id: radiansY\n      type: System.Single\n      description: \"\\n<p>The Y angle, in radians. </p>\\n\"\n    - id: centerPoint\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The center point. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The skew matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateSkew(Single, Single, Vector2)\n- uid: System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)\n  commentId: M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)\n  id: CreateTranslation(System.Numerics.Vector2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateTranslation(Vector2)\n  fullName: System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateTranslation\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 34\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a translation matrix from the specified 2-dimensional vector. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateTranslation(Vector2 position)\n    content.vb: Public Shared Function CreateTranslation(position As Vector2) As Matrix3x2\n    parameters:\n    - id: position\n      type: System.Numerics.Vector2\n      description: \"\\n<p>The translation position. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The translation matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateTranslation(Vector2)\n- uid: System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)\n  commentId: M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)\n  id: CreateTranslation(System.Single,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: CreateTranslation(Single, Single)\n  fullName: System.Numerics.Matrix3x2.CreateTranslation(System.Single, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateTranslation\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 35\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Creates a translation matrix from the specified X and Y components. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 CreateTranslation(float xPosition, float yPosition)\n    content.vb: Public Shared Function CreateTranslation(xPosition As Single, yPosition As Single) As Matrix3x2\n    parameters:\n    - id: xPosition\n      type: System.Single\n      description: \"\\n<p>The X position. </p>\\n\"\n    - id: yPosition\n      type: System.Single\n      description: \"\\n<p>The Y position. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The translation matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.CreateTranslation(Single, Single)\n- uid: System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)\n  id: Equals(System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Equals(Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 36\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a value that indicates whether this instance and another 3x2 matrix are equal. </p>\\n\"\n  syntax:\n    content: public bool Equals(Matrix3x2 other)\n    content.vb: Public Function Equals(other As Matrix3x2) As Boolean\n    parameters:\n    - id: other\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The other matrix. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the two matrices are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.IEquatable{System.Numerics.Matrix3x2}.Equals(System.Numerics.Matrix3x2)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.Equals(Matrix3x2)\n- uid: System.Numerics.Matrix3x2.Equals(System.Object)\n  commentId: M:System.Numerics.Matrix3x2.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Numerics.Matrix3x2.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 37\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a value that indicates whether this instance and a specified object are equal. </p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current instance and <em>obj</em> are equal; otherwise, <strong>false</strong><strong></strong>. If <em>obj</em> is <strong>null</strong>, the method returns <strong>false</strong>. </p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Matrix3x2.Equals(Object)\n- uid: System.Numerics.Matrix3x2.GetDeterminant\n  commentId: M:System.Numerics.Matrix3x2.GetDeterminant\n  id: GetDeterminant\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: GetDeterminant()\n  fullName: System.Numerics.Matrix3x2.GetDeterminant()\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDeterminant\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 38\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Calculates the determinant for this matrix. </p>\\n\"\n  syntax:\n    content: public float GetDeterminant()\n    content.vb: Public Function GetDeterminant As Single\n    return:\n      type: System.Single\n      description: \"\\n<p>The determinant. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Matrix3x2.GetDeterminant()\n- uid: System.Numerics.Matrix3x2.GetHashCode\n  commentId: M:System.Numerics.Matrix3x2.GetHashCode\n  id: GetHashCode\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Numerics.Matrix3x2.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 39\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the hash code for this instance. </p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code. </p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Matrix3x2.GetHashCode()\n- uid: System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)\n  commentId: M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)\n  id: Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Invert(Matrix3x2, out Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2, out System.Numerics.Matrix3x2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Invert\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 40\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Inverts the specified matrix. The return value indicates whether the operation succeeded. </p>\\n\"\n  syntax:\n    content: public static bool Invert(Matrix3x2 matrix, out Matrix3x2 result)\n    content.vb: Public Shared Function Invert(matrix As Matrix3x2, ByRef result As Matrix3x2) As Boolean\n    parameters:\n    - id: matrix\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The matrix to invert. </p>\\n\"\n    - id: result\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>When this method returns, contains the inverted matrix if the operation succeeded. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>matrix</em> was converted successfully; otherwise,  <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2, ByRef System.Numerics.Matrix3x2)\n  name.vb: Invert(Matrix3x2, ByRef Matrix3x2)\n  nameWithType: Matrix3x2.Invert(Matrix3x2, out Matrix3x2)\n  nameWithType.vb: Matrix3x2.Invert(Matrix3x2, ByRef Matrix3x2)\n- uid: System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)\n  commentId: M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)\n  id: Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Lerp(Matrix3x2, Matrix3x2, Single)\n  fullName: System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Lerp\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 41\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 Lerp(Matrix3x2 matrix1, Matrix3x2 matrix2, float amount)\n    content.vb: Public Shared Function Lerp(matrix1 As Matrix3x2, matrix2 As Matrix3x2, amount As Single) As Matrix3x2\n    parameters:\n    - id: matrix1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The first matrix. </p>\\n\"\n    - id: matrix2\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The second matrix. </p>\\n\"\n    - id: amount\n      type: System.Single\n      description: \"\\n<p>The relative weighting of <em>matrix2</em>. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The interpolated matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Lerp(Matrix3x2, Matrix3x2, Single)\n- uid: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Matrix3x2, Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 42\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the matrix that results from multiplying two matrices together. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 Multiply(Matrix3x2 value1, Matrix3x2 value2)\n    content.vb: Public Shared Function Multiply(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The first matrix. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The second matrix. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The product matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Multiply(Matrix3x2, Matrix3x2)\n- uid: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)\n  commentId: M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)\n  id: Multiply(System.Numerics.Matrix3x2,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Matrix3x2, Single)\n  fullName: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 43\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 Multiply(Matrix3x2 value1, float value2)\n    content.vb: Public Shared Function Multiply(value1 As Matrix3x2, value2 As Single) As Matrix3x2\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The matrix to scale. </p>\\n\"\n    - id: value2\n      type: System.Single\n      description: \"\\n<p>The scaling value to use. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The scaled matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Multiply(Matrix3x2, Single)\n- uid: System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)\n  id: Negate(System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Negate(Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Negate\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 44\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Negates the specified matrix by multiplying all its values by -1. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 Negate(Matrix3x2 value)\n    content.vb: Public Shared Function Negate(value As Matrix3x2) As Matrix3x2\n    parameters:\n    - id: value\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The matrix to negate. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The negated matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Negate(Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Addition(Matrix3x2, Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Addition(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Addition\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 45\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Adds each element in one matrix with its corresponding element in a second matrix. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 operator +(Matrix3x2 value1, Matrix3x2 value2)\n    content.vb: Public Shared Operator +(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The first matrix. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The second matrix. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The matrix that contains the summed values. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Addition(Matrix3x2, Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Equality(Matrix3x2, Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Equality(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 46\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a value that indicates whether the specified matrices are equal. </p>\\n\"\n  syntax:\n    content: public static bool operator ==(Matrix3x2 value1, Matrix3x2 value2)\n    content.vb: Public Shared Operator =(value1 As Matrix3x2, value2 As Matrix3x2) As Boolean\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The first matrix to compare. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The second matrix to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>value1</em> and <em>value2</em> are equal; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Equality(Matrix3x2, Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Matrix3x2, Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Inequality(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 47\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a value that indicates whether the specified matrices are not equal. </p>\\n\"\n  syntax:\n    content: public static bool operator !=(Matrix3x2 value1, Matrix3x2 value2)\n    content.vb: Public Shared Operator <>(value1 As Matrix3x2, value2 As Matrix3x2) As Boolean\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The first matrix to compare. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The second matrix to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>value1</em> and <em>value2</em> are not equal; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Inequality(Matrix3x2, Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Matrix3x2, Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 48\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the matrix that results from multiplying two matrices together. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 operator *(Matrix3x2 value1, Matrix3x2 value2)\n    content.vb: Public Shared Operator *(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The first matrix. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The second matrix. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The product matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Multiply(Matrix3x2, Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)\n  commentId: M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)\n  id: op_Multiply(System.Numerics.Matrix3x2,System.Single)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Multiply(Matrix3x2, Single)\n  fullName: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2, System.Single)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Multiply\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 49\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 operator *(Matrix3x2 value1, float value2)\n    content.vb: Public Shared Operator *(value1 As Matrix3x2, value2 As Single) As Matrix3x2\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The matrix to scale. </p>\\n\"\n    - id: value2\n      type: System.Single\n      description: \"\\n<p>The scaling value to use. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The scaled matrix. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Multiply(Matrix3x2, Single)\n- uid: System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Subtraction(Matrix3x2, Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Subtraction(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Subtraction\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 50\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Subtracts each element in a second matrix from its corresponding element in a first matrix. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 operator -(Matrix3x2 value1, Matrix3x2 value2)\n    content.vb: Public Shared Operator -(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The first matrix. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The second matrix. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The matrix containing the values that result from subtracting each element in <em>value2</em> from its corresponding element in <em>value1</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Subtraction(Matrix3x2, Matrix3x2)\n- uid: System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)\n  id: op_UnaryNegation(System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: UnaryNegation(Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.UnaryNegation(System.Numerics.Matrix3x2)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_UnaryNegation\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 51\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Negates the specified matrix by multiplying all its values by -1. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 operator -(Matrix3x2 value)\n    content.vb: Public Shared Operator -(value As Matrix3x2) As Matrix3x2\n    parameters:\n    - id: value\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The matrix to negate. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The negated matrix. </p>\\n\"\n  seealso:\n  - type: System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)\n    commentId: M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.UnaryNegation(Matrix3x2)\n- uid: System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  commentId: M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  id: Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: Subtract(Matrix3x2, Matrix3x2)\n  fullName: System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subtract\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 52\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Subtracts each element in a second matrix from its corresponding element in a first matrix. </p>\\n\"\n  syntax:\n    content: public static Matrix3x2 Subtract(Matrix3x2 value1, Matrix3x2 value2)\n    content.vb: Public Shared Function Subtract(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2\n    parameters:\n    - id: value1\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The first matrix. </p>\\n\"\n    - id: value2\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The second matrix. </p>\\n\"\n    return:\n      type: System.Numerics.Matrix3x2\n      description: \"\\n<p>The matrix containing the values that result from subtracting each element in <em>value2</em> from its corresponding element in <em>value1</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Matrix3x2.Subtract(Matrix3x2, Matrix3x2)\n- uid: System.Numerics.Matrix3x2.ToString\n  commentId: M:System.Numerics.Matrix3x2.ToString\n  id: ToString\n  parent: System.Numerics.Matrix3x2\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Numerics.Matrix3x2.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs\n    startLine: 53\n  assemblies:\n  - System.Numerics.Vectors\n  namespace: System.Numerics\n  summary: \"\\n<p>Returns a string that represents this matrix. </p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of this matrix. </p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Matrix3x2.ToString()\nreferences:\n- uid: System.Numerics\n  isExternal: false\n  name: System.Numerics\n  fullName: System.Numerics\n  commentId: N:System.Numerics\n  nameWithType: System.Numerics\n- uid: System.IEquatable{System.Numerics.Matrix3x2}\n  parent: System\n  definition: System.IEquatable`1\n  name: IEquatable<Matrix3x2>\n  fullName: System.IEquatable<System.Numerics.Matrix3x2>\n  fullname.vb: System.IEquatable(Of System.Numerics.Matrix3x2)\n  name.vb: IEquatable(Of Matrix3x2)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Numerics.Matrix3x2\n    name: Matrix3x2\n    fullName: System.Numerics.Matrix3x2\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Numerics.Matrix3x2\n    name: Matrix3x2\n    fullName: System.Numerics.Matrix3x2\n  - name: )\n    fullName: )\n  commentId: T:System.IEquatable{System.Numerics.Matrix3x2}\n  nameWithType: IEquatable<Matrix3x2>\n  nameWithType.vb: IEquatable(Of Matrix3x2)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.IEquatable`1\n  isExternal: false\n  name: IEquatable<T>\n  fullName: System.IEquatable<T>\n  fullname.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.IEquatable`1\n  nameWithType: IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  commentId: T:System.Single\n  nameWithType: Single\n- uid: System.Numerics.Matrix3x2\n  parent: System.Numerics\n  isExternal: false\n  name: Matrix3x2\n  fullName: System.Numerics.Matrix3x2\n  commentId: T:System.Numerics.Matrix3x2\n  nameWithType: Matrix3x2\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Numerics.Vector2\n  parent: System.Numerics\n  isExternal: false\n  name: Vector2\n  fullName: System.Numerics.Vector2\n  commentId: T:System.Numerics.Vector2\n  nameWithType: Vector2\n- uid: System.IEquatable{System.Numerics.Matrix3x2}.Equals(System.Numerics.Matrix3x2)\n  parent: System.IEquatable{System.Numerics.Matrix3x2}\n  definition: System.IEquatable`1.Equals(`0)\n  name: Equals(Matrix3x2)\n  fullName: System.IEquatable<System.Numerics.Matrix3x2>.Equals(System.Numerics.Matrix3x2)\n  fullname.vb: System.IEquatable(Of System.Numerics.Matrix3x2).Equals(System.Numerics.Matrix3x2)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<System.Numerics.Matrix3x2>.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Numerics.Matrix3x2\n    name: Matrix3x2\n    fullName: System.Numerics.Matrix3x2\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of System.Numerics.Matrix3x2).Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Numerics.Matrix3x2\n    name: Matrix3x2\n    fullName: System.Numerics.Matrix3x2\n  - name: )\n    fullName: )\n  commentId: M:System.IEquatable{System.Numerics.Matrix3x2}.Equals(System.Numerics.Matrix3x2)\n  nameWithType: IEquatable<Matrix3x2>.Equals(Matrix3x2)\n  nameWithType.vb: IEquatable(Of Matrix3x2).Equals(Matrix3x2)\n- uid: System.IEquatable`1.Equals(`0)\n  isExternal: false\n  name: Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  fullname.vb: System.IEquatable(Of T).Equals(T)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<T>.Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of T).Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.IEquatable`1.Equals(`0)\n  nameWithType: IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.Equals(System.Object)\n  nameWithType: ValueType.Equals(Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  commentId: T:System.ValueType\n  nameWithType: ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.GetHashCode\n  nameWithType: ValueType.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.ToString\n  nameWithType: ValueType.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}