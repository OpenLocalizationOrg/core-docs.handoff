{"nodes":[{"pos":[257,290],"content":"LocalCertificateSelectionCallback","needQuote":true,"nodes":[{"content":"LocalCertificateSelectionCallback","pos":[0,33]}]},{"content":"\\n&lt;p&gt;An object that contains state information for this validation.&lt;/p&gt;\\n","pos":[1389,1462],"source":"\\n<p>An object that contains state information for this validation.</p>\\n"},{"content":"\\n&lt;p&gt;The host server specified by the client.&lt;/p&gt;\\n","pos":[1531,1582],"source":"\\n<p>The host server specified by the client.</p>\\n"},{"content":"\\n&lt;p&gt;The certificate used to authenticate the remote party.&lt;/p&gt;\\n","pos":[2016,2081],"source":"\\n<p>The certificate used to authenticate the remote party.</p>\\n"},{"pos":[3043,3062],"content":"System.Net.Security","needQuote":true,"nodes":[{"content":"System.Net.Security","pos":[0,19]}]},{"pos":[3404,3419],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[3588,3601],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3686,3687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3714,3715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3822,3835],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3920,3921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3948,3949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4184,4190],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4335,4341],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[4583,4608],"content":"X509CertificateCollection","needQuote":true,"nodes":[{"content":"X509CertificateCollection","pos":[0,25]}]},{"pos":[4975,4990],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[5205,5213],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[5341,5347],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[5408,5410]},{"pos":[5475,5481],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[5541,5543],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[5725,5748],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[5949,5962],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[6047,6048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6100,6108],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[6170,6171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6295,6308],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[6393,6394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6446,6454],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[6516,6517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6803,6830],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[7036,7042],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[7188,7233],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[7468,7485],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.Net.Security.LocalCertificateSelectionCallback\n  commentId: T:System.Net.Security.LocalCertificateSelectionCallback\n  id: LocalCertificateSelectionCallback\n  parent: System.Net.Security\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: LocalCertificateSelectionCallback\n  fullName: System.Net.Security.LocalCertificateSelectionCallback\n  type: Delegate\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocalCertificateSelectionCallback\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 28\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: \"\\n<p>Selects the local Secure Sockets Layer (SSL) certificate used for authentication.</p>\\n\"\n  syntax:\n    content: public delegate X509Certificate LocalCertificateSelectionCallback(object sender, string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, string[] acceptableIssuers);\n    content.vb: Public Delegate Function LocalCertificateSelectionCallback(sender As Object, targetHost As String, localCertificates As X509CertificateCollection, remoteCertificate As X509Certificate, acceptableIssuers As String()) As X509Certificate\n    parameters:\n    - id: sender\n      type: System.Object\n      description: \"\\n<p>An object that contains state information for this validation.</p>\\n\"\n    - id: targetHost\n      type: System.String\n      description: \"\\n<p>The host server specified by the client.</p>\\n\"\n    - id: localCertificates\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing local certificates.</p>\\n\"\n    - id: remoteCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: \"\\n<p>The certificate used to authenticate the remote party.</p>\\n\"\n    - id: acceptableIssuers\n      type: System.String[]\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array of certificate issuers acceptable to the remote party.</p>\\n\"\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used for establishing an SSL connection.</p>\\n\"\n  seealso:\n  - type: System.Net.Security.RemoteCertificateValidationCallback\n    commentId: T:System.Net.Security.RemoteCertificateValidationCallback\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: LocalCertificateSelectionCallback\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System.Net.Security\n  isExternal: false\n  name: System.Net.Security\n  fullName: System.Net.Security\n  commentId: N:System.Net.Security\n  nameWithType: System.Net.Security\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  nameWithType: X509CertificateCollection\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate\n  nameWithType: X509Certificate\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  commentId: N:System.Reflection\n  nameWithType: System.Reflection\n"}