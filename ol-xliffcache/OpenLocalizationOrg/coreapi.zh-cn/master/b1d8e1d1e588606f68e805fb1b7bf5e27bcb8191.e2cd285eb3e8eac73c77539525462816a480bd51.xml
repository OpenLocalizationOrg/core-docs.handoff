{"nodes":[{"pos":[870,886],"content":"ValidationResult","needQuote":true,"nodes":[{"content":"ValidationResult","pos":[0,16]}]},{"pos":[2288,2295],"content":"Success","needQuote":true,"nodes":[{"content":"Success","pos":[0,7]}]},{"pos":[3780,3814],"content":"ValidationResult(ValidationResult)","needQuote":true,"nodes":[{"content":"ValidationResult(ValidationResult)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The validation result object.&lt;/p&gt;\\n","pos":[5024,5064],"source":"\\n<p>The validation result object.</p>\\n"},{"pos":[5501,5525],"content":"ValidationResult(String)","needQuote":true,"nodes":[{"content":"ValidationResult(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The error message.&lt;/p&gt;\\n","pos":[6508,6537],"source":"\\n<p>The error message.</p>\\n"},{"pos":[7120,7165],"content":"ValidationResult(String, IEnumerable<String>)","needQuote":true,"nodes":[{"content":"ValidationResult(String, IEnumerable&lt;String&gt;)","pos":[0,45],"source":"ValidationResult(String, IEnumerable<String>)"}]},{"content":"\\n&lt;p&gt;The error message.&lt;/p&gt;\\n","pos":[8325,8354],"source":"\\n<p>The error message.</p>\\n"},{"content":"\\n&lt;p&gt;The list of member names that have validation errors.&lt;/p&gt;\\n","pos":[8464,8528],"source":"\\n<p>The list of member names that have validation errors.</p>\\n"},{"pos":[9249,9261],"content":"ErrorMessage","needQuote":true,"nodes":[{"content":"ErrorMessage","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The error message for the validation.&lt;/p&gt;\\n","pos":[10078,10126],"source":"\\n<p>The error message for the validation.</p>\\n"},{"pos":[10522,10533],"content":"MemberNames","needQuote":true,"nodes":[{"content":"MemberNames","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The collection of member names that indicate which fields have validation errors.&lt;/p&gt;\\n","pos":[11463,11555],"source":"\\n<p>The collection of member names that indicate which fields have validation errors.</p>\\n"},{"pos":[11946,11956],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The current validation result.&lt;/p&gt;\\n","pos":[12769,12810],"source":"\\n<p>The current validation result.</p>\\n"},{"pos":[13063,13100],"content":"System.ComponentModel.DataAnnotations","needQuote":true,"nodes":[{"content":"System.ComponentModel.DataAnnotations","pos":[0,37]}]},{"pos":[13324,13330],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13503,13517],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13636,13642],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13709,13710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13760,13766],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13826,13827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13910,13916],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13983,13984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14034,14040],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14100,14101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14315,14337],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[14485,14491],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14558,14559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14609,14615],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14676,14677]},{"pos":[14732,14738],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14798,14799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14896,14902],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14969,14970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15020,15026],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15087,15088]},{"pos":[15143,15149],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15209,15210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15455,15486],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15652,15667],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15743,15744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15794,15800],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15861,15862]},{"pos":[15917,15923],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15983,15984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16090,16105],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16181,16182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16232,16238],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16299,16300]},{"pos":[16355,16361],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16421,16422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16652,16665],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16766,16777],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16849,16850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16877,16878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16951,16962],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17034,17035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17062,17063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17238,17247],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[17340,17347],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17415,17416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17443,17444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17513,17520],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17588,17589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17616,17617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17792,17809],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[17918,17933],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18009,18010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18037,18038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18115,18130],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18206,18207],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18234,18235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18380,18386],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18589,18605],"content":"ValidationResult","needQuote":true,"nodes":[{"content":"ValidationResult","pos":[0,16]}]},{"pos":[18842,18848],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19088,19107],"content":"IEnumerable<String>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;String&gt;","pos":[0,19],"source":"IEnumerable<String>"}]},{"pos":[19355,19366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[19430,19431],"content":"<","needQuote":true,"nodes":[]},{"pos":[19481,19487],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19640,19651],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[19716,19719]},{"pos":[19776,19782],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19842,19843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20083,20097],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[20316,20327],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[20391,20392],"content":"<","needQuote":true,"nodes":[]},{"pos":[20419,20420],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[20540,20551],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[20616,20619]},{"pos":[20653,20654],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[20681,20682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20885,20911],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[21117,21127],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[21222,21230],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21299,21300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21327,21328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21398,21406],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21475,21476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21503,21504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.ComponentModel.DataAnnotations.ValidationResult\n  commentId: T:System.ComponentModel.DataAnnotations.ValidationResult\n  id: ValidationResult\n  parent: System.ComponentModel.DataAnnotations\n  children:\n  - System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)\n  - System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)\n  - System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})\n  - System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage\n  - System.ComponentModel.DataAnnotations.ValidationResult.MemberNames\n  - System.ComponentModel.DataAnnotations.ValidationResult.Success\n  - System.ComponentModel.DataAnnotations.ValidationResult.ToString\n  langs:\n  - csharp\n  - vb\n  name: ValidationResult\n  fullName: System.ComponentModel.DataAnnotations.ValidationResult\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValidationResult\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n    startLine: 15\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Represents a container for the results of a validation request.</p>\\n\"\n  syntax:\n    content: public class ValidationResult\n    content.vb: Public Class ValidationResult\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ValidationResult\n- uid: System.ComponentModel.DataAnnotations.ValidationResult.Success\n  commentId: F:System.ComponentModel.DataAnnotations.ValidationResult.Success\n  id: Success\n  parent: System.ComponentModel.DataAnnotations.ValidationResult\n  langs:\n  - csharp\n  - vb\n  name: Success\n  fullName: System.ComponentModel.DataAnnotations.ValidationResult.Success\n  type: Field\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Success\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n    startLine: 26\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Represents the success of the validation (<strong>true</strong> if validation was successful; otherwise, <strong>false</strong>).</p>\\n\"\n  syntax:\n    content: public static readonly ValidationResult Success\n    content.vb: Public Shared ReadOnly Success As ValidationResult\n    return:\n      type: System.ComponentModel.DataAnnotations.ValidationResult\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: ValidationResult.Success\n- uid: System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)\n  commentId: M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)\n  id: '#ctor(System.ComponentModel.DataAnnotations.ValidationResult)'\n  parent: System.ComponentModel.DataAnnotations.ValidationResult\n  langs:\n  - csharp\n  - vb\n  name: ValidationResult(ValidationResult)\n  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ValidationResult(System.ComponentModel.DataAnnotations.ValidationResult)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n    startLine: 71\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.DataAnnotations.ValidationResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using a <xref href=\\\"System.ComponentModel.DataAnnotations.ValidationResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected ValidationResult(ValidationResult validationResult)\n    content.vb: Protected Sub New(validationResult As ValidationResult)\n    parameters:\n    - id: validationResult\n      type: System.ComponentModel.DataAnnotations.ValidationResult\n      description: \"\\n<p>The validation result object.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: ValidationResult.ValidationResult(ValidationResult)\n- uid: System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)\n  commentId: M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.DataAnnotations.ValidationResult\n  langs:\n  - csharp\n  - vb\n  name: ValidationResult(String)\n  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ValidationResult(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n    startLine: 43\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.DataAnnotations.ValidationResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using an error message.</p>\\n\"\n  syntax:\n    content: public ValidationResult(string errorMessage)\n    content.vb: Public Sub New(errorMessage As String)\n    parameters:\n    - id: errorMessage\n      type: System.String\n      description: \"\\n<p>The error message.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ValidationResult.ValidationResult(String)\n- uid: System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})\n  commentId: M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})\n  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})'\n  parent: System.ComponentModel.DataAnnotations.ValidationResult\n  langs:\n  - csharp\n  - vb\n  name: ValidationResult(String, IEnumerable<String>)\n  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ValidationResult(System.String, System.Collections.Generic.IEnumerable<System.String>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n    startLine: 60\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.DataAnnotations.ValidationResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using an error message and a list of members that have validation errors.</p>\\n\"\n  syntax:\n    content: public ValidationResult(string errorMessage, IEnumerable<string> memberNames)\n    content.vb: Public Sub New(errorMessage As String, memberNames As IEnumerable(Of String))\n    parameters:\n    - id: errorMessage\n      type: System.String\n      description: \"\\n<p>The error message.</p>\\n\"\n    - id: memberNames\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>The list of member names that have validation errors.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.ComponentModel.DataAnnotations.ValidationResult.ValidationResult(System.String, System.Collections.Generic.IEnumerable(Of System.String))\n  name.vb: ValidationResult(String, IEnumerable(Of String))\n  nameWithType: ValidationResult.ValidationResult(String, IEnumerable<String>)\n  nameWithType.vb: ValidationResult.ValidationResult(String, IEnumerable(Of String))\n- uid: System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage\n  commentId: P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage\n  id: ErrorMessage\n  parent: System.ComponentModel.DataAnnotations.ValidationResult\n  langs:\n  - csharp\n  - vb\n  name: ErrorMessage\n  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ErrorMessage\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n    startLine: 97\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Gets the error message for the validation.</p>\\n\"\n  syntax:\n    content: public string ErrorMessage { get; set; }\n    content.vb: Public Property ErrorMessage As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The error message for the validation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ValidationResult.ErrorMessage\n- uid: System.ComponentModel.DataAnnotations.ValidationResult.MemberNames\n  commentId: P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames\n  id: MemberNames\n  parent: System.ComponentModel.DataAnnotations.ValidationResult\n  langs:\n  - csharp\n  - vb\n  name: MemberNames\n  fullName: System.ComponentModel.DataAnnotations.ValidationResult.MemberNames\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MemberNames\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n    startLine: 89\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Gets the collection of member names that indicate which fields have validation errors.</p>\\n\"\n  syntax:\n    content: public IEnumerable<string> MemberNames { get; }\n    content.vb: Public ReadOnly Property MemberNames As IEnumerable(Of String)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>The collection of member names that indicate which fields have validation errors.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ValidationResult.MemberNames\n- uid: System.ComponentModel.DataAnnotations.ValidationResult.ToString\n  commentId: M:System.ComponentModel.DataAnnotations.ValidationResult.ToString\n  id: ToString\n  parent: System.ComponentModel.DataAnnotations.ValidationResult\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs\n    startLine: 120\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Returns a string representation of the current validation result.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The current validation result.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ValidationResult.ToString()\nreferences:\n- uid: System.ComponentModel.DataAnnotations\n  isExternal: false\n  name: System.ComponentModel.DataAnnotations\n  fullName: System.ComponentModel.DataAnnotations\n  nameWithType: System.ComponentModel.DataAnnotations\n  commentId: N:System.ComponentModel.DataAnnotations\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ComponentModel.DataAnnotations.ValidationResult\n  parent: System.ComponentModel.DataAnnotations\n  isExternal: false\n  name: ValidationResult\n  fullName: System.ComponentModel.DataAnnotations.ValidationResult\n  nameWithType: ValidationResult\n  commentId: T:System.ComponentModel.DataAnnotations.ValidationResult\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)\n  name.vb: IEnumerable(Of String)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<String>\n  nameWithType.vb: IEnumerable(Of String)\n  commentId: T:System.Collections.Generic.IEnumerable{System.String}\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n"}