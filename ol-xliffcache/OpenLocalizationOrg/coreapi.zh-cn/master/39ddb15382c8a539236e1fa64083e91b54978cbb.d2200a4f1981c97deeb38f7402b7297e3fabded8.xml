{"nodes":[{"pos":[844,857],"content":"PackUriHelper","needQuote":true,"nodes":[{"content":"PackUriHelper","pos":[0,13]}]},{"pos":[2079,2092],"content":"UriSchemePack","needQuote":true,"nodes":[{"content":"UriSchemePack","pos":[0,13]}]},{"pos":[3243,3267],"content":"ComparePartUri(Uri, Uri)","needQuote":true,"nodes":[{"content":"ComparePartUri(Uri, Uri)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;A value that indicates the relationship between &lt;em&gt;firstPartUri&lt;/em&gt; and &lt;em&gt;secondPartUri&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;Value&lt;/p&gt;\\n&lt;p&gt;Meaning&lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than 0&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;firstPartUri&lt;/em&gt; is less than &lt;em&gt;secondPartUri&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;0&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;firstPartUri&lt;/em&gt; is equivalent to &lt;em&gt;secondPartUri&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than 0&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;firstPartUri&lt;/em&gt; is greater than &lt;em&gt;secondPartUri&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n&lt;p&gt;&lt;/p&gt;\\n","pos":[4458,4997],"source":"\\n<p>A value that indicates the relationship between <em>firstPartUri</em> and <em>secondPartUri</em>.</p>\\n<p>Value</p>\\n<p>Meaning</p>\\n<table><tbody><tr><td>\\n<p>Less than 0</p>\\n</td><td>\\n<p>\\n<em>firstPartUri</em> is less than <em>secondPartUri</em>.</p>\\n</td></tr><tr><td>\\n<p>0</p>\\n</td><td>\\n<p>\\n<em>firstPartUri</em> is equivalent to <em>secondPartUri</em>.</p>\\n</td></tr><tr><td>\\n<p>Greater than 0</p>\\n</td><td>\\n<p>\\n<em>firstPartUri</em> is greater than <em>secondPartUri</em>.</p>\\n</td></tr></tbody></table>\\n<p></p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;firstPartUri&lt;/em&gt; or &lt;em&gt;secondPartUri&lt;/em&gt; is not a valid part URI syntax.&lt;/p&gt;\\n","pos":[5108,5200],"source":"\\n<p>\\n<em>firstPartUri</em> or <em>secondPartUri</em> is not a valid part URI syntax.</p>\\n"},{"pos":[5772,5790],"content":"CreatePartUri(Uri)","needQuote":true,"nodes":[{"content":"CreatePartUri(Uri)","pos":[0,18]}]},{"pos":[7610,7635],"content":"GetNormalizedPartUri(Uri)","needQuote":true,"nodes":[{"content":"GetNormalizedPartUri(Uri)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The normalized form of the given &lt;em&gt;partUri&lt;/em&gt;.&lt;/p&gt;\\n","pos":[8646,8707],"source":"\\n<p>The normalized form of the given <em>partUri</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8826,8881],"source":"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n"},{"pos":[9931,9958],"content":"GetRelationshipPartUri(Uri)","needQuote":true,"nodes":[{"content":"GetRelationshipPartUri(Uri)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11614,11669],"source":"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; syntax is not valid for a package part URI.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; is an absolute URI.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; references a relationship part.&lt;/p&gt;\\n","pos":[11766,11971],"source":"\\n<p>\\n<em>partUri</em> syntax is not valid for a package part URI.</p>\\n<p>-or-</p>\\n<p>\\n<em>partUri</em> is an absolute URI.</p>\\n<p>-or-</p>\\n<p>\\n<em>partUri</em> references a relationship part.</p>\\n"},{"pos":[12400,12424],"content":"GetRelativeUri(Uri, Uri)","needQuote":true,"nodes":[{"content":"GetRelativeUri(Uri, Uri)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The URI of the source part.&lt;/p&gt;\\n","pos":[13305,13343],"source":"\\n<p>The URI of the source part.</p>\\n"},{"content":"\\n&lt;p&gt;The URI of the target part.&lt;/p&gt;\\n","pos":[13412,13450],"source":"\\n<p>The URI of the target part.</p>\\n"},{"content":"\\n&lt;p&gt;The relative URI from &lt;em&gt;sourcePartUri&lt;/em&gt; to &lt;em&gt;targetPartUri&lt;/em&gt;.&lt;/p&gt;\\n","pos":[13507,13589],"source":"\\n<p>The relative URI from <em>sourcePartUri</em> to <em>targetPartUri</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourcePartUri&lt;/em&gt; or &lt;em&gt;targetPartUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13708,13795],"source":"\\n<p>\\n<em>sourcePartUri</em> or <em>targetPartUri</em> is <strong>null</strong>.</p>\\n"},{"pos":[14445,14489],"content":"GetSourcePartUriFromRelationshipPartUri(Uri)","needQuote":true,"nodes":[{"content":"GetSourcePartUriFromRelationshipPartUri(Uri)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;relationshipPartUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[16186,16253],"source":"\\n<p>\\n<em>relationshipPartUri</em> is <strong>null</strong>.</p>\\n"},{"pos":[17507,17533],"content":"IsRelationshipPartUri(Uri)","needQuote":true,"nodes":[{"content":"IsRelationshipPartUri(Uri)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;partUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[18935,18990],"source":"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n"},{"pos":[20041,20065],"content":"ResolvePartUri(Uri, Uri)","needQuote":true,"nodes":[{"content":"ResolvePartUri(Uri, Uri)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The relative URI to the target part.&lt;/p&gt;\\n","pos":[21108,21155],"source":"\\n<p>The relative URI to the target part.</p>\\n"},{"content":"\\n&lt;p&gt;The URI of the target part resolved between the specified &lt;em&gt;SourcePartUri&lt;/em&gt; and the &lt;em&gt;targetUri&lt;/em&gt; parameters.&lt;/p&gt;\\n","pos":[21212,21342],"source":"\\n<p>The URI of the target part resolved between the specified <em>SourcePartUri</em> and the <em>targetUri</em> parameters.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourcePartUri&lt;/em&gt; or &lt;em&gt;targetUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21461,21544],"source":"\\n<p>\\n<em>sourcePartUri</em> or <em>targetUri</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourcePartUri&lt;/em&gt; is not a valid part URI.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;targetUri&lt;/em&gt; is not a valid relative URI.&lt;/p&gt;\\n","pos":[21641,21772],"source":"\\n<p>\\n<em>sourcePartUri</em> is not a valid part URI.</p>\\n<p>-or-</p>\\n<p>\\n<em>targetUri</em> is not a valid relative URI.</p>\\n"},{"pos":[22299,22318],"content":"System.IO.Packaging","needQuote":true,"nodes":[{"content":"System.IO.Packaging","pos":[0,19]}]},{"pos":[22488,22494],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22654,22664],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22759,22767],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22836,22837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22864,22865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22935,22943],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23012,23013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23040,23041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23224,23238],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[23357,23363],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23430,23431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23481,23487],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23547,23548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23631,23637],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23704,23705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23755,23761],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23821,23822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24036,24058],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[24206,24212],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24279,24280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24330,24336],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24397,24398]},{"pos":[24453,24459],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24519,24520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24617,24623],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24690,24691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24741,24747],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24808,24809]},{"pos":[24864,24870],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24930,24931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25176,25207],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[25373,25388],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25464,25465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25515,25521],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25582,25583]},{"pos":[25638,25644],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25704,25705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25811,25826],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25902,25903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25953,25959],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26020,26021]},{"pos":[26076,26082],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26142,26143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26373,26386],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[26487,26498],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26570,26571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26598,26599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26672,26683],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26755,26756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26783,26784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26959,26968],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[27061,27068],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[27136,27137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27164,27165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27234,27241],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[27309,27310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27337,27338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27513,27530],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[27639,27654],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[27730,27731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27758,27759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27836,27851],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[27927,27928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27955,27956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28101,28107],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[28238,28244],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28386,28389],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[28524,28529],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28672,28679],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28838,28855],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[29031,29052],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.IO.Packaging.PackUriHelper\n  commentId: T:System.IO.Packaging.PackUriHelper\n  id: PackUriHelper\n  parent: System.IO.Packaging\n  children:\n  - System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)\n  - System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)\n  - System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)\n  - System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)\n  - System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)\n  - System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)\n  - System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  - System.IO.Packaging.PackUriHelper.UriSchemePack\n  langs:\n  - csharp\n  - vb\n  name: PackUriHelper\n  fullName: System.IO.Packaging.PackUriHelper\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PackUriHelper\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 152\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Provides utility methods to compose and parse pack URI objects.</p>\\n\"\n  syntax:\n    content: public class PackUriHelper\n    content.vb: Public Class PackUriHelper\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: PackUriHelper\n- uid: System.IO.Packaging.PackUriHelper.UriSchemePack\n  commentId: F:System.IO.Packaging.PackUriHelper.UriSchemePack\n  id: UriSchemePack\n  parent: System.IO.Packaging.PackUriHelper\n  langs:\n  - csharp\n  - vb\n  name: UriSchemePack\n  fullName: System.IO.Packaging.PackUriHelper.UriSchemePack\n  type: Field\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UriSchemePack\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 154\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Defines the pack URI scheme name \\\"pack\\\".</p>\\n\"\n  syntax:\n    content: public static readonly string UriSchemePack\n    content.vb: Public Shared ReadOnly UriSchemePack As String\n    return:\n      type: System.String\n      description: \"\\n<p>The pack URI scheme name string \\\"pack\\\".</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: PackUriHelper.UriSchemePack\n- uid: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)\n  commentId: M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)\n  id: ComparePartUri(System.Uri,System.Uri)\n  parent: System.IO.Packaging.PackUriHelper\n  langs:\n  - csharp\n  - vb\n  name: ComparePartUri(Uri, Uri)\n  fullName: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri, System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ComparePartUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 155\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a value that indicates whether two package part URIs are equivalent.</p>\\n\"\n  syntax:\n    content: public static int ComparePartUri(Uri firstPartUri, Uri secondPartUri)\n    content.vb: Public Shared Function ComparePartUri(firstPartUri As Uri, secondPartUri As Uri) As Integer\n    parameters:\n    - id: firstPartUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the first <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: secondPartUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the second <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A value that indicates the relationship between <em>firstPartUri</em> and <em>secondPartUri</em>.</p>\\n<p>Value</p>\\n<p>Meaning</p>\\n<table><tbody><tr><td>\\n<p>Less than 0</p>\\n</td><td>\\n<p>\\n<em>firstPartUri</em> is less than <em>secondPartUri</em>.</p>\\n</td></tr><tr><td>\\n<p>0</p>\\n</td><td>\\n<p>\\n<em>firstPartUri</em> is equivalent to <em>secondPartUri</em>.</p>\\n</td></tr><tr><td>\\n<p>Greater than 0</p>\\n</td><td>\\n<p>\\n<em>firstPartUri</em> is greater than <em>secondPartUri</em>.</p>\\n</td></tr></tbody></table>\\n<p></p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>firstPartUri</em> or <em>secondPartUri</em> is not a valid part URI syntax.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PackUriHelper.ComparePartUri(Uri, Uri)\n- uid: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  id: CreatePartUri(System.Uri)\n  parent: System.IO.Packaging.PackUriHelper\n  langs:\n  - csharp\n  - vb\n  name: CreatePartUri(Uri)\n  fullName: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreatePartUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 156\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Creates a formatted <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URI. </p>\\n\"\n  syntax:\n    content: public static Uri CreatePartUri(Uri partUri)\n    content.vb: Public Shared Function CreatePartUri(partUri As Uri) As Uri\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> within the package.</p>\\n\"\n    return:\n      type: System.Uri\n      description: \"\\n<p>A formatted <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URI.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PackUriHelper.CreatePartUri(Uri)\n- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)\n  commentId: M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)\n  id: GetNormalizedPartUri(System.Uri)\n  parent: System.IO.Packaging.PackUriHelper\n  langs:\n  - csharp\n  - vb\n  name: GetNormalizedPartUri(Uri)\n  fullName: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetNormalizedPartUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 157\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the normalized form of a specified <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URI. </p>\\n\"\n  syntax:\n    content: public static Uri GetNormalizedPartUri(Uri partUri)\n    content.vb: Public Shared Function GetNormalizedPartUri(partUri As Uri) As Uri\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URI to normalize.</p>\\n\"\n    return:\n      type: System.Uri\n      description: \"\\n<p>The normalized form of the given <em>partUri</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.String.Normalize\n    commentId: M:System.String.Normalize\n  - type: System.Text.NormalizationForm\n    commentId: T:System.Text.NormalizationForm\n  - type: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PackUriHelper.GetNormalizedPartUri(Uri)\n- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)\n  commentId: M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)\n  id: GetRelationshipPartUri(System.Uri)\n  parent: System.IO.Packaging.PackUriHelper\n  langs:\n  - csharp\n  - vb\n  name: GetRelationshipPartUri(Uri)\n  fullName: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetRelationshipPartUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 158\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the URI of the relationship part associated with a specified <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static Uri GetRelationshipPartUri(Uri partUri)\n    content.vb: Public Shared Function GetRelationshipPartUri(partUri As Uri) As Uri\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to return the URI for the associated <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Uri\n      description: \"\\n<p>The URI of the <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> part associated with the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> identified by <em>partUri</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>partUri</em> syntax is not valid for a package part URI.</p>\\n<p>-or-</p>\\n<p>\\n<em>partUri</em> is an absolute URI.</p>\\n<p>-or-</p>\\n<p>\\n<em>partUri</em> references a relationship part.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PackUriHelper.GetRelationshipPartUri(Uri)\n- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)\n  commentId: M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)\n  id: GetRelativeUri(System.Uri,System.Uri)\n  parent: System.IO.Packaging.PackUriHelper\n  langs:\n  - csharp\n  - vb\n  name: GetRelativeUri(Uri, Uri)\n  fullName: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri, System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetRelativeUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 159\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the relative URI between two specified <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URIs.</p>\\n\"\n  syntax:\n    content: public static Uri GetRelativeUri(Uri sourcePartUri, Uri targetPartUri)\n    content.vb: Public Shared Function GetRelativeUri(sourcePartUri As Uri, targetPartUri As Uri) As Uri\n    parameters:\n    - id: sourcePartUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the source part.</p>\\n\"\n    - id: targetPartUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the target part.</p>\\n\"\n    return:\n      type: System.Uri\n      description: \"\\n<p>The relative URI from <em>sourcePartUri</em> to <em>targetPartUri</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>sourcePartUri</em> or <em>targetPartUri</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PackUriHelper.GetRelativeUri(Uri, Uri)\n- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)\n  commentId: M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)\n  id: GetSourcePartUriFromRelationshipPartUri(System.Uri)\n  parent: System.IO.Packaging.PackUriHelper\n  langs:\n  - csharp\n  - vb\n  name: GetSourcePartUriFromRelationshipPartUri(Uri)\n  fullName: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSourcePartUriFromRelationshipPartUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 160\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the <xref href=\\\"System.IO.Packaging.PackageRelationship.SourceUri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from the <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with a specified URI.</p>\\n\"\n  syntax:\n    content: public static Uri GetSourcePartUriFromRelationshipPartUri(Uri relationshipPartUri)\n    content.vb: Public Shared Function GetSourcePartUriFromRelationshipPartUri(relationshipPartUri As Uri) As Uri\n    parameters:\n    - id: relationshipPartUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the relationship part to return the <xref href=\\\"System.IO.Packaging.PackageRelationship.SourceUri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from.</p>\\n\"\n    return:\n      type: System.Uri\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.SourceUri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from the relationship with the specified <em>relationshipPartUri</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>relationshipPartUri</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>relationshipPartUri</em> is an absolute URI.</p>\\n<p>-or-</p>\\n<p>\\n<em>relationshipPartUri</em> syntax is not valid for a <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>relationshipPartUri</em> does not reference a relationship part.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.SourceUri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the relationship part references another relationship part (not valid, see Remarks).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)\n- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)\n  commentId: M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)\n  id: IsRelationshipPartUri(System.Uri)\n  parent: System.IO.Packaging.PackUriHelper\n  langs:\n  - csharp\n  - vb\n  name: IsRelationshipPartUri(Uri)\n  fullName: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsRelationshipPartUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 161\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a value that indicates whether a specified URI is the URI of a <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> part.</p>\\n\"\n  syntax:\n    content: public static bool IsRelationshipPartUri(Uri partUri)\n    content.vb: Public Shared Function IsRelationshipPartUri(partUri As Uri) As Boolean\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The URI to check for a <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> part.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>partUri</em> identifies a <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> part; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>partUri</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>partUri</em> is an absolute URI.</p>\\n<p>-or-</p>\\n<p>\\n<em>partUri</em> is an invalid <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> syntax.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PackUriHelper.IsRelationshipPartUri(Uri)\n- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  commentId: M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)\n  id: ResolvePartUri(System.Uri,System.Uri)\n  parent: System.IO.Packaging.PackUriHelper\n  langs:\n  - csharp\n  - vb\n  name: ResolvePartUri(Uri, Uri)\n  fullName: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri, System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResolvePartUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 162\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a part URI given a source part URI and a URI with a relative path to a target part.</p>\\n\"\n  syntax:\n    content: public static Uri ResolvePartUri(Uri sourcePartUri, Uri targetUri)\n    content.vb: Public Shared Function ResolvePartUri(sourcePartUri As Uri, targetUri As Uri) As Uri\n    parameters:\n    - id: sourcePartUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the source part, or \\\"/\\\" to designate the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> root.</p>\\n\"\n    - id: targetUri\n      type: System.Uri\n      description: \"\\n<p>The relative URI to the target part.</p>\\n\"\n    return:\n      type: System.Uri\n      description: \"\\n<p>The URI of the target part resolved between the specified <em>SourcePartUri</em> and the <em>targetUri</em> parameters.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>sourcePartUri</em> or <em>targetUri</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>sourcePartUri</em> is not a valid part URI.</p>\\n<p>-or-</p>\\n<p>\\n<em>targetUri</em> is not a valid relative URI.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PackUriHelper.ResolvePartUri(Uri, Uri)\nreferences:\n- uid: System.IO.Packaging\n  isExternal: false\n  name: System.IO.Packaging\n  fullName: System.IO.Packaging\n  commentId: N:System.IO.Packaging\n  nameWithType: System.IO.Packaging\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}