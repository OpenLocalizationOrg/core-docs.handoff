{"nodes":[{"pos":[1601,1613],"content":"CryptoStream","needQuote":true,"nodes":[{"content":"CryptoStream","pos":[0,12]}]},{"pos":[5143,5199],"content":"CryptoStream(Stream, ICryptoTransform, CryptoStreamMode)","needQuote":true,"nodes":[{"content":"CryptoStream(Stream, ICryptoTransform, CryptoStreamMode)","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The stream on which to perform the cryptographic transformation.","pos":[6372,6441],"source":"\\n<p>The stream on which to perform the cryptographic transformation."},{"content":"&lt;/p&gt;\\n","pos":[6442,6448],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The cryptographic transformation that is to be performed on the stream.","pos":[6548,6624],"source":"\\n<p>The cryptographic transformation that is to be performed on the stream."},{"content":"&lt;/p&gt;\\n","pos":[6625,6631],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is not readable.&lt;/p&gt;\\n","pos":[6973,7018],"source":"\\n<p>\\n<em>stream</em> is not readable.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is not writable.&lt;/p&gt;\\n","pos":[7115,7160],"source":"\\n<p>\\n<em>stream</em> is not writable.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is invalid.&lt;/p&gt;\\n","pos":[7257,7297],"source":"\\n<p>\\n<em>stream</em> is invalid.</p>\\n"},{"pos":[7666,7673],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current stream is readable; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8575,8679],"source":"\\n<p>\\n<strong>true</strong> if the current stream is readable; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[9086,9093],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"content":"\\n&lt;p&gt;Always &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10003,10044],"source":"\\n<p>Always <strong>false</strong>.</p>\\n"},{"pos":[10454,10462],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current stream is writable; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11368,11472],"source":"\\n<p>\\n<strong>true</strong> if the current stream is writable; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[11920,11940],"content":"HasFlushedFinalBlock","needQuote":true,"nodes":[{"content":"HasFlushedFinalBlock","pos":[0,20]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the final block has been flushed; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[12815,12915],"source":"\\n<p>\\n<strong>true</strong> if the final block has been flushed; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12916,12922],"source":" </p>\\n"},{"pos":[13273,13279],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"content":"\\n&lt;p&gt;This property is not supported.&lt;/p&gt;\\n","pos":[14053,14095],"source":"\\n<p>This property is not supported.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported.","pos":[14252,14288],"source":"\\n<p>This property is not supported."},{"content":"&lt;/p&gt;\\n","pos":[14289,14295],"source":" </p>\\n"},{"pos":[14665,14673],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"content":"\\n&lt;p&gt;This property is not supported.&lt;/p&gt;\\n","pos":[15464,15506],"source":"\\n<p>This property is not supported.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported.","pos":[15665,15701],"source":"\\n<p>This property is not supported."},{"content":"&lt;/p&gt;\\n","pos":[15702,15708],"source":" </p>\\n"},{"pos":[16120,16136],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.","pos":[17102,17239],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources."},{"content":"&lt;/p&gt;\\n","pos":[17240,17246],"source":" </p>\\n"},{"pos":[17657,17664],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[18899,18928],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;A task that represents the asynchronous flush operation.&lt;/p&gt;\\n","pos":[20219,20286],"source":"\\n<p>A task that represents the asynchronous flush operation.</p>\\n"},{"content":"\\n&lt;p&gt;The stream has been disposed.&lt;/p&gt;\\n","pos":[20487,20527],"source":"\\n<p>The stream has been disposed.</p>\\n"},{"pos":[20920,20937],"content":"FlushFinalBlock()","needQuote":true,"nodes":[{"content":"FlushFinalBlock()","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The key is corrupt which can cause invalid padding to the stream.","pos":[21857,21927],"source":"\\n<p>The key is corrupt which can cause invalid padding to the stream."},{"content":"&lt;/p&gt;\\n","pos":[21928,21934],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current stream is not writable.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The final block has already been transformed.","pos":[22039,22147],"source":"\\n<p>The current stream is not writable.</p>\\n<p>-or- </p>\\n<p>The final block has already been transformed."},{"content":"&lt;/p&gt;\\n","pos":[22148,22154],"source":" </p>\\n"},{"pos":[22598,22624],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;An array of bytes.","pos":[23594,23617],"source":"\\n<p>An array of bytes."},{"content":"A maximum of &lt;em&gt;count&lt;/em&gt; bytes are read from the current stream and stored in &lt;em&gt;buffer&lt;/em&gt;.","pos":[23618,23715],"source":" A maximum of <em>count</em> bytes are read from the current stream and stored in <em>buffer</em>."},{"content":"&lt;/p&gt;\\n","pos":[23716,23722],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;buffer&lt;/em&gt; at which to begin storing the data read from the current stream.","pos":[23786,23890],"source":"\\n<p>The byte offset in <em>buffer</em> at which to begin storing the data read from the current stream."},{"content":"&lt;/p&gt;\\n","pos":[23891,23897],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to be read from the current stream.","pos":[23960,24028],"source":"\\n<p>The maximum number of bytes to be read from the current stream."},{"content":"&lt;/p&gt;\\n","pos":[24029,24035],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The total number of bytes read into the buffer.","pos":[24094,24146],"source":"\\n<p>The total number of bytes read into the buffer."},{"content":"This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream has been reached.&lt;/p&gt;\\n","pos":[24147,24303],"source":" This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream has been reached.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;offset&lt;/em&gt; parameter is less than zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;count&lt;/em&gt; parameter is less than zero.","pos":[25116,25239],"source":"\\n<p>The <em>offset</em> parameter is less than zero.</p>\\n<p>-or- </p>\\n<p>The <em>count</em> parameter is less than zero."},{"content":"&lt;/p&gt;\\n","pos":[25240,25246],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Thesum of the &lt;em&gt;count&lt;/em&gt; and &lt;em&gt;offset&lt;/em&gt; parameters is longer than the length of the buffer.","pos":[25343,25448],"source":"\\n<p>Thesum of the <em>count</em> and <em>offset</em> parameters is longer than the length of the buffer."},{"content":"&lt;/p&gt;\\n","pos":[25449,25455],"source":" </p>\\n"},{"pos":[26257,26307],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The buffer to write the data into.&lt;/p&gt;\\n","pos":[27473,27518],"source":"\\n<p>The buffer to write the data into.</p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;buffer&lt;/em&gt; at which to begin writing data from the stream.&lt;/p&gt;\\n","pos":[27582,27675],"source":"\\n<p>The byte offset in <em>buffer</em> at which to begin writing data from the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to read.&lt;/p&gt;\\n","pos":[27738,27785],"source":"\\n<p>The maximum number of bytes to read.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous read operation.","pos":[28150,28210],"source":"\\n<p>A task that represents the asynchronous read operation."},{"content":"The value of the task object's &lt;em&gt;TResult&lt;/em&gt; parameter contains the total number of bytes read into the buffer.","pos":[28211,28325],"source":" The value of the task object's <em>TResult</em> parameter contains the total number of bytes read into the buffer."},{"content":"The result can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.","pos":[28326,28526]},{"content":"&lt;/p&gt;\\n","pos":[28527,28533],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[28769,28823],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\\n","pos":[28940,28999],"source":"\\n<p>\\n<em>offset</em> or <em>count</em> is negative.</p>\\n"},{"content":"\\n&lt;p&gt;The sum of &lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; is larger than the buffer length.&lt;/p&gt;\\n","pos":[29096,29186],"source":"\\n<p>The sum of <em>offset</em> and <em>count</em> is larger than the buffer length.</p>\\n"},{"content":"\\n&lt;p&gt;The stream does not support reading.&lt;/p&gt;\\n","pos":[29291,29338],"source":"\\n<p>The stream does not support reading.</p>\\n"},{"content":"\\n&lt;p&gt;The stream has been disposed.&lt;/p&gt;\\n","pos":[29447,29487],"source":"\\n<p>The stream has been disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is currently in use by a previous read operation.","pos":[29600,29665],"source":"\\n<p>The stream is currently in use by a previous read operation."},{"content":"&lt;/p&gt;\\n","pos":[29666,29672],"source":" </p>\\n"},{"pos":[30449,30472],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;A byte offset relative to the &lt;em&gt;origin&lt;/em&gt; parameter.","pos":[31331,31392],"source":"\\n<p>A byte offset relative to the <em>origin</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[31393,31399],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;This method is not supported.&lt;/p&gt;\\n","pos":[31695,31735],"source":"\\n<p>This method is not supported.</p>\\n"},{"content":"\\n&lt;p&gt;This method is not supported.","pos":[31925,31959],"source":"\\n<p>This method is not supported."},{"content":"&lt;/p&gt;\\n","pos":[31960,31966],"source":" </p>\\n"},{"pos":[32377,32393],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The desired length of the current stream in bytes.","pos":[33187,33242],"source":"\\n<p>The desired length of the current stream in bytes."},{"content":"&lt;/p&gt;\\n","pos":[33243,33249],"source":" </p>\\n"},{"pos":[34058,34085],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;An array of bytes.","pos":[35149,35172],"source":"\\n<p>An array of bytes."},{"content":"This method copies &lt;em&gt;count&lt;/em&gt; bytes from &lt;em&gt;buffer&lt;/em&gt; to the current stream.","pos":[35173,35256],"source":" This method copies <em>count</em> bytes from <em>buffer</em> to the current stream."},{"content":"&lt;/p&gt;\\n","pos":[35257,35263],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;buffer&lt;/em&gt; at which to begin copying bytes to the current stream.","pos":[35327,35421],"source":"\\n<p>The byte offset in <em>buffer</em> at which to begin copying bytes to the current stream."},{"content":"&lt;/p&gt;\\n","pos":[35422,35428],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to be written to the current stream.","pos":[35491,35552],"source":"\\n<p>The number of bytes to be written to the current stream."},{"content":"&lt;/p&gt;\\n","pos":[35553,35559],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;offset&lt;/em&gt; parameter is less than zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;count&lt;/em&gt; parameter is less than zero.","pos":[36374,36497],"source":"\\n<p>The <em>offset</em> parameter is less than zero.</p>\\n<p>-or- </p>\\n<p>The <em>count</em> parameter is less than zero."},{"content":"&lt;/p&gt;\\n","pos":[36498,36504],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The sum of the &lt;em&gt;count&lt;/em&gt; and &lt;em&gt;offset&lt;/em&gt; parameters is longer than the length of the buffer.","pos":[36601,36707],"source":"\\n<p>The sum of the <em>count</em> and <em>offset</em> parameters is longer than the length of the buffer."},{"content":"&lt;/p&gt;\\n","pos":[36708,36714],"source":" </p>\\n"},{"pos":[37523,37574],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The buffer to write data from.&lt;/p&gt;\\n","pos":[38737,38778],"source":"\\n<p>The buffer to write data from.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based byte offset in &lt;em&gt;buffer&lt;/em&gt; from which to begin writing bytes to the stream.&lt;/p&gt;\\n","pos":[38842,38947],"source":"\\n<p>The zero-based byte offset in <em>buffer</em> from which to begin writing bytes to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to write.&lt;/p&gt;\\n","pos":[39010,39058],"source":"\\n<p>The maximum number of bytes to write.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[39409,39476],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39713,39767],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\\n","pos":[39884,39943],"source":"\\n<p>\\n<em>offset</em> or <em>count</em> is negative.</p>\\n"},{"content":"\\n&lt;p&gt;The sum of &lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; is larger than the buffer length.&lt;/p&gt;\\n","pos":[40040,40130],"source":"\\n<p>The sum of <em>offset</em> and <em>count</em> is larger than the buffer length.</p>\\n"},{"content":"\\n&lt;p&gt;The stream does not support writing.&lt;/p&gt;\\n","pos":[40235,40282],"source":"\\n<p>The stream does not support writing.</p>\\n"},{"content":"\\n&lt;p&gt;The stream has been disposed.&lt;/p&gt;\\n","pos":[40391,40431],"source":"\\n<p>The stream has been disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is currently in use by a previous write operation.","pos":[40544,40610],"source":"\\n<p>The stream is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[40611,40617],"source":" </p>\\n"},{"pos":[41155,41183],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[41380,41386],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41542,41560],"content":"MarshalByRefObject","needQuote":true,"nodes":[{"content":"MarshalByRefObject","pos":[0,18]}]},{"pos":[41747,41753],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[41909,41920],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[42298,42317],"content":"CopyToAsync(Stream)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[42458,42469],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[42523,42524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42577,42583],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[42625,42626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42720,42731],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[42785,42786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42839,42845],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[42887,42888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43131,43157],"content":"CopyToAsync(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32)","pos":[0,26]}]},{"pos":[43325,43336],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[43390,43391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43444,43450],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[43493,43494]},{"pos":[43548,43553],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43612,43613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43720,43731],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[43785,43786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43839,43845],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[43888,43889]},{"pos":[43943,43948],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[44007,44008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44306,44351],"content":"CopyToAsync(Stream, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32, CancellationToken)","pos":[0,45]}]},{"pos":[44590,44601],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[44655,44656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44709,44715],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[44758,44759]},{"pos":[44813,44818],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[44878,44879]},{"pos":[44955,44972],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[45053,45054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45196,45207],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[45261,45262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45315,45321],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[45364,45365]},{"pos":[45419,45424],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[45484,45485]},{"pos":[45561,45578],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[45659,45660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45960,45974],"content":"CopyTo(Stream)","needQuote":true,"nodes":[{"content":"CopyTo(Stream)","pos":[0,14]}]},{"pos":[46105,46111],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[46160,46161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46214,46220],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[46262,46263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46352,46358],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[46407,46408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46461,46467],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[46509,46510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46738,46759],"content":"CopyTo(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Stream, Int32)","pos":[0,21]}]},{"pos":[46917,46923],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[46972,46973],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47026,47032],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[47075,47076]},{"pos":[47130,47135],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47194,47195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47297,47303],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[47352,47353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47406,47412],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[47455,47456]},{"pos":[47510,47515],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47574,47575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47791,47798],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[47893,47898],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[47967,47968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47995,47996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48066,48071],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[48140,48141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48168,48169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48342,48351],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[48450,48457],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[48507,48508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48535,48536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48608,48615],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[48665,48666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48693,48694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48874,48886],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[48991,49001],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[49054,49055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49082,49083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49158,49168],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[49221,49222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49249,49250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49441,49459],"content":"CreateWaitHandle()","needQuote":true,"nodes":[{"content":"CreateWaitHandle()","pos":[0,18]}]},{"pos":[49576,49592],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[49672,49673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49700,49701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49782,49798],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[49878,49879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49906,49907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50179,50233],"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,54]}]},{"pos":[50678,50687],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[50760,50761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50809,50813],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[50872,50874]},{"content":",","pos":[50906,50907]},{"pos":[50961,50966],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[51026,51027]},{"pos":[51081,51086],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[51146,51147]},{"pos":[51209,51222],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[51290,51291]},{"pos":[51346,51352],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51412,51413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51563,51572],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[51645,51646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51694,51698],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[51756,51758],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[51787,51788]},{"pos":[51842,51847],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[51907,51908]},{"pos":[51962,51967],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[52027,52028]},{"pos":[52090,52103],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[52171,52172]},{"pos":[52227,52233],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52293,52294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52695,52716],"content":"EndRead(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndRead(IAsyncResult)","pos":[0,21]}]},{"pos":[52855,52862],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[52933,52934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52990,53002],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[53068,53069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53162,53169],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[53240,53241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53297,53309],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[53375,53376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53628,53659],"content":"ReadAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32)","pos":[0,31]}]},{"pos":[53972,53981],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[54033,54034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54082,54086],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[54145,54147]},{"content":",","pos":[54179,54180]},{"pos":[54234,54239],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[54299,54300]},{"pos":[54354,54359],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54418,54419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54534,54543],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[54595,54596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54644,54648],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[54706,54708],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[54737,54738]},{"pos":[54792,54797],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[54857,54858]},{"pos":[54912,54917],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54976,54977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55355,55410],"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,55]}]},{"pos":[55859,55869],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[55943,55944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55992,55996],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[56055,56057]},{"content":",","pos":[56089,56090]},{"pos":[56144,56149],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[56209,56210]},{"pos":[56264,56269],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[56329,56330]},{"pos":[56392,56405],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[56473,56474]},{"pos":[56529,56535],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56595,56596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56747,56757],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[56831,56832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56880,56884],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[56942,56944],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[56973,56974]},{"pos":[57028,57033],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[57093,57094]},{"pos":[57148,57153],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[57213,57214]},{"pos":[57276,57289],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[57357,57358]},{"pos":[57413,57419],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57479,57480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57885,57907],"content":"EndWrite(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndWrite(IAsyncResult)","pos":[0,22]}]},{"pos":[58048,58056],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[58128,58129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58185,58197],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[58263,58264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58358,58366],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[58438,58439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58495,58507],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[58573,58574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58829,58861],"content":"WriteAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32)","pos":[0,32]}]},{"pos":[59178,59188],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[59241,59242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59290,59294],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[59353,59355]},{"content":",","pos":[59387,59388]},{"pos":[59442,59447],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[59507,59508]},{"pos":[59562,59567],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59626,59627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59743,59753],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[59806,59807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59855,59859],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[59917,59919],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[59948,59949]},{"pos":[60003,60008],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[60068,60069]},{"pos":[60123,60128],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60187,60188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60492,60502],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[60603,60611],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[60662,60663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60690,60691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60764,60772],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[60823,60824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60851,60852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61045,61060],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"pos":[61187,61196],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[61248,61249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61297,61301],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[61359,61360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61447,61456],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[61508,61509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61557,61561],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[61619,61620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61840,61860],"content":"Synchronized(Stream)","needQuote":true,"nodes":[{"content":"Synchronized(Stream)","pos":[0,20]}]},{"pos":[62003,62015],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[62091,62092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62145,62151],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[62214,62215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62310,62322],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[62398,62399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62452,62458],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[62521,62522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62740,62757],"content":"ObjectInvariant()","needQuote":true,"nodes":[{"content":"ObjectInvariant()","pos":[0,17]}]},{"pos":[62872,62887],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[62966,62967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62994,62995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63075,63090],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[63169,63170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63197,63198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63394,63404],"content":"CanTimeout","needQuote":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"pos":[63613,63624],"content":"ReadTimeout","needQuote":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[63837,63849],"content":"WriteTimeout","needQuote":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[64101,64125],"content":"MemberwiseClone(Boolean)","needQuote":true,"nodes":[{"content":"MemberwiseClone(Boolean)","pos":[0,24]}]},{"pos":[64288,64303],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[64391,64392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64443,64450],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[64511,64512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64617,64632],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[64720,64721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64772,64779],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[64840,64841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65106,65126],"content":"GetLifetimeService()","needQuote":true,"nodes":[{"content":"GetLifetimeService()","pos":[0,20]}]},{"pos":[65265,65283],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[65374,65375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65402,65403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65495,65513],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[65604,65605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65632,65633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65888,65915],"content":"InitializeLifetimeService()","needQuote":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[66068,66093],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[66191,66192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66219,66220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66319,66344],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[66442,66443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66470,66471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66740,66758],"content":"CreateObjRef(Type)","needQuote":true,"nodes":[{"content":"CreateObjRef(Type)","pos":[0,18]}]},{"pos":[66909,66921],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[67006,67007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67055,67059],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[67117,67118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67217,67229],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[67314,67315],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67363,67367],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[67425,67426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67645,67655],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[67750,67758],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[67827,67828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67855,67856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67926,67934],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[68003,68004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68031,68032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68215,68229],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[68348,68354],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[68421,68422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68472,68478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68538,68539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68622,68628],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[68695,68696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68746,68752],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68812,68813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69027,69049],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[69197,69203],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69270,69271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69321,69327],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[69388,69389]},{"pos":[69444,69450],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69510,69511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69608,69614],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69681,69682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69732,69738],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[69799,69800]},{"pos":[69855,69861],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69921,69922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70167,70198],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[70364,70379],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[70455,70456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70506,70512],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[70573,70574]},{"pos":[70629,70635],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70695,70696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70802,70817],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[70893,70894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70944,70950],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[71011,71012]},{"pos":[71067,71073],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71133,71134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71364,71377],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[71478,71489],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[71561,71562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71589,71590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71663,71674],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[71746,71747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71774,71775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71950,71959],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[72052,72059],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[72127,72128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72155,72156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72225,72232],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[72300,72301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72328,72329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72504,72521],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[72630,72645],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[72721,72722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72749,72750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72827,72842],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[72918,72919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72946,72947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73275,73290],"content":"AsInputStream()","needQuote":true,"nodes":[{"content":"AsInputStream()","pos":[0,15]}]},{"pos":[73449,73462],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[73542,73543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73570,73571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73673,73686],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[73766,73767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73794,73795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74190,74206],"content":"AsOutputStream()","needQuote":true,"nodes":[{"content":"AsOutputStream()","pos":[0,16]}]},{"pos":[74367,74381],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[74462,74463],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74490,74491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74594,74608],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[74689,74690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74717,74718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75127,75149],"content":"AsRandomAccessStream()","needQuote":true,"nodes":[{"content":"AsRandomAccessStream()","pos":[0,22]}]},{"pos":[75322,75342],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[75429,75430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75457,75458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75567,75587],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[75674,75675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75702,75703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75927,75933],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[76043,76052],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[76233,76254],"content":"AsInputStream(Stream)","needQuote":true,"nodes":[{"content":"AsInputStream(Stream)","pos":[0,21]}]},{"pos":[76447,76460],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[76540,76541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76594,76600],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[76663,76664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76784,76797],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[76877,76878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76931,76937],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[77000,77001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77271,77301],"content":"WindowsRuntimeStreamExtensions","needQuote":true,"nodes":[{"content":"WindowsRuntimeStreamExtensions","pos":[0,30]}]},{"pos":[77566,77588],"content":"AsOutputStream(Stream)","needQuote":true,"nodes":[{"content":"AsOutputStream(Stream)","pos":[0,22]}]},{"pos":[77783,77797],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[77878,77879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77932,77938],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[78001,78002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78123,78137],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[78218,78219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78272,78278],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[78341,78342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78632,78660],"content":"AsRandomAccessStream(Stream)","needQuote":true,"nodes":[{"content":"AsRandomAccessStream(Stream)","pos":[0,28]}]},{"pos":[78867,78887],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[78974,78975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79028,79034],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[79097,79098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79225,79245],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[79332,79333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79386,79392],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[79455,79456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79764,79780],"content":"ICryptoTransform","needQuote":true,"nodes":[{"content":"ICryptoTransform","pos":[0,16]}]},{"pos":[80053,80069],"content":"CryptoStreamMode","needQuote":true,"nodes":[{"content":"CryptoStreamMode","pos":[0,16]}]},{"pos":[80309,80316],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[80492,80499],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80668,80675],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[80872,80880],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[81078,81084],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[81255,81260],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[81424,81432],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[81646,81662],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[81791,81798],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[81848,81849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81900,81907],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[81968,81969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82057,82064],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[82114,82115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82166,82173],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[82234,82235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82433,82440],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[82535,82540],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[82588,82589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82616,82617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82687,82692],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[82740,82741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82768,82769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82980,83009],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[83184,83194],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[83247,83248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83319,83336],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[83417,83418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83529,83539],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[83592,83593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83664,83681],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[83762,83763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84009,84026],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[84254,84258],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[84415,84431],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[84584,84606],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[84843,84869],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"pos":[85162,85166],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[85213,85214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85262,85266],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[85325,85327]},{"content":",","pos":[85359,85360]},{"pos":[85414,85419],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[85479,85480]},{"pos":[85534,85539],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85598,85599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85709,85713],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[85760,85761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85809,85813],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[85871,85873],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[85902,85903]},{"pos":[85957,85962],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[86022,86023]},{"pos":[86077,86082],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[86141,86142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86369,86375],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[86495,86499],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[86558,86560]},{"pos":[86623,86627],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[86685,86687],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[86819,86824],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[87064,87114],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[87553,87562],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[87614,87615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87663,87667],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[87726,87728]},{"content":",","pos":[87760,87761]},{"pos":[87815,87820],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[87880,87881]},{"pos":[87935,87940],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[88000,88001]},{"pos":[88077,88094],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[88175,88176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88326,88335],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[88387,88388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88436,88440],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[88498,88500],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[88529,88530]},{"pos":[88584,88589],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[88649,88650]},{"pos":[88704,88709],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[88769,88770]},{"pos":[88846,88863],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[88944,88945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89365,89376],"content":"Task<Int32>","needQuote":true,"nodes":[{"content":"Task&lt;Int32&gt;","pos":[0,11],"source":"Task<Int32>"}]},{"pos":[89581,89585],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[89659,89660],"content":"<","needQuote":true,"nodes":[]},{"pos":[89709,89714],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[89855,89859],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[89934,89937]},{"pos":[89993,89998],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[90057,90058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90259,90272],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[90469,90473],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[90526,90527],"content":"<","needQuote":true,"nodes":[]},{"pos":[90554,90561],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[90676,90680],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[90734,90737]},{"pos":[90771,90778],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[90811,90812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91058,91081],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"pos":[91243,91247],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[91294,91295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91344,91349],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[91409,91410]},{"pos":[91472,91482],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[91528,91529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91633,91637],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[91684,91685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91734,91739],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[91799,91800]},{"pos":[91862,91872],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[91918,91919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92131,92141],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[92340,92356],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[92485,92494],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[92546,92547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92596,92601],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[92660,92661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92749,92758],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[92810,92811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92860,92865],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[92924,92925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93163,93190],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"pos":[93487,93492],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[93540,93541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93589,93593],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[93652,93654]},{"content":",","pos":[93686,93687]},{"pos":[93741,93746],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[93806,93807]},{"pos":[93861,93866],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[93925,93926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94037,94042],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[94090,94091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94139,94143],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[94201,94203],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[94232,94233]},{"pos":[94287,94292],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[94352,94353]},{"pos":[94407,94412],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[94471,94472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94838,94889],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[95332,95342],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[95395,95396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95444,95448],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[95507,95509]},{"content":",","pos":[95541,95542]},{"pos":[95596,95601],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[95661,95662]},{"pos":[95716,95721],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[95781,95782]},{"pos":[95858,95875],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[95956,95957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96108,96118],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[96171,96172],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96220,96224],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[96282,96284],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[96313,96314]},{"pos":[96368,96373],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[96433,96434]},{"pos":[96488,96493],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[96553,96554]},{"pos":[96630,96647],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[96728,96729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97095,97112],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[97305,97326],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[97516,97539],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[97756,97778],"content":"CryptographicException","needQuote":true,"nodes":[{"content":"CryptographicException","pos":[0,22]}]},{"pos":[98019,98046],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[98252,98273],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[98482,98507],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Security.Cryptography.CryptoStream\n  commentId: T:System.Security.Cryptography.CryptoStream\n  id: CryptoStream\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)\n  - System.Security.Cryptography.CryptoStream.CanRead\n  - System.Security.Cryptography.CryptoStream.CanSeek\n  - System.Security.Cryptography.CryptoStream.CanWrite\n  - System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)\n  - System.Security.Cryptography.CryptoStream.Flush\n  - System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)\n  - System.Security.Cryptography.CryptoStream.FlushFinalBlock\n  - System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock\n  - System.Security.Cryptography.CryptoStream.Length\n  - System.Security.Cryptography.CryptoStream.Position\n  - System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.Security.Cryptography.CryptoStream.SetLength(System.Int64)\n  - System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  - vb\n  name: CryptoStream\n  fullName: System.Security.Cryptography.CryptoStream\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CryptoStream\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 34\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Defines a stream that links data streams to cryptographic transformations.</p>\\n\"\n  syntax:\n    content: 'public class CryptoStream : Stream, IDisposable'\n    content.vb: >-\n      Public Class CryptoStream\n          Inherits Stream\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.IO.Stream\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.IO.Stream.Null\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.Close\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.WriteTimeout\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: CryptoStream\n  extensionMethods:\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n- uid: System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)\n  commentId: M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)\n  id: '#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)'\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: CryptoStream(Stream, ICryptoTransform, CryptoStreamMode)\n  fullName: System.Security.Cryptography.CryptoStream.CryptoStream(System.IO.Stream, System.Security.Cryptography.ICryptoTransform, System.Security.Cryptography.CryptoStreamMode)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 36\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.CryptoStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a target data stream, the transformation to use, and the mode of the stream.</p>\\n\"\n  syntax:\n    content: public CryptoStream(Stream stream, ICryptoTransform transform, CryptoStreamMode mode)\n    content.vb: Public Sub New(stream As Stream, transform As ICryptoTransform, mode As CryptoStreamMode)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream on which to perform the cryptographic transformation. </p>\\n\"\n    - id: transform\n      type: System.Security.Cryptography.ICryptoTransform\n      description: \"\\n<p>The cryptographic transformation that is to be performed on the stream. </p>\\n\"\n    - id: mode\n      type: System.Security.Cryptography.CryptoStreamMode\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.Cryptography.CryptoStreamMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>stream</em> is not readable.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>stream</em> is not writable.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>stream</em> is invalid.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CryptoStream.CryptoStream(Stream, ICryptoTransform, CryptoStreamMode)\n- uid: System.Security.Cryptography.CryptoStream.CanRead\n  commentId: P:System.Security.Cryptography.CryptoStream.CanRead\n  id: CanRead\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: CanRead\n  fullName: System.Security.Cryptography.CryptoStream.CanRead\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanRead\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 37\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets a value indicating whether the current <xref href=\\\"System.Security.Cryptography.CryptoStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is readable.</p>\\n\"\n  syntax:\n    content: public override bool CanRead { get; }\n    content.vb: Public Overrides ReadOnly Property CanRead As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current stream is readable; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanRead\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: CryptoStream.CanRead\n- uid: System.Security.Cryptography.CryptoStream.CanSeek\n  commentId: P:System.Security.Cryptography.CryptoStream.CanSeek\n  id: CanSeek\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: CanSeek\n  fullName: System.Security.Cryptography.CryptoStream.CanSeek\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanSeek\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 38\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets a value indicating whether you can seek within the current <xref href=\\\"System.Security.Cryptography.CryptoStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool CanSeek { get; }\n    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Always <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanSeek\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: CryptoStream.CanSeek\n- uid: System.Security.Cryptography.CryptoStream.CanWrite\n  commentId: P:System.Security.Cryptography.CryptoStream.CanWrite\n  id: CanWrite\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: CanWrite\n  fullName: System.Security.Cryptography.CryptoStream.CanWrite\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanWrite\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 39\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets a value indicating whether the current <xref href=\\\"System.Security.Cryptography.CryptoStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is writable.</p>\\n\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current stream is writable; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanWrite\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: CryptoStream.CanWrite\n- uid: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock\n  commentId: P:System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock\n  id: HasFlushedFinalBlock\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: HasFlushedFinalBlock\n  fullName: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasFlushedFinalBlock\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 40\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets a value indicating whether the final buffer block has been written to the underlying stream. </p>\\n\"\n  syntax:\n    content: public bool HasFlushedFinalBlock { get; }\n    content.vb: Public ReadOnly Property HasFlushedFinalBlock As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the final block has been flushed; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CryptoStream.HasFlushedFinalBlock\n- uid: System.Security.Cryptography.CryptoStream.Length\n  commentId: P:System.Security.Cryptography.CryptoStream.Length\n  id: Length\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.Security.Cryptography.CryptoStream.Length\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 41\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets the length in bytes of the stream.</p>\\n\"\n  syntax:\n    content: public override long Length { get; }\n    content.vb: Public Overrides ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>This property is not supported.</p>\\n\"\n  overridden: System.IO.Stream.Length\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: CryptoStream.Length\n- uid: System.Security.Cryptography.CryptoStream.Position\n  commentId: P:System.Security.Cryptography.CryptoStream.Position\n  id: Position\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: Position\n  fullName: System.Security.Cryptography.CryptoStream.Position\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Position\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 42\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets the position within the current stream.</p>\\n\"\n  syntax:\n    content: public override long Position { get; set; }\n    content.vb: Public Overrides Property Position As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>This property is not supported.</p>\\n\"\n  overridden: System.IO.Stream.Position\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CryptoStream.Position\n- uid: System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 43\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Security.Cryptography.CryptoStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\\n\"\n  overridden: System.IO.Stream.Dispose(System.Boolean)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: CryptoStream.Dispose(Boolean)\n- uid: System.Security.Cryptography.CryptoStream.Flush\n  commentId: M:System.Security.Cryptography.CryptoStream.Flush\n  id: Flush\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.Security.Cryptography.CryptoStream.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Flush\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 44\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Clears all buffers for the current stream and causes any buffered data to be written to the underlying device.</p>\\n\"\n  syntax:\n    content: public override void Flush()\n    content.vb: Public Overrides Sub Flush\n  overridden: System.IO.Stream.Flush\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CryptoStream.Flush()\n- uid: System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)\n  commentId: M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)\n  id: FlushAsync(System.Threading.CancellationToken)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: FlushAsync(CancellationToken)\n  fullName: System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FlushAsync\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 45\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Clears all buffers for the current stream asynchronously, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</p>\\n\"\n  syntax:\n    content: public override Task FlushAsync(CancellationToken cancellationToken)\n    content.vb: Public Overrides Function FlushAsync(cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token to monitor for cancellation requests. The default value is <xref href=\\\"System.Threading.CancellationToken.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous flush operation.</p>\\n\"\n  overridden: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CryptoStream.FlushAsync(CancellationToken)\n- uid: System.Security.Cryptography.CryptoStream.FlushFinalBlock\n  commentId: M:System.Security.Cryptography.CryptoStream.FlushFinalBlock\n  id: FlushFinalBlock\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: FlushFinalBlock()\n  fullName: System.Security.Cryptography.CryptoStream.FlushFinalBlock()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FlushFinalBlock\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 46\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Updates the underlying data source or repository with the current state of the buffer, then clears the buffer.</p>\\n\"\n  syntax:\n    content: public void FlushFinalBlock()\n    content.vb: Public Sub FlushFinalBlock\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>The key is corrupt which can cause invalid padding to the stream. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The current stream is not writable.</p>\\n<p>-or- </p>\\n<p>The final block has already been transformed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CryptoStream.FlushFinalBlock()\n- uid: System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.Security.Cryptography.CryptoStream.Read(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 47\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</p>\\n\"\n  syntax:\n    content: public override int Read(byte[] buffer, int offset, int count)\n    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of bytes. A maximum of <em>count</em> bytes are read from the current stream and stored in <em>buffer</em>. </p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>buffer</em> at which to begin storing the data read from the current stream. </p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to be read from the current stream. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream has been reached.</p>\\n\"\n  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.CryptoStreamMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with current <xref href=\\\"System.Security.Cryptography.CryptoStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object does not match the underlying stream.  For example, this exception is thrown when using <xref href=\\\"System.Security.Cryptography.CryptoStreamMode.Read\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with an underlying stream that is write only.  </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>offset</em> parameter is less than zero.</p>\\n<p>-or- </p>\\n<p>The <em>count</em> parameter is less than zero. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Thesum of the <em>count</em> and <em>offset</em> parameters is longer than the length of the buffer. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Security.Cryptography.CryptoStream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  nameWithType: CryptoStream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: CryptoStream.Read(Byte(), Int32, Int32)\n- uid: System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadAsync\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 48\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Reads a sequence of bytes from the current stream asynchronously, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</p>\\n\"\n  syntax:\n    content: public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\n    content.vb: Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer to write the data into.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>buffer</em> at which to begin writing data from the stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to read.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token to monitor for cancellation requests. The default value is <xref href=\\\"System.Threading.CancellationToken.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: \"\\n<p>A task that represents the asynchronous read operation. The value of the task object's <em>TResult</em> parameter contains the total number of bytes read into the buffer. The result can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached. </p>\\n\"\n  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>count</em> is negative.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The sum of <em>offset</em> and <em>count</em> is larger than the buffer length.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream does not support reading.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream has been disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream is currently in use by a previous read operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: CryptoStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: CryptoStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.Security.Cryptography.CryptoStream.Seek(System.Int64, System.IO.SeekOrigin)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Seek\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 49\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Sets the position within the current stream.</p>\\n\"\n  syntax:\n    content: public override long Seek(long offset, SeekOrigin origin)\n    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>A byte offset relative to the <em>origin</em> parameter. </p>\\n\"\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: \"\\n<p>A <xref href=\\\"System.IO.SeekOrigin\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object indicating the reference point used to obtain the new position. </p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>This method is not supported.</p>\\n\"\n  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is not supported. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CryptoStream.Seek(Int64, SeekOrigin)\n- uid: System.Security.Cryptography.CryptoStream.SetLength(System.Int64)\n  commentId: M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: SetLength(Int64)\n  fullName: System.Security.Cryptography.CryptoStream.SetLength(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetLength\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 50\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Sets the length of the current stream.</p>\\n\"\n  syntax:\n    content: public override void SetLength(long value)\n    content.vb: Public Overrides Sub SetLength(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The desired length of the current stream in bytes. </p>\\n\"\n  overridden: System.IO.Stream.SetLength(System.Int64)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property exists only to support inheritance from <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and cannot be used.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CryptoStream.SetLength(Int64)\n- uid: System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.Security.Cryptography.CryptoStream.Write(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 51\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Writes a sequence of bytes to the current <xref href=\\\"System.Security.Cryptography.CryptoStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and advances the current position within the stream by the number of bytes written.</p>\\n\"\n  syntax:\n    content: public override void Write(byte[] buffer, int offset, int count)\n    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of bytes. This method copies <em>count</em> bytes from <em>buffer</em> to the current stream. </p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>buffer</em> at which to begin copying bytes to the current stream. </p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to be written to the current stream. </p>\\n\"\n  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.CryptoStreamMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with current <xref href=\\\"System.Security.Cryptography.CryptoStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object does not match the underlying stream.  For example, this exception is thrown when using <xref href=\\\"System.Security.Cryptography.CryptoStreamMode.Write\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  with an underlying stream that is read only.  </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>offset</em> parameter is less than zero.</p>\\n<p>-or- </p>\\n<p>The <em>count</em> parameter is less than zero. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The sum of the <em>count</em> and <em>offset</em> parameters is longer than the length of the buffer. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Security.Cryptography.CryptoStream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  nameWithType: CryptoStream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: CryptoStream.Write(Byte(), Int32, Int32)\n- uid: System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteAsync\n    path: src/System.Security.Cryptography.Primitives/ref/System.Security.Cryptography.Primitives.cs\n    startLine: 52\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Writes a sequence of bytes to the current stream asynchronously, advances the current position within the stream by the number of bytes written, and monitors cancellation requests.</p>\\n\"\n  syntax:\n    content: public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)\n    content.vb: Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer to write data from.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based byte offset in <em>buffer</em> from which to begin writing bytes to the stream.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to write.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The token to monitor for cancellation requests. The default value is <xref href=\\\"System.Threading.CancellationToken.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>count</em> is negative.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The sum of <em>offset</em> and <em>count</em> is larger than the buffer length.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The stream does not support writing.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream has been disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: CryptoStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: CryptoStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\nreferences:\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: true\n  name: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n  commentId: T:System.MarshalByRefObject\n  nameWithType: MarshalByRefObject\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  fullName: System.IO.Stream.Null\n  commentId: F:System.IO.Stream.Null\n  nameWithType: Stream.Null\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)\n  nameWithType: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyTo(Stream, Int32)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: true\n  name: Close()\n  fullName: System.IO.Stream.Close()\n  spec.csharp:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Close\n  nameWithType: Stream.Close()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  fullName: System.IO.Stream.Dispose()\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Dispose\n  nameWithType: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  fullName: System.IO.Stream.FlushAsync()\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync\n  nameWithType: Stream.FlushAsync()\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: true\n  name: CreateWaitHandle()\n  fullName: System.IO.Stream.CreateWaitHandle()\n  spec.csharp:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CreateWaitHandle\n  nameWithType: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndRead(IAsyncResult)\n  fullName: System.IO.Stream.EndRead(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndWrite(IAsyncResult)\n  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)\n  nameWithType: Stream.EndWrite(IAsyncResult)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  fullName: System.IO.Stream.ReadByte()\n  spec.csharp:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadByte\n  nameWithType: Stream.ReadByte()\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteByte(Byte)\n  fullName: System.IO.Stream.WriteByte(System.Byte)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteByte(System.Byte)\n  nameWithType: Stream.WriteByte(Byte)\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Synchronized(Stream)\n  fullName: System.IO.Stream.Synchronized(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)\n  nameWithType: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: true\n  name: ObjectInvariant()\n  fullName: System.IO.Stream.ObjectInvariant()\n  spec.csharp:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ObjectInvariant\n  nameWithType: Stream.ObjectInvariant()\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  fullName: System.IO.Stream.CanTimeout\n  commentId: P:System.IO.Stream.CanTimeout\n  nameWithType: Stream.CanTimeout\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  fullName: System.IO.Stream.ReadTimeout\n  commentId: P:System.IO.Stream.ReadTimeout\n  nameWithType: Stream.ReadTimeout\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  fullName: System.IO.Stream.WriteTimeout\n  commentId: P:System.IO.Stream.WriteTimeout\n  nameWithType: Stream.WriteTimeout\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: MemberwiseClone(Boolean)\n  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: GetLifetimeService()\n  fullName: System.MarshalByRefObject.GetLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.GetLifetimeService\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: InitializeLifetimeService()\n  fullName: System.MarshalByRefObject.InitializeLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.InitializeLifetimeService\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: CreateObjRef(Type)\n  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  name: AsInputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  name: AsOutputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  name: AsRandomAccessStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  isExternal: true\n  name: AsInputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions\n  parent: System.IO\n  isExternal: false\n  name: WindowsRuntimeStreamExtensions\n  fullName: System.IO.WindowsRuntimeStreamExtensions\n  commentId: T:System.IO.WindowsRuntimeStreamExtensions\n  nameWithType: WindowsRuntimeStreamExtensions\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  isExternal: true\n  name: AsOutputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  isExternal: true\n  name: AsRandomAccessStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream(Stream)\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n  commentId: T:System.Security.Cryptography.ICryptoTransform\n  nameWithType: ICryptoTransform\n- uid: System.Security.Cryptography.CryptoStreamMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptoStreamMode\n  fullName: System.Security.Cryptography.CryptoStreamMode\n  commentId: T:System.Security.Cryptography.CryptoStreamMode\n  nameWithType: CryptoStreamMode\n- uid: System.IO.Stream.CanRead\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanRead\n  fullName: System.IO.Stream.CanRead\n  commentId: P:System.IO.Stream.CanRead\n  nameWithType: Stream.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IO.Stream.CanSeek\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanSeek\n  fullName: System.IO.Stream.CanSeek\n  commentId: P:System.IO.Stream.CanSeek\n  nameWithType: Stream.CanSeek\n- uid: System.IO.Stream.CanWrite\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanWrite\n  fullName: System.IO.Stream.CanWrite\n  commentId: P:System.IO.Stream.CanWrite\n  nameWithType: Stream.CanWrite\n- uid: System.IO.Stream.Length\n  parent: System.IO.Stream\n  isExternal: false\n  name: Length\n  fullName: System.IO.Stream.Length\n  commentId: P:System.IO.Stream.Length\n  nameWithType: Stream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.IO.Stream.Position\n  parent: System.IO.Stream\n  isExternal: false\n  name: Position\n  fullName: System.IO.Stream.Position\n  commentId: P:System.IO.Stream.Position\n  nameWithType: Stream.Position\n- uid: System.IO.Stream.Dispose(System.Boolean)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.IO.Stream.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Dispose(System.Boolean)\n  nameWithType: Stream.Dispose(Boolean)\n- uid: System.IO.Stream.Flush\n  parent: System.IO.Stream\n  isExternal: false\n  name: Flush()\n  fullName: System.IO.Stream.Flush()\n  spec.csharp:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Flush\n  nameWithType: Stream.Flush()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: FlushAsync(CancellationToken)\n  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  nameWithType: CancellationToken\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  commentId: T:System.Threading.Tasks.Task\n  nameWithType: Task\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  commentId: N:System.Threading\n  nameWithType: System.Threading\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)\n  name.vb: Task(Of Int32)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Int32}\n  nameWithType: Task<Int32>\n  nameWithType.vb: Task(Of Int32)\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)\n  spec.csharp:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  nameWithType: Stream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  fullName: System.IO.SeekOrigin\n  commentId: T:System.IO.SeekOrigin\n  nameWithType: SeekOrigin\n- uid: System.IO.Stream.SetLength(System.Int64)\n  parent: System.IO.Stream\n  isExternal: true\n  name: SetLength(Int64)\n  fullName: System.IO.Stream.SetLength(System.Int64)\n  spec.csharp:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.SetLength(System.Int64)\n  nameWithType: Stream.SetLength(Int64)\n- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.Security.Cryptography.CryptographicException\n  isExternal: false\n  name: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n  commentId: T:System.Security.Cryptography.CryptographicException\n  nameWithType: CryptographicException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}