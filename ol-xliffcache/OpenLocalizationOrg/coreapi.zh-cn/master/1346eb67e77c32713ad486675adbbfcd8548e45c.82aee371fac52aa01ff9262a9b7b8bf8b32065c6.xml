{"nodes":[{"pos":[274,288],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"content":"\\n&lt;p&gt;The type of objects to enumerate.&lt;/p&gt;\\n","pos":[1151,1195],"source":"\\n<p>The type of objects to enumerate.</p>\\n"},{"pos":[1863,1878],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;An enumerator that can be used to iterate through the collection.&lt;/p&gt;\\n","pos":[2596,2672],"source":"\\n<p>An enumerator that can be used to iterate through the collection.</p>\\n"},{"pos":[3044,3070],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[3346,3360],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[3579,3590],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[3654,3655],"content":"<","needQuote":true,"nodes":[]},{"pos":[3682,3683],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[3803,3814],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[3879,3882]},{"pos":[3916,3917],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[3944,3945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4164,4178],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[4397,4408],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[4472,4473],"content":"<","needQuote":true,"nodes":[]},{"pos":[4500,4501],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4621,4632],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[4697,4700]},{"pos":[4734,4735],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4762,4763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Collections.Generic.IEnumerable`1\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  id: IEnumerable`1\n  parent: System.Collections.Generic\n  children:\n  - System.Collections.Generic.IEnumerable`1.GetEnumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Generic/IEnumerable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IEnumerable\n    path: src/mscorlib/src/System/Collections/Generic/IEnumerable.cs\n    startLine: 29\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Exposes the enumerator, which supports a simple iteration over a collection of a specified type.</p>\\n\"\n  syntax:\n    content: >-\n      [TypeDependency(\"System.SZArrayHelper\")]\n\n      public interface IEnumerable<out T> : IEnumerable\n    content.vb: >-\n      <TypeDependency(\"System.SZArrayHelper\")>\n\n      Public Interface IEnumerable(Of Out T)\n          Inherits IEnumerable\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of objects to enumerate.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IEnumerator`1\n    commentId: T:System.Collections.Generic.IEnumerator`1\n  - type: System.Collections\n    commentId: N:System.Collections\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  fullName.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Generic.IEnumerable`1\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Generic/IEnumerable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEnumerator\n    path: src/mscorlib/src/System/Collections/Generic/IEnumerable.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an enumerator that iterates through the collection.</p>\\n\"\n  syntax:\n    content: IEnumerator<T> GetEnumerator()\n    content.vb: Function GetEnumerator As IEnumerator(Of T)\n    return:\n      type: System.Collections.Generic.IEnumerator{{T}}\n      description: \"\\n<p>An enumerator that can be used to iterate through the collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IEnumerator`1\n    commentId: T:System.Collections.Generic.IEnumerator`1\n  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\nreferences:\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerator{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator{`0}\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator`1\n"}