{"nodes":[{"pos":[3793,3804],"content":"SqlDateTime","needQuote":true,"nodes":[{"content":"SqlDateTime","pos":[0,11]}]},{"pos":[6144,6152],"content":"MaxValue","needQuote":true,"nodes":[{"content":"MaxValue","pos":[0,8]}]},{"pos":[7280,7288],"content":"MinValue","needQuote":true,"nodes":[{"content":"MinValue","pos":[0,8]}]},{"pos":[9586,9601],"content":"SQLTicksPerHour","needQuote":true,"nodes":[{"content":"SQLTicksPerHour","pos":[0,15]}]},{"pos":[10678,10695],"content":"SQLTicksPerMinute","needQuote":true,"nodes":[{"content":"SQLTicksPerMinute","pos":[0,17]}]},{"pos":[11784,11801],"content":"SQLTicksPerSecond","needQuote":true,"nodes":[{"content":"SQLTicksPerSecond","pos":[0,17]}]},{"pos":[12907,12928],"content":"SqlDateTime(DateTime)","needQuote":true,"nodes":[{"content":"SqlDateTime(DateTime)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;DateTime&lt;/strong&gt; structure.","pos":[13823,13866],"source":"\\n<p>A <strong>DateTime</strong> structure."},{"content":"&lt;/p&gt;\\n","pos":[13867,13873],"source":" </p>\\n"},{"pos":[14256,14281],"content":"SqlDateTime(Int32, Int32)","needQuote":true,"nodes":[{"content":"SqlDateTime(Int32, Int32)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;An integer value that represents the date as ticks.","pos":[15157,15213],"source":"\\n<p>An integer value that represents the date as ticks."},{"content":"&lt;/p&gt;\\n","pos":[15214,15220],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer value that represents the time as ticks.","pos":[15287,15343],"source":"\\n<p>An integer value that represents the time as ticks."},{"content":"&lt;/p&gt;\\n","pos":[15344,15350],"source":" </p>\\n"},{"pos":[15776,15808],"content":"SqlDateTime(Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"SqlDateTime(Int32, Int32, Int32)","pos":[0,32]}]},{"pos":[17914,17967],"content":"SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32)","pos":[0,53]}]},{"pos":[21009,21070],"content":"SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Double)","needQuote":true,"nodes":[{"content":"SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Double)","pos":[0,61]}]},{"pos":[24429,24489],"content":"SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)","pos":[0,60]}]},{"pos":[27582,27590],"content":"DayTicks","needQuote":true,"nodes":[{"content":"DayTicks","pos":[0,8]}]},{"pos":[29337,29343],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if null.","pos":[30114,30151],"source":"\\n<p>\\n<strong>true</strong> if null."},{"content":"Otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[30152,30186],"source":" Otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[30187,30193],"source":" </p>\\n"},{"pos":[30567,30576],"content":"TimeTicks","needQuote":true,"nodes":[{"content":"TimeTicks","pos":[0,9]}]},{"pos":[31853,31858],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[33566,33592],"content":"Add(SqlDateTime, TimeSpan)","needQuote":true,"nodes":[{"content":"Add(SqlDateTime, TimeSpan)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Timespan&lt;/strong&gt; value.&lt;/p&gt;\\n","pos":[34665,34710],"source":"\\n<p>A <strong>Timespan</strong> value.</p>\\n"},{"pos":[35342,35364],"content":"CompareTo(SqlDateTime)","needQuote":true,"nodes":[{"content":"CompareTo(SqlDateTime)","pos":[0,22]}]},{"pos":[37821,37838],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A signed number that indicates the relative values of the instance and the object.&lt;/p&gt;\\n&lt;p&gt;Return value &lt;/p&gt;\\n&lt;p&gt;Condition &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is less than the object.","pos":[38934,39168],"source":"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than the object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is the same as the object.","pos":[39169,39263],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as the object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is greater than the object &lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The object is a null reference (&lt;strong&gt;Nothing&lt;/strong&gt; as Visual Basic).","pos":[39264,39469],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than the object </p>\\n<p>-or- </p>\\n<p>The object is a null reference (<strong>Nothing</strong> as Visual Basic)."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[39470,39504],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[40066,40098],"content":"Equals(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"Equals(SqlDateTime, SqlDateTime)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the two values are equal.","pos":[41455,41512],"source":"\\n<p>\\n<strong>true</strong> if the two values are equal."},{"content":"Otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[41513,41553],"source":" Otherwise, <strong>false</strong>.</p>\\n"},{"pos":[41934,41948],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to be compared.","pos":[42891,42922],"source":"\\n<p>The object to be compared."},{"content":"&lt;/p&gt;\\n","pos":[42923,42929],"source":" </p>\\n"},{"pos":[43597,43610],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[44285,44330],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[44911,44948],"content":"GreaterThan(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"GreaterThan(SqlDateTime, SqlDateTime)","pos":[0,37]}]},{"pos":[47712,47756],"content":"GreaterThanOrEqual(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(SqlDateTime, SqlDateTime)","pos":[0,44]}]},{"pos":[50549,50583],"content":"LessThan(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"LessThan(SqlDateTime, SqlDateTime)","pos":[0,34]}]},{"pos":[53317,53358],"content":"LessThanOrEqual(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(SqlDateTime, SqlDateTime)","pos":[0,41]}]},{"pos":[56133,56168],"content":"NotEquals(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"NotEquals(SqlDateTime, SqlDateTime)","pos":[0,35]}]},{"pos":[58855,58886],"content":"Addition(SqlDateTime, TimeSpan)","needQuote":true,"nodes":[{"content":"Addition(SqlDateTime, TimeSpan)","pos":[0,31]}]},{"pos":[61279,61313],"content":"Equality(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"Equality(SqlDateTime, SqlDateTime)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the two values are equal.","pos":[62679,62736],"source":"\\n<p>\\n<strong>true</strong> if the two values are equal."},{"content":"Otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[62737,62777],"source":" Otherwise, <strong>false</strong>.</p>\\n"},{"pos":[63280,63313],"content":"Explicit(SqlDateTime to DateTime)","needQuote":true,"nodes":[{"content":"Explicit(SqlDateTime to DateTime)","pos":[0,33]}]},{"pos":[65786,65820],"content":"Explicit(SqlString to SqlDateTime)","needQuote":true,"nodes":[{"content":"Explicit(SqlString to SqlDateTime)","pos":[0,34]}]},{"pos":[68442,68479],"content":"GreaterThan(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"GreaterThan(SqlDateTime, SqlDateTime)","pos":[0,37]}]},{"pos":[71243,71287],"content":"GreaterThanOrEqual(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(SqlDateTime, SqlDateTime)","pos":[0,44]}]},{"pos":[74020,74053],"content":"Implicit(DateTime to SqlDateTime)","needQuote":true,"nodes":[{"content":"Implicit(DateTime to SqlDateTime)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;DateTime&lt;/strong&gt; structure.","pos":[75014,75057],"source":"\\n<p>A <strong>DateTime</strong> structure."},{"content":"&lt;/p&gt;\\n","pos":[75058,75064],"source":" </p>\\n"},{"pos":[76452,76488],"content":"Inequality(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"Inequality(SqlDateTime, SqlDateTime)","pos":[0,36]}]},{"pos":[79229,79263],"content":"LessThan(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"LessThan(SqlDateTime, SqlDateTime)","pos":[0,34]}]},{"pos":[82006,82047],"content":"LessThanOrEqual(SqlDateTime, SqlDateTime)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(SqlDateTime, SqlDateTime)","pos":[0,41]}]},{"pos":[84774,84808],"content":"Subtraction(SqlDateTime, TimeSpan)","needQuote":true,"nodes":[{"content":"Subtraction(SqlDateTime, TimeSpan)","pos":[0,34]}]},{"pos":[86731,86744],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;string&lt;/strong&gt; to be parsed.","pos":[87658,87704],"source":"\\n<p>The <strong>string</strong> to be parsed."},{"content":"&lt;/p&gt;\\n","pos":[87705,87711],"source":" </p>\\n"},{"pos":[88459,88490],"content":"Subtract(SqlDateTime, TimeSpan)","needQuote":true,"nodes":[{"content":"Subtract(SqlDateTime, TimeSpan)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Timespan&lt;/strong&gt; value.&lt;/p&gt;\\n","pos":[89602,89647],"source":"\\n<p>A <strong>Timespan</strong> value.</p>\\n"},{"pos":[90188,90201],"content":"ToSqlString()","needQuote":true,"nodes":[{"content":"ToSqlString()","pos":[0,13]}]},{"pos":[91592,91602],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[92934,92954],"content":"System.Data.SqlTypes","needQuote":true,"nodes":[{"content":"System.Data.SqlTypes","pos":[0,20]}]},{"pos":[93158,93167],"content":"INullable","needQuote":true,"nodes":[{"content":"INullable","pos":[0,9]}]},{"pos":[93354,93365],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[93567,93589],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[93737,93743],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[93810,93811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93861,93867],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[93928,93929]},{"pos":[93984,93990],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[94050,94051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94148,94154],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[94221,94222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94272,94278],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[94339,94340]},{"pos":[94395,94401],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[94461,94462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94707,94738],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[94904,94919],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[94995,94996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95046,95052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[95113,95114]},{"pos":[95169,95175],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[95235,95236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95342,95357],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[95433,95434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95484,95490],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[95551,95552]},{"pos":[95607,95613],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[95673,95674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95900,95909],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[96002,96009],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[96077,96078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96105,96106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96175,96182],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[96250,96251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96278,96279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96408,96414],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[96545,96551],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[96729,96740],"content":"SqlDateTime","needQuote":true,"nodes":[{"content":"SqlDateTime","pos":[0,11]}]},{"pos":[96927,96932],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[97076,97084],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[97235,97241],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[97434,97440],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"pos":[97644,97651],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[97801,97809],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[98001,98018],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"pos":[98153,98162],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[98216,98217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98267,98273],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[98333,98334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98425,98434],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[98488,98489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98539,98545],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[98605,98606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98826,98836],"content":"SqlBoolean","needQuote":true,"nodes":[{"content":"SqlBoolean","pos":[0,10]}]},{"pos":[99055,99069],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[99194,99200],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[99249,99250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99300,99306],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[99366,99367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99453,99459],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[99508,99509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99559,99565],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[99625,99626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99807,99816],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[99995,100008],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[100115,100126],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[100180,100181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100208,100209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100285,100296],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[100350,100351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100378,100379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100577,100586],"content":"SqlString","needQuote":true,"nodes":[{"content":"SqlString","pos":[0,9]}]},{"pos":[100768,100774],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[100941,100951],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[101052,101060],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[101111,101112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101139,101140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101213,101221],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[101272,101273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101300,101301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101474,101495],"content":"SqlNullValueException","needQuote":true,"nodes":[{"content":"SqlNullValueException","pos":[0,21]}]}],"content":"items:\n- uid: System.Data.SqlTypes.SqlDateTime\n  commentId: T:System.Data.SqlTypes.SqlDateTime\n  id: SqlDateTime\n  parent: System.Data.SqlTypes\n  children:\n  - System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)\n  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)\n  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)\n  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)\n  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  - System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)\n  - System.Data.SqlTypes.SqlDateTime.DayTicks\n  - System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.Equals(System.Object)\n  - System.Data.SqlTypes.SqlDateTime.GetHashCode\n  - System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.IsNull\n  - System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.MaxValue\n  - System.Data.SqlTypes.SqlDateTime.MinValue\n  - System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.Null\n  - System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  - System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime\n  - System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime\n  - System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime\n  - System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  - System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  - System.Data.SqlTypes.SqlDateTime.Parse(System.String)\n  - System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour\n  - System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute\n  - System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond\n  - System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  - System.Data.SqlTypes.SqlDateTime.TimeTicks\n  - System.Data.SqlTypes.SqlDateTime.ToSqlString\n  - System.Data.SqlTypes.SqlDateTime.ToString\n  - System.Data.SqlTypes.SqlDateTime.Value\n  langs:\n  - csharp\n  - vb\n  name: SqlDateTime\n  fullName: System.Data.SqlTypes.SqlDateTime\n  type: Struct\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlDateTime\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 27\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure has a different underlying data structure from its corresponding .NET Framework type, <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from \\\"00:00:00 AM 1/1/1900\\\" to an integer will return 0.</p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct SqlDateTime : INullable, IComparable\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure SqlDateTime\n          Implements INullable, IComparable\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.IComparable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: SqlDateTime\n- uid: System.Data.SqlTypes.SqlDateTime.MaxValue\n  commentId: F:System.Data.SqlTypes.SqlDateTime.MaxValue\n  id: MaxValue\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: MaxValue\n  fullName: System.Data.SqlTypes.SqlDateTime.MaxValue\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxValue\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 647\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents the maximum valid date value for a <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static readonly SqlDateTime MaxValue\n    content.vb: Public Shared ReadOnly MaxValue As SqlDateTime\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDateTime.MaxValue\n- uid: System.Data.SqlTypes.SqlDateTime.MinValue\n  commentId: F:System.Data.SqlTypes.SqlDateTime.MinValue\n  id: MinValue\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: MinValue\n  fullName: System.Data.SqlTypes.SqlDateTime.MinValue\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MinValue\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 646\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents the minimum valid date value for a <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static readonly SqlDateTime MinValue\n    content.vb: Public Shared ReadOnly MinValue As SqlDateTime\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDateTime.MinValue\n- uid: System.Data.SqlTypes.SqlDateTime.Null\n  commentId: F:System.Data.SqlTypes.SqlDateTime.Null\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  fullName: System.Data.SqlTypes.SqlDateTime.Null\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 649\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents a <xref href=\\\"System.DBNull\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be assigned to this instance of the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static readonly SqlDateTime Null\n    content.vb: Public Shared ReadOnly Null As SqlDateTime\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDateTime.Null\n- uid: System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour\n  commentId: F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour\n  id: SQLTicksPerHour\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: SQLTicksPerHour\n  fullName: System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SQLTicksPerHour\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 40\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>A constant whose value is the number of ticks equivalent to one hour.</p>\\n\"\n  syntax:\n    content: public static readonly int SQLTicksPerHour\n    content.vb: Public Shared ReadOnly SQLTicksPerHour As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDateTime.SQLTicksPerHour\n- uid: System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute\n  commentId: F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute\n  id: SQLTicksPerMinute\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: SQLTicksPerMinute\n  fullName: System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SQLTicksPerMinute\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 39\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>A constant whose value is the number of ticks equivalent to one minute.</p>\\n\"\n  syntax:\n    content: public static readonly int SQLTicksPerMinute\n    content.vb: Public Shared ReadOnly SQLTicksPerMinute As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDateTime.SQLTicksPerMinute\n- uid: System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond\n  commentId: F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond\n  id: SQLTicksPerSecond\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: SQLTicksPerSecond\n  fullName: System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SQLTicksPerSecond\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 38\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>A constant whose value is the number of ticks equivalent to one second.</p>\\n\"\n  syntax:\n    content: public static readonly int SQLTicksPerSecond\n    content.vb: Public Shared ReadOnly SQLTicksPerSecond As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDateTime.SQLTicksPerSecond\n- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)\n  id: '#ctor(System.DateTime)'\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: SqlDateTime(DateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.DateTime)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 93\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public SqlDateTime(DateTime value)\n    content.vb: Public Sub New(value As Date)\n    parameters:\n    - id: value\n      type: System.DateTime\n      description: \"\\n<p>A <strong>DateTime</strong> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDateTime.SqlDateTime(DateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: SqlDateTime(Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 156\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied parameters.</p>\\n\"\n  syntax:\n    content: public SqlDateTime(int dayTicks, int timeTicks)\n    content.vb: Public Sub New(dayTicks As Integer, timeTicks As Integer)\n    parameters:\n    - id: dayTicks\n      type: System.Int32\n      description: \"\\n<p>An integer value that represents the date as ticks. </p>\\n\"\n    - id: timeTicks\n      type: System.Int32\n      description: \"\\n<p>An integer value that represents the time as ticks. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDateTime.SqlDateTime(Int32, Int32)\n- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32)'\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: SqlDateTime(Int32, Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 98\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied parameters to initialize the year, month, day.</p>\\n\"\n  syntax:\n    content: public SqlDateTime(int year, int month, int day)\n    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer)\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer representing the year of the of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the month of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: day\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the day number of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDateTime.SqlDateTime(Int32, Int32, Int32)\n- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 103\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.</p>\\n\"\n  syntax:\n    content: public SqlDateTime(int year, int month, int day, int hour, int minute, int second)\n    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the year of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the month of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: day\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the day of the month of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: hour\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the hour of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: minute\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the minute of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: second\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the second of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDateTime.SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)'\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Double)\n  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Double)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 108\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.</p>\\n\"\n  syntax:\n    content: public SqlDateTime(int year, int month, int day, int hour, int minute, int second, double millisecond)\n    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Double)\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the year of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the month of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: day\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the day of the month of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: hour\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the hour of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: minute\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the minute of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: second\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the second of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: millisecond\n      type: System.Double\n      description: \"\\n<p>An double value representing the millisecond of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDateTime.SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Double)\n- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 150\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and billisecond of the new structure.</p>\\n\"\n  syntax:\n    content: public SqlDateTime(int year, int month, int day, int hour, int minute, int second, int bilisecond)\n    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, bilisecond As Integer)\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the year of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the month of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: day\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the day of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: hour\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the hour of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: minute\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the minute of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: second\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the second of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: bilisecond\n      type: System.Int32\n      description: \"\\n<p>An integer value representing the bilisecond (billionth of a second) of the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDateTime.SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Data.SqlTypes.SqlDateTime.DayTicks\n  commentId: P:System.Data.SqlTypes.SqlDateTime.DayTicks\n  id: DayTicks\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: DayTicks\n  fullName: System.Data.SqlTypes.SqlDateTime.DayTicks\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DayTicks\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 302\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the number of ticks representing the date of this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int DayTicks { get; }\n    content.vb: Public ReadOnly Property DayTicks As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of ticks representing the date that is contained in the <xref href=\\\"System.Data.SqlTypes.SqlDateTime.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  exceptions:\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The exception that is thrown when the <strong>Value</strong> property of a <xref href=\\\"System.Data.SqlTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is set to null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDateTime.DayTicks\n- uid: System.Data.SqlTypes.SqlDateTime.IsNull\n  commentId: P:System.Data.SqlTypes.SqlDateTime.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: IsNull\n  fullName: System.Data.SqlTypes.SqlDateTime.IsNull\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNull\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 195\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Indicates whether this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is null.</p>\\n\"\n  syntax:\n    content: public bool IsNull { get; }\n    content.vb: Public ReadOnly Property IsNull As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if null. Otherwise, <strong>false</strong>. </p>\\n\"\n  implements:\n  - System.Data.SqlTypes.INullable.IsNull\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDateTime.IsNull\n- uid: System.Data.SqlTypes.SqlDateTime.TimeTicks\n  commentId: P:System.Data.SqlTypes.SqlDateTime.TimeTicks\n  id: TimeTicks\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: TimeTicks\n  fullName: System.Data.SqlTypes.SqlDateTime.TimeTicks\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TimeTicks\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 314\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the number of ticks representing the time of this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int TimeTicks { get; }\n    content.vb: Public ReadOnly Property TimeTicks As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of ticks representing the time of this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDateTime.TimeTicks\n- uid: System.Data.SqlTypes.SqlDateTime.Value\n  commentId: P:System.Data.SqlTypes.SqlDateTime.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Data.SqlTypes.SqlDateTime.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 290\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the value of the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. This property is read-only.</p>\\n\"\n  syntax:\n    content: public DateTime Value { get; }\n    content.vb: Public ReadOnly Property Value As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The value of this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  exceptions:\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The exception that is thrown when the <strong>Value</strong> property of a <xref href=\\\"System.Data.SqlTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is set to null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDateTime.Value\n- uid: System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  id: Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Add(SqlDateTime, TimeSpan)\n  fullName: System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime, System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 388\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Adds a <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified <strong>TimeSpan</strong>.</p>\\n\"\n  syntax:\n    content: public static SqlDateTime Add(SqlDateTime x, TimeSpan t)\n    content.vb: Public Shared Function Add(x As SqlDateTime, t As TimeSpan) As SqlDateTime\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    - id: t\n      type: System.TimeSpan\n      description: \"\\n<p>A <strong>Timespan</strong> value.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.Add(SqlDateTime, TimeSpan)\n- uid: System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)\n  id: CompareTo(System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompareTo\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 609\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to the supplied <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure and returns an indication of their relative values.</p>\\n\"\n  syntax:\n    content: public int CompareTo(SqlDateTime value)\n    content.vb: Public Function CompareTo(value As SqlDateTime) As Integer\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be compared.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n<p>-or- </p>\\n<p>\\n<xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a null reference (<strong>Nothing </strong>in Visual Basic) </p>\\n</td></tr></tbody></table>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDateTime.CompareTo(SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompareTo\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 598\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to the supplied <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns an indication of their relative values.</p>\\n\"\n  syntax:\n    content: public int CompareTo(object value)\n    content.vb: Public Function CompareTo(value As Object) As Integer\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be compared. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than the object. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as the object. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than the object </p>\\n<p>-or- </p>\\n<p>The object is a null reference (<strong>Nothing</strong> as Visual Basic). </p>\\n</td></tr></tbody></table>\\n\"\n  implements:\n  - System.IComparable.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDateTime.CompareTo(Object)\n- uid: System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Equals(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 549\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether they are equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean Equals(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Function Equals(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>\\n<strong>true</strong> if the two values are equal. Otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.Equals(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.Equals(System.Object)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Data.SqlTypes.SqlDateTime.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 624\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares the supplied object parameter to the <xref href=\\\"System.Data.SqlTypes.SqlDateTime.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object value)\n    content.vb: Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The object to be compared. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the object is an instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and the two are equal; otherwise <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlDateTime.Equals(Object)\n- uid: System.Data.SqlTypes.SqlDateTime.GetHashCode\n  commentId: M:System.Data.SqlTypes.SqlDateTime.GetHashCode\n  id: GetHashCode\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Data.SqlTypes.SqlDateTime.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 640\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlDateTime.GetHashCode()\n- uid: System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: GreaterThan(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GreaterThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 567\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is greater than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean GreaterThan(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Function GreaterThan(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.GreaterThan(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: GreaterThanOrEqual(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GreaterThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 579\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is greater than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean GreaterThanOrEqual(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.GreaterThanOrEqual(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: LessThan(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LessThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 561\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is less than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean LessThan(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Function LessThan(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.LessThan(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: LessThanOrEqual(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LessThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 573\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is less than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean LessThanOrEqual(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Function LessThanOrEqual(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.LessThanOrEqual(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: NotEquals(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NotEquals\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 555\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether they are not equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean NotEquals(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Function NotEquals(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are not equal or <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are equal. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.NotEquals(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  id: op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Addition(SqlDateTime, TimeSpan)\n  fullName: System.Data.SqlTypes.SqlDateTime.Addition(System.Data.SqlTypes.SqlDateTime, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Addition\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 372\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Adds the period of time indicated by the supplied <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter, <em>t</em>, to the supplied <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static SqlDateTime operator +(SqlDateTime x, TimeSpan t)\n    content.vb: Public Shared Operator +(x As SqlDateTime, t As TimeSpan) As SqlDateTime\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: t\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either argument is <xref href=\\\"System.Data.SqlTypes.SqlDateTime.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, the new <xref href=\\\"System.Data.SqlTypes.SqlDateTime.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.Data.SqlTypes.SqlDateTime.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.Addition(SqlDateTime, TimeSpan)\n- uid: System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Equality(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.Equality(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 510\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether they are equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator ==(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Operator =(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>\\n<strong>true</strong> if the two values are equal. Otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.Equality(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime\n  id: op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlDateTime to DateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.Explicit(System.Data.SqlTypes.SqlDateTime to System.DateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 332\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static explicit operator DateTime(SqlDateTime x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlDateTime) As Date\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object whose <xref href=\\\"System.DateTime.Date\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.DateTime.TimeOfDay\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties contain the same date and time values as the <xref href=\\\"System.Data.SqlTypes.SqlDateTime.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the supplied <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDateTime.Narrowing(System.Data.SqlTypes.SqlDateTime to System.DateTime)\n  name.vb: Narrowing(SqlDateTime to DateTime)\n  nameWithType: SqlDateTime.Explicit(SqlDateTime to DateTime)\n  nameWithType.vb: SqlDateTime.Narrowing(SqlDateTime to DateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime\n  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlString to SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 477\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter to a <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlDateTime(SqlString x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As SqlDateTime\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDateTime.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the date and time represented by the <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter. If the <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <strong>Value</strong> of the newly created <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure will be null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDateTime.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDateTime)\n  name.vb: Narrowing(SqlString to SqlDateTime)\n  nameWithType: SqlDateTime.Explicit(SqlString to SqlDateTime)\n  nameWithType.vb: SqlDateTime.Narrowing(SqlString to SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: GreaterThan(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_GreaterThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 526\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is greater than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator>(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Operator>(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.GreaterThan(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: GreaterThanOrEqual(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_GreaterThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 538\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is greater than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator >=(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Operator >=(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.GreaterThanOrEqual(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime\n  id: op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Implicit(DateTime to SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.Implicit(System.DateTime to System.Data.SqlTypes.SqlDateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 326\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static implicit operator SqlDateTime(DateTime value)\n    content.vb: Public Shared Widening Operator CType(value As Date) As SqlDateTime\n    parameters:\n    - id: value\n      type: System.DateTime\n      description: \"\\n<p>A <strong>DateTime</strong> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDateTime.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the combined <xref href=\\\"System.DateTime.Date\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.DateTime.TimeOfDay\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the supplied <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDateTime.Widening(System.DateTime to System.Data.SqlTypes.SqlDateTime)\n  name.vb: Widening(DateTime to SqlDateTime)\n  nameWithType: SqlDateTime.Implicit(DateTime to SqlDateTime)\n  nameWithType.vb: SqlDateTime.Widening(DateTime to SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Inequality(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.Inequality(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 515\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether they are not equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator !=(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Operator <>(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are not equal or <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are equal. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.Inequality(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: LessThan(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_LessThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 520\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is less than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator <(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Operator <(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.LessThan(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: LessThanOrEqual(SqlDateTime, SqlDateTime)\n  fullName: System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_LessThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 532\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares two instances of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to determine whether the first is less than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator <=(SqlDateTime x, SqlDateTime y)\n    content.vb: Public Shared Operator <=(x As SqlDateTime, y As SqlDateTime) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.LessThanOrEqual(SqlDateTime, SqlDateTime)\n- uid: System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  id: op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Subtraction(SqlDateTime, TimeSpan)\n  fullName: System.Data.SqlTypes.SqlDateTime.Subtraction(System.Data.SqlTypes.SqlDateTime, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Subtraction\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 378\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Subtracts the supplied <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure, <em>t</em>, from the supplied <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static SqlDateTime operator -(SqlDateTime x, TimeSpan t)\n    content.vb: Public Shared Operator -(x As SqlDateTime, t As TimeSpan) As SqlDateTime\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: t\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure representing the results of the subtraction.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.Subtraction(SqlDateTime, TimeSpan)\n- uid: System.Data.SqlTypes.SqlDateTime.Parse(System.String)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Data.SqlTypes.SqlDateTime.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 346\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representation of a date and time to its <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent.</p>\\n\"\n  syntax:\n    content: public static SqlDateTime Parse(string s)\n    content.vb: Public Shared Function Parse(s As String) As SqlDateTime\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>The <strong>string</strong> to be parsed. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure equal to the date and time represented by the specified <strong>string</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.Parse(String)\n- uid: System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  commentId: M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  id: Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: Subtract(SqlDateTime, TimeSpan)\n  fullName: System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime, System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subtract\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 394\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Subtracts the specified <strong>Timespan</strong> from this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static SqlDateTime Subtract(SqlDateTime x, TimeSpan t)\n    content.vb: Public Shared Function Subtract(x As SqlDateTime, t As TimeSpan) As SqlDateTime\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    - id: t\n      type: System.TimeSpan\n      description: \"\\n<p>A <strong>Timespan</strong> value.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDateTime.Subtract(SqlDateTime, TimeSpan)\n- uid: System.Data.SqlTypes.SqlDateTime.ToSqlString\n  commentId: M:System.Data.SqlTypes.SqlDateTime.ToSqlString\n  id: ToSqlString\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: ToSqlString()\n  fullName: System.Data.SqlTypes.SqlDateTime.ToSqlString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlString\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 585\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlString ToSqlString()\n    content.vb: Public Function ToSqlString As SqlString\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>A <strong>SqlString</strong> structure whose value is a string representing the date and time that is contained in this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDateTime.ToSqlString()\n- uid: System.Data.SqlTypes.SqlDateTime.ToString\n  commentId: M:System.Data.SqlTypes.SqlDateTime.ToString\n  id: ToString\n  parent: System.Data.SqlTypes.SqlDateTime\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Data.SqlTypes.SqlDateTime.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs\n    startLine: 338\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A <strong>String</strong> representing the <xref href=\\\"System.Data.SqlTypes.SqlDateTime.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of this <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlDateTime.ToString()\nreferences:\n- uid: System.Data.SqlTypes\n  isExternal: false\n  name: System.Data.SqlTypes\n  fullName: System.Data.SqlTypes\n  nameWithType: System.Data.SqlTypes\n  commentId: N:System.Data.SqlTypes\n- uid: System.Data.SqlTypes.INullable\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: INullable\n  fullName: System.Data.SqlTypes.INullable\n  nameWithType: INullable\n  commentId: T:System.Data.SqlTypes.INullable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  fullName: System.IComparable\n  nameWithType: IComparable\n  commentId: T:System.IComparable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Data.SqlTypes.SqlDateTime\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDateTime\n  fullName: System.Data.SqlTypes.SqlDateTime\n  nameWithType: SqlDateTime\n  commentId: T:System.Data.SqlTypes.SqlDateTime\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.Data.SqlTypes.INullable.IsNull\n  parent: System.Data.SqlTypes.INullable\n  isExternal: false\n  name: IsNull\n  fullName: System.Data.SqlTypes.INullable.IsNull\n  nameWithType: INullable.IsNull\n  commentId: P:System.Data.SqlTypes.INullable.IsNull\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  nameWithType: TimeSpan\n  commentId: T:System.TimeSpan\n- uid: System.IComparable.CompareTo(System.Object)\n  parent: System.IComparable\n  isExternal: true\n  name: CompareTo(Object)\n  fullName: System.IComparable.CompareTo(System.Object)\n  spec.csharp:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable.CompareTo(Object)\n  commentId: M:System.IComparable.CompareTo(System.Object)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n  nameWithType: SqlBoolean\n  commentId: T:System.Data.SqlTypes.SqlBoolean\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n  nameWithType: SqlString\n  commentId: T:System.Data.SqlTypes.SqlString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Data.SqlTypes.SqlNullValueException\n  isExternal: false\n  name: SqlNullValueException\n  fullName: System.Data.SqlTypes.SqlNullValueException\n  nameWithType: SqlNullValueException\n  commentId: T:System.Data.SqlTypes.SqlNullValueException\n"}