{"nodes":[{"pos":[604,622],"content":"HttpMessageInvoker","needQuote":true,"nodes":[{"content":"HttpMessageInvoker","pos":[0,18]}]},{"pos":[2226,2264],"content":"HttpMessageInvoker(HttpMessageHandler)","needQuote":true,"nodes":[{"content":"HttpMessageInvoker(HttpMessageHandler)","pos":[0,38]}]},{"pos":[3838,3885],"content":"HttpMessageInvoker(HttpMessageHandler, Boolean)","needQuote":true,"nodes":[{"content":"HttpMessageInvoker(HttpMessageHandler, Boolean)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the inner handler should be disposed of by Dispose(),&lt;strong&gt;false&lt;/strong&gt; if you intend to reuse the inner handler.&lt;/p&gt;\\n","pos":[5112,5267],"source":"\\n<p>\\n<strong>true</strong> if the inner handler should be disposed of by Dispose(),<strong>false</strong> if you intend to reuse the inner handler.</p>\\n"},{"pos":[5612,5621],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[6673,6689],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to releases only unmanaged resources.&lt;/p&gt;\\n","pos":[7513,7657],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n"},{"pos":[8224,8272],"content":"SendAsync(HttpRequestMessage, CancellationToken)","needQuote":true,"nodes":[{"content":"SendAsync(HttpRequestMessage, CancellationToken)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The HTTP request message to send.&lt;/p&gt;\\n","pos":[9189,9233],"source":"\\n<p>The HTTP request message to send.</p>\\n"},{"content":"\\n&lt;p&gt;The cancellation token to cancel operation.&lt;/p&gt;\\n","pos":[9330,9384],"source":"\\n<p>The cancellation token to cancel operation.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;request&lt;/em&gt; was &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9788,9846],"source":"\\n<p>The <em>request</em> was <strong>null</strong>.</p>\\n"},{"pos":[10081,10096],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[10254,10260],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10410,10421],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[10596,10606],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10701,10709],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10778,10779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10806,10807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10877,10885],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10954,10955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10982,10983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11166,11180],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11299,11305],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11372,11373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11423,11429],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11489,11490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11573,11579],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11646,11647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11697,11703],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11763,11764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11978,12000],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12148,12154],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12221,12222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12272,12278],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12339,12340]},{"pos":[12395,12401],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12461,12462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12559,12565],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12632,12633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12683,12689],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12750,12751]},{"pos":[12806,12812],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12872,12873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13118,13149],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13315,13330],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13406,13407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13457,13463],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13524,13525]},{"pos":[13580,13586],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13646,13647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13753,13768],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13844,13845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13895,13901],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13962,13963]},{"pos":[14018,14024],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14084,14085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14315,14328],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14429,14440],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14512,14513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14540,14541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14614,14625],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14697,14698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14725,14726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14901,14910],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15003,15010],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15078,15079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15106,15107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15176,15183],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15251,15252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15279,15280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15455,15472],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15581,15596],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15672,15673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15700,15701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15778,15793],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15869,15870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15897,15898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16043,16049],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16210,16228],"content":"HttpMessageHandler","needQuote":true,"nodes":[{"content":"HttpMessageHandler","pos":[0,18]}]},{"pos":[16428,16435],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16608,16617],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[16720,16727],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[16779,16780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16807,16808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16882,16889],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[16941,16942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16969,16970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17163,17181],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"pos":[17411,17428],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[17717,17742],"content":"Task<HttpResponseMessage>","needQuote":true,"nodes":[{"content":"Task&lt;HttpResponseMessage&gt;","pos":[0,25],"source":"Task<HttpResponseMessage>"}]},{"pos":[18007,18011],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[18085,18086],"content":"<","needQuote":true,"nodes":[]},{"pos":[18158,18177],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[18320,18324],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[18399,18402]},{"pos":[18481,18500],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[18561,18562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18801,18817],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[18977,18990],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[19187,19191],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[19244,19245],"content":"<","needQuote":true,"nodes":[]},{"pos":[19272,19279],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[19394,19398],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[19452,19455]},{"pos":[19489,19496],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[19529,19530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19716,19738],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[19915,19936],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Net.Http.HttpMessageInvoker\n  commentId: T:System.Net.Http.HttpMessageInvoker\n  id: HttpMessageInvoker\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  - System.Net.Http.HttpMessageInvoker.Dispose\n  - System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  - System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  - vb\n  name: HttpMessageInvoker\n  fullName: System.Net.Http.HttpMessageInvoker\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HttpMessageInvoker\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 135\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>A specialty class that allows applications to call the <xref href=\\\"System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method on an Http handler chain. </p>\\n\"\n  syntax:\n    content: 'public class HttpMessageInvoker : IDisposable'\n    content.vb: >-\n      Public Class HttpMessageInvoker\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: HttpMessageInvoker\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  commentId: M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  id: '#ctor(System.Net.Http.HttpMessageHandler)'\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  - vb\n  name: HttpMessageInvoker(HttpMessageHandler)\n  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(System.Net.Http.HttpMessageHandler)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 137\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes an instance of a <xref href=\\\"System.Net.Http.HttpMessageInvoker\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specific <xref href=\\\"System.Net.Http.HttpMessageHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public HttpMessageInvoker(HttpMessageHandler handler)\n    content.vb: Public Sub New(handler As HttpMessageHandler)\n    parameters:\n    - id: handler\n      type: System.Net.Http.HttpMessageHandler\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.HttpMessageHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> responsible for processing the HTTP response messages.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  commentId: M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  id: '#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)'\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  - vb\n  name: HttpMessageInvoker(HttpMessageHandler, Boolean)\n  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(System.Net.Http.HttpMessageHandler, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 138\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes an instance of a <xref href=\\\"System.Net.Http.HttpMessageInvoker\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specific <xref href=\\\"System.Net.Http.HttpMessageHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public HttpMessageInvoker(HttpMessageHandler handler, bool disposeHandler)\n    content.vb: Public Sub New(handler As HttpMessageHandler, disposeHandler As Boolean)\n    parameters:\n    - id: handler\n      type: System.Net.Http.HttpMessageHandler\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.HttpMessageHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> responsible for processing the HTTP response messages.</p>\\n\"\n    - id: disposeHandler\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the inner handler should be disposed of by Dispose(),<strong>false</strong> if you intend to reuse the inner handler.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler, Boolean)\n- uid: System.Net.Http.HttpMessageInvoker.Dispose\n  commentId: M:System.Net.Http.HttpMessageInvoker.Dispose\n  id: Dispose\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Net.Http.HttpMessageInvoker.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 139\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources and disposes of the managed resources used by the <xref href=\\\"System.Net.Http.HttpMessageInvoker\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpMessageInvoker.Dispose()\n- uid: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 140\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Net.Http.HttpMessageInvoker\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally disposes of the managed resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: HttpMessageInvoker.Dispose(Boolean)\n- uid: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  - vb\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendAsync\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 141\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Send an HTTP request as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public virtual Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n    content.vb: Public Overridable Function SendAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: \"\\n<p>The HTTP request message to send.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The cancellation token to cancel operation.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>request</em> was <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: HttpMessageInvoker.SendAsync(HttpRequestMessage, CancellationToken)\nreferences:\n- uid: System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  fullName: System.Net.Http\n  commentId: N:System.Net.Http\n  nameWithType: System.Net.Http\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.Http.HttpMessageHandler\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMessageHandler\n  fullName: System.Net.Http.HttpMessageHandler\n  commentId: T:System.Net.Http.HttpMessageHandler\n  nameWithType: HttpMessageHandler\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n  commentId: T:System.Net.Http.HttpRequestMessage\n  nameWithType: HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  nameWithType: CancellationToken\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)\n  name.vb: Task(Of HttpResponseMessage)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  nameWithType: Task<HttpResponseMessage>\n  nameWithType.vb: Task(Of HttpResponseMessage)\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  commentId: N:System.Threading\n  nameWithType: System.Threading\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}