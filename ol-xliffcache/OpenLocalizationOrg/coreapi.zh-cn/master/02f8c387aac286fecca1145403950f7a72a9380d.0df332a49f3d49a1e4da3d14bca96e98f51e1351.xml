{"nodes":[{"pos":[789,801],"content":"EventBuilder","needQuote":true,"nodes":[{"content":"EventBuilder","pos":[0,12]}]},{"pos":[2594,2623],"content":"AddOtherMethod(MethodBuilder)","needQuote":true,"nodes":[{"content":"AddOtherMethod(MethodBuilder)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;MethodBuilder&lt;/strong&gt; object that represents the other method.","pos":[3672,3750],"source":"\\n<p>A <strong>MethodBuilder</strong> object that represents the other method."},{"content":"&lt;/p&gt;\\n","pos":[3751,3757],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mdBuilder&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[3876,3927],"source":"\\n<p>\\n<em>mdBuilder</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[3928,3934],"source":" </p>\\n"},{"pos":[4664,4693],"content":"SetAddOnMethod(MethodBuilder)","needQuote":true,"nodes":[{"content":"SetAddOnMethod(MethodBuilder)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;MethodBuilder&lt;/strong&gt; object that represents the method used to subscribe to this event.","pos":[5556,5660],"source":"\\n<p>A <strong>MethodBuilder</strong> object that represents the method used to subscribe to this event."},{"content":"&lt;/p&gt;\\n","pos":[5661,5667],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mdBuilder&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[5786,5837],"source":"\\n<p>\\n<em>mdBuilder</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[5838,5844],"source":" </p>\\n"},{"pos":[6619,6662],"content":"SetCustomAttribute(ConstructorInfo, Byte[])","needQuote":true,"nodes":[{"content":"SetCustomAttribute(ConstructorInfo, Byte[])","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[7647,7693],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[7694,7700],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A byte blob representing the attributes.","pos":[7774,7819],"source":"\\n<p>A byte blob representing the attributes."},{"content":"&lt;/p&gt;\\n","pos":[7820,7826],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; or &lt;em&gt;binaryAttribute&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[7945,8018],"source":"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8019,8025],"source":" </p>\\n"},{"pos":[9059,9101],"content":"SetCustomAttribute(CustomAttributeBuilder)","needQuote":true,"nodes":[{"content":"SetCustomAttribute(CustomAttributeBuilder)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;An instance of a helper class to describe the custom attribute.","pos":[10038,10106],"source":"\\n<p>An instance of a helper class to describe the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[10107,10113],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[10232,10277],"source":"\\n<p>\\n<em>con</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[10278,10284],"source":" </p>\\n"},{"pos":[11027,11056],"content":"SetRaiseMethod(MethodBuilder)","needQuote":true,"nodes":[{"content":"SetRaiseMethod(MethodBuilder)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;MethodBuilder&lt;/strong&gt; object that represents the method used to raise this event.","pos":[11912,12009],"source":"\\n<p>A <strong>MethodBuilder</strong> object that represents the method used to raise this event."},{"content":"&lt;/p&gt;\\n","pos":[12010,12016],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mdBuilder&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[12135,12186],"source":"\\n<p>\\n<em>mdBuilder</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12187,12193],"source":" </p>\\n"},{"pos":[12932,12964],"content":"SetRemoveOnMethod(MethodBuilder)","needQuote":true,"nodes":[{"content":"SetRemoveOnMethod(MethodBuilder)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;MethodBuilder&lt;/strong&gt; object that represents the method used to unsubscribe to this event.","pos":[13841,13947],"source":"\\n<p>A <strong>MethodBuilder</strong> object that represents the method used to unsubscribe to this event."},{"content":"&lt;/p&gt;\\n","pos":[13948,13954],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;mdBuilder&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[14073,14124],"source":"\\n<p>\\n<em>mdBuilder</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[14125,14131],"source":" </p>\\n"},{"pos":[14594,14616],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[14795,14801],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14961,14971],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15066,15074],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15143,15144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15171,15172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15242,15250],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15319,15320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15347,15348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15531,15545],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15664,15670],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15737,15738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15788,15794],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15854,15855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15938,15944],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16011,16012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16062,16068],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16128,16129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16343,16365],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16513,16519],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16586,16587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16637,16643],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16704,16705]},{"pos":[16760,16766],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16826,16827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16924,16930],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16997,16998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17048,17054],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17115,17116]},{"pos":[17171,17177],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17237,17238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17483,17514],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17680,17695],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17771,17772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17822,17828],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17889,17890]},{"pos":[17945,17951],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18011,18012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18118,18133],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18209,18210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18260,18266],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18327,18328]},{"pos":[18383,18389],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18449,18450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18680,18693],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18794,18805],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18877,18878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18905,18906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18979,18990],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19062,19063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19090,19091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19266,19275],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19368,19375],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19443,19444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19471,19472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19541,19548],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19616,19617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19644,19645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19820,19837],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19946,19961],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20037,20038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20065,20066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20143,20158],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20234,20235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20262,20263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20408,20414],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20584,20597],"content":"MethodBuilder","needQuote":true,"nodes":[{"content":"MethodBuilder","pos":[0,13]}]},{"pos":[20826,20841],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[20998,21004],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[21124,21128],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[21187,21189]},{"pos":[21252,21256],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[21314,21316],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[21436,21453],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[21665,21687],"content":"CustomAttributeBuilder","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder","pos":[0,22]}]},{"pos":[21910,21931],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[22140,22165],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Reflection.Emit.EventBuilder\n  commentId: T:System.Reflection.Emit.EventBuilder\n  id: EventBuilder\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  - System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  - System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  - System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  - System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  langs:\n  - csharp\n  - vb\n  name: EventBuilder\n  fullName: System.Reflection.Emit.EventBuilder\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EventBuilder\n    path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n    startLine: 26\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines events for a class.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(MayLeakOnAbort = true)]\n\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_EventBuilder))]\n\n      [ComVisible(true)]\n\n      public sealed class EventBuilder : _EventBuilder\n    content.vb: >-\n      <HostProtection(MayLeakOnAbort:=True)>\n\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_EventBuilder))>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class EventBuilder\n          Implements _EventBuilder\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: EventBuilder\n- uid: System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  id: AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  - vb\n  name: AddOtherMethod(MethodBuilder)\n  fullName: System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddOtherMethod\n    path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n    startLine: 95\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds one of the \\\"other\\\" methods associated with this event. \\\"Other\\\" methods are methods other than the \\\"on\\\" and \\\"raise\\\" methods associated with an event. This function can be called many times to add as many \\\"other\\\" methods.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void AddOtherMethod(MethodBuilder mdBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub AddOtherMethod(mdBuilder As MethodBuilder)\n    parameters:\n    - id: mdBuilder\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>A <strong>MethodBuilder</strong> object that represents the other method. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>mdBuilder</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called on the enclosing type. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventBuilder.AddOtherMethod(MethodBuilder)\n- uid: System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  id: SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetAddOnMethod(MethodBuilder)\n  fullName: System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetAddOnMethod\n    path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n    startLine: 77\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the method used to subscribe to this event.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetAddOnMethod(MethodBuilder mdBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetAddOnMethod(mdBuilder As MethodBuilder)\n    parameters:\n    - id: mdBuilder\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>A <strong>MethodBuilder</strong> object that represents the method used to subscribe to this event. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>mdBuilder</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called on the enclosing type. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventBuilder.SetAddOnMethod(MethodBuilder)\n- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n    startLine: 104\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Set a custom attribute using a specified custom attribute blob.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [ComVisible(true)]\n\n      public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)\n    content.vb: >-\n      <SecurityCritical>\n\n      <ComVisible(True)>\n\n      Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: \"\\n<p>A byte blob representing the attributes. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called on the enclosing type. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())\n  name.vb: SetCustomAttribute(ConstructorInfo, Byte())\n  nameWithType: EventBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType.vb: EventBuilder.SetCustomAttribute(ConstructorInfo, Byte())\n- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  fullName: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n    startLine: 127\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets a custom attribute using a custom attribute builder.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetCustomAttribute(CustomAttributeBuilder customBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: \"\\n<p>An instance of a helper class to describe the custom attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called on the enclosing type. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventBuilder.SetCustomAttribute(CustomAttributeBuilder)\n- uid: System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  id: SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetRaiseMethod(MethodBuilder)\n  fullName: System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetRaiseMethod\n    path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n    startLine: 89\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the method used to raise this event.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetRaiseMethod(MethodBuilder mdBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetRaiseMethod(mdBuilder As MethodBuilder)\n    parameters:\n    - id: mdBuilder\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>A <strong>MethodBuilder</strong> object that represents the method used to raise this event. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>mdBuilder</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called on the enclosing type. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventBuilder.SetRaiseMethod(MethodBuilder)\n- uid: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  id: SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetRemoveOnMethod(MethodBuilder)\n  fullName: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetRemoveOnMethod\n    path: src/mscorlib/src/System/Reflection/Emit/EventBuilder.cs\n    startLine: 83\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the method used to unsubscribe to this event.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetRemoveOnMethod(MethodBuilder mdBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetRemoveOnMethod(mdBuilder As MethodBuilder)\n    parameters:\n    - id: mdBuilder\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>A <strong>MethodBuilder</strong> object that represents the method used to unsubscribe to this event. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>mdBuilder</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called on the enclosing type. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventBuilder.SetRemoveOnMethod(MethodBuilder)\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection.Emit.MethodBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodBuilder\n  fullName: System.Reflection.Emit.MethodBuilder\n  nameWithType: MethodBuilder\n  commentId: T:System.Reflection.Emit.MethodBuilder\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  nameWithType: ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  commentId: T:System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}