{"nodes":[{"pos":[421,428],"content":"BINDPTR","needQuote":true,"nodes":[{"content":"BINDPTR","pos":[0,7]}]},{"pos":[2359,2369],"content":"lpfuncdesc","needQuote":true,"nodes":[{"content":"lpfuncdesc","pos":[0,10]}]},{"pos":[3753,3760],"content":"lptcomp","needQuote":true,"nodes":[{"content":"lptcomp","pos":[0,7]}]},{"pos":[5146,5155],"content":"lpvardesc","needQuote":true,"nodes":[{"content":"lpvardesc","pos":[0,9]}]},{"pos":[6379,6418],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[6682,6696],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6821,6827],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6876,6877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6927,6933],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6993,6994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7080,7086],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7135,7136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7186,7192],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7252,7253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7456,7469],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7576,7587],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7641,7642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7669,7670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7746,7757],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7811,7812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7839,7840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8029,8039],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8140,8148],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8199,8200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8227,8228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8301,8309],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8360,8361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8388,8389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8592,8614],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8762,8768],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8835,8836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8886,8892],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8953,8954]},{"pos":[9009,9015],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9075,9076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9173,9179],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9246,9247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9297,9303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9364,9365]},{"pos":[9420,9426],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9486,9487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9732,9763],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9929,9944],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10020,10021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10071,10077],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10138,10139]},{"pos":[10194,10200],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10260,10261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10367,10382],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10458,10459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10509,10515],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10576,10577]},{"pos":[10632,10638],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10698,10699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10925,10934],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11027,11034],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11102,11103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11130,11131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11200,11207],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11275,11276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11303,11304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11460,11469],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[11623,11629],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11750,11756],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11887,11893],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.BINDPTR\n  commentId: T:System.Runtime.InteropServices.ComTypes.BINDPTR\n  id: BINDPTR\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc\n  - System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp\n  - System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc\n  langs:\n  - csharp\n  - vb\n  name: BINDPTR\n  fullName: System.Runtime.InteropServices.ComTypes.BINDPTR\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: BINDPTR\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Contains a pointer to a bound-to <xref href=\\\"System.Runtime.InteropServices.FUNCDESC\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure, <xref href=\\\"System.Runtime.InteropServices.VARDESC\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure, or an <strong>ITypeComp</strong> interface.</p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Explicit, CharSet = CharSet.Unicode)]\n\n      public struct BINDPTR\n    content.vb: >-\n      <StructLayout(LayoutKind.Explicit, CharSet:=CharSet.Unicode)>\n\n      Public Structure BINDPTR\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 2\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: BINDPTR\n- uid: System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc\n  commentId: F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc\n  id: lpfuncdesc\n  parent: System.Runtime.InteropServices.ComTypes.BINDPTR\n  langs:\n  - csharp\n  - vb\n  name: lpfuncdesc\n  fullName: System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: lpfuncdesc\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs\n    startLine: 33\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents a pointer to a <xref href=\\\"System.Runtime.InteropServices.FUNCDESC\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [FieldOffset(0)]\n\n      public IntPtr lpfuncdesc\n    content.vb: >-\n      <FieldOffset(0)>\n\n      Public lpfuncdesc As IntPtr\n    return:\n      type: System.IntPtr\n  attributes:\n  - type: System.Runtime.InteropServices.FieldOffsetAttribute\n    ctor: System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)\n    arguments:\n    - type: System.Int32\n      value: 0\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BINDPTR.lpfuncdesc\n- uid: System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp\n  commentId: F:System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp\n  id: lptcomp\n  parent: System.Runtime.InteropServices.ComTypes.BINDPTR\n  langs:\n  - csharp\n  - vb\n  name: lptcomp\n  fullName: System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: lptcomp\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs\n    startLine: 37\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents a pointer to an <xref href=\\\"System.Runtime.InteropServices.ComTypes.ITypeComp\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface.</p>\\n\"\n  syntax:\n    content: >-\n      [FieldOffset(0)]\n\n      public IntPtr lptcomp\n    content.vb: >-\n      <FieldOffset(0)>\n\n      Public lptcomp As IntPtr\n    return:\n      type: System.IntPtr\n  attributes:\n  - type: System.Runtime.InteropServices.FieldOffsetAttribute\n    ctor: System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)\n    arguments:\n    - type: System.Int32\n      value: 0\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BINDPTR.lptcomp\n- uid: System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc\n  commentId: F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc\n  id: lpvardesc\n  parent: System.Runtime.InteropServices.ComTypes.BINDPTR\n  langs:\n  - csharp\n  - vb\n  name: lpvardesc\n  fullName: System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: lpvardesc\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents a pointer to a <xref href=\\\"System.Runtime.InteropServices.VARDESC\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [FieldOffset(0)]\n\n      public IntPtr lpvardesc\n    content.vb: >-\n      <FieldOffset(0)>\n\n      Public lpvardesc As IntPtr\n    return:\n      type: System.IntPtr\n  attributes:\n  - type: System.Runtime.InteropServices.FieldOffsetAttribute\n    ctor: System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)\n    arguments:\n    - type: System.Int32\n      value: 0\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BINDPTR.lpvardesc\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n"}