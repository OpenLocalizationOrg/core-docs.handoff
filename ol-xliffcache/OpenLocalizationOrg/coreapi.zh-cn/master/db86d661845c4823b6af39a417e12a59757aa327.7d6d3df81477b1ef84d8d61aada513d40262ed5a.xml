{"nodes":[{"pos":[476,494],"content":"ProtectionScenario","needQuote":true,"nodes":[{"content":"ProtectionScenario","pos":[0,18]}]},{"pos":[1725,1742],"content":"TransportSelected","needQuote":true,"nodes":[{"content":"TransportSelected","pos":[0,17]}]},{"pos":[3427,3439],"content":"TrustedProxy","needQuote":true,"nodes":[{"content":"TrustedProxy","pos":[0,12]}]},{"pos":[4532,4581],"content":"System.Security.Authentication.ExtendedProtection","needQuote":true,"nodes":[{"content":"System.Security.Authentication.ExtendedProtection","pos":[0,49]}]},{"pos":[4939,4957],"content":"ProtectionScenario","needQuote":true,"nodes":[{"content":"ProtectionScenario","pos":[0,18]}]}],"content":"items:\n- uid: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  commentId: T:System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  id: ProtectionScenario\n  parent: System.Security.Authentication.ExtendedProtection\n  children:\n  - System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected\n  - System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy\n  langs:\n  - csharp\n  - vb\n  name: ProtectionScenario\n  fullName: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  type: Enum\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProtectionScenario\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 149\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Authentication.ExtendedProtection.ProtectionScenario\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration specifies the protection scenario enforced by the policy.</p>\\n\"\n  syntax:\n    content: public enum ProtectionScenario\n    content.vb: Public Enum ProtectionScenario\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: ProtectionScenario\n- uid: System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected\n  commentId: F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected\n  id: TransportSelected\n  parent: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  langs:\n  - csharp\n  - vb\n  name: TransportSelected\n  fullName: System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TransportSelected\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 151\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>The transport will select between a secure and standard protection scenario depending on the type of channel used. For secure protection, integrated Windows authentication is wrapped in a secure channel and has an exactly matching channel binding token with no Service Provider Name (SPN) validation. For standard protection, integrated Windows authentication is optionally wrapped in a secure channel with an optional channel binding token and SPN validation is required. So if the request comes through a secure channel, the channel binding token (CBT) is checked, otherwise the SPN is checked.</p>\\n\"\n  syntax:\n    content: TransportSelected = 0\n    return:\n      type: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: ProtectionScenario.TransportSelected\n- uid: System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy\n  commentId: F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy\n  id: TrustedProxy\n  parent: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  langs:\n  - csharp\n  - vb\n  name: TrustedProxy\n  fullName: System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TrustedProxy\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 152\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Integrated Windows authentication is wrapped in a secure channel terminated by a trusted proxy and has a channel binding token with SPN validation required. This requires the presence of a CBT, but the CBT is not checked while the SPN is checked.</p>\\n\"\n  syntax:\n    content: TrustedProxy = 1\n    return:\n      type: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: ProtectionScenario.TrustedProxy\nreferences:\n- uid: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: System.Security.Authentication.ExtendedProtection\n  fullName: System.Security.Authentication.ExtendedProtection\n  commentId: N:System.Security.Authentication.ExtendedProtection\n  nameWithType: System.Security.Authentication.ExtendedProtection\n- uid: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ProtectionScenario\n  fullName: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  commentId: T:System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  nameWithType: ProtectionScenario\n"}