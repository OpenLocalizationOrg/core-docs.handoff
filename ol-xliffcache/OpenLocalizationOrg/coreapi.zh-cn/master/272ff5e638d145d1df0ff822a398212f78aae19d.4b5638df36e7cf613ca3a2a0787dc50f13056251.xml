{"nodes":[{"pos":[6472,6483],"content":"TypeBuilder","needQuote":true,"nodes":[{"content":"TypeBuilder","pos":[0,11]}]},{"pos":[24270,24289],"content":"UnspecifiedTypeSize","needQuote":true,"nodes":[{"content":"UnspecifiedTypeSize","pos":[0,19]}]},{"pos":[25337,25358],"content":"AssemblyQualifiedName","needQuote":true,"nodes":[{"content":"AssemblyQualifiedName","pos":[0,21]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[26140,26155],"source":"\\n<p>Read-only."},{"content":"The full name of this type qualified by the display name of the assembly.&lt;/p&gt;\\n","pos":[26156,26235],"source":" The full name of this type qualified by the display name of the assembly.</p>\\n"},{"pos":[26646,26654],"content":"FullName","needQuote":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[27340,27355],"source":"\\n<p>Read-only."},{"content":"Retrieves the full path of this type.&lt;/p&gt;\\n","pos":[27356,27399],"source":" Retrieves the full path of this type.</p>\\n"},{"pos":[27814,27832],"content":"IsGenericParameter","needQuote":true,"nodes":[{"content":"IsGenericParameter","pos":[0,18]}]},{"pos":[29214,29218],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[30414,30425],"content":"PackingSize","needQuote":true,"nodes":[{"content":"PackingSize","pos":[0,11]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[31138,31153],"source":"\\n<p>Read-only."},{"content":"Retrieves the packing size of this type.&lt;/p&gt;\\n","pos":[31154,31200],"source":" Retrieves the packing size of this type.</p>\\n"},{"pos":[31514,31518],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[32164,32179],"source":"\\n<p>Read-only."},{"content":"Retrieves this type’s total size.&lt;/p&gt;\\n","pos":[32180,32219],"source":" Retrieves this type’s total size.</p>\\n"},{"pos":[32631,32663],"content":"AddInterfaceImplementation(Type)","needQuote":true,"nodes":[{"content":"AddInterfaceImplementation(Type)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The interface that this type implements.","pos":[33565,33610],"source":"\\n<p>The interface that this type implements."},{"content":"&lt;/p&gt;\\n","pos":[33611,33617],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;interfaceType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[33736,33791],"source":"\\n<p>\\n<em>interfaceType</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[33792,33798],"source":" </p>\\n"},{"pos":[34411,34427],"content":"CreateTypeInfo()","needQuote":true,"nodes":[{"content":"CreateTypeInfo()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;An object that represents this type.&lt;/p&gt;\\n","pos":[35268,35315],"source":"\\n<p>An object that represents this type.</p>\\n"},{"pos":[35913,35976],"content":"DefineConstructor(MethodAttributes, CallingConventions, Type[])","needQuote":true,"nodes":[{"content":"DefineConstructor(MethodAttributes, CallingConventions, Type[])","pos":[0,63]}]},{"content":"\\n&lt;p&gt;The attributes of the constructor.","pos":[37097,37136],"source":"\\n<p>The attributes of the constructor."},{"content":"&lt;/p&gt;\\n","pos":[37137,37143],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The calling convention of the constructor.","pos":[37242,37289],"source":"\\n<p>The calling convention of the constructor."},{"content":"&lt;/p&gt;\\n","pos":[37290,37296],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The parameter types of the constructor.","pos":[37369,37413],"source":"\\n<p>The parameter types of the constructor."},{"content":"&lt;/p&gt;\\n","pos":[37414,37420],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined constructor.&lt;/p&gt;\\n","pos":[37508,37543],"source":"\\n<p>The defined constructor.</p>\\n"},{"pos":[38894,38977],"content":"DefineConstructor(MethodAttributes, CallingConventions, Type[], Type[][], Type[][])","needQuote":true,"nodes":[{"content":"DefineConstructor(MethodAttributes, CallingConventions, Type[], Type[][], Type[][])","pos":[0,83]}]},{"content":"\\n&lt;p&gt;The attributes of the constructor.","pos":[40353,40392],"source":"\\n<p>The attributes of the constructor."},{"content":"&lt;/p&gt;\\n","pos":[40393,40399],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The calling convention of the constructor.","pos":[40498,40545],"source":"\\n<p>The calling convention of the constructor."},{"content":"&lt;/p&gt;\\n","pos":[40546,40552],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The parameter types of the constructor.","pos":[40625,40669],"source":"\\n<p>The parameter types of the constructor."},{"content":"&lt;/p&gt;\\n","pos":[40670,40676],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined constructor.&lt;/p&gt;\\n","pos":[41894,41929],"source":"\\n<p>The defined constructor.</p>\\n"},{"content":"\\n&lt;p&gt;The size of &lt;em&gt;requiredCustomModifiers&lt;/em&gt; or &lt;em&gt;optionalCustomModifiers&lt;/em&gt; does not equal the size of &lt;em&gt;parameterTypes&lt;/em&gt;.&lt;/p&gt;\\n","pos":[42040,42183],"source":"\\n<p>The size of <em>requiredCustomModifiers</em> or <em>optionalCustomModifiers</em> does not equal the size of <em>parameterTypes</em>.</p>\\n"},{"pos":[43747,43789],"content":"DefineDefaultConstructor(MethodAttributes)","needQuote":true,"nodes":[{"content":"DefineDefaultConstructor(MethodAttributes)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;MethodAttributes&lt;/strong&gt; object representing the attributes to be applied to the constructor.","pos":[44798,44907],"source":"\\n<p>A <strong>MethodAttributes</strong> object representing the attributes to be applied to the constructor."},{"content":"&lt;/p&gt;\\n","pos":[44908,44914],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Returns the constructor.&lt;/p&gt;\\n","pos":[45002,45037],"source":"\\n<p>Returns the constructor.</p>\\n"},{"content":"\\n&lt;p&gt;The parent type (base type) does not have a default constructor.","pos":[45156,45225],"source":"\\n<p>The parent type (base type) does not have a default constructor."},{"content":"&lt;/p&gt;\\n","pos":[45226,45232],"source":" </p>\\n"},{"pos":[46390,46432],"content":"DefineEvent(String, EventAttributes, Type)","needQuote":true,"nodes":[{"content":"DefineEvent(String, EventAttributes, Type)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The name of the event.","pos":[47407,47434],"source":"\\n<p>The name of the event."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[47435,47479],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[47480,47486],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the event.","pos":[47575,47608],"source":"\\n<p>The attributes of the event."},{"content":"&lt;/p&gt;\\n","pos":[47609,47615],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type of the event.","pos":[47681,47708],"source":"\\n<p>The type of the event."},{"content":"&lt;/p&gt;\\n","pos":[47709,47715],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined event.&lt;/p&gt;\\n","pos":[47797,47826],"source":"\\n<p>The defined event.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.","pos":[47937,47978],"source":"\\n<p>The length of <em>name</em> is zero."},{"content":"&lt;/p&gt;\\n","pos":[47979,47985],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;eventtype&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[48090,48205],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>eventtype</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[48206,48212],"source":" </p>\\n"},{"pos":[49009,49051],"content":"DefineField(String, Type, FieldAttributes)","needQuote":true,"nodes":[{"content":"DefineField(String, Type, FieldAttributes)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The name of the field.","pos":[49954,49981],"source":"\\n<p>The name of the field."},{"content":"&lt;em&gt;fieldName&lt;/em&gt; cannot contain embedded nulls.","pos":[49982,50031],"source":" <em>fieldName</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[50032,50038],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type of the field &lt;/p&gt;\\n","pos":[50099,50132],"source":"\\n<p>The type of the field </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the field.","pos":[50221,50254],"source":"\\n<p>The attributes of the field."},{"content":"&lt;/p&gt;\\n","pos":[50255,50261],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined field.&lt;/p&gt;\\n","pos":[50343,50372],"source":"\\n<p>The defined field.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;fieldName&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is System.Void.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;A total size was specified for the parent class of this field.","pos":[50483,50668],"source":"\\n<p>The length of <em>fieldName</em> is zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>type</em> is System.Void.</p>\\n<p>-or- </p>\\n<p>A total size was specified for the parent class of this field."},{"content":"&lt;/p&gt;\\n","pos":[50669,50675],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;fieldName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[50780,50831],"source":"\\n<p>\\n<em>fieldName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[50832,50838],"source":" </p>\\n"},{"pos":[51718,51776],"content":"DefineField(String, Type, Type[], Type[], FieldAttributes)","needQuote":true,"nodes":[{"content":"DefineField(String, Type, Type[], Type[], FieldAttributes)","pos":[0,58]}]},{"content":"\\n&lt;p&gt;The name of the field.","pos":[52939,52966],"source":"\\n<p>The name of the field."},{"content":"&lt;em&gt;fieldName&lt;/em&gt; cannot contain embedded nulls.","pos":[52967,53016],"source":" <em>fieldName</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[53017,53023],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type of the field &lt;/p&gt;\\n","pos":[53084,53117],"source":"\\n<p>The type of the field </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the field.","pos":[53748,53781],"source":"\\n<p>The attributes of the field."},{"content":"&lt;/p&gt;\\n","pos":[53782,53788],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined field.&lt;/p&gt;\\n","pos":[53870,53899],"source":"\\n<p>The defined field.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;fieldName&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is System.Void.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;A total size was specified for the parent class of this field.","pos":[54010,54195],"source":"\\n<p>The length of <em>fieldName</em> is zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>type</em> is System.Void.</p>\\n<p>-or- </p>\\n<p>A total size was specified for the parent class of this field."},{"content":"&lt;/p&gt;\\n","pos":[54196,54202],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;fieldName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[54307,54358],"source":"\\n<p>\\n<em>fieldName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[54359,54365],"source":" </p>\\n"},{"pos":[55397,55430],"content":"DefineGenericParameters(String[])","needQuote":true,"nodes":[{"content":"DefineGenericParameters(String[])","pos":[0,33]}]},{"content":"\\n&lt;p&gt;An array of names for the generic type parameters.&lt;/p&gt;\\n","pos":[56503,56564],"source":"\\n<p>An array of names for the generic type parameters.</p>\\n"},{"content":"\\n&lt;p&gt;Generic type parameters have already been defined for this type.&lt;/p&gt;\\n","pos":[57027,57102],"source":"\\n<p>Generic type parameters have already been defined for this type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;names&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;An element of &lt;em&gt;names&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[57207,57336],"source":"\\n<p>\\n<em>names</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>An element of <em>names</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;names&lt;/em&gt; is an empty array.&lt;/p&gt;\\n","pos":[57433,57479],"source":"\\n<p>\\n<em>names</em> is an empty array.</p>\\n"},{"pos":[58500,58554],"content":"DefineInitializedData(String, Byte[], FieldAttributes)","needQuote":true,"nodes":[{"content":"DefineInitializedData(String, Byte[], FieldAttributes)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The name used to refer to the data.","pos":[59570,59610],"source":"\\n<p>The name used to refer to the data."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[59611,59655],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[59656,59662],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The blob of data.","pos":[59725,59747],"source":"\\n<p>The blob of data."},{"content":"&lt;/p&gt;\\n","pos":[59748,59754],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes for the field.","pos":[59843,59877],"source":"\\n<p>The attributes for the field."},{"content":"&lt;/p&gt;\\n","pos":[59878,59884],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A field to reference the data.&lt;/p&gt;\\n","pos":[59966,60007],"source":"\\n<p>A field to reference the data.</p>\\n"},{"content":"\\n&lt;p&gt;Length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The size of the data is less than or equal to zero, or greater than or equal to 0x3f0000.","pos":[60118,60267],"source":"\\n<p>Length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The size of the data is less than or equal to zero, or greater than or equal to 0x3f0000."},{"content":"&lt;/p&gt;\\n","pos":[60268,60274],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; or &lt;em&gt;data&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[60379,60442],"source":"\\n<p>\\n<em>name</em> or <em>data</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[60443,60449],"source":" </p>\\n"},{"pos":[61508,61546],"content":"DefineMethod(String, MethodAttributes)","needQuote":true,"nodes":[{"content":"DefineMethod(String, MethodAttributes)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The name of the method.","pos":[62404,62432],"source":"\\n<p>The name of the method."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[62433,62477],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[62478,62484],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the method.","pos":[62574,62608],"source":"\\n<p>The attributes of the method."},{"content":"&lt;/p&gt;\\n","pos":[62609,62615],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The type of the parent of this method is an interface, and this method is not virtual (&lt;strong&gt;Overridable&lt;/strong&gt; in Visual Basic).","pos":[62957,63154],"source":"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface, and this method is not virtual (<strong>Overridable</strong> in Visual Basic)."},{"content":"&lt;/p&gt;\\n","pos":[63155,63161],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[63266,63312],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[63313,63319],"source":" </p>\\n"},{"pos":[64749,64807],"content":"DefineMethod(String, MethodAttributes, CallingConventions)","needQuote":true,"nodes":[{"content":"DefineMethod(String, MethodAttributes, CallingConventions)","pos":[0,58]}]},{"content":"\\n&lt;p&gt;The name of the method.","pos":[65803,65831],"source":"\\n<p>The name of the method."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[65832,65876],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[65877,65883],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the method.","pos":[65973,66007],"source":"\\n<p>The attributes of the method."},{"content":"&lt;/p&gt;\\n","pos":[66008,66014],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The calling convention of the method.","pos":[66113,66155],"source":"\\n<p>The calling convention of the method."},{"content":"&lt;/p&gt;\\n","pos":[66156,66162],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The type of the parent of this method is an interface and this method is not virtual (&lt;strong&gt;Overridable&lt;/strong&gt; in Visual Basic).","pos":[66504,66700],"source":"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface and this method is not virtual (<strong>Overridable</strong> in Visual Basic)."},{"content":"&lt;/p&gt;\\n","pos":[66701,66707],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[66812,66858],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[66859,66865],"source":" </p>\\n"},{"pos":[68393,68465],"content":"DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[])","needQuote":true,"nodes":[{"content":"DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[])","pos":[0,72]}]},{"content":"\\n&lt;p&gt;The name of the method.","pos":[69593,69621],"source":"\\n<p>The name of the method."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[69622,69666],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[69667,69673],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the method.","pos":[69763,69797],"source":"\\n<p>The attributes of the method."},{"content":"&lt;/p&gt;\\n","pos":[69798,69804],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The calling convention of the method.","pos":[69903,69945],"source":"\\n<p>The calling convention of the method."},{"content":"&lt;/p&gt;\\n","pos":[69946,69952],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the method.","pos":[70019,70054],"source":"\\n<p>The return type of the method."},{"content":"&lt;/p&gt;\\n","pos":[70055,70061],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the parameters of the method.","pos":[70134,70181],"source":"\\n<p>The types of the parameters of the method."},{"content":"&lt;/p&gt;\\n","pos":[70182,70188],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The type of the parent of this method is an interface, and this method is not virtual (&lt;strong&gt;Overridable&lt;/strong&gt; in Visual Basic).","pos":[70530,70727],"source":"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface, and this method is not virtual (<strong>Overridable</strong> in Visual Basic)."},{"content":"&lt;/p&gt;\\n","pos":[70728,70734],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[70839,70885],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[70886,70892],"source":" </p>\\n"},{"pos":[72788,72896],"content":"DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])","needQuote":true,"nodes":[{"content":"DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])","pos":[0,108]}]},{"content":"\\n&lt;p&gt;The name of the method.","pos":[74474,74502],"source":"\\n<p>The name of the method."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[74503,74547],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[74548,74554],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the method.","pos":[74644,74678],"source":"\\n<p>The attributes of the method."},{"content":"&lt;/p&gt;\\n","pos":[74679,74685],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The calling convention of the method.","pos":[74784,74826],"source":"\\n<p>The calling convention of the method."},{"content":"&lt;/p&gt;\\n","pos":[74827,74833],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the method.","pos":[74900,74935],"source":"\\n<p>The return type of the method."},{"content":"&lt;/p&gt;\\n","pos":[74936,74942],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the parameters of the method.&lt;/p&gt;\\n","pos":[75799,75852],"source":"\\n<p>The types of the parameters of the method.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The type of the parent of this method is an interface, and this method is not virtual (&lt;strong&gt;Overridable&lt;/strong&gt; in Visual Basic).","pos":[77355,77552],"source":"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface, and this method is not virtual (<strong>Overridable</strong> in Visual Basic)."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The size of &lt;em&gt;parameterTypeRequiredCustomModifiers&lt;/em&gt; or &lt;em&gt;parameterTypeOptionalCustomModifiers&lt;/em&gt; does not equal the size of &lt;em&gt;parameterTypes&lt;/em&gt;.&lt;/p&gt;\\n","pos":[77553,77739],"source":" </p>\\n<p>-or-</p>\\n<p>The size of <em>parameterTypeRequiredCustomModifiers</em> or <em>parameterTypeOptionalCustomModifiers</em> does not equal the size of <em>parameterTypes</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[77844,77890],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[77891,77897],"source":" </p>\\n"},{"pos":[79673,79725],"content":"DefineMethod(String, MethodAttributes, Type, Type[])","needQuote":true,"nodes":[{"content":"DefineMethod(String, MethodAttributes, Type, Type[])","pos":[0,52]}]},{"content":"\\n&lt;p&gt;The name of the method.","pos":[80716,80744],"source":"\\n<p>The name of the method."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[80745,80789],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[80790,80796],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the method.","pos":[80886,80920],"source":"\\n<p>The attributes of the method."},{"content":"&lt;/p&gt;\\n","pos":[80921,80927],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the method.","pos":[80994,81029],"source":"\\n<p>The return type of the method."},{"content":"&lt;/p&gt;\\n","pos":[81030,81036],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the parameters of the method.","pos":[81109,81156],"source":"\\n<p>The types of the parameters of the method."},{"content":"&lt;/p&gt;\\n","pos":[81157,81163],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined method.&lt;/p&gt;\\n","pos":[81246,81276],"source":"\\n<p>The defined method.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The type of the parent of this method is an interface, and this method is not virtual (&lt;strong&gt;Overridable&lt;/strong&gt; in Visual Basic).","pos":[81387,81584],"source":"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface, and this method is not virtual (<strong>Overridable</strong> in Visual Basic)."},{"content":"&lt;/p&gt;\\n","pos":[81585,81591],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[81696,81742],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[81743,81749],"source":" </p>\\n"},{"pos":[83229,83273],"content":"DefineMethodOverride(MethodInfo, MethodInfo)","needQuote":true,"nodes":[{"content":"DefineMethodOverride(MethodInfo, MethodInfo)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The method body to be used.","pos":[84313,84345],"source":"\\n<p>The method body to be used."},{"content":"This should be a &lt;strong&gt;MethodBuilder&lt;/strong&gt; object.","pos":[84346,84401],"source":" This should be a <strong>MethodBuilder</strong> object."},{"content":"&lt;/p&gt;\\n","pos":[84402,84408],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The method whose declaration is to be used.","pos":[84503,84551],"source":"\\n<p>The method whose declaration is to be used."},{"content":"&lt;/p&gt;\\n","pos":[84552,84558],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;methodInfoBody&lt;/em&gt; does not belong to this class.","pos":[84669,84730],"source":"\\n<p>\\n<em>methodInfoBody</em> does not belong to this class."},{"content":"&lt;/p&gt;\\n","pos":[84731,84737],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;methodInfoBody&lt;/em&gt; or &lt;em&gt;methodInfoDeclaration&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[84842,84932],"source":"\\n<p>\\n<em>methodInfoBody</em> or <em>methodInfoDeclaration</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[84933,84939],"source":" </p>\\n"},{"pos":[85815,85839],"content":"DefineNestedType(String)","needQuote":true,"nodes":[{"content":"DefineNestedType(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The short name of the type.","pos":[86651,86683],"source":"\\n<p>The short name of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[86684,86728],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[86729,86735],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined nested type.&lt;/p&gt;\\n","pos":[86816,86851],"source":"\\n<p>The defined nested type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[87334,87380],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[87381,87387],"source":" </p>\\n"},{"pos":[87873,87913],"content":"DefineNestedType(String, TypeAttributes)","needQuote":true,"nodes":[{"content":"DefineNestedType(String, TypeAttributes)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The short name of the type.","pos":[88819,88851],"source":"\\n<p>The short name of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[88852,88896],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[88897,88903],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the type.","pos":[88985,89017],"source":"\\n<p>The attributes of the type."},{"content":"&lt;/p&gt;\\n","pos":[89018,89024],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined nested type.&lt;/p&gt;\\n","pos":[89105,89140],"source":"\\n<p>The defined nested type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[89866,89912],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[89913,89919],"source":" </p>\\n"},{"pos":[90457,90503],"content":"DefineNestedType(String, TypeAttributes, Type)","needQuote":true,"nodes":[{"content":"DefineNestedType(String, TypeAttributes, Type)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The short name of the type.","pos":[91478,91510],"source":"\\n<p>The short name of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[91511,91555],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[91556,91562],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the type.","pos":[91644,91676],"source":"\\n<p>The attributes of the type."},{"content":"&lt;/p&gt;\\n","pos":[91677,91683],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type that the nested type extends.","pos":[91746,91789],"source":"\\n<p>The type that the nested type extends."},{"content":"&lt;/p&gt;\\n","pos":[91790,91796],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined nested type.&lt;/p&gt;\\n","pos":[91877,91912],"source":"\\n<p>The defined nested type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[92638,92684],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[92685,92691],"source":" </p>\\n"},{"pos":[93274,93327],"content":"DefineNestedType(String, TypeAttributes, Type, Int32)","needQuote":true,"nodes":[{"content":"DefineNestedType(String, TypeAttributes, Type, Int32)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;The short name of the type.","pos":[94371,94403],"source":"\\n<p>The short name of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[94404,94448],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[94449,94455],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the type.","pos":[94537,94569],"source":"\\n<p>The attributes of the type."},{"content":"&lt;/p&gt;\\n","pos":[94570,94576],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type that the nested type extends.","pos":[94639,94682],"source":"\\n<p>The type that the nested type extends."},{"content":"&lt;/p&gt;\\n","pos":[94683,94689],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The total size of the type.","pos":[94755,94787],"source":"\\n<p>The total size of the type."},{"content":"&lt;/p&gt;\\n","pos":[94788,94794],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined nested type.&lt;/p&gt;\\n","pos":[94875,94910],"source":"\\n<p>The defined nested type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[95636,95682],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[95683,95689],"source":" </p>\\n"},{"pos":[96345,96404],"content":"DefineNestedType(String, TypeAttributes, Type, PackingSize)","needQuote":true,"nodes":[{"content":"DefineNestedType(String, TypeAttributes, Type, PackingSize)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;The short name of the type.","pos":[97472,97504],"source":"\\n<p>The short name of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[97505,97549],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[97550,97556],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the type.","pos":[97638,97670],"source":"\\n<p>The attributes of the type."},{"content":"&lt;/p&gt;\\n","pos":[97671,97677],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type that the nested type extends.","pos":[97740,97783],"source":"\\n<p>The type that the nested type extends."},{"content":"&lt;/p&gt;\\n","pos":[97784,97790],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The packing size of the type.","pos":[97878,97912],"source":"\\n<p>The packing size of the type."},{"content":"&lt;/p&gt;\\n","pos":[97913,97919],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined nested type.&lt;/p&gt;\\n","pos":[98000,98035],"source":"\\n<p>The defined nested type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[98761,98807],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[98808,98814],"source":" </p>\\n"},{"pos":[99515,99581],"content":"DefineNestedType(String, TypeAttributes, Type, PackingSize, Int32)","needQuote":true,"nodes":[{"content":"DefineNestedType(String, TypeAttributes, Type, PackingSize, Int32)","pos":[0,66]}]},{"content":"\\n&lt;p&gt;The short name of the type.","pos":[100686,100718],"source":"\\n<p>The short name of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded null values.&lt;/p&gt;\\n","pos":[100719,100775],"source":" <em>name</em> cannot contain embedded null values.</p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the type.&lt;/p&gt;\\n","pos":[100857,100895],"source":"\\n<p>The attributes of the type.</p>\\n"},{"content":"\\n&lt;p&gt;The type that the nested type extends.&lt;/p&gt;\\n","pos":[100958,101007],"source":"\\n<p>The type that the nested type extends.</p>\\n"},{"content":"\\n&lt;p&gt;The packing size of the type.&lt;/p&gt;\\n","pos":[101095,101135],"source":"\\n<p>The packing size of the type.</p>\\n"},{"content":"\\n&lt;p&gt;The total size of the type.&lt;/p&gt;\\n","pos":[101201,101239],"source":"\\n<p>The total size of the type.</p>\\n"},{"content":"\\n&lt;p&gt;The defined nested type.&lt;/p&gt;\\n","pos":[101320,101355],"source":"\\n<p>The defined nested type.</p>\\n"},{"pos":[101961,102015],"content":"DefineNestedType(String, TypeAttributes, Type, Type[])","needQuote":true,"nodes":[{"content":"DefineNestedType(String, TypeAttributes, Type, Type[])","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The short name of the type.","pos":[103133,103165],"source":"\\n<p>The short name of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[103166,103210],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[103211,103217],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the type.","pos":[103299,103331],"source":"\\n<p>The attributes of the type."},{"content":"&lt;/p&gt;\\n","pos":[103332,103338],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type that the nested type extends.","pos":[103401,103444],"source":"\\n<p>The type that the nested type extends."},{"content":"&lt;/p&gt;\\n","pos":[103445,103451],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The interfaces that the nested type implements.","pos":[103520,103572],"source":"\\n<p>The interfaces that the nested type implements."},{"content":"&lt;/p&gt;\\n","pos":[103573,103579],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined nested type.&lt;/p&gt;\\n","pos":[103660,103695],"source":"\\n<p>The defined nested type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;An element of the &lt;em&gt;interfaces&lt;/em&gt; array is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[104421,104564],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>An element of the <em>interfaces</em> array is <strong>null</strong>.</p>\\n"},{"pos":[105571,105647],"content":"DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[])","needQuote":true,"nodes":[{"content":"DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[])","pos":[0,76]}]},{"content":"\\n&lt;p&gt;The name of the property.","pos":[106786,106816],"source":"\\n<p>The name of the property."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[106817,106861],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[106862,106868],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the property.","pos":[106960,106996],"source":"\\n<p>The attributes of the property."},{"content":"&lt;/p&gt;\\n","pos":[106997,107003],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The calling convention of the property accessors.","pos":[107102,107156],"source":"\\n<p>The calling convention of the property accessors."},{"content":"&lt;/p&gt;\\n","pos":[107157,107163],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the property.","pos":[107230,107267],"source":"\\n<p>The return type of the property."},{"content":"&lt;/p&gt;\\n","pos":[107268,107274],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the parameters of the property.&lt;/p&gt;\\n","pos":[107347,107402],"source":"\\n<p>The types of the parameters of the property.</p>\\n"},{"content":"\\n&lt;p&gt;The defined property.&lt;/p&gt;\\n","pos":[107487,107519],"source":"\\n<p>The defined property.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.","pos":[107630,107671],"source":"\\n<p>The length of <em>name</em> is zero."},{"content":"&lt;/p&gt;\\n","pos":[107672,107678],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[107783,107829],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Any of the elements of the &lt;em&gt;parameterTypes&lt;/em&gt; array is &lt;strong&gt;null&lt;/strong&gt;.","pos":[107830,107935],"source":" </p>\\n<p>-or- </p>\\n<p>Any of the elements of the <em>parameterTypes</em> array is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[107936,107942],"source":" </p>\\n"},{"pos":[109504,109616],"content":"DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])","needQuote":true,"nodes":[{"content":"DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])","pos":[0,112]}]},{"content":"\\n&lt;p&gt;The name of the property.","pos":[111271,111301],"source":"\\n<p>The name of the property."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[111302,111346],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[111347,111353],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the property.","pos":[111445,111481],"source":"\\n<p>The attributes of the property."},{"content":"&lt;/p&gt;\\n","pos":[111482,111488],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The calling convention of the property accessors.","pos":[111587,111641],"source":"\\n<p>The calling convention of the property accessors."},{"content":"&lt;/p&gt;\\n","pos":[111642,111648],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the property.","pos":[111715,111752],"source":"\\n<p>The return type of the property."},{"content":"&lt;/p&gt;\\n","pos":[111753,111759],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the parameters of the property.","pos":[112620,112669],"source":"\\n<p>The types of the parameters of the property."},{"content":"&lt;/p&gt;\\n","pos":[112670,112676],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined property.&lt;/p&gt;\\n","pos":[113917,113949],"source":"\\n<p>The defined property.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.","pos":[114060,114101],"source":"\\n<p>The length of <em>name</em> is zero."},{"content":"&lt;/p&gt;\\n","pos":[114102,114108],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[114213,114259],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Any of the elements of the &lt;em&gt;parameterTypes&lt;/em&gt; array is &lt;strong&gt;null&lt;/strong&gt;.","pos":[114260,114365],"source":" </p>\\n<p>-or- </p>\\n<p>Any of the elements of the <em>parameterTypes</em> array is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[114366,114372],"source":" </p>\\n"},{"pos":[115815,115871],"content":"DefineProperty(String, PropertyAttributes, Type, Type[])","needQuote":true,"nodes":[{"content":"DefineProperty(String, PropertyAttributes, Type, Type[])","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The name of the property.","pos":[116860,116890],"source":"\\n<p>The name of the property."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[116891,116935],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[116936,116942],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the property.","pos":[117034,117070],"source":"\\n<p>The attributes of the property."},{"content":"&lt;/p&gt;\\n","pos":[117071,117077],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the property.","pos":[117144,117181],"source":"\\n<p>The return type of the property."},{"content":"&lt;/p&gt;\\n","pos":[117182,117188],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the parameters of the property.","pos":[117261,117310],"source":"\\n<p>The types of the parameters of the property."},{"content":"&lt;/p&gt;\\n","pos":[117311,117317],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined property.&lt;/p&gt;\\n","pos":[117402,117434],"source":"\\n<p>The defined property.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.","pos":[117545,117586],"source":"\\n<p>The length of <em>name</em> is zero."},{"content":"&lt;/p&gt;\\n","pos":[117587,117593],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[117698,117744],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Any of the elements of the &lt;em&gt;parameterTypes&lt;/em&gt; array is &lt;strong&gt;null&lt;/strong&gt;.","pos":[117745,117850],"source":" </p>\\n<p>-or- </p>\\n<p>Any of the elements of the <em>parameterTypes</em> array is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[117851,117857],"source":" </p>\\n"},{"pos":[119210,119302],"content":"DefineProperty(String, PropertyAttributes, Type, Type[], Type[], Type[], Type[][], Type[][])","needQuote":true,"nodes":[{"content":"DefineProperty(String, PropertyAttributes, Type, Type[], Type[], Type[], Type[][], Type[][])","pos":[0,92]}]},{"content":"\\n&lt;p&gt;The name of the property.","pos":[120742,120772],"source":"\\n<p>The name of the property."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[120773,120817],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[120818,120824],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the property.","pos":[120916,120952],"source":"\\n<p>The attributes of the property."},{"content":"&lt;/p&gt;\\n","pos":[120953,120959],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the property.","pos":[121026,121063],"source":"\\n<p>The return type of the property."},{"content":"&lt;/p&gt;\\n","pos":[121064,121070],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the parameters of the property.","pos":[121931,121980],"source":"\\n<p>The types of the parameters of the property."},{"content":"&lt;/p&gt;\\n","pos":[121981,121987],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined property.&lt;/p&gt;\\n","pos":[123228,123260],"source":"\\n<p>The defined property.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.","pos":[123371,123412],"source":"\\n<p>The length of <em>name</em> is zero."},{"content":"&lt;/p&gt;\\n","pos":[123413,123419],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Any of the elements of the &lt;em&gt;parameterTypes&lt;/em&gt; array is &lt;strong&gt;null&lt;/strong&gt;&lt;/p&gt;\\n","pos":[123524,123679],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong></p>\\n<p>-or- </p>\\n<p>Any of the elements of the <em>parameterTypes</em> array is <strong>null</strong></p>\\n"},{"pos":[124811,124834],"content":"DefineTypeInitializer()","needQuote":true,"nodes":[{"content":"DefineTypeInitializer()","pos":[0,23]}]},{"content":"\\n&lt;p&gt;Returns a type initializer.&lt;/p&gt;\\n","pos":[125701,125739],"source":"\\n<p>Returns a type initializer.</p>\\n"},{"pos":[126586,126641],"content":"DefineUninitializedData(String, Int32, FieldAttributes)","needQuote":true,"nodes":[{"content":"DefineUninitializedData(String, Int32, FieldAttributes)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;The name used to refer to the data.","pos":[127684,127724],"source":"\\n<p>The name used to refer to the data."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[127725,127769],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[127770,127776],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The size of the data field.","pos":[127838,127870],"source":"\\n<p>The size of the data field."},{"content":"&lt;/p&gt;\\n","pos":[127871,127877],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes for the field.","pos":[127966,128000],"source":"\\n<p>The attributes for the field."},{"content":"&lt;/p&gt;\\n","pos":[128001,128007],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A field to reference the data.&lt;/p&gt;\\n","pos":[128089,128130],"source":"\\n<p>A field to reference the data.</p>\\n"},{"content":"\\n&lt;p&gt;Length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than or equal to zero, or greater than or equal to 0x003f0000.","pos":[128241,128387],"source":"\\n<p>Length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than or equal to zero, or greater than or equal to 0x003f0000."},{"content":"&lt;/p&gt;\\n","pos":[128388,128394],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[128499,128545],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[128546,128552],"source":" </p>\\n"},{"pos":[129329,129366],"content":"GetConstructor(Type, ConstructorInfo)","needQuote":true,"nodes":[{"content":"GetConstructor(Type, ConstructorInfo)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The constructed generic type whose constructor is returned.&lt;/p&gt;\\n","pos":[130307,130377],"source":"\\n<p>The constructed generic type whose constructor is returned.</p>\\n"},{"content":"\\n&lt;p&gt;A constructor on the generic type definition of &lt;em&gt;type&lt;/em&gt;, which specifies which constructor of &lt;em&gt;type&lt;/em&gt; to return.&lt;/p&gt;\\n","pos":[130467,130602],"source":"\\n<p>A constructor on the generic type definition of <em>type</em>, which specifies which constructor of <em>type</em> to return.</p>\\n"},{"pos":[131985,132010],"content":"GetField(Type, FieldInfo)","needQuote":true,"nodes":[{"content":"GetField(Type, FieldInfo)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The constructed generic type whose field is returned.&lt;/p&gt;\\n","pos":[132873,132937],"source":"\\n<p>The constructed generic type whose field is returned.</p>\\n"},{"content":"\\n&lt;p&gt;A field on the generic type definition of &lt;em&gt;type&lt;/em&gt;, which specifies which field of &lt;em&gt;type&lt;/em&gt; to return.&lt;/p&gt;\\n","pos":[133015,133138],"source":"\\n<p>A field on the generic type definition of <em>type</em>, which specifies which field of <em>type</em> to return.</p>\\n"},{"pos":[134392,134418],"content":"GetGenericTypeDefinition()","needQuote":true,"nodes":[{"content":"GetGenericTypeDefinition()","pos":[0,26]}]},{"pos":[136637,136664],"content":"GetMethod(Type, MethodInfo)","needQuote":true,"nodes":[{"content":"GetMethod(Type, MethodInfo)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The constructed generic type whose method is returned.&lt;/p&gt;\\n","pos":[137539,137604],"source":"\\n<p>The constructed generic type whose method is returned.</p>\\n"},{"content":"\\n&lt;p&gt;A method on the generic type definition of &lt;em&gt;type&lt;/em&gt;, which specifies which method of &lt;em&gt;type&lt;/em&gt; to return.&lt;/p&gt;\\n","pos":[137684,137809],"source":"\\n<p>A method on the generic type definition of <em>type</em>, which specifies which method of <em>type</em> to return.</p>\\n"},{"pos":[139231,139257],"content":"IsAssignableFrom(TypeInfo)","needQuote":true,"nodes":[{"content":"IsAssignableFrom(TypeInfo)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The object to test.&lt;/p&gt;\\n","pos":[140174,140204],"source":"\\n<p>The object to test.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;typeInfo&lt;/em&gt; can be assigned to this object; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[140265,140387],"source":"\\n<p>\\n<strong>true</strong> if <em>typeInfo</em> can be assigned to this object; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[140823,140834],"content":"IsCreated()","needQuote":true,"nodes":[{"content":"IsCreated()","pos":[0,11]}]},{"pos":[142040,142055],"content":"MakeArrayType()","needQuote":true,"nodes":[{"content":"MakeArrayType()","pos":[0,15]}]},{"pos":[143759,143779],"content":"MakeArrayType(Int32)","needQuote":true,"nodes":[{"content":"MakeArrayType(Int32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The number of dimensions for the array.","pos":[144639,144683],"source":"\\n<p>The number of dimensions for the array."},{"content":"&lt;/p&gt;\\n","pos":[144684,144690],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rank&lt;/em&gt; is not a valid array dimension.&lt;/p&gt;\\n","pos":[145079,145137],"source":"\\n<p>\\n<em>rank</em> is not a valid array dimension.</p>\\n"},{"pos":[145758,145773],"content":"MakeByRefType()","needQuote":true,"nodes":[{"content":"MakeByRefType()","pos":[0,15]}]},{"pos":[147533,147556],"content":"MakeGenericType(Type[])","needQuote":true,"nodes":[{"content":"MakeGenericType(Type[])","pos":[0,23]}]},{"content":"\\n&lt;p&gt;An array of types to be substituted for the type parameters of the current generic type definition.&lt;/p&gt;\\n","pos":[148451,148561],"source":"\\n<p>An array of types to be substituted for the type parameters of the current generic type definition.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;typeArguments&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Any element of &lt;em&gt;typeArguments&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[149383,149524],"source":"\\n<p>\\n<em>typeArguments</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>Any element of <em>typeArguments</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[149525,149531],"source":" </p>\\n"},{"pos":[150545,150562],"content":"MakePointerType()","needQuote":true,"nodes":[{"content":"MakePointerType()","pos":[0,17]}]},{"pos":[152335,152378],"content":"SetCustomAttribute(ConstructorInfo, Byte[])","needQuote":true,"nodes":[{"content":"SetCustomAttribute(ConstructorInfo, Byte[])","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[153362,153408],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[153409,153415],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A byte blob representing the attributes.","pos":[153489,153534],"source":"\\n<p>A byte blob representing the attributes."},{"content":"&lt;/p&gt;\\n","pos":[153535,153541],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; or &lt;em&gt;binaryAttribute&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[153660,153733],"source":"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[153734,153740],"source":" </p>\\n"},{"pos":[154961,155003],"content":"SetCustomAttribute(CustomAttributeBuilder)","needQuote":true,"nodes":[{"content":"SetCustomAttribute(CustomAttributeBuilder)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;An instance of a helper class to define the custom attribute.","pos":[155937,156003],"source":"\\n<p>An instance of a helper class to define the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[156004,156010],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;customBuilder&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[156129,156184],"source":"\\n<p>\\n<em>customBuilder</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[156185,156191],"source":" </p>\\n"},{"pos":[157033,157048],"content":"SetParent(Type)","needQuote":true,"nodes":[{"content":"SetParent(Type)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The new base type.","pos":[157747,157770],"source":"\\n<p>The new base type."},{"content":"&lt;/p&gt;\\n","pos":[157771,157777],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;parent&lt;/em&gt; is an interface.","pos":[158768,158807],"source":"\\n<p>\\n<em>parent</em> is an interface."},{"content":"This exception condition is new in the .NET Framework version 2.0.","pos":[158808,158874]},{"content":"&lt;/p&gt;\\n","pos":[158875,158881],"source":" </p>\\n"},{"pos":[159190,159200],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[159866,159881],"source":"\\n<p>Read-only."},{"content":"The name of the type excluding the namespace.&lt;/p&gt;\\n","pos":[159882,159933],"source":" The name of the type excluding the namespace.</p>\\n"},{"pos":[160305,160315],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[161327,161335],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[162067,162082],"source":"\\n<p>Read-only."},{"content":"Retrieves the dynamic assembly that contains this type definition.&lt;/p&gt;\\n","pos":[162083,162155],"source":" Retrieves the dynamic assembly that contains this type definition.</p>\\n"},{"pos":[162540,162548],"content":"BaseType","needQuote":true,"nodes":[{"content":"BaseType","pos":[0,8]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[163228,163243],"source":"\\n<p>Read-only."},{"content":"Retrieves the base type of this type.&lt;/p&gt;\\n","pos":[163244,163287],"source":" Retrieves the base type of this type.</p>\\n"},{"pos":[163693,163708],"content":"DeclaringMethod","needQuote":true,"nodes":[{"content":"DeclaringMethod","pos":[0,15]}]},{"pos":[165169,165195],"content":"GenericParameterAttributes","needQuote":true,"nodes":[{"content":"GenericParameterAttributes","pos":[0,26]}]},{"pos":[166748,166754],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[167466,167481],"source":"\\n<p>Read-only."},{"content":"Retrieves the dynamic module that contains this type definition.&lt;/p&gt;\\n","pos":[167482,167552],"source":" Retrieves the dynamic module that contains this type definition.</p>\\n"},{"pos":[167945,167959],"content":"GetArrayRank()","needQuote":true,"nodes":[{"content":"GetArrayRank()","pos":[0,14]}]},{"pos":[168946,168962],"content":"GetElementType()","needQuote":true,"nodes":[{"content":"GetElementType()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;This method is not supported.","pos":[169717,169751],"source":"\\n<p>This method is not supported."},{"content":"No value is returned.&lt;/p&gt;\\n","pos":[169752,169779],"source":" No value is returned.</p>\\n"},{"content":"\\n&lt;p&gt;This method is not supported.","pos":[169939,169973],"source":"\\n<p>This method is not supported."},{"content":"&lt;/p&gt;\\n","pos":[169974,169980],"source":" </p>\\n"},{"pos":[170383,170415],"content":"GetGenericParameterConstraints()","needQuote":true,"nodes":[{"content":"GetGenericParameterConstraints()","pos":[0,32]}]},{"pos":[171531,171551],"content":"GenericTypeArguments","needQuote":true,"nodes":[{"content":"GenericTypeArguments","pos":[0,20]}]},{"pos":[172676,172701],"content":"ContainsGenericParameters","needQuote":true,"nodes":[{"content":"ContainsGenericParameters","pos":[0,25]}]},{"pos":[173853,173877],"content":"GenericParameterPosition","needQuote":true,"nodes":[{"content":"GenericParameterPosition","pos":[0,24]}]},{"pos":[175402,175406],"content":"GUID","needQuote":true,"nodes":[{"content":"GUID","pos":[0,4]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[176065,176080],"source":"\\n<p>Read-only."},{"content":"Retrieves the GUID of this type &lt;/p&gt;\\n","pos":[176081,176119],"source":" Retrieves the GUID of this type </p>\\n"},{"content":"\\n&lt;p&gt;This method is not currently supported for incomplete types.","pos":[176269,176334],"source":"\\n<p>This method is not currently supported for incomplete types."},{"content":"&lt;/p&gt;\\n","pos":[176335,176341],"source":" </p>\\n"},{"pos":[176681,176687],"content":"IsEnum","needQuote":true,"nodes":[{"content":"IsEnum","pos":[0,6]}]},{"pos":[177692,177705],"content":"IsGenericType","needQuote":true,"nodes":[{"content":"IsGenericType","pos":[0,13]}]},{"pos":[179454,179477],"content":"IsGenericTypeDefinition","needQuote":true,"nodes":[{"content":"IsGenericTypeDefinition","pos":[0,23]}]},{"pos":[181736,181750],"content":"IsSerializable","needQuote":true,"nodes":[{"content":"IsSerializable","pos":[0,14]}]},{"pos":[182791,182800],"content":"Namespace","needQuote":true,"nodes":[{"content":"Namespace","pos":[0,9]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[183528,183543],"source":"\\n<p>Read-only."},{"content":"Retrieves the namespace where this &lt;strong&gt;TypeBuilder&lt;/strong&gt; is defined.&lt;/p&gt;\\n","pos":[183544,183625],"source":" Retrieves the namespace where this <strong>TypeBuilder</strong> is defined.</p>\\n"},{"pos":[184027,184040],"content":"DeclaringType","needQuote":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[184744,184759],"source":"\\n<p>Read-only."},{"content":"The type that declared this type.&lt;/p&gt;\\n","pos":[184760,184799],"source":" The type that declared this type.</p>\\n"},{"pos":[185059,185081],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[185260,185266],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[185437,185447],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[185624,185628],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[185791,185799],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[186012,186036],"content":"ICustomAttributeProvider","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider","pos":[0,24]}]},{"pos":[186309,186320],"content":"_MemberInfo","needQuote":true,"nodes":[{"content":"_MemberInfo","pos":[0,11]}]},{"pos":[186574,186579],"content":"_Type","needQuote":true,"nodes":[{"content":"_Type","pos":[0,5]}]},{"pos":[186792,186800],"content":"IReflect","needQuote":true,"nodes":[{"content":"IReflect","pos":[0,8]}]},{"pos":[187005,187021],"content":"IReflectableType","needQuote":true,"nodes":[{"content":"IReflectableType","pos":[0,16]}]},{"pos":[187297,187327],"content":"IReflectableType.GetTypeInfo()","needQuote":true,"nodes":[{"content":"IReflectableType.GetTypeInfo()","pos":[0,30]}]},{"pos":[187584,187612],"content":"IReflectableType.GetTypeInfo","needQuote":true,"nodes":[{"content":"IReflectableType.GetTypeInfo","pos":[0,28]}]},{"pos":[187732,187733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187760,187761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187882,187928],"content":"System.Reflection.IReflectableType.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Reflection.IReflectableType.GetTypeInfo","pos":[0,46]}]},{"pos":[188048,188049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188076,188077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188421,188429],"content":"AsType()","needQuote":true,"nodes":[{"content":"AsType()","pos":[0,8]}]},{"pos":[188546,188552],"content":"AsType","needQuote":true,"nodes":[{"content":"AsType","pos":[0,6]}]},{"pos":[188632,188633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188660,188661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188742,188748],"content":"AsType","needQuote":true,"nodes":[{"content":"AsType","pos":[0,6]}]},{"pos":[188828,188829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188856,188857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189087,189111],"content":"GetDeclaredEvent(String)","needQuote":true,"nodes":[{"content":"GetDeclaredEvent(String)","pos":[0,24]}]},{"pos":[189276,189292],"content":"GetDeclaredEvent","needQuote":true,"nodes":[{"content":"GetDeclaredEvent","pos":[0,16]}]},{"pos":[189382,189383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189433,189439],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[189499,189500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189606,189622],"content":"GetDeclaredEvent","needQuote":true,"nodes":[{"content":"GetDeclaredEvent","pos":[0,16]}]},{"pos":[189712,189713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189763,189769],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[189829,189830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190101,190125],"content":"GetDeclaredField(String)","needQuote":true,"nodes":[{"content":"GetDeclaredField(String)","pos":[0,24]}]},{"pos":[190290,190306],"content":"GetDeclaredField","needQuote":true,"nodes":[{"content":"GetDeclaredField","pos":[0,16]}]},{"pos":[190396,190397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190447,190453],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[190513,190514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190620,190636],"content":"GetDeclaredField","needQuote":true,"nodes":[{"content":"GetDeclaredField","pos":[0,16]}]},{"pos":[190726,190727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190777,190783],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[190843,190844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191116,191141],"content":"GetDeclaredMethod(String)","needQuote":true,"nodes":[{"content":"GetDeclaredMethod(String)","pos":[0,25]}]},{"pos":[191308,191325],"content":"GetDeclaredMethod","needQuote":true,"nodes":[{"content":"GetDeclaredMethod","pos":[0,17]}]},{"pos":[191416,191417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191467,191473],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[191533,191534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191641,191658],"content":"GetDeclaredMethod","needQuote":true,"nodes":[{"content":"GetDeclaredMethod","pos":[0,17]}]},{"pos":[191749,191750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191800,191806],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[191866,191867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192142,192168],"content":"GetDeclaredMethods(String)","needQuote":true,"nodes":[{"content":"GetDeclaredMethods(String)","pos":[0,26]}]},{"pos":[192337,192355],"content":"GetDeclaredMethods","needQuote":true,"nodes":[{"content":"GetDeclaredMethods","pos":[0,18]}]},{"pos":[192447,192448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192498,192504],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[192564,192565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192673,192691],"content":"GetDeclaredMethods","needQuote":true,"nodes":[{"content":"GetDeclaredMethods","pos":[0,18]}]},{"pos":[192783,192784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192834,192840],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[192900,192901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193181,193210],"content":"GetDeclaredNestedType(String)","needQuote":true,"nodes":[{"content":"GetDeclaredNestedType(String)","pos":[0,29]}]},{"pos":[193385,193406],"content":"GetDeclaredNestedType","needQuote":true,"nodes":[{"content":"GetDeclaredNestedType","pos":[0,21]}]},{"pos":[193501,193502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193552,193558],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[193618,193619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193730,193751],"content":"GetDeclaredNestedType","needQuote":true,"nodes":[{"content":"GetDeclaredNestedType","pos":[0,21]}]},{"pos":[193846,193847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193897,193903],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[193963,193964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194248,194275],"content":"GetDeclaredProperty(String)","needQuote":true,"nodes":[{"content":"GetDeclaredProperty(String)","pos":[0,27]}]},{"pos":[194446,194465],"content":"GetDeclaredProperty","needQuote":true,"nodes":[{"content":"GetDeclaredProperty","pos":[0,19]}]},{"pos":[194558,194559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194609,194615],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[194675,194676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194785,194804],"content":"GetDeclaredProperty","needQuote":true,"nodes":[{"content":"GetDeclaredProperty","pos":[0,19]}]},{"pos":[194897,194898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194948,194954],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[195014,195015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195282,195303],"content":"GenericTypeParameters","needQuote":true,"nodes":[{"content":"GenericTypeParameters","pos":[0,21]}]},{"pos":[195595,195615],"content":"DeclaredConstructors","needQuote":true,"nodes":[{"content":"DeclaredConstructors","pos":[0,20]}]},{"pos":[195898,195912],"content":"DeclaredEvents","needQuote":true,"nodes":[{"content":"DeclaredEvents","pos":[0,14]}]},{"pos":[196177,196191],"content":"DeclaredFields","needQuote":true,"nodes":[{"content":"DeclaredFields","pos":[0,14]}]},{"pos":[196457,196472],"content":"DeclaredMembers","needQuote":true,"nodes":[{"content":"DeclaredMembers","pos":[0,15]}]},{"pos":[196741,196756],"content":"DeclaredMethods","needQuote":true,"nodes":[{"content":"DeclaredMethods","pos":[0,15]}]},{"pos":[197029,197048],"content":"DeclaredNestedTypes","needQuote":true,"nodes":[{"content":"DeclaredNestedTypes","pos":[0,19]}]},{"pos":[197332,197350],"content":"DeclaredProperties","needQuote":true,"nodes":[{"content":"DeclaredProperties","pos":[0,18]}]},{"pos":[197634,197655],"content":"ImplementedInterfaces","needQuote":true,"nodes":[{"content":"ImplementedInterfaces","pos":[0,21]}]},{"pos":[197912,197927],"content":"FilterAttribute","needQuote":true,"nodes":[{"content":"FilterAttribute","pos":[0,15]}]},{"pos":[198127,198137],"content":"FilterName","needQuote":true,"nodes":[{"content":"FilterName","pos":[0,10]}]},{"pos":[198332,198352],"content":"FilterNameIgnoreCase","needQuote":true,"nodes":[{"content":"FilterNameIgnoreCase","pos":[0,20]}]},{"pos":[198564,198571],"content":"Missing","needQuote":true,"nodes":[{"content":"Missing","pos":[0,7]}]},{"pos":[198746,198755],"content":"Delimiter","needQuote":true,"nodes":[{"content":"Delimiter","pos":[0,9]}]},{"pos":[198937,198947],"content":"EmptyTypes","needQuote":true,"nodes":[{"content":"EmptyTypes","pos":[0,10]}]},{"pos":[199174,199207],"content":"GetType(String, Boolean, Boolean)","needQuote":true,"nodes":[{"content":"GetType(String, Boolean, Boolean)","pos":[0,33]}]},{"pos":[199386,199393],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[199459,199460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199510,199516],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[199577,199578]},{"pos":[199634,199641],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[199703,199704]},{"pos":[199760,199767],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[199828,199829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199941,199948],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[200014,200015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200065,200071],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[200132,200133]},{"pos":[200189,200196],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[200258,200259]},{"pos":[200315,200322],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[200383,200384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200642,200666],"content":"GetType(String, Boolean)","needQuote":true,"nodes":[{"content":"GetType(String, Boolean)","pos":[0,24]}]},{"pos":[200814,200821],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[200887,200888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200938,200944],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[201005,201006]},{"pos":[201062,201069],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[201130,201131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201228,201235],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[201301,201302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201352,201358],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[201419,201420]},{"pos":[201476,201483],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[201544,201545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201764,201779],"content":"GetType(String)","needQuote":true,"nodes":[{"content":"GetType(String)","pos":[0,15]}]},{"pos":[201896,201903],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[201969,201970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202020,202026],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[202086,202087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202169,202176],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[202242,202243],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202293,202299],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[202359,202360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202707,202791],"content":"GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>)","needQuote":true,"nodes":[{"content":"GetType(String, Func&lt;AssemblyName, Assembly&gt;, Func&lt;Assembly, String, Boolean, Type&gt;)","pos":[0,84],"source":"GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>)"}]},{"pos":[203534,203541],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[203607,203608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203658,203664],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[203725,203726]},{"pos":[203781,203785],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[203843,203844],"content":"<","needQuote":true,"nodes":[]},{"pos":[203911,203923],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[204001,204002]},{"pos":[204070,204078],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[204184,204185]},{"pos":[204240,204244],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[204302,204303],"content":"<","needQuote":true,"nodes":[]},{"pos":[204366,204374],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[204448,204449]},{"pos":[204504,204510],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[204571,204572]},{"pos":[204628,204635],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[204697,204698]},{"pos":[204751,204755],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[204845,204846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205080,205087],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[205153,205154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205204,205210],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[205271,205272]},{"pos":[205327,205331],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[205390,205393]},{"pos":[205467,205479],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[205557,205558]},{"pos":[205626,205634],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[205707,205708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[205736,205737]},{"pos":[205792,205796],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[205855,205858]},{"pos":[205928,205936],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[206010,206011]},{"pos":[206066,206072],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[206133,206134]},{"pos":[206190,206197],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[206259,206260]},{"pos":[206313,206317],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[206375,206376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206403,206404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207102,207195],"content":"GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean)","needQuote":true,"nodes":[{"content":"GetType(String, Func&lt;AssemblyName, Assembly&gt;, Func&lt;Assembly, String, Boolean, Type&gt;, Boolean)","pos":[0,93],"source":"GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean)"}]},{"pos":[207994,208001],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[208067,208068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208118,208124],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[208185,208186]},{"pos":[208241,208245],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[208303,208304],"content":"<","needQuote":true,"nodes":[]},{"pos":[208371,208383],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[208461,208462]},{"pos":[208530,208538],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[208644,208645]},{"pos":[208700,208704],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[208762,208763],"content":"<","needQuote":true,"nodes":[]},{"pos":[208826,208834],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[208908,208909]},{"pos":[208964,208970],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[209031,209032]},{"pos":[209088,209095],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[209157,209158]},{"pos":[209211,209215],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[209306,209307]},{"pos":[209363,209370],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[209431,209432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209681,209688],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[209754,209755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[209805,209811],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[209872,209873]},{"pos":[209928,209932],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[209991,209994]},{"pos":[210068,210080],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[210158,210159]},{"pos":[210227,210235],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[210308,210309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[210337,210338]},{"pos":[210393,210397],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[210456,210459]},{"pos":[210529,210537],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[210611,210612]},{"pos":[210667,210673],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[210734,210735]},{"pos":[210791,210798],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[210860,210861]},{"pos":[210914,210918],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[210976,210977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[211005,211006]},{"pos":[211062,211069],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[211130,211131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211877,211979],"content":"GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean, Boolean)","needQuote":true,"nodes":[{"content":"GetType(String, Func&lt;AssemblyName, Assembly&gt;, Func&lt;Assembly, String, Boolean, Type&gt;, Boolean, Boolean)","pos":[0,102],"source":"GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean, Boolean)"}]},{"pos":[212834,212841],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[212907,212908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212958,212964],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[213025,213026]},{"pos":[213081,213085],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[213143,213144],"content":"<","needQuote":true,"nodes":[]},{"pos":[213211,213223],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[213301,213302]},{"pos":[213370,213378],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[213484,213485]},{"pos":[213540,213544],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[213602,213603],"content":"<","needQuote":true,"nodes":[]},{"pos":[213666,213674],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[213748,213749]},{"pos":[213804,213810],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[213871,213872]},{"pos":[213928,213935],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[213997,213998]},{"pos":[214051,214055],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[214146,214147]},{"pos":[214203,214210],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[214272,214273]},{"pos":[214329,214336],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[214397,214398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214662,214669],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[214735,214736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214786,214792],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[214853,214854]},{"pos":[214909,214913],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[214972,214975]},{"pos":[215049,215061],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[215139,215140]},{"pos":[215208,215216],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[215289,215290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[215318,215319]},{"pos":[215374,215378],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[215437,215440]},{"pos":[215510,215518],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":",","pos":[215592,215593]},{"pos":[215648,215654],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[215715,215716]},{"pos":[215772,215779],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[215841,215842]},{"pos":[215895,215899],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[215957,215958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[215986,215987]},{"pos":[216043,216050],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[216112,216113]},{"pos":[216169,216176],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[216237,216238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216879,216926],"content":"ReflectionOnlyGetType(String, Boolean, Boolean)","needQuote":true,"nodes":[{"content":"ReflectionOnlyGetType(String, Boolean, Boolean)","pos":[0,47]}]},{"pos":[217133,217154],"content":"ReflectionOnlyGetType","needQuote":true,"nodes":[{"content":"ReflectionOnlyGetType","pos":[0,21]}]},{"pos":[217234,217235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217285,217291],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[217352,217353]},{"pos":[217409,217416],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[217478,217479]},{"pos":[217535,217542],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[217603,217604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217730,217751],"content":"ReflectionOnlyGetType","needQuote":true,"nodes":[{"content":"ReflectionOnlyGetType","pos":[0,21]}]},{"pos":[217831,217832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217882,217888],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[217949,217950]},{"pos":[218006,218013],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[218075,218076]},{"pos":[218132,218139],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[218200,218201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218482,218507],"content":"GetTypeFromProgID(String)","needQuote":true,"nodes":[{"content":"GetTypeFromProgID(String)","pos":[0,25]}]},{"pos":[218644,218661],"content":"GetTypeFromProgID","needQuote":true,"nodes":[{"content":"GetTypeFromProgID","pos":[0,17]}]},{"pos":[218737,218738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218788,218794],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[218854,218855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218947,218964],"content":"GetTypeFromProgID","needQuote":true,"nodes":[{"content":"GetTypeFromProgID","pos":[0,17]}]},{"pos":[219040,219041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219091,219097],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[219157,219158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219398,219432],"content":"GetTypeFromProgID(String, Boolean)","needQuote":true,"nodes":[{"content":"GetTypeFromProgID(String, Boolean)","pos":[0,34]}]},{"pos":[219600,219617],"content":"GetTypeFromProgID","needQuote":true,"nodes":[{"content":"GetTypeFromProgID","pos":[0,17]}]},{"pos":[219693,219694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219744,219750],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[219811,219812]},{"pos":[219868,219875],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[219936,219937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220044,220061],"content":"GetTypeFromProgID","needQuote":true,"nodes":[{"content":"GetTypeFromProgID","pos":[0,17]}]},{"pos":[220137,220138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220188,220194],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[220255,220256]},{"pos":[220312,220319],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[220380,220381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220644,220677],"content":"GetTypeFromProgID(String, String)","needQuote":true,"nodes":[{"content":"GetTypeFromProgID(String, String)","pos":[0,33]}]},{"pos":[220843,220860],"content":"GetTypeFromProgID","needQuote":true,"nodes":[{"content":"GetTypeFromProgID","pos":[0,17]}]},{"pos":[220936,220937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220987,220993],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[221054,221055]},{"pos":[221110,221116],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[221176,221177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221283,221300],"content":"GetTypeFromProgID","needQuote":true,"nodes":[{"content":"GetTypeFromProgID","pos":[0,17]}]},{"pos":[221376,221377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221427,221433],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[221494,221495]},{"pos":[221550,221556],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[221616,221617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221893,221935],"content":"GetTypeFromProgID(String, String, Boolean)","needQuote":true,"nodes":[{"content":"GetTypeFromProgID(String, String, Boolean)","pos":[0,42]}]},{"pos":[222132,222149],"content":"GetTypeFromProgID","needQuote":true,"nodes":[{"content":"GetTypeFromProgID","pos":[0,17]}]},{"pos":[222225,222226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222276,222282],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[222343,222344]},{"pos":[222399,222405],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[222466,222467]},{"pos":[222523,222530],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[222591,222592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222713,222730],"content":"GetTypeFromProgID","needQuote":true,"nodes":[{"content":"GetTypeFromProgID","pos":[0,17]}]},{"pos":[222806,222807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222857,222863],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[222924,222925]},{"pos":[222980,222986],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[223047,223048]},{"pos":[223104,223111],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[223172,223173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223441,223463],"content":"GetTypeFromCLSID(Guid)","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID(Guid)","pos":[0,22]}]},{"pos":[223594,223610],"content":"GetTypeFromCLSID","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID","pos":[0,16]}]},{"pos":[223685,223686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223734,223738],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[223796,223797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223886,223902],"content":"GetTypeFromCLSID","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID","pos":[0,16]}]},{"pos":[223977,223978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224026,224030],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[224088,224089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224320,224351],"content":"GetTypeFromCLSID(Guid, Boolean)","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID(Guid, Boolean)","pos":[0,31]}]},{"pos":[224513,224529],"content":"GetTypeFromCLSID","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID","pos":[0,16]}]},{"pos":[224604,224605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224653,224657],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[224716,224717]},{"pos":[224773,224780],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[224841,224842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224946,224962],"content":"GetTypeFromCLSID","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID","pos":[0,16]}]},{"pos":[225037,225038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225086,225090],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[225149,225150]},{"pos":[225206,225213],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[225274,225275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225529,225559],"content":"GetTypeFromCLSID(Guid, String)","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID(Guid, String)","pos":[0,30]}]},{"pos":[225719,225735],"content":"GetTypeFromCLSID","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID","pos":[0,16]}]},{"pos":[225810,225811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225859,225863],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[225922,225923]},{"pos":[225978,225984],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[226044,226045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226148,226164],"content":"GetTypeFromCLSID","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID","pos":[0,16]}]},{"pos":[226239,226240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[226288,226292],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[226351,226352]},{"pos":[226407,226413],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[226473,226474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226741,226780],"content":"GetTypeFromCLSID(Guid, String, Boolean)","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID(Guid, String, Boolean)","pos":[0,39]}]},{"pos":[226971,226987],"content":"GetTypeFromCLSID","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID","pos":[0,16]}]},{"pos":[227062,227063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227111,227115],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[227174,227175]},{"pos":[227230,227236],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[227297,227298]},{"pos":[227354,227361],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[227422,227423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227541,227557],"content":"GetTypeFromCLSID","needQuote":true,"nodes":[{"content":"GetTypeFromCLSID","pos":[0,16]}]},{"pos":[227632,227633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227681,227685],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[227744,227745]},{"pos":[227800,227806],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[227867,227868]},{"pos":[227924,227931],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[227992,227993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228250,228267],"content":"GetTypeCode(Type)","needQuote":true,"nodes":[{"content":"GetTypeCode(Type)","pos":[0,17]}]},{"pos":[228388,228399],"content":"GetTypeCode","needQuote":true,"nodes":[{"content":"GetTypeCode","pos":[0,11]}]},{"pos":[228469,228470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228518,228522],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[228580,228581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228665,228676],"content":"GetTypeCode","needQuote":true,"nodes":[{"content":"GetTypeCode","pos":[0,11]}]},{"pos":[228746,228747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228795,228799],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[228857,228858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229050,229067],"content":"GetTypeCodeImpl()","needQuote":true,"nodes":[{"content":"GetTypeCodeImpl()","pos":[0,17]}]},{"pos":[229172,229187],"content":"GetTypeCodeImpl","needQuote":true,"nodes":[{"content":"GetTypeCodeImpl","pos":[0,15]}]},{"pos":[229261,229262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229289,229290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229365,229380],"content":"GetTypeCodeImpl","needQuote":true,"nodes":[{"content":"GetTypeCodeImpl","pos":[0,15]}]},{"pos":[229454,229455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229482,229483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229851,229955],"content":"InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])","needQuote":true,"nodes":[{"content":"InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])","pos":[0,104]}]},{"pos":[230786,230798],"content":"InvokeMember","needQuote":true,"nodes":[{"content":"InvokeMember","pos":[0,12]}]},{"pos":[230869,230870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[230920,230926],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[230987,230988]},{"pos":[231060,231072],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[231150,231151]},{"pos":[231217,231223],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[231295,231296]},{"pos":[231351,231357],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[231418,231419]},{"pos":[231474,231480],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[231541,231543]},{"content":",","pos":[231575,231576]},{"pos":[231653,231670],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[231753,231755]},{"content":",","pos":[231787,231788]},{"pos":[231862,231873],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[231953,231954]},{"pos":[232009,232015],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[232076,232078]},{"pos":[232109,232110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232370,232382],"content":"InvokeMember","needQuote":true,"nodes":[{"content":"InvokeMember","pos":[0,12]}]},{"pos":[232453,232454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232504,232510],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[232571,232572]},{"pos":[232644,232656],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[232734,232735]},{"pos":[232801,232807],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[232879,232880]},{"pos":[232935,232941],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[233002,233003]},{"pos":[233058,233064],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[233124,233126],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[233155,233156]},{"pos":[233233,233250],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[233332,233334],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[233363,233364]},{"pos":[233438,233449],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[233529,233530]},{"pos":[233585,233591],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[233651,233653],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[233681,233682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234397,234470],"content":"InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)","needQuote":true,"nodes":[{"content":"InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)","pos":[0,73]}]},{"pos":[235104,235116],"content":"InvokeMember","needQuote":true,"nodes":[{"content":"InvokeMember","pos":[0,12]}]},{"pos":[235187,235188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235238,235244],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[235305,235306]},{"pos":[235378,235390],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[235468,235469]},{"pos":[235535,235541],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[235613,235614]},{"pos":[235669,235675],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[235736,235737]},{"pos":[235792,235798],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[235859,235861]},{"content":",","pos":[235893,235894]},{"pos":[235968,235979],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[236058,236059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236265,236277],"content":"InvokeMember","needQuote":true,"nodes":[{"content":"InvokeMember","pos":[0,12]}]},{"pos":[236348,236349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236399,236405],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[236466,236467]},{"pos":[236539,236551],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[236629,236630]},{"pos":[236696,236702],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[236774,236775]},{"pos":[236830,236836],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[236897,236898]},{"pos":[236953,236959],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[237019,237021],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[237050,237051]},{"pos":[237125,237136],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[237215,237216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237782,237842],"content":"InvokeMember(String, BindingFlags, Binder, Object, Object[])","needQuote":true,"nodes":[{"content":"InvokeMember(String, BindingFlags, Binder, Object, Object[])","pos":[0,60]}]},{"pos":[238362,238374],"content":"InvokeMember","needQuote":true,"nodes":[{"content":"InvokeMember","pos":[0,12]}]},{"pos":[238445,238446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238496,238502],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[238563,238564]},{"pos":[238636,238648],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[238726,238727]},{"pos":[238793,238799],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[238871,238872]},{"pos":[238927,238933],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[238994,238995]},{"pos":[239050,239056],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[239117,239119]},{"pos":[239150,239151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239324,239336],"content":"InvokeMember","needQuote":true,"nodes":[{"content":"InvokeMember","pos":[0,12]}]},{"pos":[239407,239408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239458,239464],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[239525,239526]},{"pos":[239598,239610],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[239688,239689]},{"pos":[239755,239761],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[239833,239834]},{"pos":[239889,239895],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[239956,239957]},{"pos":[240012,240018],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[240078,240080],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[240108,240109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240531,240552],"content":"GetTypeHandle(Object)","needQuote":true,"nodes":[{"content":"GetTypeHandle(Object)","pos":[0,21]}]},{"pos":[240681,240694],"content":"GetTypeHandle","needQuote":true,"nodes":[{"content":"GetTypeHandle","pos":[0,13]}]},{"pos":[240766,240767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240817,240823],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[240883,240884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240972,240985],"content":"GetTypeHandle","needQuote":true,"nodes":[{"content":"GetTypeHandle","pos":[0,13]}]},{"pos":[241057,241058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241108,241114],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[241174,241175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241403,241439],"content":"GetTypeFromHandle(RuntimeTypeHandle)","needQuote":true,"nodes":[{"content":"GetTypeFromHandle(RuntimeTypeHandle)","pos":[0,36]}]},{"pos":[241598,241615],"content":"GetTypeFromHandle","needQuote":true,"nodes":[{"content":"GetTypeFromHandle","pos":[0,17]}]},{"pos":[241691,241692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241753,241770],"content":"RuntimeTypeHandle","needQuote":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[241841,241842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241945,241962],"content":"GetTypeFromHandle","needQuote":true,"nodes":[{"content":"GetTypeFromHandle","pos":[0,17]}]},{"pos":[242038,242039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242100,242117],"content":"RuntimeTypeHandle","needQuote":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[242188,242189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242564,242649],"content":"GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","pos":[0,85]}]},{"pos":[243335,243349],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[243422,243423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243490,243502],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[243580,243581]},{"pos":[243647,243653],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[243725,243726]},{"pos":[243804,243822],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[243906,243907]},{"pos":[243960,243964],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[244023,244025]},{"content":",","pos":[244057,244058]},{"pos":[244135,244152],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[244235,244237]},{"pos":[244268,244269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244489,244503],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[244576,244577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244644,244656],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[244734,244735]},{"pos":[244801,244807],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[244879,244880]},{"pos":[244958,244976],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[245060,245061]},{"pos":[245114,245118],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[245176,245178],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[245207,245208]},{"pos":[245285,245302],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[245384,245386],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[245414,245415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246029,246094],"content":"GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])","pos":[0,65]}]},{"pos":[246647,246661],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[246734,246735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246802,246814],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[246892,246893]},{"pos":[246959,246965],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[247037,247038]},{"pos":[247091,247095],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[247154,247156]},{"content":",","pos":[247188,247189]},{"pos":[247266,247283],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[247366,247368]},{"pos":[247399,247400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247583,247597],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[247670,247671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247738,247750],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[247828,247829]},{"pos":[247895,247901],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[247973,247974]},{"pos":[248027,248031],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[248089,248091],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[248120,248121]},{"pos":[248198,248215],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[248297,248299],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[248327,248328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248771,248793],"content":"GetConstructor(Type[])","needQuote":true,"nodes":[{"content":"GetConstructor(Type[])","pos":[0,22]}]},{"pos":[249015,249029],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[249102,249103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249151,249155],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[249214,249216]},{"pos":[249247,249248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249337,249351],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[249424,249425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249473,249477],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[249535,249537],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[249565,249566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249964,250053],"content":"GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","pos":[0,89]}]},{"pos":[250755,250773],"content":"GetConstructorImpl","needQuote":true,"nodes":[{"content":"GetConstructorImpl","pos":[0,18]}]},{"pos":[250850,250851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250918,250930],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[251008,251009]},{"pos":[251075,251081],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[251153,251154]},{"pos":[251232,251250],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[251334,251335]},{"pos":[251388,251392],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[251451,251453]},{"content":",","pos":[251485,251486]},{"pos":[251563,251580],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[251663,251665]},{"pos":[251696,251697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251921,251939],"content":"GetConstructorImpl","needQuote":true,"nodes":[{"content":"GetConstructorImpl","pos":[0,18]}]},{"pos":[252016,252017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252084,252096],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[252174,252175]},{"pos":[252241,252247],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[252319,252320]},{"pos":[252398,252416],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[252500,252501]},{"pos":[252554,252558],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[252616,252618],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[252647,252648]},{"pos":[252725,252742],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[252824,252826],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[252854,252855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253373,253390],"content":"GetConstructors()","needQuote":true,"nodes":[{"content":"GetConstructors()","pos":[0,17]}]},{"pos":[253495,253510],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[253584,253585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253612,253613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253688,253703],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[253777,253778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253805,253806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254021,254050],"content":"GetConstructors(BindingFlags)","needQuote":true,"nodes":[{"content":"GetConstructors(BindingFlags)","pos":[0,29]}]},{"pos":[254217,254232],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[254306,254307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254374,254386],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[254463,254464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254571,254586],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[254660,254661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254728,254740],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[254817,254818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255199,255287],"content":"GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","pos":[0,88]}]},{"pos":[256005,256014],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[256082,256083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[256133,256139],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[256200,256201]},{"pos":[256273,256285],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[256363,256364]},{"pos":[256430,256436],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[256508,256509]},{"pos":[256587,256605],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[256689,256690]},{"pos":[256743,256747],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[256806,256808]},{"content":",","pos":[256840,256841]},{"pos":[256918,256935],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[257018,257020]},{"pos":[257051,257052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257281,257290],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[257358,257359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257409,257415],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[257476,257477]},{"pos":[257549,257561],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[257639,257640]},{"pos":[257706,257712],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[257784,257785]},{"pos":[257863,257881],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[257965,257966]},{"pos":[258019,258023],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[258081,258083],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[258112,258113]},{"pos":[258190,258207],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[258289,258291],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[258319,258320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258958,259026],"content":"GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])","pos":[0,68]}]},{"pos":[259611,259620],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[259688,259689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259739,259745],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[259806,259807]},{"pos":[259879,259891],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[259969,259970]},{"pos":[260036,260042],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[260114,260115]},{"pos":[260168,260172],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[260231,260233]},{"content":",","pos":[260265,260266]},{"pos":[260343,260360],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[260443,260445]},{"pos":[260476,260477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260669,260678],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[260746,260747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260797,260803],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[260864,260865]},{"pos":[260937,260949],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[261027,261028]},{"pos":[261094,261100],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[261172,261173]},{"pos":[261226,261230],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[261288,261290],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[261319,261320]},{"pos":[261397,261414],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[261496,261498],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[261526,261527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262032,262078],"content":"GetMethod(String, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetMethod(String, Type[], ParameterModifier[])","pos":[0,46]}]},{"pos":[262469,262478],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[262546,262547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262597,262603],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[262664,262665]},{"pos":[262718,262722],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[262781,262783]},{"content":",","pos":[262815,262816]},{"pos":[262893,262910],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[262993,262995]},{"pos":[263026,263027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263163,263172],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[263240,263241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263291,263297],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[263358,263359]},{"pos":[263412,263416],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[263474,263476],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[263505,263506]},{"pos":[263583,263600],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[263682,263684],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[263712,263713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264080,264105],"content":"GetMethod(String, Type[])","needQuote":true,"nodes":[{"content":"GetMethod(String, Type[])","pos":[0,25]}]},{"pos":[264359,264368],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[264436,264437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264487,264493],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[264554,264555]},{"pos":[264608,264612],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[264671,264673]},{"pos":[264704,264705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264803,264812],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[264880,264881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264931,264937],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[264998,264999]},{"pos":[265052,265056],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[265114,265116],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[265144,265145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265449,265480],"content":"GetMethod(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetMethod(String, BindingFlags)","pos":[0,31]}]},{"pos":[265664,265673],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[265741,265742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265792,265798],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[265859,265860]},{"pos":[265932,265944],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[266021,266022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266137,266146],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[266214,266215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266265,266271],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[266332,266333]},{"pos":[266405,266417],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[266494,266495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266741,266758],"content":"GetMethod(String)","needQuote":true,"nodes":[{"content":"GetMethod(String)","pos":[0,17]}]},{"pos":[266879,266888],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[266956,266957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[267007,267013],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[267073,267074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267158,267167],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[267235,267236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[267286,267292],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[267352,267353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267703,267795],"content":"GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","pos":[0,92]}]},{"pos":[268529,268542],"content":"GetMethodImpl","needQuote":true,"nodes":[{"content":"GetMethodImpl","pos":[0,13]}]},{"pos":[268614,268615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268665,268671],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[268732,268733]},{"pos":[268805,268817],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[268895,268896]},{"pos":[268962,268968],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[269040,269041]},{"pos":[269119,269137],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[269221,269222]},{"pos":[269275,269279],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[269338,269340]},{"content":",","pos":[269372,269373]},{"pos":[269450,269467],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[269550,269552]},{"pos":[269583,269584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269817,269830],"content":"GetMethodImpl","needQuote":true,"nodes":[{"content":"GetMethodImpl","pos":[0,13]}]},{"pos":[269902,269903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269953,269959],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[270020,270021]},{"pos":[270093,270105],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[270183,270184]},{"pos":[270250,270256],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[270328,270329]},{"pos":[270407,270425],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[270509,270510]},{"pos":[270563,270567],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[270625,270627],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[270656,270657]},{"pos":[270734,270751],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[270833,270835],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[270863,270864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271392,271404],"content":"GetMethods()","needQuote":true,"nodes":[{"content":"GetMethods()","pos":[0,12]}]},{"pos":[271499,271509],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[271578,271579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271606,271607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271677,271687],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[271756,271757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271784,271785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271985,272009],"content":"GetMethods(BindingFlags)","needQuote":true,"nodes":[{"content":"GetMethods(BindingFlags)","pos":[0,24]}]},{"pos":[272166,272176],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[272245,272246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272313,272325],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[272402,272403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272505,272515],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[272584,272585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272652,272664],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[272741,272742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272998,273028],"content":"GetField(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetField(String, BindingFlags)","pos":[0,30]}]},{"pos":[273210,273218],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[273285,273286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273336,273342],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[273403,273404]},{"pos":[273476,273488],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[273565,273566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273680,273688],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[273755,273756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273806,273812],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[273873,273874]},{"pos":[273946,273958],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[274035,274036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274279,274295],"content":"GetField(String)","needQuote":true,"nodes":[{"content":"GetField(String)","pos":[0,16]}]},{"pos":[274414,274422],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[274489,274490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274540,274546],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[274606,274607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274690,274698],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[274765,274766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274816,274822],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[274882,274883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275067,275078],"content":"GetFields()","needQuote":true,"nodes":[{"content":"GetFields()","pos":[0,11]}]},{"pos":[275171,275180],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[275248,275249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275276,275277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275346,275355],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[275423,275424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275451,275452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275649,275672],"content":"GetFields(BindingFlags)","needQuote":true,"nodes":[{"content":"GetFields(BindingFlags)","pos":[0,23]}]},{"pos":[275827,275836],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[275904,275905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275972,275984],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[276061,276062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276163,276172],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[276240,276241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276308,276320],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[276397,276398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276625,276645],"content":"GetInterface(String)","needQuote":true,"nodes":[{"content":"GetInterface(String)","pos":[0,20]}]},{"pos":[276772,276784],"content":"GetInterface","needQuote":true,"nodes":[{"content":"GetInterface","pos":[0,12]}]},{"pos":[276855,276856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276906,276912],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[276972,276973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277060,277072],"content":"GetInterface","needQuote":true,"nodes":[{"content":"GetInterface","pos":[0,12]}]},{"pos":[277143,277144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277194,277200],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[277260,277261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277486,277515],"content":"GetInterface(String, Boolean)","needQuote":true,"nodes":[{"content":"GetInterface(String, Boolean)","pos":[0,29]}]},{"pos":[277673,277685],"content":"GetInterface","needQuote":true,"nodes":[{"content":"GetInterface","pos":[0,12]}]},{"pos":[277756,277757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277807,277813],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[277874,277875]},{"pos":[277931,277938],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[277999,278000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278102,278114],"content":"GetInterface","needQuote":true,"nodes":[{"content":"GetInterface","pos":[0,12]}]},{"pos":[278185,278186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278236,278242],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[278303,278304]},{"pos":[278360,278367],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[278428,278429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278649,278664],"content":"GetInterfaces()","needQuote":true,"nodes":[{"content":"GetInterfaces()","pos":[0,15]}]},{"pos":[278765,278778],"content":"GetInterfaces","needQuote":true,"nodes":[{"content":"GetInterfaces","pos":[0,13]}]},{"pos":[278850,278851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278878,278879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278952,278965],"content":"GetInterfaces","needQuote":true,"nodes":[{"content":"GetInterfaces","pos":[0,13]}]},{"pos":[279037,279038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279065,279066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279288,279322],"content":"FindInterfaces(TypeFilter, Object)","needQuote":true,"nodes":[{"content":"FindInterfaces(TypeFilter, Object)","pos":[0,34]}]},{"pos":[279512,279526],"content":"FindInterfaces","needQuote":true,"nodes":[{"content":"FindInterfaces","pos":[0,14]}]},{"pos":[279599,279600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279665,279675],"content":"TypeFilter","needQuote":true,"nodes":[{"content":"TypeFilter","pos":[0,10]}]},{"content":",","pos":[279751,279752]},{"pos":[279807,279813],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[279873,279874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279992,280006],"content":"FindInterfaces","needQuote":true,"nodes":[{"content":"FindInterfaces","pos":[0,14]}]},{"pos":[280079,280080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280145,280155],"content":"TypeFilter","needQuote":true,"nodes":[{"content":"TypeFilter","pos":[0,10]}]},{"content":",","pos":[280231,280232]},{"pos":[280287,280293],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[280353,280354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280605,280621],"content":"GetEvent(String)","needQuote":true,"nodes":[{"content":"GetEvent(String)","pos":[0,16]}]},{"pos":[280740,280748],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[280815,280816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280866,280872],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[280932,280933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281016,281024],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[281091,281092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281142,281148],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[281208,281209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281438,281468],"content":"GetEvent(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetEvent(String, BindingFlags)","pos":[0,30]}]},{"pos":[281650,281658],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[281725,281726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281776,281782],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[281843,281844]},{"pos":[281916,281928],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[282005,282006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282120,282128],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[282195,282196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282246,282252],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[282313,282314]},{"pos":[282386,282398],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[282475,282476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282705,282716],"content":"GetEvents()","needQuote":true,"nodes":[{"content":"GetEvents()","pos":[0,11]}]},{"pos":[282809,282818],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[282886,282887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282914,282915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282984,282993],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[283061,283062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283089,283090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283287,283310],"content":"GetEvents(BindingFlags)","needQuote":true,"nodes":[{"content":"GetEvents(BindingFlags)","pos":[0,23]}]},{"pos":[283465,283474],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[283542,283543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283610,283622],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[283699,283700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283801,283810],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[283878,283879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283946,283958],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[284035,284036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284382,284458],"content":"GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])","pos":[0,76]}]},{"pos":[285095,285106],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[285176,285177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285227,285233],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[285294,285295]},{"pos":[285367,285379],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[285457,285458]},{"pos":[285524,285530],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[285602,285603]},{"pos":[285656,285660],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[285719,285720]},{"pos":[285773,285777],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[285836,285838]},{"content":",","pos":[285870,285871]},{"pos":[285948,285965],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[286048,286050]},{"pos":[286081,286082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286288,286299],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[286369,286370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286420,286426],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[286487,286488]},{"pos":[286560,286572],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[286650,286651]},{"pos":[286717,286723],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[286795,286796]},{"pos":[286849,286853],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[286912,286913]},{"pos":[286966,286970],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[287028,287030],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[287059,287060]},{"pos":[287137,287154],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[287236,287238],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[287266,287267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287816,287870],"content":"GetProperty(String, Type, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetProperty(String, Type, Type[], ParameterModifier[])","pos":[0,54]}]},{"pos":[288313,288324],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[288394,288395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[288445,288451],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[288512,288513]},{"pos":[288566,288570],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[288629,288630]},{"pos":[288683,288687],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[288746,288748]},{"content":",","pos":[288780,288781]},{"pos":[288858,288875],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[288958,288960]},{"pos":[288991,288992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289142,289153],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[289223,289224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289274,289280],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[289341,289342]},{"pos":[289395,289399],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[289458,289459]},{"pos":[289512,289516],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[289574,289576],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[289605,289606]},{"pos":[289683,289700],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[289782,289784],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[289812,289813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290229,290262],"content":"GetProperty(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetProperty(String, BindingFlags)","pos":[0,33]}]},{"pos":[290450,290461],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[290531,290532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[290582,290588],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[290649,290650]},{"pos":[290722,290734],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[290811,290812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290929,290940],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[291010,291011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291061,291067],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[291128,291129]},{"pos":[291201,291213],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[291290,291291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291569,291602],"content":"GetProperty(String, Type, Type[])","needQuote":true,"nodes":[{"content":"GetProperty(String, Type, Type[])","pos":[0,33]}]},{"pos":[291908,291919],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[291989,291990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292040,292046],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[292107,292108]},{"pos":[292161,292165],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[292224,292225]},{"pos":[292278,292282],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[292341,292343]},{"pos":[292374,292375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292487,292498],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[292568,292569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292619,292625],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[292686,292687]},{"pos":[292740,292744],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[292803,292804]},{"pos":[292857,292861],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[292919,292921],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[292949,292950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293269,293296],"content":"GetProperty(String, Type[])","needQuote":true,"nodes":[{"content":"GetProperty(String, Type[])","pos":[0,27]}]},{"pos":[293558,293569],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[293639,293640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293690,293696],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[293757,293758]},{"pos":[293811,293815],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[293874,293876]},{"pos":[293907,293908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294008,294019],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[294089,294090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294140,294146],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[294207,294208]},{"pos":[294261,294265],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[294323,294325],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[294353,294354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294647,294672],"content":"GetProperty(String, Type)","needQuote":true,"nodes":[{"content":"GetProperty(String, Type)","pos":[0,25]}]},{"pos":[294822,294833],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[294903,294904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294954,294960],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[295021,295022]},{"pos":[295075,295079],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[295137,295138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295236,295247],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[295317,295318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295368,295374],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[295435,295436]},{"pos":[295489,295493],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[295551,295552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295777,295796],"content":"GetProperty(String)","needQuote":true,"nodes":[{"content":"GetProperty(String)","pos":[0,19]}]},{"pos":[295921,295932],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[296002,296003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296053,296059],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[296119,296120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296206,296217],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[296287,296288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296338,296344],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[296404,296405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296736,296816],"content":"GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])","pos":[0,80]}]},{"pos":[297469,297484],"content":"GetPropertyImpl","needQuote":true,"nodes":[{"content":"GetPropertyImpl","pos":[0,15]}]},{"pos":[297558,297559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297609,297615],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[297676,297677]},{"pos":[297749,297761],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[297839,297840]},{"pos":[297906,297912],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[297984,297985]},{"pos":[298038,298042],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[298101,298102]},{"pos":[298155,298159],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[298218,298220]},{"content":",","pos":[298252,298253]},{"pos":[298330,298347],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[298430,298432]},{"pos":[298463,298464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298674,298689],"content":"GetPropertyImpl","needQuote":true,"nodes":[{"content":"GetPropertyImpl","pos":[0,15]}]},{"pos":[298763,298764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298814,298820],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[298881,298882]},{"pos":[298954,298966],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[299044,299045]},{"pos":[299111,299117],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[299189,299190]},{"pos":[299243,299247],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[299306,299307]},{"pos":[299360,299364],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[299422,299424],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[299453,299454]},{"pos":[299531,299548],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[299630,299632],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[299660,299661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300177,300204],"content":"GetProperties(BindingFlags)","needQuote":true,"nodes":[{"content":"GetProperties(BindingFlags)","pos":[0,27]}]},{"pos":[300367,300380],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[300452,300453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[300520,300532],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[300609,300610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300715,300728],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[300800,300801],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[300868,300880],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[300957,300958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301179,301194],"content":"GetProperties()","needQuote":true,"nodes":[{"content":"GetProperties()","pos":[0,15]}]},{"pos":[301295,301308],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[301380,301381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301408,301409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301482,301495],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[301567,301568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301595,301596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301774,301790],"content":"GetNestedTypes()","needQuote":true,"nodes":[{"content":"GetNestedTypes()","pos":[0,16]}]},{"pos":[301893,301907],"content":"GetNestedTypes","needQuote":true,"nodes":[{"content":"GetNestedTypes","pos":[0,14]}]},{"pos":[301980,301981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302008,302009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302083,302097],"content":"GetNestedTypes","needQuote":true,"nodes":[{"content":"GetNestedTypes","pos":[0,14]}]},{"pos":[302170,302171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302198,302199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302411,302439],"content":"GetNestedTypes(BindingFlags)","needQuote":true,"nodes":[{"content":"GetNestedTypes(BindingFlags)","pos":[0,28]}]},{"pos":[302604,302618],"content":"GetNestedTypes","needQuote":true,"nodes":[{"content":"GetNestedTypes","pos":[0,14]}]},{"pos":[302691,302692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302759,302771],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[302848,302849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302955,302969],"content":"GetNestedTypes","needQuote":true,"nodes":[{"content":"GetNestedTypes","pos":[0,14]}]},{"pos":[303042,303043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303110,303122],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[303199,303200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303438,303459],"content":"GetNestedType(String)","needQuote":true,"nodes":[{"content":"GetNestedType(String)","pos":[0,21]}]},{"pos":[303588,303601],"content":"GetNestedType","needQuote":true,"nodes":[{"content":"GetNestedType","pos":[0,13]}]},{"pos":[303673,303674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303724,303730],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[303790,303791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303879,303892],"content":"GetNestedType","needQuote":true,"nodes":[{"content":"GetNestedType","pos":[0,13]}]},{"pos":[303964,303965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304015,304021],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[304081,304082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304326,304361],"content":"GetNestedType(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetNestedType(String, BindingFlags)","pos":[0,35]}]},{"pos":[304553,304566],"content":"GetNestedType","needQuote":true,"nodes":[{"content":"GetNestedType","pos":[0,13]}]},{"pos":[304638,304639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304689,304695],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[304756,304757]},{"pos":[304829,304841],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[304918,304919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305038,305051],"content":"GetNestedType","needQuote":true,"nodes":[{"content":"GetNestedType","pos":[0,13]}]},{"pos":[305123,305124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[305174,305180],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[305241,305242]},{"pos":[305314,305326],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[305403,305404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305658,305675],"content":"GetMember(String)","needQuote":true,"nodes":[{"content":"GetMember(String)","pos":[0,17]}]},{"pos":[305796,305805],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[305873,305874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[305924,305930],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[305990,305991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306075,306084],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[306152,306153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306203,306209],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[306269,306270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306502,306533],"content":"GetMember(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetMember(String, BindingFlags)","pos":[0,31]}]},{"pos":[306717,306726],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[306794,306795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306845,306851],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[306912,306913]},{"pos":[306985,306997],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[307074,307075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307190,307199],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[307267,307268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307318,307324],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[307385,307386]},{"pos":[307458,307470],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[307547,307548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307855,307899],"content":"GetMember(String, MemberTypes, BindingFlags)","needQuote":true,"nodes":[{"content":"GetMember(String, MemberTypes, BindingFlags)","pos":[0,44]}]},{"pos":[308144,308153],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[308221,308222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308272,308278],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[308339,308340]},{"pos":[308411,308422],"content":"MemberTypes","needQuote":true,"nodes":[{"content":"MemberTypes","pos":[0,11]}]},{"content":",","pos":[308499,308500]},{"pos":[308572,308584],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[308661,308662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308807,308816],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[308884,308885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308935,308941],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[309002,309003]},{"pos":[309074,309085],"content":"MemberTypes","needQuote":true,"nodes":[{"content":"MemberTypes","pos":[0,11]}]},{"content":",","pos":[309162,309163]},{"pos":[309235,309247],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[309324,309325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309600,309612],"content":"GetMembers()","needQuote":true,"nodes":[{"content":"GetMembers()","pos":[0,12]}]},{"pos":[309707,309717],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[309786,309787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309814,309815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309885,309895],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[309964,309965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309992,309993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310193,310217],"content":"GetMembers(BindingFlags)","needQuote":true,"nodes":[{"content":"GetMembers(BindingFlags)","pos":[0,24]}]},{"pos":[310374,310384],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[310453,310454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310521,310533],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[310610,310611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310713,310723],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[310792,310793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310860,310872],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[310949,310950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311169,311188],"content":"GetDefaultMembers()","needQuote":true,"nodes":[{"content":"GetDefaultMembers()","pos":[0,19]}]},{"pos":[311297,311314],"content":"GetDefaultMembers","needQuote":true,"nodes":[{"content":"GetDefaultMembers","pos":[0,17]}]},{"pos":[311390,311391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[311418,311419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311496,311513],"content":"GetDefaultMembers","needQuote":true,"nodes":[{"content":"GetDefaultMembers","pos":[0,17]}]},{"pos":[311589,311590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[311617,311618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311908,311968],"content":"FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)","needQuote":true,"nodes":[{"content":"FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)","pos":[0,60]}]},{"pos":[312280,312291],"content":"FindMembers","needQuote":true,"nodes":[{"content":"FindMembers","pos":[0,11]}]},{"pos":[312361,312362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312428,312439],"content":"MemberTypes","needQuote":true,"nodes":[{"content":"MemberTypes","pos":[0,11]}]},{"content":",","pos":[312516,312517]},{"pos":[312589,312601],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[312679,312680]},{"pos":[312752,312764],"content":"MemberFilter","needQuote":true,"nodes":[{"content":"MemberFilter","pos":[0,12]}]},{"content":",","pos":[312842,312843]},{"pos":[312898,312904],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[312964,312965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313143,313154],"content":"FindMembers","needQuote":true,"nodes":[{"content":"FindMembers","pos":[0,11]}]},{"pos":[313224,313225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313291,313302],"content":"MemberTypes","needQuote":true,"nodes":[{"content":"MemberTypes","pos":[0,11]}]},{"content":",","pos":[313379,313380]},{"pos":[313452,313464],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[313542,313543]},{"pos":[313615,313627],"content":"MemberFilter","needQuote":true,"nodes":[{"content":"MemberFilter","pos":[0,12]}]},{"content":",","pos":[313705,313706]},{"pos":[313761,313767],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[313827,313828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314157,314174],"content":"IsValueTypeImpl()","needQuote":true,"nodes":[{"content":"IsValueTypeImpl()","pos":[0,17]}]},{"pos":[314279,314294],"content":"IsValueTypeImpl","needQuote":true,"nodes":[{"content":"IsValueTypeImpl","pos":[0,15]}]},{"pos":[314368,314369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[314396,314397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314472,314487],"content":"IsValueTypeImpl","needQuote":true,"nodes":[{"content":"IsValueTypeImpl","pos":[0,15]}]},{"pos":[314561,314562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[314589,314590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314779,314802],"content":"GetAttributeFlagsImpl()","needQuote":true,"nodes":[{"content":"GetAttributeFlagsImpl()","pos":[0,23]}]},{"pos":[314919,314940],"content":"GetAttributeFlagsImpl","needQuote":true,"nodes":[{"content":"GetAttributeFlagsImpl","pos":[0,21]}]},{"pos":[315020,315021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315048,315049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315130,315151],"content":"GetAttributeFlagsImpl","needQuote":true,"nodes":[{"content":"GetAttributeFlagsImpl","pos":[0,21]}]},{"pos":[315231,315232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315259,315260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315451,315464],"content":"IsArrayImpl()","needQuote":true,"nodes":[{"content":"IsArrayImpl()","pos":[0,13]}]},{"pos":[315561,315572],"content":"IsArrayImpl","needQuote":true,"nodes":[{"content":"IsArrayImpl","pos":[0,11]}]},{"pos":[315642,315643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315670,315671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315742,315753],"content":"IsArrayImpl","needQuote":true,"nodes":[{"content":"IsArrayImpl","pos":[0,11]}]},{"pos":[315823,315824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315851,315852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316023,316036],"content":"IsByRefImpl()","needQuote":true,"nodes":[{"content":"IsByRefImpl()","pos":[0,13]}]},{"pos":[316133,316144],"content":"IsByRefImpl","needQuote":true,"nodes":[{"content":"IsByRefImpl","pos":[0,11]}]},{"pos":[316214,316215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316242,316243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316314,316325],"content":"IsByRefImpl","needQuote":true,"nodes":[{"content":"IsByRefImpl","pos":[0,11]}]},{"pos":[316395,316396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316423,316424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316597,316612],"content":"IsPointerImpl()","needQuote":true,"nodes":[{"content":"IsPointerImpl()","pos":[0,15]}]},{"pos":[316713,316726],"content":"IsPointerImpl","needQuote":true,"nodes":[{"content":"IsPointerImpl","pos":[0,13]}]},{"pos":[316798,316799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316826,316827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316900,316913],"content":"IsPointerImpl","needQuote":true,"nodes":[{"content":"IsPointerImpl","pos":[0,13]}]},{"pos":[316985,316986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317013,317014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317193,317210],"content":"IsPrimitiveImpl()","needQuote":true,"nodes":[{"content":"IsPrimitiveImpl()","pos":[0,17]}]},{"pos":[317315,317330],"content":"IsPrimitiveImpl","needQuote":true,"nodes":[{"content":"IsPrimitiveImpl","pos":[0,15]}]},{"pos":[317404,317405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317432,317433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317508,317523],"content":"IsPrimitiveImpl","needQuote":true,"nodes":[{"content":"IsPrimitiveImpl","pos":[0,15]}]},{"pos":[317597,317598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317625,317626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317809,317826],"content":"IsCOMObjectImpl()","needQuote":true,"nodes":[{"content":"IsCOMObjectImpl()","pos":[0,17]}]},{"pos":[317931,317946],"content":"IsCOMObjectImpl","needQuote":true,"nodes":[{"content":"IsCOMObjectImpl","pos":[0,15]}]},{"pos":[318020,318021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318048,318049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318124,318139],"content":"IsCOMObjectImpl","needQuote":true,"nodes":[{"content":"IsCOMObjectImpl","pos":[0,15]}]},{"pos":[318213,318214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318241,318242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318426,318444],"content":"IsContextfulImpl()","needQuote":true,"nodes":[{"content":"IsContextfulImpl()","pos":[0,18]}]},{"pos":[318551,318567],"content":"IsContextfulImpl","needQuote":true,"nodes":[{"content":"IsContextfulImpl","pos":[0,16]}]},{"pos":[318642,318643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318670,318671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318747,318763],"content":"IsContextfulImpl","needQuote":true,"nodes":[{"content":"IsContextfulImpl","pos":[0,16]}]},{"pos":[318838,318839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318866,318867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319055,319075],"content":"IsMarshalByRefImpl()","needQuote":true,"nodes":[{"content":"IsMarshalByRefImpl()","pos":[0,20]}]},{"pos":[319186,319204],"content":"IsMarshalByRefImpl","needQuote":true,"nodes":[{"content":"IsMarshalByRefImpl","pos":[0,18]}]},{"pos":[319281,319282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319309,319310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319388,319406],"content":"IsMarshalByRefImpl","needQuote":true,"nodes":[{"content":"IsMarshalByRefImpl","pos":[0,18]}]},{"pos":[319483,319484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319511,319512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319705,319726],"content":"GetGenericArguments()","needQuote":true,"nodes":[{"content":"GetGenericArguments()","pos":[0,21]}]},{"pos":[319839,319858],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[319936,319937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319964,319965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320044,320063],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[320141,320142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320169,320170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320364,320384],"content":"HasElementTypeImpl()","needQuote":true,"nodes":[{"content":"HasElementTypeImpl()","pos":[0,20]}]},{"pos":[320495,320513],"content":"HasElementTypeImpl","needQuote":true,"nodes":[{"content":"HasElementTypeImpl","pos":[0,18]}]},{"pos":[320590,320591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320618,320619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320697,320715],"content":"HasElementTypeImpl","needQuote":true,"nodes":[{"content":"HasElementTypeImpl","pos":[0,18]}]},{"pos":[320792,320793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320820,320821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321007,321021],"content":"GetEnumNames()","needQuote":true,"nodes":[{"content":"GetEnumNames()","pos":[0,14]}]},{"pos":[321120,321132],"content":"GetEnumNames","needQuote":true,"nodes":[{"content":"GetEnumNames","pos":[0,12]}]},{"pos":[321203,321204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321231,321232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321304,321316],"content":"GetEnumNames","needQuote":true,"nodes":[{"content":"GetEnumNames","pos":[0,12]}]},{"pos":[321387,321388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321415,321416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321591,321606],"content":"GetEnumValues()","needQuote":true,"nodes":[{"content":"GetEnumValues()","pos":[0,15]}]},{"pos":[321707,321720],"content":"GetEnumValues","needQuote":true,"nodes":[{"content":"GetEnumValues","pos":[0,13]}]},{"pos":[321792,321793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321820,321821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321894,321907],"content":"GetEnumValues","needQuote":true,"nodes":[{"content":"GetEnumValues","pos":[0,13]}]},{"pos":[321979,321980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322007,322008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322193,322216],"content":"GetEnumUnderlyingType()","needQuote":true,"nodes":[{"content":"GetEnumUnderlyingType()","pos":[0,23]}]},{"pos":[322333,322354],"content":"GetEnumUnderlyingType","needQuote":true,"nodes":[{"content":"GetEnumUnderlyingType","pos":[0,21]}]},{"pos":[322434,322435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322462,322463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322544,322565],"content":"GetEnumUnderlyingType","needQuote":true,"nodes":[{"content":"GetEnumUnderlyingType","pos":[0,21]}]},{"pos":[322645,322646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322673,322674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322882,322903],"content":"IsEnumDefined(Object)","needQuote":true,"nodes":[{"content":"IsEnumDefined(Object)","pos":[0,21]}]},{"pos":[323032,323045],"content":"IsEnumDefined","needQuote":true,"nodes":[{"content":"IsEnumDefined","pos":[0,13]}]},{"pos":[323117,323118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323168,323174],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[323234,323235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323323,323336],"content":"IsEnumDefined","needQuote":true,"nodes":[{"content":"IsEnumDefined","pos":[0,13]}]},{"pos":[323408,323409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323459,323465],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[323525,323526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323737,323756],"content":"GetEnumName(Object)","needQuote":true,"nodes":[{"content":"GetEnumName(Object)","pos":[0,19]}]},{"pos":[323881,323892],"content":"GetEnumName","needQuote":true,"nodes":[{"content":"GetEnumName","pos":[0,11]}]},{"pos":[323962,323963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324013,324019],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[324079,324080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324166,324177],"content":"GetEnumName","needQuote":true,"nodes":[{"content":"GetEnumName","pos":[0,11]}]},{"pos":[324247,324248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324298,324304],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[324364,324365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324571,324589],"content":"IsSubclassOf(Type)","needQuote":true,"nodes":[{"content":"IsSubclassOf(Type)","pos":[0,18]}]},{"pos":[324712,324724],"content":"IsSubclassOf","needQuote":true,"nodes":[{"content":"IsSubclassOf","pos":[0,12]}]},{"pos":[324795,324796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324844,324848],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[324906,324907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324992,325004],"content":"IsSubclassOf","needQuote":true,"nodes":[{"content":"IsSubclassOf","pos":[0,12]}]},{"pos":[325075,325076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325124,325128],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[325186,325187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325397,325421],"content":"IsInstanceOfType(Object)","needQuote":true,"nodes":[{"content":"IsInstanceOfType(Object)","pos":[0,24]}]},{"pos":[325556,325572],"content":"IsInstanceOfType","needQuote":true,"nodes":[{"content":"IsInstanceOfType","pos":[0,16]}]},{"pos":[325647,325648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325698,325704],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[325764,325765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325856,325872],"content":"IsInstanceOfType","needQuote":true,"nodes":[{"content":"IsInstanceOfType","pos":[0,16]}]},{"pos":[325947,325948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325998,326004],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[326064,326065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326285,326307],"content":"IsAssignableFrom(Type)","needQuote":true,"nodes":[{"content":"IsAssignableFrom(Type)","pos":[0,22]}]},{"pos":[326438,326454],"content":"IsAssignableFrom","needQuote":true,"nodes":[{"content":"IsAssignableFrom","pos":[0,16]}]},{"pos":[326529,326530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326578,326582],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[326640,326641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326730,326746],"content":"IsAssignableFrom","needQuote":true,"nodes":[{"content":"IsAssignableFrom","pos":[0,16]}]},{"pos":[326821,326822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326870,326874],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[326932,326933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327147,327167],"content":"IsEquivalentTo(Type)","needQuote":true,"nodes":[{"content":"IsEquivalentTo(Type)","pos":[0,20]}]},{"pos":[327294,327308],"content":"IsEquivalentTo","needQuote":true,"nodes":[{"content":"IsEquivalentTo","pos":[0,14]}]},{"pos":[327381,327382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327430,327434],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[327492,327493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327580,327594],"content":"IsEquivalentTo","needQuote":true,"nodes":[{"content":"IsEquivalentTo","pos":[0,14]}]},{"pos":[327667,327668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327716,327720],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[327778,327779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327991,328013],"content":"GetTypeArray(Object[])","needQuote":true,"nodes":[{"content":"GetTypeArray(Object[])","pos":[0,22]}]},{"pos":[328235,328247],"content":"GetTypeArray","needQuote":true,"nodes":[{"content":"GetTypeArray","pos":[0,12]}]},{"pos":[328318,328319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328369,328375],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[328436,328438]},{"pos":[328469,328470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328559,328571],"content":"GetTypeArray","needQuote":true,"nodes":[{"content":"GetTypeArray","pos":[0,12]}]},{"pos":[328642,328643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328693,328699],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[328759,328761],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[328789,328790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329045,329059],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[329174,329180],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[329245,329246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[329296,329302],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[329362,329363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329444,329450],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[329515,329516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[329566,329572],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[329632,329633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329823,329835],"content":"Equals(Type)","needQuote":true,"nodes":[{"content":"Equals(Type)","pos":[0,12]}]},{"pos":[329946,329952],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[330017,330018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330066,330070],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[330128,330129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330208,330214],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[330279,330280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330328,330332],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[330390,330391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330569,330582],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[330679,330690],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[330760,330761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330788,330789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330860,330871],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[330941,330942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330969,330970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331158,331179],"content":"GetInterfaceMap(Type)","needQuote":true,"nodes":[{"content":"GetInterfaceMap(Type)","pos":[0,21]}]},{"pos":[331308,331323],"content":"GetInterfaceMap","needQuote":true,"nodes":[{"content":"GetInterfaceMap","pos":[0,15]}]},{"pos":[331397,331398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331446,331450],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[331508,331509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331597,331612],"content":"GetInterfaceMap","needQuote":true,"nodes":[{"content":"GetInterfaceMap","pos":[0,15]}]},{"pos":[331686,331687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331735,331739],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[331797,331798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331990,331999],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[332088,332095],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[332161,332162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332189,332190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332257,332264],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[332330,332331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332358,332359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332580,332610],"content":"_Type.GetTypeInfoCount(UInt32)","needQuote":true,"nodes":[{"content":"_Type.GetTypeInfoCount(UInt32)","pos":[0,30]}]},{"pos":[332893,332915],"content":"_Type.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"_Type.GetTypeInfoCount","pos":[0,22]}]},{"pos":[333027,333028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[333078,333084],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[333144,333145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333274,333327],"content":"System.Runtime.InteropServices._Type.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._Type.GetTypeInfoCount","pos":[0,53]}]},{"pos":[333439,333440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[333490,333496],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[333556,333557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333969,334010],"content":"_Type.GetTypeInfo(UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_Type.GetTypeInfo(UInt32, UInt32, IntPtr)","pos":[0,41]}]},{"pos":[334351,334368],"content":"_Type.GetTypeInfo","needQuote":true,"nodes":[{"content":"_Type.GetTypeInfo","pos":[0,17]}]},{"pos":[334475,334476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334526,334532],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[334593,334594]},{"pos":[334649,334655],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[334716,334717]},{"pos":[334772,334778],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[334838,334839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334990,335038],"content":"System.Runtime.InteropServices._Type.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._Type.GetTypeInfo","pos":[0,48]}]},{"pos":[335145,335146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[335196,335202],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[335263,335264]},{"pos":[335319,335325],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[335386,335387]},{"pos":[335442,335448],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[335508,335509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335994,336051],"content":"_Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","pos":[0,57]}]},{"pos":[336467,336486],"content":"_Type.GetIDsOfNames","needQuote":true,"nodes":[{"content":"_Type.GetIDsOfNames","pos":[0,19]}]},{"pos":[336595,336596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336644,336648],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[336707,336708]},{"pos":[336763,336769],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[336830,336831]},{"pos":[336886,336892],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[336953,336954]},{"pos":[337009,337015],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[337076,337077]},{"pos":[337132,337138],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[337198,337199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337379,337429],"content":"System.Runtime.InteropServices._Type.GetIDsOfNames","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._Type.GetIDsOfNames","pos":[0,50]}]},{"pos":[337538,337539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337587,337591],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[337650,337651]},{"pos":[337706,337712],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[337773,337774]},{"pos":[337829,337835],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[337896,337897]},{"pos":[337952,337958],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[338019,338020]},{"pos":[338075,338081],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[338141,338142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338722,338795],"content":"_Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"_Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","pos":[0,73]}]},{"pos":[339298,339310],"content":"_Type.Invoke","needQuote":true,"nodes":[{"content":"_Type.Invoke","pos":[0,12]}]},{"pos":[339412,339413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339463,339469],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[339530,339531]},{"pos":[339584,339588],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[339647,339648]},{"pos":[339703,339709],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[339770,339771]},{"pos":[339825,339830],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[339890,339891]},{"pos":[339946,339952],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[340013,340014]},{"pos":[340069,340075],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[340136,340137]},{"pos":[340192,340198],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[340259,340260]},{"pos":[340315,340321],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[340381,340382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340596,340639],"content":"System.Runtime.InteropServices._Type.Invoke","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._Type.Invoke","pos":[0,43]}]},{"pos":[340741,340742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340792,340798],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[340859,340860]},{"pos":[340913,340917],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[340976,340977]},{"pos":[341032,341038],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[341099,341100]},{"pos":[341154,341159],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[341219,341220]},{"pos":[341275,341281],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[341342,341343]},{"pos":[341398,341404],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[341465,341466]},{"pos":[341521,341527],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[341588,341589]},{"pos":[341644,341650],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[341710,341711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342213,342223],"content":"MemberType","needQuote":true,"nodes":[{"content":"MemberType","pos":[0,10]}]},{"pos":[342411,342424],"content":"ReflectedType","needQuote":true,"nodes":[{"content":"ReflectedType","pos":[0,13]}]},{"pos":[342629,342650],"content":"StructLayoutAttribute","needQuote":true,"nodes":[{"content":"StructLayoutAttribute","pos":[0,21]}]},{"pos":[342871,342884],"content":"DefaultBinder","needQuote":true,"nodes":[{"content":"DefaultBinder","pos":[0,13]}]},{"pos":[343078,343088],"content":"TypeHandle","needQuote":true,"nodes":[{"content":"TypeHandle","pos":[0,10]}]},{"pos":[343278,343293],"content":"TypeInitializer","needQuote":true,"nodes":[{"content":"TypeInitializer","pos":[0,15]}]},{"pos":[343491,343499],"content":"IsNested","needQuote":true,"nodes":[{"content":"IsNested","pos":[0,8]}]},{"pos":[343677,343686],"content":"IsVisible","needQuote":true,"nodes":[{"content":"IsVisible","pos":[0,9]}]},{"pos":[343869,343880],"content":"IsNotPublic","needQuote":true,"nodes":[{"content":"IsNotPublic","pos":[0,11]}]},{"pos":[344066,344074],"content":"IsPublic","needQuote":true,"nodes":[{"content":"IsPublic","pos":[0,8]}]},{"pos":[344257,344271],"content":"IsNestedPublic","needQuote":true,"nodes":[{"content":"IsNestedPublic","pos":[0,14]}]},{"pos":[344473,344488],"content":"IsNestedPrivate","needQuote":true,"nodes":[{"content":"IsNestedPrivate","pos":[0,15]}]},{"pos":[344692,344706],"content":"IsNestedFamily","needQuote":true,"nodes":[{"content":"IsNestedFamily","pos":[0,14]}]},{"pos":[344909,344925],"content":"IsNestedAssembly","needQuote":true,"nodes":[{"content":"IsNestedAssembly","pos":[0,16]}]},{"pos":[345137,345156],"content":"IsNestedFamANDAssem","needQuote":true,"nodes":[{"content":"IsNestedFamANDAssem","pos":[0,19]}]},{"pos":[345376,345394],"content":"IsNestedFamORAssem","needQuote":true,"nodes":[{"content":"IsNestedFamORAssem","pos":[0,18]}]},{"pos":[345605,345617],"content":"IsAutoLayout","needQuote":true,"nodes":[{"content":"IsAutoLayout","pos":[0,12]}]},{"pos":[345816,345834],"content":"IsLayoutSequential","needQuote":true,"nodes":[{"content":"IsLayoutSequential","pos":[0,18]}]},{"pos":[346049,346065],"content":"IsExplicitLayout","needQuote":true,"nodes":[{"content":"IsExplicitLayout","pos":[0,16]}]},{"pos":[346265,346272],"content":"IsClass","needQuote":true,"nodes":[{"content":"IsClass","pos":[0,7]}]},{"pos":[346449,346460],"content":"IsInterface","needQuote":true,"nodes":[{"content":"IsInterface","pos":[0,11]}]},{"pos":[346649,346660],"content":"IsValueType","needQuote":true,"nodes":[{"content":"IsValueType","pos":[0,11]}]},{"pos":[346848,346858],"content":"IsAbstract","needQuote":true,"nodes":[{"content":"IsAbstract","pos":[0,10]}]},{"pos":[347041,347049],"content":"IsSealed","needQuote":true,"nodes":[{"content":"IsSealed","pos":[0,8]}]},{"pos":[347231,347244],"content":"IsSpecialName","needQuote":true,"nodes":[{"content":"IsSpecialName","pos":[0,13]}]},{"pos":[347436,347444],"content":"IsImport","needQuote":true,"nodes":[{"content":"IsImport","pos":[0,8]}]},{"pos":[347624,347635],"content":"IsAnsiClass","needQuote":true,"nodes":[{"content":"IsAnsiClass","pos":[0,11]}]},{"pos":[347827,347841],"content":"IsUnicodeClass","needQuote":true,"nodes":[{"content":"IsUnicodeClass","pos":[0,14]}]},{"pos":[348039,348050],"content":"IsAutoClass","needQuote":true,"nodes":[{"content":"IsAutoClass","pos":[0,11]}]},{"pos":[348235,348242],"content":"IsArray","needQuote":true,"nodes":[{"content":"IsArray","pos":[0,7]}]},{"pos":[348432,348456],"content":"IsConstructedGenericType","needQuote":true,"nodes":[{"content":"IsConstructedGenericType","pos":[0,24]}]},{"pos":[348680,348687],"content":"IsByRef","needQuote":true,"nodes":[{"content":"IsByRef","pos":[0,7]}]},{"pos":[348862,348871],"content":"IsPointer","needQuote":true,"nodes":[{"content":"IsPointer","pos":[0,9]}]},{"pos":[349054,349065],"content":"IsPrimitive","needQuote":true,"nodes":[{"content":"IsPrimitive","pos":[0,11]}]},{"pos":[349254,349265],"content":"IsCOMObject","needQuote":true,"nodes":[{"content":"IsCOMObject","pos":[0,11]}]},{"pos":[349457,349471],"content":"HasElementType","needQuote":true,"nodes":[{"content":"HasElementType","pos":[0,14]}]},{"pos":[349670,349682],"content":"IsContextful","needQuote":true,"nodes":[{"content":"IsContextful","pos":[0,12]}]},{"pos":[349877,349891],"content":"IsMarshalByRef","needQuote":true,"nodes":[{"content":"IsMarshalByRef","pos":[0,14]}]},{"pos":[350096,350114],"content":"IsSecurityCritical","needQuote":true,"nodes":[{"content":"IsSecurityCritical","pos":[0,18]}]},{"pos":[350335,350357],"content":"IsSecuritySafeCritical","needQuote":true,"nodes":[{"content":"IsSecuritySafeCritical","pos":[0,22]}]},{"pos":[350589,350610],"content":"IsSecurityTransparent","needQuote":true,"nodes":[{"content":"IsSecurityTransparent","pos":[0,21]}]},{"pos":[350838,350858],"content":"UnderlyingSystemType","needQuote":true,"nodes":[{"content":"UnderlyingSystemType","pos":[0,20]}]},{"pos":[351132,351160],"content":"GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[351337,351356],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[351451,351452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351503,351510],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[351571,351572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351684,351703],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[351798,351799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351850,351857],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[351918,351919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352222,352256],"content":"GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type, Boolean)","pos":[0,34]}]},{"pos":[352458,352477],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[352572,352573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352621,352625],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[352684,352685]},{"pos":[352741,352748],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[352809,352810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352934,352953],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[353048,353049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353097,353101],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[353160,353161]},{"pos":[353217,353224],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[353285,353286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353597,353621],"content":"IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(Type, Boolean)","pos":[0,24]}]},{"pos":[353803,353812],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[353897,353898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353946,353950],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[354009,354010]},{"pos":[354066,354073],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[354134,354135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354249,354258],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[354343,354344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[354392,354396],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[354455,354456]},{"pos":[354512,354519],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[354580,354581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354858,354883],"content":"GetCustomAttributesData()","needQuote":true,"nodes":[{"content":"GetCustomAttributesData()","pos":[0,25]}]},{"pos":[355038,355061],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[355160,355161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355188,355189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355289,355312],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[355411,355412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355439,355440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355731,355752],"content":"_MemberInfo.GetType()","needQuote":true,"nodes":[{"content":"_MemberInfo.GetType()","pos":[0,21]}]},{"pos":[356025,356044],"content":"_MemberInfo.GetType","needQuote":true,"nodes":[{"content":"_MemberInfo.GetType","pos":[0,19]}]},{"pos":[356170,356171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[356198,356199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356326,356376],"content":"System.Runtime.InteropServices._MemberInfo.GetType","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetType","pos":[0,50]}]},{"pos":[356502,356503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[356530,356531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356953,356989],"content":"_MemberInfo.GetTypeInfoCount(UInt32)","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfoCount(UInt32)","pos":[0,36]}]},{"pos":[357324,357352],"content":"_MemberInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfoCount","pos":[0,28]}]},{"pos":[357487,357488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357538,357544],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[357604,357605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357757,357816],"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount","pos":[0,59]}]},{"pos":[357951,357952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358002,358008],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[358068,358069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358568,358615],"content":"_MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","pos":[0,47]}]},{"pos":[359008,359031],"content":"_MemberInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfo","pos":[0,23]}]},{"pos":[359161,359162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359212,359218],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[359279,359280]},{"pos":[359335,359341],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[359402,359403]},{"pos":[359458,359464],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[359524,359525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359699,359753],"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfo","pos":[0,54]}]},{"pos":[359883,359884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359934,359940],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[360001,360002]},{"pos":[360057,360063],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[360124,360125]},{"pos":[360180,360186],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[360246,360247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360819,360882],"content":"_MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","pos":[0,63]}]},{"pos":[361350,361375],"content":"_MemberInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"_MemberInfo.GetIDsOfNames","pos":[0,25]}]},{"pos":[361507,361508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361556,361560],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[361619,361620]},{"pos":[361675,361681],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[361742,361743]},{"pos":[361798,361804],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[361865,361866]},{"pos":[361921,361927],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[361988,361989]},{"pos":[362044,362050],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[362110,362111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362314,362370],"content":"System.Runtime.InteropServices._MemberInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetIDsOfNames","pos":[0,56]}]},{"pos":[362502,362503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362551,362555],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[362614,362615]},{"pos":[362670,362676],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[362737,362738]},{"pos":[362793,362799],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[362860,362861]},{"pos":[362916,362922],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[362983,362984]},{"pos":[363039,363045],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[363105,363106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363773,363852],"content":"_MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"_MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","pos":[0,79]}]},{"pos":[364407,364425],"content":"_MemberInfo.Invoke","needQuote":true,"nodes":[{"content":"_MemberInfo.Invoke","pos":[0,18]}]},{"pos":[364550,364551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364601,364607],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[364668,364669]},{"pos":[364722,364726],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[364785,364786]},{"pos":[364841,364847],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[364908,364909]},{"pos":[364963,364968],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[365028,365029]},{"pos":[365084,365090],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[365151,365152]},{"pos":[365207,365213],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[365274,365275]},{"pos":[365330,365336],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[365397,365398]},{"pos":[365453,365459],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[365519,365520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365757,365806],"content":"System.Runtime.InteropServices._MemberInfo.Invoke","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.Invoke","pos":[0,49]}]},{"pos":[365931,365932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365982,365988],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[366049,366050]},{"pos":[366103,366107],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[366166,366167]},{"pos":[366222,366228],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[366289,366290]},{"pos":[366344,366349],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[366409,366410]},{"pos":[366465,366471],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[366532,366533]},{"pos":[366588,366594],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[366655,366656]},{"pos":[366711,366717],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[366778,366779]},{"pos":[366834,366840],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[366900,366901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367491,367507],"content":"CustomAttributes","needQuote":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[367788,367801],"content":"MetadataToken","needQuote":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[368064,368086],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[368234,368240],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[368307,368308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368358,368364],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[368425,368426]},{"pos":[368481,368487],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[368547,368548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368645,368651],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[368718,368719],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368769,368775],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[368836,368837]},{"pos":[368892,368898],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[368958,368959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369204,369235],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[369401,369416],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[369492,369493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369543,369549],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[369610,369611]},{"pos":[369666,369672],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[369732,369733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369839,369854],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[369930,369931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369981,369987],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[370048,370049]},{"pos":[370104,370110],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[370170,370171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370405,370422],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[370531,370546],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[370622,370623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370650,370651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370728,370743],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[370819,370820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370847,370848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371165,371178],"content":"GetTypeInfo()","needQuote":true,"nodes":[{"content":"GetTypeInfo()","pos":[0,13]}]},{"pos":[371335,371346],"content":"GetTypeInfo","needQuote":true,"nodes":[{"content":"GetTypeInfo","pos":[0,11]}]},{"pos":[371425,371426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371453,371454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371555,371566],"content":"GetTypeInfo","needQuote":true,"nodes":[{"content":"GetTypeInfo","pos":[0,11]}]},{"pos":[371645,371646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371673,371674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372076,372094],"content":"HasMetadataToken()","needQuote":true,"nodes":[{"content":"HasMetadataToken()","pos":[0,18]}]},{"pos":[372255,372271],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[372352,372353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372380,372381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372484,372500],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[372581,372582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372609,372610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373033,373051],"content":"GetMetadataToken()","needQuote":true,"nodes":[{"content":"GetMetadataToken()","pos":[0,18]}]},{"pos":[373212,373228],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[373309,373310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373337,373338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373441,373457],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[373538,373539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373566,373567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373963,373985],"content":"GetConstructor(Type[])","needQuote":true,"nodes":[{"content":"GetConstructor(Type[])","pos":[0,22]}]},{"pos":[374270,374284],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[374357,374358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374406,374410],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[374469,374471]},{"pos":[374502,374503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374613,374627],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[374700,374701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374749,374753],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[374811,374813],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[374841,374842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375255,375272],"content":"GetConstructors()","needQuote":true,"nodes":[{"content":"GetConstructors()","pos":[0,17]}]},{"pos":[375419,375434],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[375508,375509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375536,375537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375633,375648],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[375722,375723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375750,375751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376152,376181],"content":"GetConstructors(BindingFlags)","needQuote":true,"nodes":[{"content":"GetConstructors(BindingFlags)","pos":[0,29]}]},{"pos":[376390,376405],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[376479,376480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376547,376559],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[376636,376637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376765,376780],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[376854,376855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376922,376934],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[377011,377012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377397,377416],"content":"GetDefaultMembers()","needQuote":true,"nodes":[{"content":"GetDefaultMembers()","pos":[0,19]}]},{"pos":[377567,377584],"content":"GetDefaultMembers","needQuote":true,"nodes":[{"content":"GetDefaultMembers","pos":[0,17]}]},{"pos":[377660,377661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377688,377689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377787,377804],"content":"GetDefaultMembers","needQuote":true,"nodes":[{"content":"GetDefaultMembers","pos":[0,17]}]},{"pos":[377880,377881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377908,377909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378266,378282],"content":"GetEvent(String)","needQuote":true,"nodes":[{"content":"GetEvent(String)","pos":[0,16]}]},{"pos":[378443,378451],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[378518,378519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378569,378575],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[378635,378636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378740,378748],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[378815,378816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378866,378872],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[378932,378933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379354,379384],"content":"GetEvent(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetEvent(String, BindingFlags)","pos":[0,30]}]},{"pos":[379608,379616],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[379683,379684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379734,379740],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[379801,379802]},{"pos":[379874,379886],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[379963,379964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380099,380107],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[380174,380175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[380225,380231],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[380292,380293]},{"pos":[380365,380377],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[380454,380455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380832,380843],"content":"GetEvents()","needQuote":true,"nodes":[{"content":"GetEvents()","pos":[0,11]}]},{"pos":[380978,380987],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[381055,381056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381083,381084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381174,381183],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[381251,381252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381279,381280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381657,381680],"content":"GetEvents(BindingFlags)","needQuote":true,"nodes":[{"content":"GetEvents(BindingFlags)","pos":[0,23]}]},{"pos":[381877,381886],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[381954,381955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382022,382034],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[382111,382112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382234,382243],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[382311,382312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382379,382391],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[382468,382469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382853,382869],"content":"GetField(String)","needQuote":true,"nodes":[{"content":"GetField(String)","pos":[0,16]}]},{"pos":[383030,383038],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[383105,383106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[383156,383162],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[383222,383223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383327,383335],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[383402,383403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[383453,383459],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[383519,383520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383941,383971],"content":"GetField(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetField(String, BindingFlags)","pos":[0,30]}]},{"pos":[384195,384203],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[384270,384271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384321,384327],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[384388,384389]},{"pos":[384461,384473],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[384550,384551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384686,384694],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[384761,384762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384812,384818],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[384879,384880]},{"pos":[384952,384964],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[385041,385042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385419,385430],"content":"GetFields()","needQuote":true,"nodes":[{"content":"GetFields()","pos":[0,11]}]},{"pos":[385565,385574],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[385642,385643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385670,385671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385761,385770],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[385838,385839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385866,385867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386244,386267],"content":"GetFields(BindingFlags)","needQuote":true,"nodes":[{"content":"GetFields(BindingFlags)","pos":[0,23]}]},{"pos":[386464,386473],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[386541,386542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386609,386621],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[386698,386699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386821,386830],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[386898,386899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386966,386978],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[387055,387056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387433,387454],"content":"GetGenericArguments()","needQuote":true,"nodes":[{"content":"GetGenericArguments()","pos":[0,21]}]},{"pos":[387609,387628],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[387706,387707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387734,387735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387835,387854],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[387932,387933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387960,387961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388303,388318],"content":"GetInterfaces()","needQuote":true,"nodes":[{"content":"GetInterfaces()","pos":[0,15]}]},{"pos":[388461,388474],"content":"GetInterfaces","needQuote":true,"nodes":[{"content":"GetInterfaces","pos":[0,13]}]},{"pos":[388546,388547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[388574,388575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388669,388682],"content":"GetInterfaces","needQuote":true,"nodes":[{"content":"GetInterfaces","pos":[0,13]}]},{"pos":[388754,388755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[388782,388783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389134,389151],"content":"GetMember(String)","needQuote":true,"nodes":[{"content":"GetMember(String)","pos":[0,17]}]},{"pos":[389314,389323],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[389391,389392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389442,389448],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[389508,389509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389614,389623],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[389691,389692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389742,389748],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[389808,389809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390234,390265],"content":"GetMember(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetMember(String, BindingFlags)","pos":[0,31]}]},{"pos":[390491,390500],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[390568,390569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390619,390625],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[390686,390687]},{"pos":[390759,390771],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[390848,390849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390985,390994],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[391062,391063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[391113,391119],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[391180,391181]},{"pos":[391253,391265],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[391342,391343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391724,391736],"content":"GetMembers()","needQuote":true,"nodes":[{"content":"GetMembers()","pos":[0,12]}]},{"pos":[391873,391883],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[391952,391953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[391980,391981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392072,392082],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[392151,392152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392179,392180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392561,392585],"content":"GetMembers(BindingFlags)","needQuote":true,"nodes":[{"content":"GetMembers(BindingFlags)","pos":[0,24]}]},{"pos":[392784,392794],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[392863,392864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392931,392943],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[393020,393021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393144,393154],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[393223,393224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393291,393303],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[393380,393381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393769,393786],"content":"GetMethod(String)","needQuote":true,"nodes":[{"content":"GetMethod(String)","pos":[0,17]}]},{"pos":[393949,393958],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[394026,394027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[394077,394083],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[394143,394144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394249,394258],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[394326,394327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[394377,394383],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[394443,394444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394869,394900],"content":"GetMethod(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetMethod(String, BindingFlags)","pos":[0,31]}]},{"pos":[395126,395135],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[395203,395204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395254,395260],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[395321,395322]},{"pos":[395394,395406],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[395483,395484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395620,395629],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[395697,395698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395748,395754],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[395815,395816]},{"pos":[395888,395900],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[395977,395978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396414,396439],"content":"GetMethod(String, Type[])","needQuote":true,"nodes":[{"content":"GetMethod(String, Type[])","pos":[0,25]}]},{"pos":[396756,396765],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[396833,396834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396884,396890],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[396951,396952]},{"pos":[397005,397009],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[397068,397070]},{"pos":[397101,397102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397221,397230],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[397298,397299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[397349,397355],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[397416,397417]},{"pos":[397470,397474],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[397532,397534],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[397562,397563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397981,397993],"content":"GetMethods()","needQuote":true,"nodes":[{"content":"GetMethods()","pos":[0,12]}]},{"pos":[398130,398140],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[398209,398210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398237,398238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398329,398339],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[398408,398409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398436,398437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398818,398842],"content":"GetMethods(BindingFlags)","needQuote":true,"nodes":[{"content":"GetMethods(BindingFlags)","pos":[0,24]}]},{"pos":[399041,399051],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[399120,399121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399188,399200],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[399277,399278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399401,399411],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[399480,399481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399548,399560],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[399637,399638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400096,400131],"content":"GetNestedType(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetNestedType(String, BindingFlags)","pos":[0,35]}]},{"pos":[400365,400378],"content":"GetNestedType","needQuote":true,"nodes":[{"content":"GetNestedType","pos":[0,13]}]},{"pos":[400450,400451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[400501,400507],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[400568,400569]},{"pos":[400641,400653],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[400730,400731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400871,400884],"content":"GetNestedType","needQuote":true,"nodes":[{"content":"GetNestedType","pos":[0,13]}]},{"pos":[400956,400957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401007,401013],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[401074,401075]},{"pos":[401147,401159],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[401236,401237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401697,401725],"content":"GetNestedTypes(BindingFlags)","needQuote":true,"nodes":[{"content":"GetNestedTypes(BindingFlags)","pos":[0,28]}]},{"pos":[401932,401946],"content":"GetNestedTypes","needQuote":true,"nodes":[{"content":"GetNestedTypes","pos":[0,14]}]},{"pos":[402019,402020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402087,402099],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[402176,402177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402304,402318],"content":"GetNestedTypes","needQuote":true,"nodes":[{"content":"GetNestedTypes","pos":[0,14]}]},{"pos":[402391,402392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402459,402471],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[402548,402549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402924,402939],"content":"GetProperties()","needQuote":true,"nodes":[{"content":"GetProperties()","pos":[0,15]}]},{"pos":[403082,403095],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[403167,403168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[403195,403196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403290,403303],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[403375,403376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[403403,403404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403797,403824],"content":"GetProperties(BindingFlags)","needQuote":true,"nodes":[{"content":"GetProperties(BindingFlags)","pos":[0,27]}]},{"pos":[404029,404042],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[404114,404115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404182,404194],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[404271,404272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404398,404411],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[404483,404484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404551,404563],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[404640,404641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405039,405058],"content":"GetProperty(String)","needQuote":true,"nodes":[{"content":"GetProperty(String)","pos":[0,19]}]},{"pos":[405225,405236],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[405306,405307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405357,405363],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[405423,405424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405531,405542],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[405612,405613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405663,405669],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[405729,405730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406163,406196],"content":"GetProperty(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetProperty(String, BindingFlags)","pos":[0,33]}]},{"pos":[406426,406437],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[406507,406508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406558,406564],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[406625,406626]},{"pos":[406698,406710],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[406787,406788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406926,406937],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[407007,407008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[407058,407064],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[407125,407126]},{"pos":[407198,407210],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[407287,407288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407728,407753],"content":"GetProperty(String, Type)","needQuote":true,"nodes":[{"content":"GetProperty(String, Type)","pos":[0,25]}]},{"pos":[407945,407956],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[408026,408027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408077,408083],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[408144,408145]},{"pos":[408198,408202],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[408260,408261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[408380,408391],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[408461,408462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408512,408518],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[408579,408580]},{"pos":[408633,408637],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[408695,408696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409137,409170],"content":"GetProperty(String, Type, Type[])","needQuote":true,"nodes":[{"content":"GetProperty(String, Type, Type[])","pos":[0,33]}]},{"pos":[409539,409550],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[409620,409621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409671,409677],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[409738,409739]},{"pos":[409792,409796],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[409855,409856]},{"pos":[409909,409913],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[409972,409974]},{"pos":[410005,410006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410139,410150],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[410220,410221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[410271,410277],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[410338,410339]},{"pos":[410392,410396],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[410455,410456]},{"pos":[410509,410513],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[410571,410573],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[410601,410602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411087,411109],"content":"IsAssignableFrom(Type)","needQuote":true,"nodes":[{"content":"IsAssignableFrom(Type)","pos":[0,22]}]},{"pos":[411282,411298],"content":"IsAssignableFrom","needQuote":true,"nodes":[{"content":"IsAssignableFrom","pos":[0,16]}]},{"pos":[411373,411374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411422,411426],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[411484,411485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411595,411611],"content":"IsAssignableFrom","needQuote":true,"nodes":[{"content":"IsAssignableFrom","pos":[0,16]}]},{"pos":[411686,411687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411735,411739],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[411797,411798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412185,412209],"content":"IsInstanceOfType(Object)","needQuote":true,"nodes":[{"content":"IsInstanceOfType(Object)","pos":[0,24]}]},{"pos":[412386,412402],"content":"IsInstanceOfType","needQuote":true,"nodes":[{"content":"IsInstanceOfType","pos":[0,16]}]},{"pos":[412477,412478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412528,412534],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[412594,412595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412707,412723],"content":"IsInstanceOfType","needQuote":true,"nodes":[{"content":"IsInstanceOfType","pos":[0,16]}]},{"pos":[412798,412799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412849,412855],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[412915,412916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413374,413398],"content":"GetCustomAttribute(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Type)","pos":[0,24]}]},{"pos":[413597,413615],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[413703,413704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413752,413756],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[413814,413815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413938,413956],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[414044,414045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414093,414097],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[414155,414156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414683,414716],"content":"GetCustomAttribute(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Type, Boolean)","pos":[0,33]}]},{"pos":[414946,414964],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[415052,415053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415101,415105],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[415164,415165]},{"pos":[415221,415228],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[415289,415290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415428,415446],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[415534,415535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415583,415587],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[415646,415647]},{"pos":[415703,415710],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[415771,415772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416274,416297],"content":"GetCustomAttribute<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;()","pos":[0,23],"source":"GetCustomAttribute<T>()"}]},{"pos":[416602,416623],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[416714,416715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416742,416743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416856,416880],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[416974,416975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[417002,417003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417574,417604],"content":"GetCustomAttribute<T>(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(Boolean)","pos":[0,30],"source":"GetCustomAttribute<T>(Boolean)"}]},{"pos":[417960,417981],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[418072,418073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418124,418131],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[418192,418193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418322,418346],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[418440,418441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418492,418499],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[418560,418561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419126,419147],"content":"GetCustomAttributes()","needQuote":true,"nodes":[{"content":"GetCustomAttributes()","pos":[0,21]}]},{"pos":[419324,419343],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[419432,419433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419460,419461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419572,419591],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[419680,419681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419708,419709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420200,420228],"content":"GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[420435,420454],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[420543,420544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420595,420602],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[420663,420664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420791,420810],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[420899,420900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420951,420958],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[421019,421020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421527,421552],"content":"GetCustomAttributes(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type)","pos":[0,25]}]},{"pos":[421753,421772],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[421861,421862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421910,421914],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[421972,421973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422097,422116],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[422205,422206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422254,422258],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[422316,422317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422848,422882],"content":"GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type, Boolean)","pos":[0,34]}]},{"pos":[423114,423133],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[423222,423223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423271,423275],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[423334,423335]},{"pos":[423391,423398],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[423459,423460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423599,423618],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[423707,423708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423756,423760],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[423819,423820]},{"pos":[423876,423883],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[423944,423945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424451,424475],"content":"GetCustomAttributes<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;()","pos":[0,24],"source":"GetCustomAttributes<T>()"}]},{"pos":[424784,424806],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[424898,424899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424926,424927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425041,425066],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[425161,425162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425189,425190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425766,425797],"content":"GetCustomAttributes<T>(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(Boolean)","pos":[0,31],"source":"GetCustomAttributes<T>(Boolean)"}]},{"pos":[426157,426179],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[426271,426272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426323,426330],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[426391,426392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426522,426547],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[426642,426643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426694,426701],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[426762,426763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427336,427351],"content":"IsDefined(Type)","needQuote":true,"nodes":[{"content":"IsDefined(Type)","pos":[0,15]}]},{"pos":[427532,427541],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[427620,427621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427669,427673],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[427731,427732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427846,427855],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[427934,427935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427983,427987],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[428045,428046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428537,428561],"content":"IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(Type, Boolean)","pos":[0,24]}]},{"pos":[428773,428782],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[428861,428862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428910,428914],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[428973,428974]},{"pos":[429030,429037],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[429098,429099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429228,429237],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[429316,429317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429365,429369],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[429428,429429]},{"pos":[429485,429492],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[429553,429554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430027,430050],"content":"GetRuntimeEvent(String)","needQuote":true,"nodes":[{"content":"GetRuntimeEvent(String)","pos":[0,23]}]},{"pos":[430251,430266],"content":"GetRuntimeEvent","needQuote":true,"nodes":[{"content":"GetRuntimeEvent","pos":[0,15]}]},{"pos":[430353,430354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430404,430410],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[430470,430471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430595,430610],"content":"GetRuntimeEvent","needQuote":true,"nodes":[{"content":"GetRuntimeEvent","pos":[0,15]}]},{"pos":[430697,430698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430748,430754],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[430814,430815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431240,431258],"content":"GetRuntimeEvents()","needQuote":true,"nodes":[{"content":"GetRuntimeEvents()","pos":[0,18]}]},{"pos":[431433,431449],"content":"GetRuntimeEvents","needQuote":true,"nodes":[{"content":"GetRuntimeEvents","pos":[0,16]}]},{"pos":[431537,431538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431565,431566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431676,431692],"content":"GetRuntimeEvents","needQuote":true,"nodes":[{"content":"GetRuntimeEvents","pos":[0,16]}]},{"pos":[431780,431781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431808,431809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432243,432266],"content":"GetRuntimeField(String)","needQuote":true,"nodes":[{"content":"GetRuntimeField(String)","pos":[0,23]}]},{"pos":[432467,432482],"content":"GetRuntimeField","needQuote":true,"nodes":[{"content":"GetRuntimeField","pos":[0,15]}]},{"pos":[432569,432570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432620,432626],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[432686,432687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432811,432826],"content":"GetRuntimeField","needQuote":true,"nodes":[{"content":"GetRuntimeField","pos":[0,15]}]},{"pos":[432913,432914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432964,432970],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[433030,433031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433456,433474],"content":"GetRuntimeFields()","needQuote":true,"nodes":[{"content":"GetRuntimeFields()","pos":[0,18]}]},{"pos":[433649,433665],"content":"GetRuntimeFields","needQuote":true,"nodes":[{"content":"GetRuntimeFields","pos":[0,16]}]},{"pos":[433753,433754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433781,433782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433892,433908],"content":"GetRuntimeFields","needQuote":true,"nodes":[{"content":"GetRuntimeFields","pos":[0,16]}]},{"pos":[433996,433997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434024,434025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434499,434527],"content":"GetRuntimeInterfaceMap(Type)","needQuote":true,"nodes":[{"content":"GetRuntimeInterfaceMap(Type)","pos":[0,28]}]},{"pos":[434738,434760],"content":"GetRuntimeInterfaceMap","needQuote":true,"nodes":[{"content":"GetRuntimeInterfaceMap","pos":[0,22]}]},{"pos":[434854,434855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434903,434907],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[434965,434966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435095,435117],"content":"GetRuntimeInterfaceMap","needQuote":true,"nodes":[{"content":"GetRuntimeInterfaceMap","pos":[0,22]}]},{"pos":[435211,435212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435260,435264],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[435322,435323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435830,435862],"content":"GetRuntimeMethod(String, Type[])","needQuote":true,"nodes":[{"content":"GetRuntimeMethod(String, Type[])","pos":[0,32]}]},{"pos":[436246,436262],"content":"GetRuntimeMethod","needQuote":true,"nodes":[{"content":"GetRuntimeMethod","pos":[0,16]}]},{"pos":[436350,436351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436401,436407],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[436468,436469]},{"pos":[436522,436526],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[436585,436587]},{"pos":[436618,436619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436758,436774],"content":"GetRuntimeMethod","needQuote":true,"nodes":[{"content":"GetRuntimeMethod","pos":[0,16]}]},{"pos":[436862,436863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436913,436919],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[436980,436981]},{"pos":[437034,437038],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[437096,437098],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[437126,437127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437658,437677],"content":"GetRuntimeMethods()","needQuote":true,"nodes":[{"content":"GetRuntimeMethods()","pos":[0,19]}]},{"pos":[437854,437871],"content":"GetRuntimeMethods","needQuote":true,"nodes":[{"content":"GetRuntimeMethods","pos":[0,17]}]},{"pos":[437960,437961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437988,437989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438100,438117],"content":"GetRuntimeMethods","needQuote":true,"nodes":[{"content":"GetRuntimeMethods","pos":[0,17]}]},{"pos":[438206,438207],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438234,438235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438652,438674],"content":"GetRuntimeProperties()","needQuote":true,"nodes":[{"content":"GetRuntimeProperties()","pos":[0,22]}]},{"pos":[438857,438877],"content":"GetRuntimeProperties","needQuote":true,"nodes":[{"content":"GetRuntimeProperties","pos":[0,20]}]},{"pos":[438969,438970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438997,438998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439112,439132],"content":"GetRuntimeProperties","needQuote":true,"nodes":[{"content":"GetRuntimeProperties","pos":[0,20]}]},{"pos":[439224,439225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439252,439253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439701,439727],"content":"GetRuntimeProperty(String)","needQuote":true,"nodes":[{"content":"GetRuntimeProperty(String)","pos":[0,26]}]},{"pos":[439934,439952],"content":"GetRuntimeProperty","needQuote":true,"nodes":[{"content":"GetRuntimeProperty","pos":[0,18]}]},{"pos":[440042,440043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440093,440099],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[440159,440160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440287,440305],"content":"GetRuntimeProperty","needQuote":true,"nodes":[{"content":"GetRuntimeProperty","pos":[0,18]}]},{"pos":[440395,440396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440446,440452],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[440512,440513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440750,440756],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[440874,440891],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[441055,441085],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[441323,441340],"content":"GetTypeInfo(Type)","needQuote":true,"nodes":[{"content":"GetTypeInfo(Type)","pos":[0,17]}]},{"pos":[441521,441532],"content":"GetTypeInfo","needQuote":true,"nodes":[{"content":"GetTypeInfo","pos":[0,11]}]},{"pos":[441611,441612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441660,441664],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[441722,441723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441837,441848],"content":"GetTypeInfo","needQuote":true,"nodes":[{"content":"GetTypeInfo","pos":[0,11]}]},{"pos":[441927,441928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441976,441980],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[442038,442039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442301,442324],"content":"IntrospectionExtensions","needQuote":true,"nodes":[{"content":"IntrospectionExtensions","pos":[0,23]}]},{"pos":[442596,442624],"content":"HasMetadataToken(MemberInfo)","needQuote":true,"nodes":[{"content":"HasMetadataToken(MemberInfo)","pos":[0,28]}]},{"pos":[442843,442859],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[442940,442941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443006,443016],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[443091,443092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443225,443241],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[443322,443323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443388,443398],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[443473,443474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443760,443780],"content":"MemberInfoExtensions","needQuote":true,"nodes":[{"content":"MemberInfoExtensions","pos":[0,20]}]},{"pos":[444043,444071],"content":"GetMetadataToken(MemberInfo)","needQuote":true,"nodes":[{"content":"GetMetadataToken(MemberInfo)","pos":[0,28]}]},{"pos":[444290,444306],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[444387,444388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444453,444463],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[444538,444539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444672,444688],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[444769,444770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444835,444845],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[444920,444921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445214,445242],"content":"GetConstructor(Type, Type[])","needQuote":true,"nodes":[{"content":"GetConstructor(Type, Type[])","pos":[0,28]}]},{"pos":[445571,445585],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[445658,445659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445707,445711],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[445770,445771]},{"pos":[445824,445828],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[445887,445889]},{"pos":[445920,445921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446043,446057],"content":"GetConstructor","needQuote":true,"nodes":[{"content":"GetConstructor","pos":[0,14]}]},{"pos":[446130,446131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446179,446183],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[446242,446243]},{"pos":[446296,446300],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[446358,446360],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[446388,446389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446715,446729],"content":"TypeExtensions","needQuote":true,"nodes":[{"content":"TypeExtensions","pos":[0,14]}]},{"pos":[446950,446971],"content":"GetConstructors(Type)","needQuote":true,"nodes":[{"content":"GetConstructors(Type)","pos":[0,21]}]},{"pos":[447142,447157],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[447231,447232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447280,447284],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[447342,447343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447452,447467],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[447541,447542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447590,447594],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[447652,447653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447927,447962],"content":"GetConstructors(Type, BindingFlags)","needQuote":true,"nodes":[{"content":"GetConstructors(Type, BindingFlags)","pos":[0,35]}]},{"pos":[448196,448211],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[448285,448286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448334,448338],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[448397,448398]},{"pos":[448470,448482],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[448559,448560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448700,448715],"content":"GetConstructors","needQuote":true,"nodes":[{"content":"GetConstructors","pos":[0,15]}]},{"pos":[448789,448790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448838,448842],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[448901,448902]},{"pos":[448974,448986],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[449063,449064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449354,449377],"content":"GetDefaultMembers(Type)","needQuote":true,"nodes":[{"content":"GetDefaultMembers(Type)","pos":[0,23]}]},{"pos":[449552,449569],"content":"GetDefaultMembers","needQuote":true,"nodes":[{"content":"GetDefaultMembers","pos":[0,17]}]},{"pos":[449645,449646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449694,449698],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[449756,449757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449868,449885],"content":"GetDefaultMembers","needQuote":true,"nodes":[{"content":"GetDefaultMembers","pos":[0,17]}]},{"pos":[449961,449962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450010,450014],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[450072,450073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450327,450349],"content":"GetEvent(Type, String)","needQuote":true,"nodes":[{"content":"GetEvent(Type, String)","pos":[0,22]}]},{"pos":[450535,450543],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[450610,450611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450659,450663],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[450722,450723]},{"pos":[450778,450784],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[450844,450845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450961,450969],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[451036,451037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451085,451089],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[451148,451149]},{"pos":[451204,451210],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[451270,451271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451560,451596],"content":"GetEvent(Type, String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetEvent(Type, String, BindingFlags)","pos":[0,36]}]},{"pos":[451845,451853],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[451920,451921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451969,451973],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[452032,452033]},{"pos":[452088,452094],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[452155,452156]},{"pos":[452228,452240],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[452317,452318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452465,452473],"content":"GetEvent","needQuote":true,"nodes":[{"content":"GetEvent","pos":[0,8]}]},{"pos":[452540,452541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452589,452593],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[452652,452653]},{"pos":[452708,452714],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[452775,452776]},{"pos":[452848,452860],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[452937,452938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453228,453243],"content":"GetEvents(Type)","needQuote":true,"nodes":[{"content":"GetEvents(Type)","pos":[0,15]}]},{"pos":[453402,453411],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[453479,453480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453528,453532],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[453590,453591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453694,453703],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[453771,453772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453820,453824],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[453882,453883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454139,454168],"content":"GetEvents(Type, BindingFlags)","needQuote":true,"nodes":[{"content":"GetEvents(Type, BindingFlags)","pos":[0,29]}]},{"pos":[454390,454399],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[454467,454468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454516,454520],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[454579,454580]},{"pos":[454652,454664],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[454741,454742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454876,454885],"content":"GetEvents","needQuote":true,"nodes":[{"content":"GetEvents","pos":[0,9]}]},{"pos":[454953,454954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455002,455006],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[455065,455066]},{"pos":[455138,455150],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[455227,455228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455511,455533],"content":"GetField(Type, String)","needQuote":true,"nodes":[{"content":"GetField(Type, String)","pos":[0,22]}]},{"pos":[455719,455727],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[455794,455795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455843,455847],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[455906,455907]},{"pos":[455962,455968],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[456028,456029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456145,456153],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[456220,456221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456269,456273],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[456332,456333]},{"pos":[456388,456394],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[456454,456455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456744,456780],"content":"GetField(Type, String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetField(Type, String, BindingFlags)","pos":[0,36]}]},{"pos":[457029,457037],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[457104,457105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457153,457157],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[457216,457217]},{"pos":[457272,457278],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[457339,457340]},{"pos":[457412,457424],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[457501,457502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457649,457657],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[457724,457725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457773,457777],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[457836,457837]},{"pos":[457892,457898],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[457959,457960]},{"pos":[458032,458044],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[458121,458122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458412,458427],"content":"GetFields(Type)","needQuote":true,"nodes":[{"content":"GetFields(Type)","pos":[0,15]}]},{"pos":[458586,458595],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[458663,458664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458712,458716],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[458774,458775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458878,458887],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[458955,458956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459004,459008],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[459066,459067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459323,459352],"content":"GetFields(Type, BindingFlags)","needQuote":true,"nodes":[{"content":"GetFields(Type, BindingFlags)","pos":[0,29]}]},{"pos":[459574,459583],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[459651,459652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459700,459704],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[459763,459764]},{"pos":[459836,459848],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[459925,459926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460060,460069],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[460137,460138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460186,460190],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[460249,460250]},{"pos":[460322,460334],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[460411,460412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460692,460717],"content":"GetGenericArguments(Type)","needQuote":true,"nodes":[{"content":"GetGenericArguments(Type)","pos":[0,25]}]},{"pos":[460896,460915],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[460993,460994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461042,461046],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[461104,461105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461218,461237],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[461315,461316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461364,461368],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[461426,461427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461676,461695],"content":"GetInterfaces(Type)","needQuote":true,"nodes":[{"content":"GetInterfaces(Type)","pos":[0,19]}]},{"pos":[461862,461875],"content":"GetInterfaces","needQuote":true,"nodes":[{"content":"GetInterfaces","pos":[0,13]}]},{"pos":[461947,461948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461996,462000],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[462058,462059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462166,462179],"content":"GetInterfaces","needQuote":true,"nodes":[{"content":"GetInterfaces","pos":[0,13]}]},{"pos":[462251,462252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[462300,462304],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[462362,462363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462610,462633],"content":"GetMember(Type, String)","needQuote":true,"nodes":[{"content":"GetMember(Type, String)","pos":[0,23]}]},{"pos":[462821,462830],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[462898,462899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[462947,462951],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[463010,463011]},{"pos":[463066,463072],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[463132,463133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463250,463259],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[463327,463328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463376,463380],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[463439,463440]},{"pos":[463495,463501],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[463561,463562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463854,463891],"content":"GetMember(Type, String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetMember(Type, String, BindingFlags)","pos":[0,37]}]},{"pos":[464142,464151],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[464219,464220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464268,464272],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[464331,464332]},{"pos":[464387,464393],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[464454,464455]},{"pos":[464527,464539],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[464616,464617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464765,464774],"content":"GetMember","needQuote":true,"nodes":[{"content":"GetMember","pos":[0,9]}]},{"pos":[464842,464843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464891,464895],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[464954,464955]},{"pos":[465010,465016],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[465077,465078]},{"pos":[465150,465162],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[465239,465240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465533,465549],"content":"GetMembers(Type)","needQuote":true,"nodes":[{"content":"GetMembers(Type)","pos":[0,16]}]},{"pos":[465710,465720],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[465789,465790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[465838,465842],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[465900,465901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466005,466015],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[466084,466085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466133,466137],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[466195,466196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466455,466485],"content":"GetMembers(Type, BindingFlags)","needQuote":true,"nodes":[{"content":"GetMembers(Type, BindingFlags)","pos":[0,30]}]},{"pos":[466709,466719],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[466788,466789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466837,466841],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[466900,466901]},{"pos":[466973,466985],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[467062,467063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467198,467208],"content":"GetMembers","needQuote":true,"nodes":[{"content":"GetMembers","pos":[0,10]}]},{"pos":[467277,467278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467326,467330],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[467389,467390]},{"pos":[467462,467474],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[467551,467552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467838,467861],"content":"GetMethod(Type, String)","needQuote":true,"nodes":[{"content":"GetMethod(Type, String)","pos":[0,23]}]},{"pos":[468049,468058],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[468126,468127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[468175,468179],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[468238,468239]},{"pos":[468294,468300],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[468360,468361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468478,468487],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[468555,468556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[468604,468608],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[468667,468668]},{"pos":[468723,468729],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[468789,468790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[469082,469119],"content":"GetMethod(Type, String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetMethod(Type, String, BindingFlags)","pos":[0,37]}]},{"pos":[469370,469379],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[469447,469448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469496,469500],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[469559,469560]},{"pos":[469615,469621],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[469682,469683]},{"pos":[469755,469767],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[469844,469845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[469993,470002],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[470070,470071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470119,470123],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[470182,470183]},{"pos":[470238,470244],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[470305,470306]},{"pos":[470378,470390],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[470467,470468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470788,470819],"content":"GetMethod(Type, String, Type[])","needQuote":true,"nodes":[{"content":"GetMethod(Type, String, Type[])","pos":[0,31]}]},{"pos":[471180,471189],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[471257,471258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471306,471310],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[471369,471370]},{"pos":[471425,471431],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[471492,471493]},{"pos":[471546,471550],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[471609,471611]},{"pos":[471642,471643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471774,471783],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[471851,471852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471900,471904],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[471963,471964]},{"pos":[472019,472025],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[472086,472087]},{"pos":[472140,472144],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[472202,472204],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[472232,472233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472569,472585],"content":"GetMethods(Type)","needQuote":true,"nodes":[{"content":"GetMethods(Type)","pos":[0,16]}]},{"pos":[472746,472756],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[472825,472826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[472874,472878],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[472936,472937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473041,473051],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[473120,473121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473169,473173],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[473231,473232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473491,473521],"content":"GetMethods(Type, BindingFlags)","needQuote":true,"nodes":[{"content":"GetMethods(Type, BindingFlags)","pos":[0,30]}]},{"pos":[473745,473755],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[473824,473825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473873,473877],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[473936,473937]},{"pos":[474009,474021],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[474098,474099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474234,474244],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[474313,474314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474362,474366],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[474425,474426]},{"pos":[474498,474510],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[474587,474588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474909,474950],"content":"GetNestedType(Type, String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetNestedType(Type, String, BindingFlags)","pos":[0,41]}]},{"pos":[475209,475222],"content":"GetNestedType","needQuote":true,"nodes":[{"content":"GetNestedType","pos":[0,13]}]},{"pos":[475294,475295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475343,475347],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[475406,475407]},{"pos":[475462,475468],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[475529,475530]},{"pos":[475602,475614],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[475691,475692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475844,475857],"content":"GetNestedType","needQuote":true,"nodes":[{"content":"GetNestedType","pos":[0,13]}]},{"pos":[475929,475930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475978,475982],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[476041,476042]},{"pos":[476097,476103],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[476164,476165]},{"pos":[476237,476249],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[476326,476327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476663,476697],"content":"GetNestedTypes(Type, BindingFlags)","needQuote":true,"nodes":[{"content":"GetNestedTypes(Type, BindingFlags)","pos":[0,34]}]},{"pos":[476929,476943],"content":"GetNestedTypes","needQuote":true,"nodes":[{"content":"GetNestedTypes","pos":[0,14]}]},{"pos":[477016,477017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477065,477069],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[477128,477129]},{"pos":[477201,477213],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[477290,477291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477430,477444],"content":"GetNestedTypes","needQuote":true,"nodes":[{"content":"GetNestedTypes","pos":[0,14]}]},{"pos":[477517,477518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477566,477570],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[477629,477630]},{"pos":[477702,477714],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[477791,477792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478076,478095],"content":"GetProperties(Type)","needQuote":true,"nodes":[{"content":"GetProperties(Type)","pos":[0,19]}]},{"pos":[478262,478275],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[478347,478348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478396,478400],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[478458,478459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478566,478579],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[478651,478652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478700,478704],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[478762,478763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479031,479064],"content":"GetProperties(Type, BindingFlags)","needQuote":true,"nodes":[{"content":"GetProperties(Type, BindingFlags)","pos":[0,33]}]},{"pos":[479294,479307],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[479379,479380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479428,479432],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[479491,479492]},{"pos":[479564,479576],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[479653,479654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479792,479805],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[479877,479878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479926,479930],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[479989,479990]},{"pos":[480062,480074],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[480151,480152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480446,480471],"content":"GetProperty(Type, String)","needQuote":true,"nodes":[{"content":"GetProperty(Type, String)","pos":[0,25]}]},{"pos":[480663,480674],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[480744,480745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480793,480797],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[480856,480857]},{"pos":[480912,480918],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[480978,480979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481098,481109],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[481179,481180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481228,481232],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[481291,481292]},{"pos":[481347,481353],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[481413,481414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481712,481751],"content":"GetProperty(Type, String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetProperty(Type, String, BindingFlags)","pos":[0,39]}]},{"pos":[482006,482017],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[482087,482088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482136,482140],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[482199,482200]},{"pos":[482255,482261],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[482322,482323]},{"pos":[482395,482407],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[482484,482485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482635,482646],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[482716,482717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482765,482769],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[482828,482829]},{"pos":[482884,482890],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[482951,482952]},{"pos":[483024,483036],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[483113,483114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483438,483469],"content":"GetProperty(Type, String, Type)","needQuote":true,"nodes":[{"content":"GetProperty(Type, String, Type)","pos":[0,31]}]},{"pos":[483686,483697],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[483767,483768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483816,483820],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[483879,483880]},{"pos":[483935,483941],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[484002,484003]},{"pos":[484056,484060],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[484118,484119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484250,484261],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[484331,484332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484380,484384],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[484443,484444]},{"pos":[484499,484505],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[484566,484567]},{"pos":[484620,484624],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[484682,484683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484994,485033],"content":"GetProperty(Type, String, Type, Type[])","needQuote":true,"nodes":[{"content":"GetProperty(Type, String, Type, Type[])","pos":[0,39]}]},{"pos":[485446,485457],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[485527,485528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485576,485580],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[485639,485640]},{"pos":[485695,485701],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[485762,485763]},{"pos":[485816,485820],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[485879,485880]},{"pos":[485933,485937],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[485996,485998]},{"pos":[486029,486030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486175,486186],"content":"GetProperty","needQuote":true,"nodes":[{"content":"GetProperty","pos":[0,11]}]},{"pos":[486256,486257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486305,486309],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[486368,486369]},{"pos":[486424,486430],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[486491,486492]},{"pos":[486545,486549],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[486608,486609]},{"pos":[486662,486666],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[486724,486726],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[486754,486755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487139,487167],"content":"IsAssignableFrom(Type, Type)","needQuote":true,"nodes":[{"content":"IsAssignableFrom(Type, Type)","pos":[0,28]}]},{"pos":[487365,487381],"content":"IsAssignableFrom","needQuote":true,"nodes":[{"content":"IsAssignableFrom","pos":[0,16]}]},{"pos":[487456,487457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487505,487509],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[487568,487569]},{"pos":[487622,487626],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[487684,487685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487807,487823],"content":"IsAssignableFrom","needQuote":true,"nodes":[{"content":"IsAssignableFrom","pos":[0,16]}]},{"pos":[487898,487899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487947,487951],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[488010,488011]},{"pos":[488064,488068],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[488126,488127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488405,488435],"content":"IsInstanceOfType(Type, Object)","needQuote":true,"nodes":[{"content":"IsInstanceOfType(Type, Object)","pos":[0,30]}]},{"pos":[488637,488653],"content":"IsInstanceOfType","needQuote":true,"nodes":[{"content":"IsInstanceOfType","pos":[0,16]}]},{"pos":[488728,488729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488777,488781],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[488840,488841]},{"pos":[488896,488902],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[488962,488963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489087,489103],"content":"IsInstanceOfType","needQuote":true,"nodes":[{"content":"IsInstanceOfType","pos":[0,16]}]},{"pos":[489178,489179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489227,489231],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[489290,489291]},{"pos":[489346,489352],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[489412,489413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489723,489759],"content":"GetCustomAttribute(MemberInfo, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(MemberInfo, Type)","pos":[0,36]}]},{"pos":[490017,490035],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[490123,490124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490189,490199],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[490275,490276]},{"pos":[490329,490333],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[490391,490392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490544,490562],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[490650,490651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490716,490726],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[490802,490803]},{"pos":[490856,490860],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[490918,490919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491242,491267],"content":"CustomAttributeExtensions","needQuote":true,"nodes":[{"content":"CustomAttributeExtensions","pos":[0,25]}]},{"pos":[491579,491624],"content":"GetCustomAttribute(MemberInfo, Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(MemberInfo, Type, Boolean)","pos":[0,45]}]},{"pos":[491913,491931],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[492019,492020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492085,492095],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[492171,492172]},{"pos":[492225,492229],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[492288,492289]},{"pos":[492345,492352],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[492413,492414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492581,492599],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[492687,492688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492753,492763],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[492839,492840]},{"pos":[492893,492897],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[492956,492957]},{"pos":[493013,493020],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[493081,493082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493452,493485],"content":"GetCustomAttribute<T>(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(MemberInfo)","pos":[0,33],"source":"GetCustomAttribute<T>(MemberInfo)"}]},{"pos":[493886,493907],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[493998,493999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494064,494074],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[494149,494150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494293,494317],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[494411,494412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494477,494487],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[494562,494563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494994,495036],"content":"GetCustomAttribute<T>(MemberInfo, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(MemberInfo, Boolean)","pos":[0,42],"source":"GetCustomAttribute<T>(MemberInfo, Boolean)"}]},{"pos":[495493,495514],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[495605,495606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495671,495681],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[495757,495758]},{"pos":[495814,495821],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[495882,495883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496041,496065],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[496159,496160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496225,496235],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[496311,496312]},{"pos":[496368,496375],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[496436,496437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496884,496915],"content":"GetCustomAttributes(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo)","pos":[0,31]}]},{"pos":[497150,497169],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[497258,497259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497324,497334],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[497409,497410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497551,497570],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[497659,497660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497725,497735],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[497810,497811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498154,498194],"content":"GetCustomAttributes(MemberInfo, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, Boolean)","pos":[0,40]}]},{"pos":[498460,498479],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[498568,498569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498634,498644],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[498720,498721]},{"pos":[498777,498784],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[498845,498846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499002,499021],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[499110,499111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499176,499186],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[499262,499263]},{"pos":[499319,499326],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[499387,499388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499752,499789],"content":"GetCustomAttributes(MemberInfo, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, Type)","pos":[0,37]}]},{"pos":[500049,500068],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[500157,500158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500223,500233],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[500309,500310]},{"pos":[500363,500367],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[500425,500426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500579,500598],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[500687,500688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500753,500763],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[500839,500840]},{"pos":[500893,500897],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[500955,500956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501329,501375],"content":"GetCustomAttributes(MemberInfo, Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, Type, Boolean)","pos":[0,46]}]},{"pos":[501666,501685],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[501774,501775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501840,501850],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[501926,501927]},{"pos":[501980,501984],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[502043,502044]},{"pos":[502100,502107],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[502168,502169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502337,502356],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[502445,502446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502511,502521],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[502597,502598]},{"pos":[502651,502655],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[502714,502715]},{"pos":[502771,502778],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[502839,502840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503213,503247],"content":"GetCustomAttributes<T>(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(MemberInfo)","pos":[0,34],"source":"GetCustomAttributes<T>(MemberInfo)"}]},{"pos":[503652,503674],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[503766,503767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503832,503842],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[503917,503918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504062,504087],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[504182,504183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504248,504258],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[504333,504334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504769,504812],"content":"GetCustomAttributes<T>(MemberInfo, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(MemberInfo, Boolean)","pos":[0,43],"source":"GetCustomAttributes<T>(MemberInfo, Boolean)"}]},{"pos":[505273,505295],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[505387,505388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505453,505463],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[505539,505540]},{"pos":[505596,505603],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[505664,505665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505824,505849],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[505944,505945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506010,506020],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[506096,506097]},{"pos":[506153,506160],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[506221,506222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506674,506701],"content":"IsDefined(MemberInfo, Type)","needQuote":true,"nodes":[{"content":"IsDefined(MemberInfo, Type)","pos":[0,27]}]},{"pos":[506941,506950],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[507029,507030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507095,507105],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[507181,507182]},{"pos":[507235,507239],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[507297,507298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507441,507450],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[507529,507530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507595,507605],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[507681,507682]},{"pos":[507735,507739],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[507797,507798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508141,508177],"content":"IsDefined(MemberInfo, Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(MemberInfo, Type, Boolean)","pos":[0,36]}]},{"pos":[508448,508457],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[508536,508537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508602,508612],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[508688,508689]},{"pos":[508742,508746],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[508805,508806]},{"pos":[508862,508869],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[508930,508931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509089,509098],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[509177,509178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509243,509253],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[509329,509330]},{"pos":[509383,509387],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[509446,509447]},{"pos":[509503,509510],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[509571,509572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509917,509946],"content":"GetRuntimeEvent(Type, String)","needQuote":true,"nodes":[{"content":"GetRuntimeEvent(Type, String)","pos":[0,29]}]},{"pos":[510172,510187],"content":"GetRuntimeEvent","needQuote":true,"nodes":[{"content":"GetRuntimeEvent","pos":[0,15]}]},{"pos":[510274,510275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510323,510327],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[510386,510387]},{"pos":[510442,510448],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[510508,510509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510645,510660],"content":"GetRuntimeEvent","needQuote":true,"nodes":[{"content":"GetRuntimeEvent","pos":[0,15]}]},{"pos":[510747,510748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510796,510800],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[510859,510860]},{"pos":[510915,510921],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[510981,510982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511286,511313],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[511587,511609],"content":"GetRuntimeEvents(Type)","needQuote":true,"nodes":[{"content":"GetRuntimeEvents(Type)","pos":[0,22]}]},{"pos":[511808,511824],"content":"GetRuntimeEvents","needQuote":true,"nodes":[{"content":"GetRuntimeEvents","pos":[0,16]}]},{"pos":[511912,511913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511961,511965],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[512023,512024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512147,512163],"content":"GetRuntimeEvents","needQuote":true,"nodes":[{"content":"GetRuntimeEvents","pos":[0,16]}]},{"pos":[512251,512252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512300,512304],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[512362,512363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512661,512690],"content":"GetRuntimeField(Type, String)","needQuote":true,"nodes":[{"content":"GetRuntimeField(Type, String)","pos":[0,29]}]},{"pos":[512916,512931],"content":"GetRuntimeField","needQuote":true,"nodes":[{"content":"GetRuntimeField","pos":[0,15]}]},{"pos":[513018,513019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513067,513071],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[513130,513131]},{"pos":[513186,513192],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[513252,513253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513389,513404],"content":"GetRuntimeField","needQuote":true,"nodes":[{"content":"GetRuntimeField","pos":[0,15]}]},{"pos":[513491,513492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513540,513544],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[513603,513604]},{"pos":[513659,513665],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[513725,513726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514031,514053],"content":"GetRuntimeFields(Type)","needQuote":true,"nodes":[{"content":"GetRuntimeFields(Type)","pos":[0,22]}]},{"pos":[514252,514268],"content":"GetRuntimeFields","needQuote":true,"nodes":[{"content":"GetRuntimeFields","pos":[0,16]}]},{"pos":[514356,514357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514405,514409],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[514467,514468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514591,514607],"content":"GetRuntimeFields","needQuote":true,"nodes":[{"content":"GetRuntimeFields","pos":[0,16]}]},{"pos":[514695,514696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514744,514748],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[514806,514807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515125,515163],"content":"GetRuntimeInterfaceMap(TypeInfo, Type)","needQuote":true,"nodes":[{"content":"GetRuntimeInterfaceMap(TypeInfo, Type)","pos":[0,38]}]},{"pos":[515429,515451],"content":"GetRuntimeInterfaceMap","needQuote":true,"nodes":[{"content":"GetRuntimeInterfaceMap","pos":[0,22]}]},{"pos":[515545,515546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515609,515617],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"content":",","pos":[515691,515692]},{"pos":[515745,515749],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[515807,515808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515964,515986],"content":"GetRuntimeInterfaceMap","needQuote":true,"nodes":[{"content":"GetRuntimeInterfaceMap","pos":[0,22]}]},{"pos":[516080,516081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516144,516152],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"content":",","pos":[516226,516227]},{"pos":[516280,516284],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[516342,516343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516705,516743],"content":"GetRuntimeMethod(Type, String, Type[])","needQuote":true,"nodes":[{"content":"GetRuntimeMethod(Type, String, Type[])","pos":[0,38]}]},{"pos":[517171,517187],"content":"GetRuntimeMethod","needQuote":true,"nodes":[{"content":"GetRuntimeMethod","pos":[0,16]}]},{"pos":[517275,517276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517324,517328],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[517387,517388]},{"pos":[517443,517449],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[517510,517511]},{"pos":[517564,517568],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[517627,517629]},{"pos":[517660,517661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517812,517828],"content":"GetRuntimeMethod","needQuote":true,"nodes":[{"content":"GetRuntimeMethod","pos":[0,16]}]},{"pos":[517916,517917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517965,517969],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[518028,518029]},{"pos":[518084,518090],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[518151,518152]},{"pos":[518205,518209],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[518267,518269],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[518297,518298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518714,518737],"content":"GetRuntimeMethods(Type)","needQuote":true,"nodes":[{"content":"GetRuntimeMethods(Type)","pos":[0,23]}]},{"pos":[518938,518955],"content":"GetRuntimeMethods","needQuote":true,"nodes":[{"content":"GetRuntimeMethods","pos":[0,17]}]},{"pos":[519044,519045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519093,519097],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[519155,519156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519280,519297],"content":"GetRuntimeMethods","needQuote":true,"nodes":[{"content":"GetRuntimeMethods","pos":[0,17]}]},{"pos":[519386,519387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519435,519439],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[519497,519498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519789,519815],"content":"GetRuntimeProperties(Type)","needQuote":true,"nodes":[{"content":"GetRuntimeProperties(Type)","pos":[0,26]}]},{"pos":[520022,520042],"content":"GetRuntimeProperties","needQuote":true,"nodes":[{"content":"GetRuntimeProperties","pos":[0,20]}]},{"pos":[520134,520135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520183,520187],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[520245,520246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520373,520393],"content":"GetRuntimeProperties","needQuote":true,"nodes":[{"content":"GetRuntimeProperties","pos":[0,20]}]},{"pos":[520485,520486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520534,520538],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[520596,520597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520906,520938],"content":"GetRuntimeProperty(Type, String)","needQuote":true,"nodes":[{"content":"GetRuntimeProperty(Type, String)","pos":[0,32]}]},{"pos":[521170,521188],"content":"GetRuntimeProperty","needQuote":true,"nodes":[{"content":"GetRuntimeProperty","pos":[0,18]}]},{"pos":[521278,521279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521327,521331],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[521390,521391]},{"pos":[521446,521452],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[521512,521513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521652,521670],"content":"GetRuntimeProperty","needQuote":true,"nodes":[{"content":"GetRuntimeProperty","pos":[0,18]}]},{"pos":[521760,521761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521809,521813],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[521872,521873]},{"pos":[521928,521934],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[521994,521995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522261,522266],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[522432,522453],"content":"AssemblyQualifiedName","needQuote":true,"nodes":[{"content":"AssemblyQualifiedName","pos":[0,21]}]},{"pos":[522658,522664],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[522820,522828],"content":"FullName","needQuote":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"pos":[523015,523033],"content":"IsGenericParameter","needQuote":true,"nodes":[{"content":"IsGenericParameter","pos":[0,18]}]},{"pos":[523230,523237],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[523427,523431],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[523662,523673],"content":"PackingSize","needQuote":true,"nodes":[{"content":"PackingSize","pos":[0,11]}]},{"pos":[523897,523913],"content":"MethodAttributes","needQuote":true,"nodes":[{"content":"MethodAttributes","pos":[0,16]}]},{"pos":[524144,524162],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[524328,524334],"content":"Type[]","needQuote":true,"nodes":[{"content":"Type[]","pos":[0,6]}]},{"pos":[524454,524458],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[524496,524498]},{"pos":[524561,524565],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[524602,524604],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[524781,524799],"content":"ConstructorBuilder","needQuote":true,"nodes":[{"content":"ConstructorBuilder","pos":[0,18]}]},{"pos":[524977,524985],"content":"Type[][]","needQuote":true,"nodes":[{"content":"Type[][]","pos":[0,8]}]},{"pos":[525111,525115],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[525174,525176]},{"content":"[]","pos":[525208,525210]},{"pos":[525273,525277],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[525335,525337],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[525365,525367],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[525535,525550],"content":"EventAttributes","needQuote":true,"nodes":[{"content":"EventAttributes","pos":[0,15]}]},{"pos":[525782,525794],"content":"EventBuilder","needQuote":true,"nodes":[{"content":"EventBuilder","pos":[0,12]}]},{"pos":[526020,526035],"content":"FieldAttributes","needQuote":true,"nodes":[{"content":"FieldAttributes","pos":[0,15]}]},{"pos":[526267,526279],"content":"FieldBuilder","needQuote":true,"nodes":[{"content":"FieldBuilder","pos":[0,12]}]},{"pos":[526439,526447],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[526575,526581],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[526642,526644]},{"pos":[526709,526715],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[526775,526777],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[526916,526945],"content":"GenericTypeParameterBuilder[]","needQuote":true,"nodes":[{"content":"GenericTypeParameterBuilder[]","pos":[0,29]}]},{"pos":[527205,527232],"content":"GenericTypeParameterBuilder","needQuote":true,"nodes":[{"content":"GenericTypeParameterBuilder","pos":[0,27]}]},{"content":"[]","pos":[527309,527311]},{"pos":[527413,527440],"content":"GenericTypeParameterBuilder","needQuote":true,"nodes":[{"content":"GenericTypeParameterBuilder","pos":[0,27]}]},{"pos":[527516,527518],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[527660,527666],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[527786,527790],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[527849,527851]},{"pos":[527914,527918],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[527976,527978],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[528150,528163],"content":"MethodBuilder","needQuote":true,"nodes":[{"content":"MethodBuilder","pos":[0,13]}]},{"pos":[528387,528397],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[528613,528624],"content":"TypeBuilder","needQuote":true,"nodes":[{"content":"TypeBuilder","pos":[0,11]}]},{"pos":[528846,528860],"content":"TypeAttributes","needQuote":true,"nodes":[{"content":"TypeAttributes","pos":[0,14]}]},{"pos":[529085,529103],"content":"PropertyAttributes","needQuote":true,"nodes":[{"content":"PropertyAttributes","pos":[0,18]}]},{"pos":[529347,529362],"content":"PropertyBuilder","needQuote":true,"nodes":[{"content":"PropertyBuilder","pos":[0,15]}]},{"pos":[529597,529612],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[529831,529840],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[530043,530069],"content":"GetGenericTypeDefinition()","needQuote":true,"nodes":[{"content":"GetGenericTypeDefinition()","pos":[0,26]}]},{"pos":[530192,530216],"content":"GetGenericTypeDefinition","needQuote":true,"nodes":[{"content":"GetGenericTypeDefinition","pos":[0,24]}]},{"pos":[530299,530300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530327,530328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530412,530436],"content":"GetGenericTypeDefinition","needQuote":true,"nodes":[{"content":"GetGenericTypeDefinition","pos":[0,24]}]},{"pos":[530519,530520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530547,530548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530808,530834],"content":"IsAssignableFrom(TypeInfo)","needQuote":true,"nodes":[{"content":"IsAssignableFrom(TypeInfo)","pos":[0,26]}]},{"pos":[531025,531041],"content":"IsAssignableFrom","needQuote":true,"nodes":[{"content":"IsAssignableFrom","pos":[0,16]}]},{"pos":[531131,531132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531195,531203],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[531276,531277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531396,531412],"content":"IsAssignableFrom","needQuote":true,"nodes":[{"content":"IsAssignableFrom","pos":[0,16]}]},{"pos":[531502,531503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531566,531574],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[531647,531648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531886,531901],"content":"MakeArrayType()","needQuote":true,"nodes":[{"content":"MakeArrayType()","pos":[0,15]}]},{"pos":[532002,532015],"content":"MakeArrayType","needQuote":true,"nodes":[{"content":"MakeArrayType","pos":[0,13]}]},{"pos":[532087,532088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532115,532116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532189,532202],"content":"MakeArrayType","needQuote":true,"nodes":[{"content":"MakeArrayType","pos":[0,13]}]},{"pos":[532274,532275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532302,532303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532494,532514],"content":"MakeArrayType(Int32)","needQuote":true,"nodes":[{"content":"MakeArrayType(Int32)","pos":[0,20]}]},{"pos":[532641,532654],"content":"MakeArrayType","needQuote":true,"nodes":[{"content":"MakeArrayType","pos":[0,13]}]},{"pos":[532726,532727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532776,532781],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[532840,532841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532928,532941],"content":"MakeArrayType","needQuote":true,"nodes":[{"content":"MakeArrayType","pos":[0,13]}]},{"pos":[533013,533014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533063,533068],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[533127,533128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533324,533339],"content":"MakeByRefType()","needQuote":true,"nodes":[{"content":"MakeByRefType()","pos":[0,15]}]},{"pos":[533440,533453],"content":"MakeByRefType","needQuote":true,"nodes":[{"content":"MakeByRefType","pos":[0,13]}]},{"pos":[533525,533526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533553,533554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533627,533640],"content":"MakeByRefType","needQuote":true,"nodes":[{"content":"MakeByRefType","pos":[0,13]}]},{"pos":[533712,533713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533740,533741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533935,533958],"content":"MakeGenericType(Type[])","needQuote":true,"nodes":[{"content":"MakeGenericType(Type[])","pos":[0,23]}]},{"pos":[534184,534199],"content":"MakeGenericType","needQuote":true,"nodes":[{"content":"MakeGenericType","pos":[0,15]}]},{"pos":[534273,534274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534322,534326],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[534385,534387]},{"pos":[534418,534419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534509,534524],"content":"MakeGenericType","needQuote":true,"nodes":[{"content":"MakeGenericType","pos":[0,15]}]},{"pos":[534598,534599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534647,534651],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[534709,534711],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[534739,534740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534992,535009],"content":"MakePointerType()","needQuote":true,"nodes":[{"content":"MakePointerType()","pos":[0,17]}]},{"pos":[535114,535129],"content":"MakePointerType","needQuote":true,"nodes":[{"content":"MakePointerType","pos":[0,15]}]},{"pos":[535203,535204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535231,535232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535307,535322],"content":"MakePointerType","needQuote":true,"nodes":[{"content":"MakePointerType","pos":[0,15]}]},{"pos":[535396,535397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535424,535425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535638,535660],"content":"CustomAttributeBuilder","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder","pos":[0,22]}]},{"pos":[535896,535906],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[535997,536005],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[536072,536073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536100,536101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536169,536177],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[536244,536245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536272,536273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536435,536443],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[536633,536641],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[536825,536833],"content":"BaseType","needQuote":true,"nodes":[{"content":"BaseType","pos":[0,8]}]},{"pos":[537017,537032],"content":"DeclaringMethod","needQuote":true,"nodes":[{"content":"DeclaringMethod","pos":[0,15]}]},{"pos":[537245,537255],"content":"MethodBase","needQuote":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[537463,537489],"content":"GenericParameterAttributes","needQuote":true,"nodes":[{"content":"GenericParameterAttributes","pos":[0,26]}]},{"pos":[537751,537777],"content":"GenericParameterAttributes","needQuote":true,"nodes":[{"content":"GenericParameterAttributes","pos":[0,26]}]},{"pos":[538013,538019],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[538201,538207],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[538389,538403],"content":"GetArrayRank()","needQuote":true,"nodes":[{"content":"GetArrayRank()","pos":[0,14]}]},{"pos":[538502,538514],"content":"GetArrayRank","needQuote":true,"nodes":[{"content":"GetArrayRank","pos":[0,12]}]},{"pos":[538585,538586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538613,538614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538686,538698],"content":"GetArrayRank","needQuote":true,"nodes":[{"content":"GetArrayRank","pos":[0,12]}]},{"pos":[538769,538770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538797,538798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538974,538990],"content":"GetElementType()","needQuote":true,"nodes":[{"content":"GetElementType()","pos":[0,16]}]},{"pos":[539093,539107],"content":"GetElementType","needQuote":true,"nodes":[{"content":"GetElementType","pos":[0,14]}]},{"pos":[539180,539181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539208,539209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539283,539297],"content":"GetElementType","needQuote":true,"nodes":[{"content":"GetElementType","pos":[0,14]}]},{"pos":[539370,539371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539398,539399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539595,539627],"content":"GetGenericParameterConstraints()","needQuote":true,"nodes":[{"content":"GetGenericParameterConstraints()","pos":[0,32]}]},{"pos":[539762,539792],"content":"GetGenericParameterConstraints","needQuote":true,"nodes":[{"content":"GetGenericParameterConstraints","pos":[0,30]}]},{"pos":[539881,539882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539909,539910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540000,540030],"content":"GetGenericParameterConstraints","needQuote":true,"nodes":[{"content":"GetGenericParameterConstraints","pos":[0,30]}]},{"pos":[540119,540120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540147,540148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540366,540386],"content":"GenericTypeArguments","needQuote":true,"nodes":[{"content":"GenericTypeArguments","pos":[0,20]}]},{"pos":[540616,540641],"content":"ContainsGenericParameters","needQuote":true,"nodes":[{"content":"ContainsGenericParameters","pos":[0,25]}]},{"pos":[540885,540909],"content":"GenericParameterPosition","needQuote":true,"nodes":[{"content":"GenericParameterPosition","pos":[0,24]}]},{"pos":[541130,541134],"content":"GUID","needQuote":true,"nodes":[{"content":"GUID","pos":[0,4]}]},{"pos":[541286,541290],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[541438,541444],"content":"IsEnum","needQuote":true,"nodes":[{"content":"IsEnum","pos":[0,6]}]},{"pos":[541620,541633],"content":"IsGenericType","needQuote":true,"nodes":[{"content":"IsGenericType","pos":[0,13]}]},{"pos":[541840,541863],"content":"IsGenericTypeDefinition","needQuote":true,"nodes":[{"content":"IsGenericTypeDefinition","pos":[0,23]}]},{"pos":[542091,542105],"content":"IsSerializable","needQuote":true,"nodes":[{"content":"IsSerializable","pos":[0,14]}]},{"pos":[542301,542310],"content":"Namespace","needQuote":true,"nodes":[{"content":"Namespace","pos":[0,9]}]},{"pos":[542495,542508],"content":"DeclaringType","needQuote":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"pos":[542687,542708],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[542917,542942],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[543155,543172],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[543365,543386],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[543577,543601],"content":"IndexOutOfRangeException","needQuote":true,"nodes":[{"content":"IndexOutOfRangeException","pos":[0,24]}]}],"content":"items:\n- uid: System.Reflection.Emit.TypeBuilder\n  commentId: T:System.Reflection.Emit.TypeBuilder\n  id: TypeBuilder\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)\n  - System.Reflection.Emit.TypeBuilder.Assembly\n  - System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName\n  - System.Reflection.Emit.TypeBuilder.Attributes\n  - System.Reflection.Emit.TypeBuilder.BaseType\n  - System.Reflection.Emit.TypeBuilder.ContainsGenericParameters\n  - System.Reflection.Emit.TypeBuilder.CreateTypeInfo\n  - System.Reflection.Emit.TypeBuilder.DeclaringMethod\n  - System.Reflection.Emit.TypeBuilder.DeclaringType\n  - System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])\n  - System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)\n  - System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)\n  - System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)\n  - System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)\n  - System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])\n  - System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)\n  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)\n  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  - System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)\n  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)\n  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)\n  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)\n  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])\n  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.TypeBuilder.DefineTypeInitializer\n  - System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  - System.Reflection.Emit.TypeBuilder.FullName\n  - System.Reflection.Emit.TypeBuilder.GenericParameterAttributes\n  - System.Reflection.Emit.TypeBuilder.GenericParameterPosition\n  - System.Reflection.Emit.TypeBuilder.GenericTypeArguments\n  - System.Reflection.Emit.TypeBuilder.GetArrayRank\n  - System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)\n  - System.Reflection.Emit.TypeBuilder.GetElementType\n  - System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)\n  - System.Reflection.Emit.TypeBuilder.GetGenericParameterConstraints\n  - System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition\n  - System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)\n  - System.Reflection.Emit.TypeBuilder.GUID\n  - System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)\n  - System.Reflection.Emit.TypeBuilder.IsCreated\n  - System.Reflection.Emit.TypeBuilder.IsEnum\n  - System.Reflection.Emit.TypeBuilder.IsGenericParameter\n  - System.Reflection.Emit.TypeBuilder.IsGenericType\n  - System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\n  - System.Reflection.Emit.TypeBuilder.IsSerializable\n  - System.Reflection.Emit.TypeBuilder.MakeArrayType\n  - System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)\n  - System.Reflection.Emit.TypeBuilder.MakeByRefType\n  - System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n  - System.Reflection.Emit.TypeBuilder.MakePointerType\n  - System.Reflection.Emit.TypeBuilder.Module\n  - System.Reflection.Emit.TypeBuilder.Name\n  - System.Reflection.Emit.TypeBuilder.Namespace\n  - System.Reflection.Emit.TypeBuilder.PackingSize\n  - System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  - System.Reflection.Emit.TypeBuilder.SetParent(System.Type)\n  - System.Reflection.Emit.TypeBuilder.Size\n  - System.Reflection.Emit.TypeBuilder.ToString\n  - System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize\n  langs:\n  - csharp\n  - vb\n  name: TypeBuilder\n  fullName: System.Reflection.Emit.TypeBuilder\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TypeBuilder\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 37\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines and creates new instances of classes during run time.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(MayLeakOnAbort = true)]\n\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_TypeBuilder))]\n\n      [ComVisible(true)]\n\n      public sealed class TypeBuilder : TypeInfo, ICustomAttributeProvider, _MemberInfo, _Type, IReflect, IReflectableType, _TypeBuilder\n    content.vb: >-\n      <HostProtection(MayLeakOnAbort:=True)>\n\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_TypeBuilder))>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class TypeBuilder\n          Inherits TypeInfo\n          Implements ICustomAttributeProvider, _MemberInfo, _Type, IReflect, IReflectableType, _TypeBuilder\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Type\n  - System.Reflection.TypeInfo\n  implements:\n  - System.Reflection.ICustomAttributeProvider\n  - System.Runtime.InteropServices._MemberInfo\n  - System.Runtime.InteropServices._Type\n  - System.Reflection.IReflect\n  - System.Reflection.IReflectableType\n  inheritedMembers:\n  - System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  - System.Reflection.TypeInfo.AsType\n  - System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  - System.Reflection.TypeInfo.GenericTypeParameters\n  - System.Reflection.TypeInfo.DeclaredConstructors\n  - System.Reflection.TypeInfo.DeclaredEvents\n  - System.Reflection.TypeInfo.DeclaredFields\n  - System.Reflection.TypeInfo.DeclaredMembers\n  - System.Reflection.TypeInfo.DeclaredMethods\n  - System.Reflection.TypeInfo.DeclaredNestedTypes\n  - System.Reflection.TypeInfo.DeclaredProperties\n  - System.Reflection.TypeInfo.ImplementedInterfaces\n  - System.Type.FilterAttribute\n  - System.Type.FilterName\n  - System.Type.FilterNameIgnoreCase\n  - System.Type.Missing\n  - System.Type.Delimiter\n  - System.Type.EmptyTypes\n  - System.Type.GetType(System.String,System.Boolean,System.Boolean)\n  - System.Type.GetType(System.String,System.Boolean)\n  - System.Type.GetType(System.String)\n  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})\n  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)\n  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)\n  - System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  - System.Type.GetTypeFromProgID(System.String)\n  - System.Type.GetTypeFromProgID(System.String,System.Boolean)\n  - System.Type.GetTypeFromProgID(System.String,System.String)\n  - System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)\n  - System.Type.GetTypeFromCLSID(System.Guid)\n  - System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)\n  - System.Type.GetTypeFromCLSID(System.Guid,System.String)\n  - System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)\n  - System.Type.GetTypeCode(System.Type)\n  - System.Type.GetTypeCodeImpl\n  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n  - System.Type.GetTypeHandle(System.Object)\n  - System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)\n  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetConstructor(System.Type[])\n  - System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetConstructors\n  - System.Type.GetConstructors(System.Reflection.BindingFlags)\n  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethod(System.String,System.Type[])\n  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetMethod(System.String)\n  - System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethods\n  - System.Type.GetMethods(System.Reflection.BindingFlags)\n  - System.Type.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetField(System.String)\n  - System.Type.GetFields\n  - System.Type.GetFields(System.Reflection.BindingFlags)\n  - System.Type.GetInterface(System.String)\n  - System.Type.GetInterface(System.String,System.Boolean)\n  - System.Type.GetInterfaces\n  - System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  - System.Type.GetEvent(System.String)\n  - System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetEvents\n  - System.Type.GetEvents(System.Reflection.BindingFlags)\n  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetProperty(System.String,System.Type,System.Type[])\n  - System.Type.GetProperty(System.String,System.Type[])\n  - System.Type.GetProperty(System.String,System.Type)\n  - System.Type.GetProperty(System.String)\n  - System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetProperties(System.Reflection.BindingFlags)\n  - System.Type.GetProperties\n  - System.Type.GetNestedTypes\n  - System.Type.GetNestedTypes(System.Reflection.BindingFlags)\n  - System.Type.GetNestedType(System.String)\n  - System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetMember(System.String)\n  - System.Type.GetMember(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  - System.Type.GetMembers\n  - System.Type.GetMembers(System.Reflection.BindingFlags)\n  - System.Type.GetDefaultMembers\n  - System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  - System.Type.IsValueTypeImpl\n  - System.Type.GetAttributeFlagsImpl\n  - System.Type.IsArrayImpl\n  - System.Type.IsByRefImpl\n  - System.Type.IsPointerImpl\n  - System.Type.IsPrimitiveImpl\n  - System.Type.IsCOMObjectImpl\n  - System.Type.IsContextfulImpl\n  - System.Type.IsMarshalByRefImpl\n  - System.Type.GetGenericArguments\n  - System.Type.HasElementTypeImpl\n  - System.Type.GetEnumNames\n  - System.Type.GetEnumValues\n  - System.Type.GetEnumUnderlyingType\n  - System.Type.IsEnumDefined(System.Object)\n  - System.Type.GetEnumName(System.Object)\n  - System.Type.IsSubclassOf(System.Type)\n  - System.Type.IsInstanceOfType(System.Object)\n  - System.Type.IsAssignableFrom(System.Type)\n  - System.Type.IsEquivalentTo(System.Type)\n  - System.Type.GetTypeArray(System.Object[])\n  - System.Type.Equals(System.Object)\n  - System.Type.Equals(System.Type)\n  - System.Type.GetHashCode\n  - System.Type.GetInterfaceMap(System.Type)\n  - System.Type.GetType\n  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)\n  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Type.MemberType\n  - System.Type.ReflectedType\n  - System.Type.StructLayoutAttribute\n  - System.Type.DefaultBinder\n  - System.Type.TypeHandle\n  - System.Type.TypeInitializer\n  - System.Type.IsNested\n  - System.Type.IsVisible\n  - System.Type.IsNotPublic\n  - System.Type.IsPublic\n  - System.Type.IsNestedPublic\n  - System.Type.IsNestedPrivate\n  - System.Type.IsNestedFamily\n  - System.Type.IsNestedAssembly\n  - System.Type.IsNestedFamANDAssem\n  - System.Type.IsNestedFamORAssem\n  - System.Type.IsAutoLayout\n  - System.Type.IsLayoutSequential\n  - System.Type.IsExplicitLayout\n  - System.Type.IsClass\n  - System.Type.IsInterface\n  - System.Type.IsValueType\n  - System.Type.IsAbstract\n  - System.Type.IsSealed\n  - System.Type.IsSpecialName\n  - System.Type.IsImport\n  - System.Type.IsAnsiClass\n  - System.Type.IsUnicodeClass\n  - System.Type.IsAutoClass\n  - System.Type.IsArray\n  - System.Type.IsConstructedGenericType\n  - System.Type.IsByRef\n  - System.Type.IsPointer\n  - System.Type.IsPrimitive\n  - System.Type.IsCOMObject\n  - System.Type.HasElementType\n  - System.Type.IsContextful\n  - System.Type.IsMarshalByRef\n  - System.Type.IsSecurityCritical\n  - System.Type.IsSecuritySafeCritical\n  - System.Type.IsSecurityTransparent\n  - System.Type.UnderlyingSystemType\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: TypeBuilder\n  extensionMethods:\n  - System.Type.System.Reflection.IntrospectionExtensions.GetTypeInfo\n  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - System.Type.System.Reflection.TypeExtensions.GetConstructor(System.Type[])\n  - System.Type.System.Reflection.TypeExtensions.GetConstructors\n  - System.Type.System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetDefaultMembers\n  - System.Type.System.Reflection.TypeExtensions.GetEvent(System.String)\n  - System.Type.System.Reflection.TypeExtensions.GetEvent(System.String,System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetEvents\n  - System.Type.System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetField(System.String)\n  - System.Type.System.Reflection.TypeExtensions.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetFields\n  - System.Type.System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetGenericArguments\n  - System.Type.System.Reflection.TypeExtensions.GetInterfaces\n  - System.Type.System.Reflection.TypeExtensions.GetMember(System.String)\n  - System.Type.System.Reflection.TypeExtensions.GetMember(System.String,System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetMembers\n  - System.Type.System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetMethod(System.String)\n  - System.Type.System.Reflection.TypeExtensions.GetMethod(System.String,System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetMethod(System.String,System.Type[])\n  - System.Type.System.Reflection.TypeExtensions.GetMethods\n  - System.Type.System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetNestedType(System.String,System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetProperties\n  - System.Type.System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetProperty(System.String)\n  - System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Reflection.BindingFlags)\n  - System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Type)\n  - System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Type,System.Type[])\n  - System.Type.System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)\n  - System.Type.System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)\n  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents\n  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)\n  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields\n  - System.Reflection.TypeInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)\n  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String,System.Type[])\n  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods\n  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties\n  - System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)\n- uid: System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize\n  commentId: F:System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize\n  id: UnspecifiedTypeSize\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: UnspecifiedTypeSize\n  fullName: System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UnspecifiedTypeSize\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 172\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Represents that total size for the type is not specified.</p>\\n\"\n  syntax:\n    content: public const int UnspecifiedTypeSize = 0\n    content.vb: Public Const UnspecifiedTypeSize As Integer = 0\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeBuilder.UnspecifiedTypeSize\n- uid: System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName\n  commentId: P:System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName\n  id: AssemblyQualifiedName\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: AssemblyQualifiedName\n  fullName: System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AssemblyQualifiedName\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1086\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the full name of this type qualified by the display name of the assembly.</p>\\n\"\n  syntax:\n    content: public override string AssemblyQualifiedName { get; }\n    content.vb: Public Overrides ReadOnly Property AssemblyQualifiedName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Read-only. The full name of this type qualified by the display name of the assembly.</p>\\n\"\n  overridden: System.Type.AssemblyQualifiedName\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.AssemblyQualifiedName\n- uid: System.Reflection.Emit.TypeBuilder.FullName\n  commentId: P:System.Reflection.Emit.TypeBuilder.FullName\n  id: FullName\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: FullName\n  fullName: System.Reflection.Emit.TypeBuilder.FullName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FullName\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1070\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the full path of this type.</p>\\n\"\n  syntax:\n    content: public override string FullName { get; }\n    content.vb: Public Overrides ReadOnly Property FullName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Read-only. Retrieves the full path of this type.</p>\\n\"\n  overridden: System.Type.FullName\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.FullName\n- uid: System.Reflection.Emit.TypeBuilder.IsGenericParameter\n  commentId: P:System.Reflection.Emit.TypeBuilder.IsGenericParameter\n  id: IsGenericParameter\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsGenericParameter\n  fullName: System.Reflection.Emit.TypeBuilder.IsGenericParameter\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsGenericParameter\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1582\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a value indicating whether the current type is a generic type parameter.</p>\\n\"\n  syntax:\n    content: public override bool IsGenericParameter { get; }\n    content.vb: Public Overrides ReadOnly Property IsGenericParameter As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object represents a generic type parameter; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Type.IsGenericParameter\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.IsGenericParameter\n- uid: System.Reflection.Emit.TypeBuilder.Name\n  commentId: P:System.Reflection.Emit.TypeBuilder.Name\n  id: Name\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Reflection.Emit.TypeBuilder.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1019\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the name of this type.</p>\\n\"\n  syntax:\n    content: public override string Name { get; }\n    content.vb: Public Overrides ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Read-only. Retrieves the <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> name of this type.</p>\\n\"\n  overridden: System.Reflection.MemberInfo.Name\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.Name\n- uid: System.Reflection.Emit.TypeBuilder.PackingSize\n  commentId: P:System.Reflection.Emit.TypeBuilder.PackingSize\n  id: PackingSize\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: PackingSize\n  fullName: System.Reflection.Emit.TypeBuilder.PackingSize\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PackingSize\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2453\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the packing size of this type.</p>\\n\"\n  syntax:\n    content: public PackingSize PackingSize { get; }\n    content.vb: Public ReadOnly Property PackingSize As PackingSize\n    parameters: []\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: \"\\n<p>Read-only. Retrieves the packing size of this type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TypeBuilder.PackingSize\n- uid: System.Reflection.Emit.TypeBuilder.Size\n  commentId: P:System.Reflection.Emit.TypeBuilder.Size\n  id: Size\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: Size\n  fullName: System.Reflection.Emit.TypeBuilder.Size\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2448\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the total size of a type.</p>\\n\"\n  syntax:\n    content: public int Size { get; }\n    content.vb: Public ReadOnly Property Size As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>Read-only. Retrieves this type’s total size.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TypeBuilder.Size\n- uid: System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)\n  commentId: M:System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)\n  id: AddInterfaceImplementation(System.Type)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: AddInterfaceImplementation(Type)\n  fullName: System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddInterfaceImplementation\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2488\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds an interface that this type implements.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(true)]\n\n      public void AddInterfaceImplementation(Type interfaceType)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(True)>\n\n      Public Sub AddInterfaceImplementation(interfaceType As Type)\n    parameters:\n    - id: interfaceType\n      type: System.Type\n      description: \"\\n<p>The interface that this type implements. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>interfaceType</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.AddInterfaceImplementation(Type)\n- uid: System.Reflection.Emit.TypeBuilder.CreateTypeInfo\n  commentId: M:System.Reflection.Emit.TypeBuilder.CreateTypeInfo\n  id: CreateTypeInfo\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: CreateTypeInfo()\n  fullName: System.Reflection.Emit.TypeBuilder.CreateTypeInfo()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateTypeInfo\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2236\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Reflection.TypeInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents this type.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public TypeInfo CreateTypeInfo()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function CreateTypeInfo As TypeInfo\n    return:\n      type: System.Reflection.TypeInfo\n      description: \"\\n<p>An object that represents this type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.CreateTypeInfo()\n- uid: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])\n  id: DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineConstructor(MethodAttributes, CallingConventions, Type[])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineConstructor\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1819\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new constructor to the type, with the given attributes and signature.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public ConstructorBuilder DefineConstructor(MethodAttributes attributes, CallingConventions callingConvention, Type[] parameterTypes)\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Function DefineConstructor(attributes As MethodAttributes, callingConvention As CallingConventions, parameterTypes As Type()) As ConstructorBuilder\n    parameters:\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the constructor. </p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention of the constructor. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The parameter types of the constructor. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.ConstructorBuilder\n      description: \"\\n<p>The defined constructor.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type())\n  name.vb: DefineConstructor(MethodAttributes, CallingConventions, Type())\n  nameWithType: TypeBuilder.DefineConstructor(MethodAttributes, CallingConventions, Type[])\n  nameWithType.vb: TypeBuilder.DefineConstructor(MethodAttributes, CallingConventions, Type())\n- uid: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])\n  id: DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineConstructor(MethodAttributes, CallingConventions, Type[], Type[][], Type[][])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[], System.Type[][], System.Type[][])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineConstructor\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1825\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new constructor to the type, with the given attributes, signature, and custom modifiers.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(true)]\n\n      public ConstructorBuilder DefineConstructor(MethodAttributes attributes, CallingConventions callingConvention, Type[] parameterTypes, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(True)>\n\n      Public Function DefineConstructor(attributes As MethodAttributes, callingConvention As CallingConventions, parameterTypes As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()()) As ConstructorBuilder\n    parameters:\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the constructor. </p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention of the constructor. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The parameter types of the constructor. </p>\\n\"\n    - id: requiredCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no required custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have required custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    - id: optionalCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no optional custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have optional custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.ConstructorBuilder\n      description: \"\\n<p>The defined constructor.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The size of <em>requiredCustomModifiers</em> or <em>optionalCustomModifiers</em> does not equal the size of <em>parameterTypes</em>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type(), System.Type()(), System.Type()())\n  name.vb: DefineConstructor(MethodAttributes, CallingConventions, Type(), Type()(), Type()())\n  nameWithType: TypeBuilder.DefineConstructor(MethodAttributes, CallingConventions, Type[], Type[][], Type[][])\n  nameWithType.vb: TypeBuilder.DefineConstructor(MethodAttributes, CallingConventions, Type(), Type()(), Type()())\n- uid: System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)\n  id: DefineDefaultConstructor(System.Reflection.MethodAttributes)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineDefaultConstructor(MethodAttributes)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineDefaultConstructor\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1751\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines the default constructor. The constructor defined here will simply call the default constructor of the parent.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public ConstructorBuilder DefineDefaultConstructor(MethodAttributes attributes)\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Function DefineDefaultConstructor(attributes As MethodAttributes) As ConstructorBuilder\n    parameters:\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>A <strong>MethodAttributes</strong> object representing the attributes to be applied to the constructor. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.ConstructorBuilder\n      description: \"\\n<p>Returns the constructor.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The parent type (base type) does not have a default constructor. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineDefaultConstructor(MethodAttributes)\n- uid: System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)\n  id: DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineEvent(String, EventAttributes, Type)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineEvent(System.String, System.Reflection.EventAttributes, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineEvent\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2185\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new event to the type, with the given name, attributes and event type.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public EventBuilder DefineEvent(string name, EventAttributes attributes, Type eventtype)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineEvent(name As String, attributes As EventAttributes, eventtype As Type) As EventBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the event. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.EventAttributes\n      description: \"\\n<p>The attributes of the event. </p>\\n\"\n    - id: eventtype\n      type: System.Type\n      description: \"\\n<p>The type of the event. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.EventBuilder\n      description: \"\\n<p>The defined event.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>eventtype</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineEvent(String, EventAttributes, Type)\n- uid: System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)\n  id: DefineField(System.String,System.Type,System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineField(String, Type, FieldAttributes)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineField(System.String, System.Type, System.Reflection.FieldAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineField\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2015\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new field to the type, with the given name, attributes, and field type.</p>\\n\"\n  syntax:\n    content: public FieldBuilder DefineField(string fieldName, Type type, FieldAttributes attributes)\n    content.vb: Public Function DefineField(fieldName As String, type As Type, attributes As FieldAttributes) As FieldBuilder\n    parameters:\n    - id: fieldName\n      type: System.String\n      description: \"\\n<p>The name of the field. <em>fieldName</em> cannot contain embedded nulls. </p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the field </p>\\n\"\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: \"\\n<p>The attributes of the field. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.FieldBuilder\n      description: \"\\n<p>The defined field.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>fieldName</em> is zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>type</em> is System.Void.</p>\\n<p>-or- </p>\\n<p>A total size was specified for the parent class of this field. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>fieldName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineField(String, Type, FieldAttributes)\n- uid: System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)\n  id: DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineField(String, Type, Type[], Type[], FieldAttributes)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineField(System.String, System.Type, System.Type[], System.Type[], System.Reflection.FieldAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineField\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2020\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new field to the type, with the given name, attributes, field type, and custom modifiers.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public FieldBuilder DefineField(string fieldName, Type type, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers, FieldAttributes attributes)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineField(fieldName As String, type As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type(), attributes As FieldAttributes) As FieldBuilder\n    parameters:\n    - id: fieldName\n      type: System.String\n      description: \"\\n<p>The name of the field. <em>fieldName</em> cannot contain embedded nulls. </p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the field </p>\\n\"\n    - id: requiredCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the required custom modifiers for the field, such as <xref href=\\\"Microsoft.VisualC.IsConstModifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: optionalCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the optional custom modifiers for the field, such as <xref href=\\\"Microsoft.VisualC.IsConstModifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: \"\\n<p>The attributes of the field. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.FieldBuilder\n      description: \"\\n<p>The defined field.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>fieldName</em> is zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>type</em> is System.Void.</p>\\n<p>-or- </p>\\n<p>A total size was specified for the parent class of this field. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>fieldName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineField(System.String, System.Type, System.Type(), System.Type(), System.Reflection.FieldAttributes)\n  name.vb: DefineField(String, Type, Type(), Type(), FieldAttributes)\n  nameWithType: TypeBuilder.DefineField(String, Type, Type[], Type[], FieldAttributes)\n  nameWithType.vb: TypeBuilder.DefineField(String, Type, Type(), Type(), FieldAttributes)\n- uid: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])\n  id: DefineGenericParameters(System.String[])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineGenericParameters(String[])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineGenericParameters\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1546\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines the generic type parameters for the current type, specifying their number and their names, and returns an array of <xref href=\\\"System.Reflection.Emit.GenericTypeParameterBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that can be used to set their constraints.</p>\\n\"\n  syntax:\n    content: public GenericTypeParameterBuilder[] DefineGenericParameters(params string[] names)\n    content.vb: Public Function DefineGenericParameters(ParamArray names As String()) As GenericTypeParameterBuilder()\n    parameters:\n    - id: names\n      type: System.String[]\n      description: \"\\n<p>An array of names for the generic type parameters.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.GenericTypeParameterBuilder[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Reflection.Emit.GenericTypeParameterBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that can be used to define the constraints of the generic type parameters for the current type.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Generic type parameters have already been defined for this type.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>names</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>An element of <em>names</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>names</em> is an empty array.</p>\\n\"\n  seealso:\n  - type: System.Reflection.Emit.GenericTypeParameterBuilder\n    commentId: T:System.Reflection.Emit.GenericTypeParameterBuilder\n  - type: System.Reflection.Emit.TypeBuilder.IsGenericType\n    commentId: P:System.Reflection.Emit.TypeBuilder.IsGenericType\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String())\n  name.vb: DefineGenericParameters(String())\n  nameWithType: TypeBuilder.DefineGenericParameters(String[])\n  nameWithType.vb: TypeBuilder.DefineGenericParameters(String())\n- uid: System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  id: DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineInitializedData(String, Byte[], FieldAttributes)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String, System.Byte[], System.Reflection.FieldAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineInitializedData\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2051\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines initialized data field in the .sdata section of the portable executable (PE) file.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public FieldBuilder DefineInitializedData(string name, byte[] data, FieldAttributes attributes)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineInitializedData(name As String, data As Byte(), attributes As FieldAttributes) As FieldBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name used to refer to the data. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: data\n      type: System.Byte[]\n      description: \"\\n<p>The blob of data. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: \"\\n<p>The attributes for the field. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.FieldBuilder\n      description: \"\\n<p>A field to reference the data.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The size of the data is less than or equal to zero, or greater than or equal to 0x3f0000. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> or <em>data</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been previously called. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String, System.Byte(), System.Reflection.FieldAttributes)\n  name.vb: DefineInitializedData(String, Byte(), FieldAttributes)\n  nameWithType: TypeBuilder.DefineInitializedData(String, Byte[], FieldAttributes)\n  nameWithType.vb: TypeBuilder.DefineInitializedData(String, Byte(), FieldAttributes)\n- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)\n  id: DefineMethod(System.String,System.Reflection.MethodAttributes)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineMethod(String, MethodAttributes)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineMethod\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1632\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new method to the type, with the specified name and method attributes.</p>\\n\"\n  syntax:\n    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes)\n    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes) As MethodBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the method. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the method. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.Emit.MethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the newly defined method.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface, and this method is not virtual (<strong>Overridable</strong> in Visual Basic). </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. </p>\\n\"\n  seealso:\n  - type: System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])\n    commentId: M:System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineMethod(String, MethodAttributes)\n- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)\n  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineMethod(String, MethodAttributes, CallingConventions)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineMethod\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1639\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new method to the type, with the specified name, method attributes, and calling convention.</p>\\n\"\n  syntax:\n    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes, CallingConventions callingConvention)\n    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions) As MethodBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the method. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the method. </p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention of the method. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.Emit.MethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the newly defined method.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface and this method is not virtual (<strong>Overridable</strong> in Visual Basic). </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. </p>\\n\"\n  seealso:\n  - type: System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])\n    commentId: M:System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineMethod(String, MethodAttributes, CallingConventions)\n- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineMethod\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1646\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new method to the type, with the specified name, method attributes, calling convention, and method signature.</p>\\n\"\n  syntax:\n    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)\n    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the method. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the method. </p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention of the method. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the method. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the parameters of the method. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.Emit.MethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the newly defined method.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface, and this method is not virtual (<strong>Overridable</strong> in Visual Basic). </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type())\n  name.vb: DefineMethod(String, MethodAttributes, CallingConventions, Type, Type())\n  nameWithType: TypeBuilder.DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n  nameWithType.vb: TypeBuilder.DefineMethod(String, MethodAttributes, CallingConventions, Type, Type())\n- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineMethod\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1654\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new method to the type, with the specified name, method attributes, calling convention, method signature, and custom modifiers.</p>\\n\"\n  syntax:\n    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)\n    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()()) As MethodBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the method. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the method. </p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention of the method. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the method. </p>\\n\"\n    - id: returnTypeRequiredCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the required custom modifiers, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, for the return type of the method. If the return type has no required custom modifiers, specify <strong>null</strong>.</p>\\n\"\n    - id: returnTypeOptionalCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the optional custom modifiers, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, for the return type of the method. If the return type has no optional custom modifiers, specify <strong>null</strong>.</p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the parameters of the method.</p>\\n\"\n    - id: parameterTypeRequiredCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no required custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have required custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    - id: parameterTypeOptionalCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no optional custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have optional custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.Emit.MethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the newly added method.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface, and this method is not virtual (<strong>Overridable</strong> in Visual Basic). </p>\\n<p>-or-</p>\\n<p>The size of <em>parameterTypeRequiredCustomModifiers</em> or <em>parameterTypeOptionalCustomModifiers</em> does not equal the size of <em>parameterTypes</em>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())\n  name.vb: DefineMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())\n  nameWithType: TypeBuilder.DefineMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  nameWithType.vb: TypeBuilder.DefineMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())\n- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineMethod(String, MethodAttributes, Type, Type[])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineMethod\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1625\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new method to the type, with the specified name, method attributes, and method signature.</p>\\n\"\n  syntax:\n    content: public MethodBuilder DefineMethod(string name, MethodAttributes attributes, Type returnType, Type[] parameterTypes)\n    content.vb: Public Function DefineMethod(name As String, attributes As MethodAttributes, returnType As Type, parameterTypes As Type()) As MethodBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the method. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the method. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the method. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the parameters of the method. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>The defined method.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The type of the parent of this method is an interface, and this method is not virtual (<strong>Overridable</strong> in Visual Basic). </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type())\n  name.vb: DefineMethod(String, MethodAttributes, Type, Type())\n  nameWithType: TypeBuilder.DefineMethod(String, MethodAttributes, Type, Type[])\n  nameWithType.vb: TypeBuilder.DefineMethod(String, MethodAttributes, Type, Type())\n- uid: System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)\n  id: DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineMethodOverride(MethodInfo, MethodInfo)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo, System.Reflection.MethodInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineMethodOverride\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1591\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Specifies a given method body that implements a given method declaration, potentially with a different name.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void DefineMethodOverride(MethodInfo methodInfoBody, MethodInfo methodInfoDeclaration)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub DefineMethodOverride(methodInfoBody As MethodInfo, methodInfoDeclaration As MethodInfo)\n    parameters:\n    - id: methodInfoBody\n      type: System.Reflection.MethodInfo\n      description: \"\\n<p>The method body to be used. This should be a <strong>MethodBuilder</strong> object. </p>\\n\"\n    - id: methodInfoDeclaration\n      type: System.Reflection.MethodInfo\n      description: \"\\n<p>The method whose declaration is to be used. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>methodInfoBody</em> does not belong to this class. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>methodInfoBody</em> or <em>methodInfoDeclaration</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>The declaring type of <em>methodInfoBody</em> is not the type represented by this <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineMethodOverride(MethodInfo, MethodInfo)\n- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)\n  id: DefineNestedType(System.String)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineNestedType(String)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineNestedType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1926\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a nested type, given its name.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public TypeBuilder DefineNestedType(string name)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineNestedType(name As String) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The short name of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>The defined nested type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Length of <em>name</em> is zero or greater than 1023. </p>\\n<p>-or-</p>\\n<p>This operation would create a type with a duplicate <xref href=\\\"System.Reflection.Emit.TypeBuilder.FullName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the current assembly.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineNestedType(String)\n- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)\n  id: DefineNestedType(System.String,System.Reflection.TypeAttributes)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineNestedType(String, TypeAttributes)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineNestedType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1958\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a nested type, given its name and attributes.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public TypeBuilder DefineNestedType(string name, TypeAttributes attr)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineNestedType(name As String, attr As TypeAttributes) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The short name of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the type. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>The defined nested type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The nested attribute is not specified.</p>\\n<p>-or- </p>\\n<p>This type is sealed.</p>\\n<p>-or- </p>\\n<p>This type is an array.</p>\\n<p>-or- </p>\\n<p>This type is an interface, but the nested type is not an interface.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is zero or greater than 1023. </p>\\n<p>-or-</p>\\n<p>This operation would create a type with a duplicate <xref href=\\\"System.Reflection.Emit.TypeBuilder.FullName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the current assembly.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineNestedType(String, TypeAttributes)\n- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)\n  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineNestedType(String, TypeAttributes, Type)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineNestedType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1949\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a nested type, given its name, attributes, and the type that it extends.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The short name of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the type. </p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the nested type extends. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>The defined nested type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The nested attribute is not specified.</p>\\n<p>-or- </p>\\n<p>This type is sealed.</p>\\n<p>-or- </p>\\n<p>This type is an array.</p>\\n<p>-or- </p>\\n<p>This type is an interface, but the nested type is not an interface.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is zero or greater than 1023. </p>\\n<p>-or-</p>\\n<p>This operation would create a type with a duplicate <xref href=\\\"System.Reflection.Emit.TypeBuilder.FullName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the current assembly.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineNestedType(String, TypeAttributes, Type)\n- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineNestedType(String, TypeAttributes, Type, Int32)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineNestedType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1968\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a nested type, given its name, attributes, the total size of the type, and the type that it extends.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, int typeSize)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type, typeSize As Integer) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The short name of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the type. </p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the nested type extends. </p>\\n\"\n    - id: typeSize\n      type: System.Int32\n      description: \"\\n<p>The total size of the type. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>The defined nested type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The nested attribute is not specified.</p>\\n<p>-or- </p>\\n<p>This type is sealed.</p>\\n<p>-or- </p>\\n<p>This type is an array.</p>\\n<p>-or- </p>\\n<p>This type is an interface, but the nested type is not an interface.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is zero or greater than 1023. </p>\\n<p>-or-</p>\\n<p>This operation would create a type with a duplicate <xref href=\\\"System.Reflection.Emit.TypeBuilder.FullName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the current assembly.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineNestedType(String, TypeAttributes, Type, Int32)\n- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineNestedType(String, TypeAttributes, Type, PackingSize)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineNestedType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1981\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a nested type, given its name, attributes, the type that it extends, and the packing size.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, PackingSize packSize)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type, packSize As PackingSize) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The short name of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the type. </p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the nested type extends. </p>\\n\"\n    - id: packSize\n      type: System.Reflection.Emit.PackingSize\n      description: \"\\n<p>The packing size of the type. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>The defined nested type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The nested attribute is not specified.</p>\\n<p>-or- </p>\\n<p>This type is sealed.</p>\\n<p>-or- </p>\\n<p>This type is an array.</p>\\n<p>-or- </p>\\n<p>This type is an interface, but the nested type is not an interface.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is zero or greater than 1023. </p>\\n<p>-or-</p>\\n<p>This operation would create a type with a duplicate <xref href=\\\"System.Reflection.Emit.TypeBuilder.FullName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the current assembly.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineNestedType(String, TypeAttributes, Type, PackingSize)\n- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineNestedType(String, TypeAttributes, Type, PackingSize, Int32)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineNestedType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1994\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a nested type, given its name, attributes, size, and the type that it extends.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, PackingSize packSize, int typeSize)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type, packSize As PackingSize, typeSize As Integer) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The short name of the type. <em>name</em> cannot contain embedded null values.</p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the type.</p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the nested type extends.</p>\\n\"\n    - id: packSize\n      type: System.Reflection.Emit.PackingSize\n      description: \"\\n<p>The packing size of the type.</p>\\n\"\n    - id: typeSize\n      type: System.Int32\n      description: \"\\n<p>The total size of the type.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>The defined nested type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineNestedType(String, TypeAttributes, Type, PackingSize, Int32)\n- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineNestedType(String, TypeAttributes, Type, Type[])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineNestedType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1935\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a nested type, given its name, attributes, the type that it extends, and the interfaces that it implements.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(true)]\n\n      public TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, Type[] interfaces)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(True)>\n\n      Public Function DefineNestedType(name As String, attr As TypeAttributes, parent As Type, interfaces As Type()) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The short name of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the type. </p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the nested type extends. </p>\\n\"\n    - id: interfaces\n      type: System.Type[]\n      description: \"\\n<p>The interfaces that the nested type implements. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>The defined nested type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The nested attribute is not specified.</p>\\n<p>-or- </p>\\n<p>This type is sealed.</p>\\n<p>-or- </p>\\n<p>This type is an array.</p>\\n<p>-or- </p>\\n<p>This type is an interface, but the nested type is not an interface.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is zero or greater than 1023. </p>\\n<p>-or-</p>\\n<p>This operation would create a type with a duplicate <xref href=\\\"System.Reflection.Emit.TypeBuilder.FullName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the current assembly.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>An element of the <em>interfaces</em> array is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type())\n  name.vb: DefineNestedType(String, TypeAttributes, Type, Type())\n  nameWithType: TypeBuilder.DefineNestedType(String, TypeAttributes, Type, Type[])\n  nameWithType.vb: TypeBuilder.DefineNestedType(String, TypeAttributes, Type, Type())\n- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineProperty\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2107\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new property to the type, with the given name, attributes, calling convention, and property signature.</p>\\n\"\n  syntax:\n    content: public PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)\n    content.vb: Public Function DefineProperty(name As String, attributes As PropertyAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As PropertyBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the property. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.PropertyAttributes\n      description: \"\\n<p>The attributes of the property. </p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention of the property accessors. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the property. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the parameters of the property.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.PropertyBuilder\n      description: \"\\n<p>The defined property.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n<p>-or- </p>\\n<p>Any of the elements of the <em>parameterTypes</em> array is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type())\n  name.vb: DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type())\n  nameWithType: TypeBuilder.DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[])\n  nameWithType.vb: TypeBuilder.DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type())\n- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineProperty\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2123\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new property to the type, with the given name, calling convention, property signature, and custom modifiers.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineProperty(name As String, attributes As PropertyAttributes, callingConvention As CallingConventions, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()()) As PropertyBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the property. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.PropertyAttributes\n      description: \"\\n<p>The attributes of the property. </p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention of the property accessors. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the property. </p>\\n\"\n    - id: returnTypeRequiredCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the required custom modifiers, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, for the return type of the property. If the return type has no required custom modifiers, specify <strong>null</strong>.</p>\\n\"\n    - id: returnTypeOptionalCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the optional custom modifiers, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, for the return type of the property. If the return type has no optional custom modifiers, specify <strong>null</strong>.</p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the parameters of the property. </p>\\n\"\n    - id: parameterTypeRequiredCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no required custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have required custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    - id: parameterTypeOptionalCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no optional custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have optional custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.PropertyBuilder\n      description: \"\\n<p>The defined property.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n<p>-or- </p>\\n<p>Any of the elements of the <em>parameterTypes</em> array is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())\n  name.vb: DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())\n  nameWithType: TypeBuilder.DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  nameWithType.vb: TypeBuilder.DefineProperty(String, PropertyAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())\n- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])\n  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineProperty(String, PropertyAttributes, Type, Type[])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineProperty\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2102\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new property to the type, with the given name and property signature.</p>\\n\"\n  syntax:\n    content: public PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, Type returnType, Type[] parameterTypes)\n    content.vb: Public Function DefineProperty(name As String, attributes As PropertyAttributes, returnType As Type, parameterTypes As Type()) As PropertyBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the property. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.PropertyAttributes\n      description: \"\\n<p>The attributes of the property. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the property. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the parameters of the property. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.PropertyBuilder\n      description: \"\\n<p>The defined property.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n<p>-or- </p>\\n<p>Any of the elements of the <em>parameterTypes</em> array is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type())\n  name.vb: DefineProperty(String, PropertyAttributes, Type, Type())\n  nameWithType: TypeBuilder.DefineProperty(String, PropertyAttributes, Type, Type[])\n  nameWithType.vb: TypeBuilder.DefineProperty(String, PropertyAttributes, Type, Type())\n- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineProperty(String, PropertyAttributes, Type, Type[], Type[], Type[], Type[][], Type[][])\n  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineProperty\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2114\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Adds a new property to the type, with the given name, property signature, and custom modifiers.</p>\\n\"\n  syntax:\n    content: public PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)\n    content.vb: Public Function DefineProperty(name As String, attributes As PropertyAttributes, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()()) As PropertyBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the property. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.PropertyAttributes\n      description: \"\\n<p>The attributes of the property. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the property. </p>\\n\"\n    - id: returnTypeRequiredCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the required custom modifiers, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, for the return type of the property. If the return type has no required custom modifiers, specify <strong>null</strong>.</p>\\n\"\n    - id: returnTypeOptionalCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the optional custom modifiers, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, for the return type of the property. If the return type has no optional custom modifiers, specify <strong>null</strong>.</p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the parameters of the property. </p>\\n\"\n    - id: parameterTypeRequiredCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no required custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have required custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    - id: parameterTypeOptionalCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no optional custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have optional custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.PropertyBuilder\n      description: \"\\n<p>The defined property.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong></p>\\n<p>-or- </p>\\n<p>Any of the elements of the <em>parameterTypes</em> array is <strong>null</strong></p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String, System.Reflection.PropertyAttributes, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())\n  name.vb: DefineProperty(String, PropertyAttributes, Type, Type(), Type(), Type(), Type()(), Type()())\n  nameWithType: TypeBuilder.DefineProperty(String, PropertyAttributes, Type, Type[], Type[], Type[], Type[][], Type[][])\n  nameWithType.vb: TypeBuilder.DefineProperty(String, PropertyAttributes, Type, Type(), Type(), Type(), Type()(), Type()())\n- uid: System.Reflection.Emit.TypeBuilder.DefineTypeInitializer\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineTypeInitializer\n  id: DefineTypeInitializer\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineTypeInitializer()\n  fullName: System.Reflection.Emit.TypeBuilder.DefineTypeInitializer()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineTypeInitializer\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1727\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines the initializer for this type.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(true)]\n\n      public ConstructorBuilder DefineTypeInitializer()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(True)>\n\n      Public Function DefineTypeInitializer As ConstructorBuilder\n    return:\n      type: System.Reflection.Emit.ConstructorBuilder\n      description: \"\\n<p>Returns a type initializer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The containing type has been previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineTypeInitializer()\n- uid: System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  commentId: M:System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  id: DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineUninitializedData(String, Int32, FieldAttributes)\n  fullName: System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String, System.Int32, System.Reflection.FieldAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineUninitializedData\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2078\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines an uninitialized data field in the <strong>.sdata</strong> section of the portable executable (PE) file.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public FieldBuilder DefineUninitializedData(string name, int size, FieldAttributes attributes)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineUninitializedData(name As String, size As Integer, attributes As FieldAttributes) As FieldBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name used to refer to the data. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The size of the data field. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: \"\\n<p>The attributes for the field. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.FieldBuilder\n      description: \"\\n<p>A field to reference the data.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than or equal to zero, or greater than or equal to 0x003f0000. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.DefineUninitializedData(String, Int32, FieldAttributes)\n- uid: System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)\n  commentId: M:System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)\n  id: GetConstructor(System.Type,System.Reflection.ConstructorInfo)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetConstructor(Type, ConstructorInfo)\n  fullName: System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type, System.Reflection.ConstructorInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetConstructor\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 127\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the constructor of the specified constructed generic type that corresponds to the specified constructor of the generic type definition. </p>\\n\"\n  syntax:\n    content: public static ConstructorInfo GetConstructor(Type type, ConstructorInfo constructor)\n    content.vb: Public Shared Function GetConstructor(type As Type, constructor As ConstructorInfo) As ConstructorInfo\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The constructed generic type whose constructor is returned.</p>\\n\"\n    - id: constructor\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>A constructor on the generic type definition of <em>type</em>, which specifies which constructor of <em>type</em> to return.</p>\\n\"\n    return:\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.ConstructorInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the constructor of <em>type</em> corresponding to <em>constructor</em>, which specifies a constructor belonging to the generic type definition of <em>type</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>type</em> does not represent a generic type. </p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> is not of type <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>The declaring type of <em>constructor</em> is not a generic type definition. </p>\\n<p>-or-</p>\\n<p>The declaring type of <em>constructor</em> is not the generic type definition of <em>type</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeBuilder.GetConstructor(Type, ConstructorInfo)\n- uid: System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)\n  commentId: M:System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)\n  id: GetField(System.Type,System.Reflection.FieldInfo)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetField(Type, FieldInfo)\n  fullName: System.Reflection.Emit.TypeBuilder.GetField(System.Type, System.Reflection.FieldInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetField\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 148\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the field of the specified constructed generic type that corresponds to the specified field of the generic type definition. </p>\\n\"\n  syntax:\n    content: public static FieldInfo GetField(Type type, FieldInfo field)\n    content.vb: Public Shared Function GetField(type As Type, field As FieldInfo) As FieldInfo\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The constructed generic type whose field is returned.</p>\\n\"\n    - id: field\n      type: System.Reflection.FieldInfo\n      description: \"\\n<p>A field on the generic type definition of <em>type</em>, which specifies which field of <em>type</em> to return.</p>\\n\"\n    return:\n      type: System.Reflection.FieldInfo\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.FieldInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the field of <em>type</em> corresponding to <em>field</em>, which specifies a field belonging to the generic type definition of <em>type</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>type</em> does not represent a generic type. </p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> is not of type <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>The declaring type of <em>field</em> is not a generic type definition. </p>\\n<p>-or-</p>\\n<p>The declaring type of <em>field</em> is not the generic type definition of <em>type</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeBuilder.GetField(Type, FieldInfo)\n- uid: System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition\n  commentId: M:System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition\n  id: GetGenericTypeDefinition\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetGenericTypeDefinition()\n  fullName: System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetGenericTypeDefinition\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1587\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents a generic type definition from which the current type can be obtained.</p>\\n\"\n  syntax:\n    content: public override Type GetGenericTypeDefinition()\n    content.vb: Public Overrides Function GetGenericTypeDefinition As Type\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing a generic type definition from which the current type can be obtained.</p>\\n\"\n  overridden: System.Type.GetGenericTypeDefinition\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current type is not generic. That is, <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Type.IsGenericType\n    commentId: P:System.Type.IsGenericType\n  - type: System.Type.GetGenericTypeDefinition\n    commentId: M:System.Type.GetGenericTypeDefinition\n  - type: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.GetGenericTypeDefinition()\n- uid: System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)\n  commentId: M:System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)\n  id: GetMethod(System.Type,System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetMethod(Type, MethodInfo)\n  fullName: System.Reflection.Emit.TypeBuilder.GetMethod(System.Type, System.Reflection.MethodInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetMethod\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 94\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the method of the specified constructed generic type that corresponds to the specified method of the generic type definition. </p>\\n\"\n  syntax:\n    content: public static MethodInfo GetMethod(Type type, MethodInfo method)\n    content.vb: Public Shared Function GetMethod(type As Type, method As MethodInfo) As MethodInfo\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The constructed generic type whose method is returned.</p>\\n\"\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: \"\\n<p>A method on the generic type definition of <em>type</em>, which specifies which method of <em>type</em> to return.</p>\\n\"\n    return:\n      type: System.Reflection.MethodInfo\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.MethodInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the method of <em>type</em> corresponding to <em>method</em>, which specifies a method belonging to the generic type definition of <em>type</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>method</em> is a generic method that is not a generic method definition.</p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> does not represent a generic type.</p>\\n<p>-or-</p>\\n<p>\\n<em>type</em> is not of type <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>The declaring type of <em>method</em> is not a generic type definition. </p>\\n<p>-or-</p>\\n<p>The declaring type of <em>method</em> is not the generic type definition of <em>type</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeBuilder.GetMethod(Type, MethodInfo)\n- uid: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)\n  commentId: M:System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)\n  id: IsAssignableFrom(System.Reflection.TypeInfo)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsAssignableFrom(TypeInfo)\n  fullName: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsAssignableFrom\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 43\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a value that indicates whether a specified <xref href=\\\"System.Reflection.TypeInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object can be assigned to this object.</p>\\n\"\n  syntax:\n    content: public override bool IsAssignableFrom(TypeInfo typeInfo)\n    content.vb: Public Overrides Function IsAssignableFrom(typeInfo As TypeInfo) As Boolean\n    parameters:\n    - id: typeInfo\n      type: System.Reflection.TypeInfo\n      description: \"\\n<p>The object to test.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>typeInfo</em> can be assigned to this object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.IsAssignableFrom(TypeInfo)\n- uid: System.Reflection.Emit.TypeBuilder.IsCreated\n  commentId: M:System.Reflection.Emit.TypeBuilder.IsCreated\n  id: IsCreated\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsCreated()\n  fullName: System.Reflection.Emit.TypeBuilder.IsCreated()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsCreated\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 909\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a value that indicates whether the current dynamic type has been created.</p>\\n\"\n  syntax:\n    content: public bool IsCreated()\n    content.vb: Public Function IsCreated As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method has been called; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.IsCreated()\n- uid: System.Reflection.Emit.TypeBuilder.MakeArrayType\n  commentId: M:System.Reflection.Emit.TypeBuilder.MakeArrayType\n  id: MakeArrayType\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: MakeArrayType()\n  fullName: System.Reflection.Emit.TypeBuilder.MakeArrayType()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MakeArrayType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1452\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents a one-dimensional array of the current type, with a lower bound of zero.</p>\\n\"\n  syntax:\n    content: public override Type MakeArrayType()\n    content.vb: Public Overrides Function MakeArrayType As Type\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing a one-dimensional array type whose element type is the current type, with a lower bound of zero.</p>\\n\"\n  overridden: System.Type.MakeArrayType\n  seealso:\n  - type: System.Reflection.Emit.TypeBuilder.MakeByRefType\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakeByRefType\n  - type: System.Reflection.Emit.TypeBuilder.MakePointerType\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakePointerType\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.MakeArrayType()\n- uid: System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)\n  commentId: M:System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)\n  id: MakeArrayType(System.Int32)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: MakeArrayType(Int32)\n  fullName: System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MakeArrayType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1457\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents an array of the current type, with the specified number of dimensions.</p>\\n\"\n  syntax:\n    content: public override Type MakeArrayType(int rank)\n    content.vb: Public Overrides Function MakeArrayType(rank As Integer) As Type\n    parameters:\n    - id: rank\n      type: System.Int32\n      description: \"\\n<p>The number of dimensions for the array. </p>\\n\"\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents a one-dimensional array of the current type.</p>\\n\"\n  overridden: System.Type.MakeArrayType(System.Int32)\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>\\n<em>rank</em> is not a valid array dimension.</p>\\n\"\n  seealso:\n  - type: System.Reflection.Emit.TypeBuilder.MakeByRefType\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakeByRefType\n  - type: System.Reflection.Emit.TypeBuilder.MakePointerType\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakePointerType\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.MakeArrayType(Int32)\n- uid: System.Reflection.Emit.TypeBuilder.MakeByRefType\n  commentId: M:System.Reflection.Emit.TypeBuilder.MakeByRefType\n  id: MakeByRefType\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: MakeByRefType()\n  fullName: System.Reflection.Emit.TypeBuilder.MakeByRefType()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MakeByRefType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1447\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the current type when passed as a <strong>ref</strong> parameter (<strong>ByRef</strong> in Visual Basic).</p>\\n\"\n  syntax:\n    content: public override Type MakeByRefType()\n    content.vb: Public Overrides Function MakeByRefType As Type\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the current type when passed as a <strong>ref</strong> parameter (<strong>ByRef</strong> in Visual Basic).</p>\\n\"\n  overridden: System.Type.MakeByRefType\n  seealso:\n  - type: System.Reflection.Emit.TypeBuilder.MakeArrayType\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakeArrayType\n  - type: System.Reflection.Emit.TypeBuilder.MakePointerType\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakePointerType\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.MakeByRefType()\n- uid: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n  commentId: M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n  id: MakeGenericType(System.Type[])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: MakeGenericType(Type[])\n  fullName: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MakeGenericType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1570\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Substitutes the elements of an array of types for the type parameters of the current generic type definition, and returns the resulting constructed type.</p>\\n\"\n  syntax:\n    content: public override Type MakeGenericType(params Type[] typeArguments)\n    content.vb: Public Overrides Function MakeGenericType(ParamArray typeArguments As Type()) As Type\n    parameters:\n    - id: typeArguments\n      type: System.Type[]\n      description: \"\\n<p>An array of types to be substituted for the type parameters of the current generic type definition.</p>\\n\"\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the constructed type formed by substituting the elements of <em>typeArguments</em> for the type parameters of the current generic type. </p>\\n\"\n  overridden: System.Type.MakeGenericType(System.Type[])\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current type does not represent the definition of a generic type. That is, <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>false</strong>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>typeArguments</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>Any element of <em>typeArguments</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.Type.Module\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of any element of <em>typeArguments</em> is <strong>null</strong>. </p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Reflection.Module.Assembly\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the module of any element of <em>typeArguments</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type())\n  name.vb: MakeGenericType(Type())\n  nameWithType: TypeBuilder.MakeGenericType(Type[])\n  nameWithType.vb: TypeBuilder.MakeGenericType(Type())\n- uid: System.Reflection.Emit.TypeBuilder.MakePointerType\n  commentId: M:System.Reflection.Emit.TypeBuilder.MakePointerType\n  id: MakePointerType\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: MakePointerType()\n  fullName: System.Reflection.Emit.TypeBuilder.MakePointerType()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MakePointerType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1442\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the type of an unmanaged pointer to the current type.</p>\\n\"\n  syntax:\n    content: public override Type MakePointerType()\n    content.vb: Public Overrides Function MakePointerType As Type\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the type of an unmanaged pointer to the current type.</p>\\n\"\n  overridden: System.Type.MakePointerType\n  seealso:\n  - type: System.Reflection.Emit.TypeBuilder.MakeByRefType\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakeByRefType\n  - type: System.Reflection.Emit.TypeBuilder.MakeArrayType\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakeArrayType\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.MakePointerType()\n- uid: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2565\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets a custom attribute using a specified custom attribute blob.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [ComVisible(true)]\n\n      public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)\n    content.vb: >-\n      <SecurityCritical>\n\n      <ComVisible(True)>\n\n      Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: \"\\n<p>A byte blob representing the attributes. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())\n  name.vb: SetCustomAttribute(ConstructorInfo, Byte())\n  nameWithType: TypeBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType.vb: TypeBuilder.SetCustomAttribute(ConstructorInfo, Byte())\n- uid: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  fullName: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2583\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Set a custom attribute using a custom attribute builder.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetCustomAttribute(CustomAttributeBuilder customBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: \"\\n<p>An instance of a helper class to define the custom attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>customBuilder</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.SetCustomAttribute(CustomAttributeBuilder)\n- uid: System.Reflection.Emit.TypeBuilder.SetParent(System.Type)\n  commentId: M:System.Reflection.Emit.TypeBuilder.SetParent(System.Type)\n  id: SetParent(System.Type)\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetParent(Type)\n  fullName: System.Reflection.Emit.TypeBuilder.SetParent(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetParent\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 2458\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the base type of the type currently under construction.</p>\\n\"\n  syntax:\n    content: public void SetParent(Type parent)\n    content.vb: Public Sub SetParent(parent As Type)\n    parameters:\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The new base type. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>parent</em> is <strong>null</strong>, and the current instance represents an interface whose attributes do not include <xref href=\\\"System.Reflection.TypeAttributes.Abstract\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current dynamic type, the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>parent</em> is an interface. This exception condition is new in the .NET Framework version 2.0. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TypeBuilder.SetParent(Type)\n- uid: System.Reflection.Emit.TypeBuilder.ToString\n  commentId: M:System.Reflection.Emit.TypeBuilder.ToString\n  id: ToString\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Reflection.Emit.TypeBuilder.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 999\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the name of the type excluding the namespace.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Read-only. The name of the type excluding the namespace.</p>\\n\"\n  overridden: System.Type.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.ToString()\n- uid: System.Reflection.Emit.TypeBuilder.Attributes\n  commentId: P:System.Reflection.Emit.TypeBuilder.Attributes\n  id: Attributes\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: Attributes\n  fullName: System.Reflection.Emit.TypeBuilder.Attributes\n  type: Property\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Attributes\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 23\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override TypeAttributes Attributes { get; }\n    content.vb: Public Overrides ReadOnly Property Attributes As TypeAttributes\n    parameters: []\n    return:\n      type: System.Reflection.TypeAttributes\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.Attributes\n- uid: System.Reflection.Emit.TypeBuilder.Assembly\n  commentId: P:System.Reflection.Emit.TypeBuilder.Assembly\n  id: Assembly\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: Assembly\n  fullName: System.Reflection.Emit.TypeBuilder.Assembly\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Assembly\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1059\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the dynamic assembly that contains this type definition.</p>\\n\"\n  syntax:\n    content: public override Assembly Assembly { get; }\n    content.vb: Public Overrides ReadOnly Property Assembly As Assembly\n    parameters: []\n    return:\n      type: System.Reflection.Assembly\n      description: \"\\n<p>Read-only. Retrieves the dynamic assembly that contains this type definition.</p>\\n\"\n  overridden: System.Type.Assembly\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.Assembly\n- uid: System.Reflection.Emit.TypeBuilder.BaseType\n  commentId: P:System.Reflection.Emit.TypeBuilder.BaseType\n  id: BaseType\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: BaseType\n  fullName: System.Reflection.Emit.TypeBuilder.BaseType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: BaseType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1094\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the base type of this type.</p>\\n\"\n  syntax:\n    content: public override Type BaseType { get; }\n    content.vb: Public Overrides ReadOnly Property BaseType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>Read-only. Retrieves the base type of this type.</p>\\n\"\n  overridden: System.Type.BaseType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.BaseType\n- uid: System.Reflection.Emit.TypeBuilder.DeclaringMethod\n  commentId: P:System.Reflection.Emit.TypeBuilder.DeclaringMethod\n  id: DeclaringMethod\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DeclaringMethod\n  fullName: System.Reflection.Emit.TypeBuilder.DeclaringMethod\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeclaringMethod\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1586\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the method that declared the current generic type parameter.</p>\\n\"\n  syntax:\n    content: public override MethodBase DeclaringMethod { get; }\n    content.vb: Public Overrides ReadOnly Property DeclaringMethod As MethodBase\n    parameters: []\n    return:\n      type: System.Reflection.MethodBase\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.MethodBase\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the method that declared the current type, if the current type is a generic type parameter; otherwise, <strong>null</strong>.</p>\\n\"\n  overridden: System.Type.DeclaringMethod\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.DeclaringMethod\n- uid: System.Reflection.Emit.TypeBuilder.GenericParameterAttributes\n  commentId: P:System.Reflection.Emit.TypeBuilder.GenericParameterAttributes\n  id: GenericParameterAttributes\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GenericParameterAttributes\n  fullName: System.Reflection.Emit.TypeBuilder.GenericParameterAttributes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GenericParameterAttributes\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1532\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a value that indicates the covariance and special constraints of the current generic type parameter. </p>\\n\"\n  syntax:\n    content: public override GenericParameterAttributes GenericParameterAttributes { get; }\n    content.vb: Public Overrides ReadOnly Property GenericParameterAttributes As GenericParameterAttributes\n    parameters: []\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Reflection.GenericParameterAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that describes the covariance and special constraints of the current generic type parameter.</p>\\n\"\n  overridden: System.Type.GenericParameterAttributes\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.GenericParameterAttributes\n- uid: System.Reflection.Emit.TypeBuilder.Module\n  commentId: P:System.Reflection.Emit.TypeBuilder.Module\n  id: Module\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: Module\n  fullName: System.Reflection.Emit.TypeBuilder.Module\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Module\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1024\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the dynamic module that contains this type definition.</p>\\n\"\n  syntax:\n    content: public override Module Module { get; }\n    content.vb: 'Public Overrides ReadOnly Property Module As '\n    parameters: []\n    return:\n      type: System.Reflection.Module\n      description: \"\\n<p>Read-only. Retrieves the dynamic module that contains this type definition.</p>\\n\"\n  overridden: System.Type.Module\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.Module\n- uid: System.Reflection.Emit.TypeBuilder.GetArrayRank\n  commentId: M:System.Reflection.Emit.TypeBuilder.GetArrayRank\n  id: GetArrayRank\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetArrayRank()\n  fullName: System.Reflection.Emit.TypeBuilder.GetArrayRank()\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetArrayRank\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 30\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetArrayRank()\n    content.vb: Public Overrides Function GetArrayRank As Integer\n    return:\n      type: System.Int32\n  overridden: System.Type.GetArrayRank\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.GetArrayRank()\n- uid: System.Reflection.Emit.TypeBuilder.GetElementType\n  commentId: M:System.Reflection.Emit.TypeBuilder.GetElementType\n  id: GetElementType\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetElementType()\n  fullName: System.Reflection.Emit.TypeBuilder.GetElementType()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetElementType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1351\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Calling this method always throws <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override Type GetElementType()\n    content.vb: Public Overrides Function GetElementType As Type\n    return:\n      type: System.Type\n      description: \"\\n<p>This method is not supported. No value is returned.</p>\\n\"\n  overridden: System.Type.GetElementType\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is not supported. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.GetElementType()\n- uid: System.Reflection.Emit.TypeBuilder.GetGenericParameterConstraints\n  commentId: M:System.Reflection.Emit.TypeBuilder.GetGenericParameterConstraints\n  id: GetGenericParameterConstraints\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetGenericParameterConstraints()\n  fullName: System.Reflection.Emit.TypeBuilder.GetGenericParameterConstraints()\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetGenericParameterConstraints\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 32\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override Type[] GetGenericParameterConstraints()\n    content.vb: Public Overrides Function GetGenericParameterConstraints As Type()\n    return:\n      type: System.Type[]\n  overridden: System.Type.GetGenericParameterConstraints\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TypeBuilder.GetGenericParameterConstraints()\n- uid: System.Reflection.Emit.TypeBuilder.GenericTypeArguments\n  commentId: P:System.Reflection.Emit.TypeBuilder.GenericTypeArguments\n  id: GenericTypeArguments\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GenericTypeArguments\n  fullName: System.Reflection.Emit.TypeBuilder.GenericTypeArguments\n  type: Property\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GenericTypeArguments\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 33\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override Type[] GenericTypeArguments { get; }\n    content.vb: Public Overrides ReadOnly Property GenericTypeArguments As Type()\n    parameters: []\n    return:\n      type: System.Type[]\n  overridden: System.Type.GenericTypeArguments\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.GenericTypeArguments\n- uid: System.Reflection.Emit.TypeBuilder.ContainsGenericParameters\n  commentId: P:System.Reflection.Emit.TypeBuilder.ContainsGenericParameters\n  id: ContainsGenericParameters\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: ContainsGenericParameters\n  fullName: System.Reflection.Emit.TypeBuilder.ContainsGenericParameters\n  type: Property\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContainsGenericParameters\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 34\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool ContainsGenericParameters { get; }\n    content.vb: Public Overrides ReadOnly Property ContainsGenericParameters As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  overridden: System.Type.ContainsGenericParameters\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.ContainsGenericParameters\n- uid: System.Reflection.Emit.TypeBuilder.GenericParameterPosition\n  commentId: P:System.Reflection.Emit.TypeBuilder.GenericParameterPosition\n  id: GenericParameterPosition\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GenericParameterPosition\n  fullName: System.Reflection.Emit.TypeBuilder.GenericParameterPosition\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GenericParameterPosition\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1585\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the position of a type parameter in the type parameter list of the generic type that declared the parameter.</p>\\n\"\n  syntax:\n    content: public override int GenericParameterPosition { get; }\n    content.vb: Public Overrides ReadOnly Property GenericParameterPosition As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>If the current <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object represents a generic type parameter, the position of the type parameter in the type parameter list of the generic type that declared the parameter; otherwise, undefined.</p>\\n\"\n  overridden: System.Type.GenericParameterPosition\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.GenericParameterPosition\n- uid: System.Reflection.Emit.TypeBuilder.GUID\n  commentId: P:System.Reflection.Emit.TypeBuilder.GUID\n  id: GUID\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: GUID\n  fullName: System.Reflection.Emit.TypeBuilder.GUID\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GUID\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1037\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the GUID of this type.</p>\\n\"\n  syntax:\n    content: public override Guid GUID { get; }\n    content.vb: Public Overrides ReadOnly Property GUID As Guid\n    parameters: []\n    return:\n      type: System.Guid\n      description: \"\\n<p>Read-only. Retrieves the GUID of this type </p>\\n\"\n  overridden: System.Type.GUID\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is not currently supported for incomplete types. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.GUID\n- uid: System.Reflection.Emit.TypeBuilder.IsEnum\n  commentId: P:System.Reflection.Emit.TypeBuilder.IsEnum\n  id: IsEnum\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsEnum\n  fullName: System.Reflection.Emit.TypeBuilder.IsEnum\n  type: Property\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsEnum\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 37\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool IsEnum { get; }\n    content.vb: Public Overrides ReadOnly Property IsEnum As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  overridden: System.Type.IsEnum\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.IsEnum\n- uid: System.Reflection.Emit.TypeBuilder.IsGenericType\n  commentId: P:System.Reflection.Emit.TypeBuilder.IsGenericType\n  id: IsGenericType\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsGenericType\n  fullName: System.Reflection.Emit.TypeBuilder.IsGenericType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsGenericType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1581\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a value indicating whether the current type is a generic type. </p>\\n\"\n  syntax:\n    content: public override bool IsGenericType { get; }\n    content.vb: Public Overrides ReadOnly Property IsGenericType As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the type represented by the current <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is generic; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Type.IsGenericType\n  seealso:\n  - type: System.Type.IsGenericType\n    commentId: P:System.Type.IsGenericType\n  - type: System.Type.GetGenericTypeDefinition\n    commentId: M:System.Type.GetGenericTypeDefinition\n  - type: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.IsGenericType\n- uid: System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\n  commentId: P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\n  id: IsGenericTypeDefinition\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsGenericTypeDefinition\n  fullName: System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsGenericTypeDefinition\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1580\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a value indicating whether the current <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> represents a generic type definition from which other generic types can be constructed.</p>\\n\"\n  syntax:\n    content: public override bool IsGenericTypeDefinition { get; }\n    content.vb: Public Overrides ReadOnly Property IsGenericTypeDefinition As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this <xref href=\\\"System.Reflection.Emit.TypeBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object represents a generic type definition; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Type.IsGenericTypeDefinition\n  seealso:\n  - type: System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition\n    commentId: M:System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition\n  - type: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n    commentId: M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])\n  - type: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])\n    commentId: M:System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])\n  - type: System.Type.IsGenericType\n    commentId: P:System.Type.IsGenericType\n  - type: System.Type.IsGenericTypeDefinition\n    commentId: P:System.Type.IsGenericTypeDefinition\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.IsGenericTypeDefinition\n- uid: System.Reflection.Emit.TypeBuilder.IsSerializable\n  commentId: P:System.Reflection.Emit.TypeBuilder.IsSerializable\n  id: IsSerializable\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsSerializable\n  fullName: System.Reflection.Emit.TypeBuilder.IsSerializable\n  type: Property\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsSerializable\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 40\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool IsSerializable { get; }\n    content.vb: Public Overrides ReadOnly Property IsSerializable As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  overridden: System.Type.IsSerializable\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.IsSerializable\n- uid: System.Reflection.Emit.TypeBuilder.Namespace\n  commentId: P:System.Reflection.Emit.TypeBuilder.Namespace\n  id: Namespace\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: Namespace\n  fullName: System.Reflection.Emit.TypeBuilder.Namespace\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Namespace\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1081\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the namespace where this <strong>TypeBuilder</strong> is defined.</p>\\n\"\n  syntax:\n    content: public override string Namespace { get; }\n    content.vb: Public Overrides ReadOnly Property Namespace As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Read-only. Retrieves the namespace where this <strong>TypeBuilder</strong> is defined.</p>\\n\"\n  overridden: System.Type.Namespace\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.Namespace\n- uid: System.Reflection.Emit.TypeBuilder.DeclaringType\n  commentId: P:System.Reflection.Emit.TypeBuilder.DeclaringType\n  id: DeclaringType\n  parent: System.Reflection.Emit.TypeBuilder\n  langs:\n  - csharp\n  - vb\n  name: DeclaringType\n  fullName: System.Reflection.Emit.TypeBuilder.DeclaringType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeclaringType\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 1007\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the type that declared this type.</p>\\n\"\n  syntax:\n    content: public override Type DeclaringType { get; }\n    content.vb: Public Overrides ReadOnly Property DeclaringType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>Read-only. The type that declared this type.</p>\\n\"\n  overridden: System.Type.DeclaringType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: TypeBuilder.DeclaringType\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  fullName: System.Reflection.MemberInfo\n  nameWithType: MemberInfo\n  commentId: T:System.Reflection.MemberInfo\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: false\n  name: TypeInfo\n  fullName: System.Reflection.TypeInfo\n  nameWithType: TypeInfo\n  commentId: T:System.Reflection.TypeInfo\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  commentId: T:System.Reflection.ICustomAttributeProvider\n- uid: System.Runtime.InteropServices._MemberInfo\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _MemberInfo\n  fullName: System.Runtime.InteropServices._MemberInfo\n  nameWithType: _MemberInfo\n  commentId: T:System.Runtime.InteropServices._MemberInfo\n- uid: System.Runtime.InteropServices._Type\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Type\n  fullName: System.Runtime.InteropServices._Type\n  nameWithType: _Type\n  commentId: T:System.Runtime.InteropServices._Type\n- uid: System.Reflection.IReflect\n  parent: System.Reflection\n  isExternal: true\n  name: IReflect\n  fullName: System.Reflection.IReflect\n  nameWithType: IReflect\n  commentId: T:System.Reflection.IReflect\n- uid: System.Reflection.IReflectableType\n  parent: System.Reflection\n  isExternal: false\n  name: IReflectableType\n  fullName: System.Reflection.IReflectableType\n  nameWithType: IReflectableType\n  commentId: T:System.Reflection.IReflectableType\n- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: IReflectableType.GetTypeInfo()\n  fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo()\n  name.vb: System.Reflection.IReflectableType.GetTypeInfo()\n  spec.csharp:\n  - uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n    name: IReflectableType.GetTypeInfo\n    fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n    name: System.Reflection.IReflectableType.GetTypeInfo\n    fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeInfo.IReflectableType.GetTypeInfo()\n  nameWithType.vb: TypeInfo.System.Reflection.IReflectableType.GetTypeInfo()\n  commentId: M:System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n- uid: System.Reflection.TypeInfo.AsType\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: AsType()\n  fullName: System.Reflection.TypeInfo.AsType()\n  spec.csharp:\n  - uid: System.Reflection.TypeInfo.AsType\n    name: AsType\n    fullName: System.Reflection.TypeInfo.AsType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeInfo.AsType\n    name: AsType\n    fullName: System.Reflection.TypeInfo.AsType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeInfo.AsType()\n  commentId: M:System.Reflection.TypeInfo.AsType\n- uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: GetDeclaredEvent(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n    name: GetDeclaredEvent\n    fullName: System.Reflection.TypeInfo.GetDeclaredEvent\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n    name: GetDeclaredEvent\n    fullName: System.Reflection.TypeInfo.GetDeclaredEvent\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeInfo.GetDeclaredEvent(String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n- uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: GetDeclaredField(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)\n    name: GetDeclaredField\n    fullName: System.Reflection.TypeInfo.GetDeclaredField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)\n    name: GetDeclaredField\n    fullName: System.Reflection.TypeInfo.GetDeclaredField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeInfo.GetDeclaredField(String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredField(System.String)\n- uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: GetDeclaredMethod(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n    name: GetDeclaredMethod\n    fullName: System.Reflection.TypeInfo.GetDeclaredMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n    name: GetDeclaredMethod\n    fullName: System.Reflection.TypeInfo.GetDeclaredMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeInfo.GetDeclaredMethod(String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n- uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: GetDeclaredMethods(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n    name: GetDeclaredMethods\n    fullName: System.Reflection.TypeInfo.GetDeclaredMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n    name: GetDeclaredMethods\n    fullName: System.Reflection.TypeInfo.GetDeclaredMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeInfo.GetDeclaredMethods(String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n- uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: GetDeclaredNestedType(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n    name: GetDeclaredNestedType\n    fullName: System.Reflection.TypeInfo.GetDeclaredNestedType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n    name: GetDeclaredNestedType\n    fullName: System.Reflection.TypeInfo.GetDeclaredNestedType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeInfo.GetDeclaredNestedType(String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n- uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: GetDeclaredProperty(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n    name: GetDeclaredProperty\n    fullName: System.Reflection.TypeInfo.GetDeclaredProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n    name: GetDeclaredProperty\n    fullName: System.Reflection.TypeInfo.GetDeclaredProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeInfo.GetDeclaredProperty(String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n- uid: System.Reflection.TypeInfo.GenericTypeParameters\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: GenericTypeParameters\n  fullName: System.Reflection.TypeInfo.GenericTypeParameters\n  nameWithType: TypeInfo.GenericTypeParameters\n  commentId: P:System.Reflection.TypeInfo.GenericTypeParameters\n- uid: System.Reflection.TypeInfo.DeclaredConstructors\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: DeclaredConstructors\n  fullName: System.Reflection.TypeInfo.DeclaredConstructors\n  nameWithType: TypeInfo.DeclaredConstructors\n  commentId: P:System.Reflection.TypeInfo.DeclaredConstructors\n- uid: System.Reflection.TypeInfo.DeclaredEvents\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: DeclaredEvents\n  fullName: System.Reflection.TypeInfo.DeclaredEvents\n  nameWithType: TypeInfo.DeclaredEvents\n  commentId: P:System.Reflection.TypeInfo.DeclaredEvents\n- uid: System.Reflection.TypeInfo.DeclaredFields\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: DeclaredFields\n  fullName: System.Reflection.TypeInfo.DeclaredFields\n  nameWithType: TypeInfo.DeclaredFields\n  commentId: P:System.Reflection.TypeInfo.DeclaredFields\n- uid: System.Reflection.TypeInfo.DeclaredMembers\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: DeclaredMembers\n  fullName: System.Reflection.TypeInfo.DeclaredMembers\n  nameWithType: TypeInfo.DeclaredMembers\n  commentId: P:System.Reflection.TypeInfo.DeclaredMembers\n- uid: System.Reflection.TypeInfo.DeclaredMethods\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: DeclaredMethods\n  fullName: System.Reflection.TypeInfo.DeclaredMethods\n  nameWithType: TypeInfo.DeclaredMethods\n  commentId: P:System.Reflection.TypeInfo.DeclaredMethods\n- uid: System.Reflection.TypeInfo.DeclaredNestedTypes\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: DeclaredNestedTypes\n  fullName: System.Reflection.TypeInfo.DeclaredNestedTypes\n  nameWithType: TypeInfo.DeclaredNestedTypes\n  commentId: P:System.Reflection.TypeInfo.DeclaredNestedTypes\n- uid: System.Reflection.TypeInfo.DeclaredProperties\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: DeclaredProperties\n  fullName: System.Reflection.TypeInfo.DeclaredProperties\n  nameWithType: TypeInfo.DeclaredProperties\n  commentId: P:System.Reflection.TypeInfo.DeclaredProperties\n- uid: System.Reflection.TypeInfo.ImplementedInterfaces\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: ImplementedInterfaces\n  fullName: System.Reflection.TypeInfo.ImplementedInterfaces\n  nameWithType: TypeInfo.ImplementedInterfaces\n  commentId: P:System.Reflection.TypeInfo.ImplementedInterfaces\n- uid: System.Type.FilterAttribute\n  parent: System.Type\n  isExternal: true\n  name: FilterAttribute\n  fullName: System.Type.FilterAttribute\n  nameWithType: Type.FilterAttribute\n  commentId: F:System.Type.FilterAttribute\n- uid: System.Type.FilterName\n  parent: System.Type\n  isExternal: true\n  name: FilterName\n  fullName: System.Type.FilterName\n  nameWithType: Type.FilterName\n  commentId: F:System.Type.FilterName\n- uid: System.Type.FilterNameIgnoreCase\n  parent: System.Type\n  isExternal: true\n  name: FilterNameIgnoreCase\n  fullName: System.Type.FilterNameIgnoreCase\n  nameWithType: Type.FilterNameIgnoreCase\n  commentId: F:System.Type.FilterNameIgnoreCase\n- uid: System.Type.Missing\n  parent: System.Type\n  isExternal: true\n  name: Missing\n  fullName: System.Type.Missing\n  nameWithType: Type.Missing\n  commentId: F:System.Type.Missing\n- uid: System.Type.Delimiter\n  parent: System.Type\n  isExternal: true\n  name: Delimiter\n  fullName: System.Type.Delimiter\n  nameWithType: Type.Delimiter\n  commentId: F:System.Type.Delimiter\n- uid: System.Type.EmptyTypes\n  parent: System.Type\n  isExternal: true\n  name: EmptyTypes\n  fullName: System.Type.EmptyTypes\n  nameWithType: Type.EmptyTypes\n  commentId: F:System.Type.EmptyTypes\n- uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: GetType(String, Boolean, Boolean)\n  fullName: System.Type.GetType(System.String, System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetType(String, Boolean, Boolean)\n  commentId: M:System.Type.GetType(System.String,System.Boolean,System.Boolean)\n- uid: System.Type.GetType(System.String,System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: GetType(String, Boolean)\n  fullName: System.Type.GetType(System.String, System.Boolean)\n  spec.csharp:\n  - uid: System.Type.GetType(System.String,System.Boolean)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetType(System.String,System.Boolean)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetType(String, Boolean)\n  commentId: M:System.Type.GetType(System.String,System.Boolean)\n- uid: System.Type.GetType(System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetType(String)\n  fullName: System.Type.GetType(System.String)\n  spec.csharp:\n  - uid: System.Type.GetType(System.String)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetType(System.String)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetType(String)\n  commentId: M:System.Type.GetType(System.String)\n- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})\n  parent: System.Type\n  isExternal: true\n  name: GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>)\n  fullName: System.Type.GetType(System.String, System.Func<System.Reflection.AssemblyName, System.Reflection.Assembly>, System.Func<System.Reflection.Assembly, System.String, System.Boolean, System.Type>)\n  fullname.vb: System.Type.GetType(System.String, System.Func(Of System.Reflection.AssemblyName, System.Reflection.Assembly), System.Func(Of System.Reflection.Assembly, System.String, System.Boolean, System.Type))\n  name.vb: GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type))\n  spec.csharp:\n  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`4\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`4\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Type.GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>)\n  nameWithType.vb: Type.GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type))\n  commentId: M:System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})\n- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean)\n  fullName: System.Type.GetType(System.String, System.Func<System.Reflection.AssemblyName, System.Reflection.Assembly>, System.Func<System.Reflection.Assembly, System.String, System.Boolean, System.Type>, System.Boolean)\n  fullname.vb: System.Type.GetType(System.String, System.Func(Of System.Reflection.AssemblyName, System.Reflection.Assembly), System.Func(Of System.Reflection.Assembly, System.String, System.Boolean, System.Type), System.Boolean)\n  name.vb: GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type), Boolean)\n  spec.csharp:\n  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`4\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`4\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean)\n  nameWithType.vb: Type.GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type), Boolean)\n  commentId: M:System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)\n- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean, Boolean)\n  fullName: System.Type.GetType(System.String, System.Func<System.Reflection.AssemblyName, System.Reflection.Assembly>, System.Func<System.Reflection.Assembly, System.String, System.Boolean, System.Type>, System.Boolean, System.Boolean)\n  fullname.vb: System.Type.GetType(System.String, System.Func(Of System.Reflection.AssemblyName, System.Reflection.Assembly), System.Func(Of System.Reflection.Assembly, System.String, System.Boolean, System.Type), System.Boolean, System.Boolean)\n  name.vb: GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type), Boolean, Boolean)\n  spec.csharp:\n  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`4\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`4\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetType(String, Func<AssemblyName, Assembly>, Func<Assembly, String, Boolean, Type>, Boolean, Boolean)\n  nameWithType.vb: Type.GetType(String, Func(Of AssemblyName, Assembly), Func(Of Assembly, String, Boolean, Type), Boolean, Boolean)\n  commentId: M:System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)\n- uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: ReflectionOnlyGetType(String, Boolean, Boolean)\n  fullName: System.Type.ReflectionOnlyGetType(System.String, System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n    name: ReflectionOnlyGetType\n    fullName: System.Type.ReflectionOnlyGetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n    name: ReflectionOnlyGetType\n    fullName: System.Type.ReflectionOnlyGetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.ReflectionOnlyGetType(String, Boolean, Boolean)\n  commentId: M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n- uid: System.Type.GetTypeFromProgID(System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeFromProgID(String)\n  fullName: System.Type.GetTypeFromProgID(System.String)\n  spec.csharp:\n  - uid: System.Type.GetTypeFromProgID(System.String)\n    name: GetTypeFromProgID\n    fullName: System.Type.GetTypeFromProgID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeFromProgID(System.String)\n    name: GetTypeFromProgID\n    fullName: System.Type.GetTypeFromProgID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeFromProgID(String)\n  commentId: M:System.Type.GetTypeFromProgID(System.String)\n- uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeFromProgID(String, Boolean)\n  fullName: System.Type.GetTypeFromProgID(System.String, System.Boolean)\n  spec.csharp:\n  - uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)\n    name: GetTypeFromProgID\n    fullName: System.Type.GetTypeFromProgID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)\n    name: GetTypeFromProgID\n    fullName: System.Type.GetTypeFromProgID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeFromProgID(String, Boolean)\n  commentId: M:System.Type.GetTypeFromProgID(System.String,System.Boolean)\n- uid: System.Type.GetTypeFromProgID(System.String,System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeFromProgID(String, String)\n  fullName: System.Type.GetTypeFromProgID(System.String, System.String)\n  spec.csharp:\n  - uid: System.Type.GetTypeFromProgID(System.String,System.String)\n    name: GetTypeFromProgID\n    fullName: System.Type.GetTypeFromProgID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeFromProgID(System.String,System.String)\n    name: GetTypeFromProgID\n    fullName: System.Type.GetTypeFromProgID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeFromProgID(String, String)\n  commentId: M:System.Type.GetTypeFromProgID(System.String,System.String)\n- uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeFromProgID(String, String, Boolean)\n  fullName: System.Type.GetTypeFromProgID(System.String, System.String, System.Boolean)\n  spec.csharp:\n  - uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)\n    name: GetTypeFromProgID\n    fullName: System.Type.GetTypeFromProgID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)\n    name: GetTypeFromProgID\n    fullName: System.Type.GetTypeFromProgID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeFromProgID(String, String, Boolean)\n  commentId: M:System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)\n- uid: System.Type.GetTypeFromCLSID(System.Guid)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeFromCLSID(Guid)\n  fullName: System.Type.GetTypeFromCLSID(System.Guid)\n  spec.csharp:\n  - uid: System.Type.GetTypeFromCLSID(System.Guid)\n    name: GetTypeFromCLSID\n    fullName: System.Type.GetTypeFromCLSID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeFromCLSID(System.Guid)\n    name: GetTypeFromCLSID\n    fullName: System.Type.GetTypeFromCLSID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeFromCLSID(Guid)\n  commentId: M:System.Type.GetTypeFromCLSID(System.Guid)\n- uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeFromCLSID(Guid, Boolean)\n  fullName: System.Type.GetTypeFromCLSID(System.Guid, System.Boolean)\n  spec.csharp:\n  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)\n    name: GetTypeFromCLSID\n    fullName: System.Type.GetTypeFromCLSID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)\n    name: GetTypeFromCLSID\n    fullName: System.Type.GetTypeFromCLSID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeFromCLSID(Guid, Boolean)\n  commentId: M:System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)\n- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeFromCLSID(Guid, String)\n  fullName: System.Type.GetTypeFromCLSID(System.Guid, System.String)\n  spec.csharp:\n  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)\n    name: GetTypeFromCLSID\n    fullName: System.Type.GetTypeFromCLSID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)\n    name: GetTypeFromCLSID\n    fullName: System.Type.GetTypeFromCLSID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeFromCLSID(Guid, String)\n  commentId: M:System.Type.GetTypeFromCLSID(System.Guid,System.String)\n- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeFromCLSID(Guid, String, Boolean)\n  fullName: System.Type.GetTypeFromCLSID(System.Guid, System.String, System.Boolean)\n  spec.csharp:\n  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)\n    name: GetTypeFromCLSID\n    fullName: System.Type.GetTypeFromCLSID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)\n    name: GetTypeFromCLSID\n    fullName: System.Type.GetTypeFromCLSID\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeFromCLSID(Guid, String, Boolean)\n  commentId: M:System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)\n- uid: System.Type.GetTypeCode(System.Type)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeCode(Type)\n  fullName: System.Type.GetTypeCode(System.Type)\n  spec.csharp:\n  - uid: System.Type.GetTypeCode(System.Type)\n    name: GetTypeCode\n    fullName: System.Type.GetTypeCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeCode(System.Type)\n    name: GetTypeCode\n    fullName: System.Type.GetTypeCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeCode(Type)\n  commentId: M:System.Type.GetTypeCode(System.Type)\n- uid: System.Type.GetTypeCodeImpl\n  parent: System.Type\n  isExternal: true\n  name: GetTypeCodeImpl()\n  fullName: System.Type.GetTypeCodeImpl()\n  spec.csharp:\n  - uid: System.Type.GetTypeCodeImpl\n    name: GetTypeCodeImpl\n    fullName: System.Type.GetTypeCodeImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeCodeImpl\n    name: GetTypeCodeImpl\n    fullName: System.Type.GetTypeCodeImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeCodeImpl()\n  commentId: M:System.Type.GetTypeCodeImpl\n- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  parent: System.Type\n  isExternal: true\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  fullName: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, System.String[])\n  fullname.vb: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object(), System.Reflection.ParameterModifier(), System.Globalization.CultureInfo, System.String())\n  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object(), ParameterModifier(), CultureInfo, String())\n  spec.csharp:\n  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n    name: InvokeMember\n    fullName: System.Type.InvokeMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n    name: InvokeMember\n    fullName: System.Type.InvokeMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  nameWithType.vb: Type.InvokeMember(String, BindingFlags, Binder, Object, Object(), ParameterModifier(), CultureInfo, String())\n  commentId: M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Type\n  isExternal: true\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)\n  fullName: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[], System.Globalization.CultureInfo)\n  fullname.vb: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object(), System.Globalization.CultureInfo)\n  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object(), CultureInfo)\n  spec.csharp:\n  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n    name: InvokeMember\n    fullName: System.Type.InvokeMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n    name: InvokeMember\n    fullName: System.Type.InvokeMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)\n  nameWithType.vb: Type.InvokeMember(String, BindingFlags, Binder, Object, Object(), CultureInfo)\n  commentId: M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n  parent: System.Type\n  isExternal: true\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[])\n  fullName: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object[])\n  fullname.vb: System.Type.InvokeMember(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object, System.Object())\n  name.vb: InvokeMember(String, BindingFlags, Binder, Object, Object())\n  spec.csharp:\n  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n    name: InvokeMember\n    fullName: System.Type.InvokeMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n    name: InvokeMember\n    fullName: System.Type.InvokeMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.InvokeMember(String, BindingFlags, Binder, Object, Object[])\n  nameWithType.vb: Type.InvokeMember(String, BindingFlags, Binder, Object, Object())\n  commentId: M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n- uid: System.Type.GetTypeHandle(System.Object)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeHandle(Object)\n  fullName: System.Type.GetTypeHandle(System.Object)\n  spec.csharp:\n  - uid: System.Type.GetTypeHandle(System.Object)\n    name: GetTypeHandle\n    fullName: System.Type.GetTypeHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeHandle(System.Object)\n    name: GetTypeHandle\n    fullName: System.Type.GetTypeHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeHandle(Object)\n  commentId: M:System.Type.GetTypeHandle(System.Object)\n- uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)\n  parent: System.Type\n  isExternal: true\n  name: GetTypeFromHandle(RuntimeTypeHandle)\n  fullName: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)\n  spec.csharp:\n  - uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)\n    name: GetTypeFromHandle\n    fullName: System.Type.GetTypeFromHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.RuntimeTypeHandle\n    name: RuntimeTypeHandle\n    fullName: System.RuntimeTypeHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)\n    name: GetTypeFromHandle\n    fullName: System.Type.GetTypeFromHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.RuntimeTypeHandle\n    name: RuntimeTypeHandle\n    fullName: System.RuntimeTypeHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeFromHandle(RuntimeTypeHandle)\n  commentId: M:System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)\n- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetConstructor(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetConstructor\n    fullName: System.Type.GetConstructor\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetConstructor\n    fullName: System.Type.GetConstructor\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetConstructor(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  commentId: M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])\n  fullName: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetConstructor(BindingFlags, Binder, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetConstructor\n    fullName: System.Type.GetConstructor\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetConstructor\n    fullName: System.Type.GetConstructor\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetConstructor(BindingFlags, Binder, Type(), ParameterModifier())\n  commentId: M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetConstructor(System.Type[])\n  parent: System.Type\n  isExternal: true\n  name: GetConstructor(Type[])\n  fullName: System.Type.GetConstructor(System.Type[])\n  fullname.vb: System.Type.GetConstructor(System.Type())\n  name.vb: GetConstructor(Type())\n  spec.csharp:\n  - uid: System.Type.GetConstructor(System.Type[])\n    name: GetConstructor\n    fullName: System.Type.GetConstructor\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetConstructor(System.Type[])\n    name: GetConstructor\n    fullName: System.Type.GetConstructor\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetConstructor(Type[])\n  nameWithType.vb: Type.GetConstructor(Type())\n  commentId: M:System.Type.GetConstructor(System.Type[])\n- uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: System.Type.GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetConstructorImpl\n    fullName: System.Type.GetConstructorImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetConstructorImpl\n    fullName: System.Type.GetConstructorImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  commentId: M:System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetConstructors\n  parent: System.Type\n  isExternal: true\n  name: GetConstructors()\n  fullName: System.Type.GetConstructors()\n  spec.csharp:\n  - uid: System.Type.GetConstructors\n    name: GetConstructors\n    fullName: System.Type.GetConstructors\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetConstructors\n    name: GetConstructors\n    fullName: System.Type.GetConstructors\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetConstructors()\n  commentId: M:System.Type.GetConstructors\n- uid: System.Type.GetConstructors(System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetConstructors(BindingFlags)\n  fullName: System.Type.GetConstructors(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetConstructors(System.Reflection.BindingFlags)\n    name: GetConstructors\n    fullName: System.Type.GetConstructors\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetConstructors(System.Reflection.BindingFlags)\n    name: GetConstructors\n    fullName: System.Type.GetConstructors\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetConstructors(BindingFlags)\n  commentId: M:System.Type.GetConstructors(System.Reflection.BindingFlags)\n- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetMethod(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetMethod(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  commentId: M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  fullName: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetMethod(String, BindingFlags, Binder, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetMethod(String, BindingFlags, Binder, Type(), ParameterModifier())\n  commentId: M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetMethod(String, Type[], ParameterModifier[])\n  fullName: System.Type.GetMethod(System.String, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetMethod(System.String, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetMethod(String, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMethod(String, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetMethod(String, Type(), ParameterModifier())\n  commentId: M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetMethod(System.String,System.Type[])\n  parent: System.Type\n  isExternal: true\n  name: GetMethod(String, Type[])\n  fullName: System.Type.GetMethod(System.String, System.Type[])\n  fullname.vb: System.Type.GetMethod(System.String, System.Type())\n  name.vb: GetMethod(String, Type())\n  spec.csharp:\n  - uid: System.Type.GetMethod(System.String,System.Type[])\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMethod(System.String,System.Type[])\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMethod(String, Type[])\n  nameWithType.vb: Type.GetMethod(String, Type())\n  commentId: M:System.Type.GetMethod(System.String,System.Type[])\n- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetMethod(String, BindingFlags)\n  fullName: System.Type.GetMethod(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMethod(String, BindingFlags)\n  commentId: M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\n- uid: System.Type.GetMethod(System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetMethod(String)\n  fullName: System.Type.GetMethod(System.String)\n  spec.csharp:\n  - uid: System.Type.GetMethod(System.String)\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMethod(System.String)\n    name: GetMethod\n    fullName: System.Type.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMethod(String)\n  commentId: M:System.Type.GetMethod(System.String)\n- uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: System.Type.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethodImpl\n    fullName: System.Type.GetMethodImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethodImpl\n    fullName: System.Type.GetMethodImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  commentId: M:System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetMethods\n  parent: System.Type\n  isExternal: true\n  name: GetMethods()\n  fullName: System.Type.GetMethods()\n  spec.csharp:\n  - uid: System.Type.GetMethods\n    name: GetMethods\n    fullName: System.Type.GetMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMethods\n    name: GetMethods\n    fullName: System.Type.GetMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMethods()\n  commentId: M:System.Type.GetMethods\n- uid: System.Type.GetMethods(System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetMethods(BindingFlags)\n  fullName: System.Type.GetMethods(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetMethods(System.Reflection.BindingFlags)\n    name: GetMethods\n    fullName: System.Type.GetMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMethods(System.Reflection.BindingFlags)\n    name: GetMethods\n    fullName: System.Type.GetMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMethods(BindingFlags)\n  commentId: M:System.Type.GetMethods(System.Reflection.BindingFlags)\n- uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetField(String, BindingFlags)\n  fullName: System.Type.GetField(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)\n    name: GetField\n    fullName: System.Type.GetField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)\n    name: GetField\n    fullName: System.Type.GetField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetField(String, BindingFlags)\n  commentId: M:System.Type.GetField(System.String,System.Reflection.BindingFlags)\n- uid: System.Type.GetField(System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetField(String)\n  fullName: System.Type.GetField(System.String)\n  spec.csharp:\n  - uid: System.Type.GetField(System.String)\n    name: GetField\n    fullName: System.Type.GetField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetField(System.String)\n    name: GetField\n    fullName: System.Type.GetField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetField(String)\n  commentId: M:System.Type.GetField(System.String)\n- uid: System.Type.GetFields\n  parent: System.Type\n  isExternal: true\n  name: GetFields()\n  fullName: System.Type.GetFields()\n  spec.csharp:\n  - uid: System.Type.GetFields\n    name: GetFields\n    fullName: System.Type.GetFields\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetFields\n    name: GetFields\n    fullName: System.Type.GetFields\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetFields()\n  commentId: M:System.Type.GetFields\n- uid: System.Type.GetFields(System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetFields(BindingFlags)\n  fullName: System.Type.GetFields(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetFields(System.Reflection.BindingFlags)\n    name: GetFields\n    fullName: System.Type.GetFields\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetFields(System.Reflection.BindingFlags)\n    name: GetFields\n    fullName: System.Type.GetFields\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetFields(BindingFlags)\n  commentId: M:System.Type.GetFields(System.Reflection.BindingFlags)\n- uid: System.Type.GetInterface(System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetInterface(String)\n  fullName: System.Type.GetInterface(System.String)\n  spec.csharp:\n  - uid: System.Type.GetInterface(System.String)\n    name: GetInterface\n    fullName: System.Type.GetInterface\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetInterface(System.String)\n    name: GetInterface\n    fullName: System.Type.GetInterface\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetInterface(String)\n  commentId: M:System.Type.GetInterface(System.String)\n- uid: System.Type.GetInterface(System.String,System.Boolean)\n  parent: System.Type\n  isExternal: true\n  name: GetInterface(String, Boolean)\n  fullName: System.Type.GetInterface(System.String, System.Boolean)\n  spec.csharp:\n  - uid: System.Type.GetInterface(System.String,System.Boolean)\n    name: GetInterface\n    fullName: System.Type.GetInterface\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetInterface(System.String,System.Boolean)\n    name: GetInterface\n    fullName: System.Type.GetInterface\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetInterface(String, Boolean)\n  commentId: M:System.Type.GetInterface(System.String,System.Boolean)\n- uid: System.Type.GetInterfaces\n  parent: System.Type\n  isExternal: true\n  name: GetInterfaces()\n  fullName: System.Type.GetInterfaces()\n  spec.csharp:\n  - uid: System.Type.GetInterfaces\n    name: GetInterfaces\n    fullName: System.Type.GetInterfaces\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetInterfaces\n    name: GetInterfaces\n    fullName: System.Type.GetInterfaces\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetInterfaces()\n  commentId: M:System.Type.GetInterfaces\n- uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  parent: System.Type\n  isExternal: true\n  name: FindInterfaces(TypeFilter, Object)\n  fullName: System.Type.FindInterfaces(System.Reflection.TypeFilter, System.Object)\n  spec.csharp:\n  - uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n    name: FindInterfaces\n    fullName: System.Type.FindInterfaces\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeFilter\n    name: TypeFilter\n    fullName: System.Reflection.TypeFilter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n    name: FindInterfaces\n    fullName: System.Type.FindInterfaces\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeFilter\n    name: TypeFilter\n    fullName: System.Reflection.TypeFilter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.FindInterfaces(TypeFilter, Object)\n  commentId: M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n- uid: System.Type.GetEvent(System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetEvent(String)\n  fullName: System.Type.GetEvent(System.String)\n  spec.csharp:\n  - uid: System.Type.GetEvent(System.String)\n    name: GetEvent\n    fullName: System.Type.GetEvent\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetEvent(System.String)\n    name: GetEvent\n    fullName: System.Type.GetEvent\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetEvent(String)\n  commentId: M:System.Type.GetEvent(System.String)\n- uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetEvent(String, BindingFlags)\n  fullName: System.Type.GetEvent(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\n    name: GetEvent\n    fullName: System.Type.GetEvent\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\n    name: GetEvent\n    fullName: System.Type.GetEvent\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetEvent(String, BindingFlags)\n  commentId: M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\n- uid: System.Type.GetEvents\n  parent: System.Type\n  isExternal: true\n  name: GetEvents()\n  fullName: System.Type.GetEvents()\n  spec.csharp:\n  - uid: System.Type.GetEvents\n    name: GetEvents\n    fullName: System.Type.GetEvents\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetEvents\n    name: GetEvents\n    fullName: System.Type.GetEvents\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetEvents()\n  commentId: M:System.Type.GetEvents\n- uid: System.Type.GetEvents(System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetEvents(BindingFlags)\n  fullName: System.Type.GetEvents(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetEvents(System.Reflection.BindingFlags)\n    name: GetEvents\n    fullName: System.Type.GetEvents\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetEvents(System.Reflection.BindingFlags)\n    name: GetEvents\n    fullName: System.Type.GetEvents\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetEvents(BindingFlags)\n  commentId: M:System.Type.GetEvents(System.Reflection.BindingFlags)\n- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  fullName: System.Type.GetProperty(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetProperty(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetProperty(String, BindingFlags, Binder, Type, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetProperty(String, BindingFlags, Binder, Type, Type(), ParameterModifier())\n  commentId: M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetProperty(String, Type, Type[], ParameterModifier[])\n  fullName: System.Type.GetProperty(System.String, System.Type, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetProperty(System.String, System.Type, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetProperty(String, Type, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetProperty(String, Type, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetProperty(String, Type, Type(), ParameterModifier())\n  commentId: M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetProperty(String, BindingFlags)\n  fullName: System.Type.GetProperty(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetProperty(String, BindingFlags)\n  commentId: M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\n- uid: System.Type.GetProperty(System.String,System.Type,System.Type[])\n  parent: System.Type\n  isExternal: true\n  name: GetProperty(String, Type, Type[])\n  fullName: System.Type.GetProperty(System.String, System.Type, System.Type[])\n  fullname.vb: System.Type.GetProperty(System.String, System.Type, System.Type())\n  name.vb: GetProperty(String, Type, Type())\n  spec.csharp:\n  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[])\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetProperty(System.String,System.Type,System.Type[])\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetProperty(String, Type, Type[])\n  nameWithType.vb: Type.GetProperty(String, Type, Type())\n  commentId: M:System.Type.GetProperty(System.String,System.Type,System.Type[])\n- uid: System.Type.GetProperty(System.String,System.Type[])\n  parent: System.Type\n  isExternal: true\n  name: GetProperty(String, Type[])\n  fullName: System.Type.GetProperty(System.String, System.Type[])\n  fullname.vb: System.Type.GetProperty(System.String, System.Type())\n  name.vb: GetProperty(String, Type())\n  spec.csharp:\n  - uid: System.Type.GetProperty(System.String,System.Type[])\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetProperty(System.String,System.Type[])\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetProperty(String, Type[])\n  nameWithType.vb: Type.GetProperty(String, Type())\n  commentId: M:System.Type.GetProperty(System.String,System.Type[])\n- uid: System.Type.GetProperty(System.String,System.Type)\n  parent: System.Type\n  isExternal: true\n  name: GetProperty(String, Type)\n  fullName: System.Type.GetProperty(System.String, System.Type)\n  spec.csharp:\n  - uid: System.Type.GetProperty(System.String,System.Type)\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetProperty(System.String,System.Type)\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetProperty(String, Type)\n  commentId: M:System.Type.GetProperty(System.String,System.Type)\n- uid: System.Type.GetProperty(System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetProperty(String)\n  fullName: System.Type.GetProperty(System.String)\n  spec.csharp:\n  - uid: System.Type.GetProperty(System.String)\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetProperty(System.String)\n    name: GetProperty\n    fullName: System.Type.GetProperty\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetProperty(String)\n  commentId: M:System.Type.GetProperty(System.String)\n- uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Type\n  isExternal: true\n  name: GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  fullName: System.Type.GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Type.GetPropertyImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetPropertyImpl(String, BindingFlags, Binder, Type, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetPropertyImpl\n    fullName: System.Type.GetPropertyImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetPropertyImpl\n    fullName: System.Type.GetPropertyImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  nameWithType.vb: Type.GetPropertyImpl(String, BindingFlags, Binder, Type, Type(), ParameterModifier())\n  commentId: M:System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Type.GetProperties(System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetProperties(BindingFlags)\n  fullName: System.Type.GetProperties(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetProperties(System.Reflection.BindingFlags)\n    name: GetProperties\n    fullName: System.Type.GetProperties\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetProperties(System.Reflection.BindingFlags)\n    name: GetProperties\n    fullName: System.Type.GetProperties\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetProperties(BindingFlags)\n  commentId: M:System.Type.GetProperties(System.Reflection.BindingFlags)\n- uid: System.Type.GetProperties\n  parent: System.Type\n  isExternal: true\n  name: GetProperties()\n  fullName: System.Type.GetProperties()\n  spec.csharp:\n  - uid: System.Type.GetProperties\n    name: GetProperties\n    fullName: System.Type.GetProperties\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetProperties\n    name: GetProperties\n    fullName: System.Type.GetProperties\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetProperties()\n  commentId: M:System.Type.GetProperties\n- uid: System.Type.GetNestedTypes\n  parent: System.Type\n  isExternal: true\n  name: GetNestedTypes()\n  fullName: System.Type.GetNestedTypes()\n  spec.csharp:\n  - uid: System.Type.GetNestedTypes\n    name: GetNestedTypes\n    fullName: System.Type.GetNestedTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetNestedTypes\n    name: GetNestedTypes\n    fullName: System.Type.GetNestedTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetNestedTypes()\n  commentId: M:System.Type.GetNestedTypes\n- uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetNestedTypes(BindingFlags)\n  fullName: System.Type.GetNestedTypes(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)\n    name: GetNestedTypes\n    fullName: System.Type.GetNestedTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)\n    name: GetNestedTypes\n    fullName: System.Type.GetNestedTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetNestedTypes(BindingFlags)\n  commentId: M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)\n- uid: System.Type.GetNestedType(System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetNestedType(String)\n  fullName: System.Type.GetNestedType(System.String)\n  spec.csharp:\n  - uid: System.Type.GetNestedType(System.String)\n    name: GetNestedType\n    fullName: System.Type.GetNestedType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetNestedType(System.String)\n    name: GetNestedType\n    fullName: System.Type.GetNestedType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetNestedType(String)\n  commentId: M:System.Type.GetNestedType(System.String)\n- uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetNestedType(String, BindingFlags)\n  fullName: System.Type.GetNestedType(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n    name: GetNestedType\n    fullName: System.Type.GetNestedType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n    name: GetNestedType\n    fullName: System.Type.GetNestedType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetNestedType(String, BindingFlags)\n  commentId: M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n- uid: System.Type.GetMember(System.String)\n  parent: System.Type\n  isExternal: true\n  name: GetMember(String)\n  fullName: System.Type.GetMember(System.String)\n  spec.csharp:\n  - uid: System.Type.GetMember(System.String)\n    name: GetMember\n    fullName: System.Type.GetMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMember(System.String)\n    name: GetMember\n    fullName: System.Type.GetMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMember(String)\n  commentId: M:System.Type.GetMember(System.String)\n- uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetMember(String, BindingFlags)\n  fullName: System.Type.GetMember(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)\n    name: GetMember\n    fullName: System.Type.GetMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)\n    name: GetMember\n    fullName: System.Type.GetMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMember(String, BindingFlags)\n  commentId: M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)\n- uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetMember(String, MemberTypes, BindingFlags)\n  fullName: System.Type.GetMember(System.String, System.Reflection.MemberTypes, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n    name: GetMember\n    fullName: System.Type.GetMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberTypes\n    name: MemberTypes\n    fullName: System.Reflection.MemberTypes\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n    name: GetMember\n    fullName: System.Type.GetMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberTypes\n    name: MemberTypes\n    fullName: System.Reflection.MemberTypes\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMember(String, MemberTypes, BindingFlags)\n  commentId: M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n- uid: System.Type.GetMembers\n  parent: System.Type\n  isExternal: true\n  name: GetMembers()\n  fullName: System.Type.GetMembers()\n  spec.csharp:\n  - uid: System.Type.GetMembers\n    name: GetMembers\n    fullName: System.Type.GetMembers\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMembers\n    name: GetMembers\n    fullName: System.Type.GetMembers\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMembers()\n  commentId: M:System.Type.GetMembers\n- uid: System.Type.GetMembers(System.Reflection.BindingFlags)\n  parent: System.Type\n  isExternal: true\n  name: GetMembers(BindingFlags)\n  fullName: System.Type.GetMembers(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Type.GetMembers(System.Reflection.BindingFlags)\n    name: GetMembers\n    fullName: System.Type.GetMembers\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetMembers(System.Reflection.BindingFlags)\n    name: GetMembers\n    fullName: System.Type.GetMembers\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetMembers(BindingFlags)\n  commentId: M:System.Type.GetMembers(System.Reflection.BindingFlags)\n- uid: System.Type.GetDefaultMembers\n  parent: System.Type\n  isExternal: true\n  name: GetDefaultMembers()\n  fullName: System.Type.GetDefaultMembers()\n  spec.csharp:\n  - uid: System.Type.GetDefaultMembers\n    name: GetDefaultMembers\n    fullName: System.Type.GetDefaultMembers\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetDefaultMembers\n    name: GetDefaultMembers\n    fullName: System.Type.GetDefaultMembers\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetDefaultMembers()\n  commentId: M:System.Type.GetDefaultMembers\n- uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  parent: System.Type\n  isExternal: true\n  name: FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  fullName: System.Type.FindMembers(System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, System.Object)\n  spec.csharp:\n  - uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n    name: FindMembers\n    fullName: System.Type.FindMembers\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberTypes\n    name: MemberTypes\n    fullName: System.Reflection.MemberTypes\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberFilter\n    name: MemberFilter\n    fullName: System.Reflection.MemberFilter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n    name: FindMembers\n    fullName: System.Type.FindMembers\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberTypes\n    name: MemberTypes\n    fullName: System.Reflection.MemberTypes\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberFilter\n    name: MemberFilter\n    fullName: System.Reflection.MemberFilter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  commentId: M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n- uid: System.Type.IsValueTypeImpl\n  parent: System.Type\n  isExternal: true\n  name: IsValueTypeImpl()\n  fullName: System.Type.IsValueTypeImpl()\n  spec.csharp:\n  - uid: System.Type.IsValueTypeImpl\n    name: IsValueTypeImpl\n    fullName: System.Type.IsValueTypeImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsValueTypeImpl\n    name: IsValueTypeImpl\n    fullName: System.Type.IsValueTypeImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.IsValueTypeImpl()\n  commentId: M:System.Type.IsValueTypeImpl\n- uid: System.Type.GetAttributeFlagsImpl\n  parent: System.Type\n  isExternal: true\n  name: GetAttributeFlagsImpl()\n  fullName: System.Type.GetAttributeFlagsImpl()\n  spec.csharp:\n  - uid: System.Type.GetAttributeFlagsImpl\n    name: GetAttributeFlagsImpl\n    fullName: System.Type.GetAttributeFlagsImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetAttributeFlagsImpl\n    name: GetAttributeFlagsImpl\n    fullName: System.Type.GetAttributeFlagsImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetAttributeFlagsImpl()\n  commentId: M:System.Type.GetAttributeFlagsImpl\n- uid: System.Type.IsArrayImpl\n  parent: System.Type\n  isExternal: true\n  name: IsArrayImpl()\n  fullName: System.Type.IsArrayImpl()\n  spec.csharp:\n  - uid: System.Type.IsArrayImpl\n    name: IsArrayImpl\n    fullName: System.Type.IsArrayImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsArrayImpl\n    name: IsArrayImpl\n    fullName: System.Type.IsArrayImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.IsArrayImpl()\n  commentId: M:System.Type.IsArrayImpl\n- uid: System.Type.IsByRefImpl\n  parent: System.Type\n  isExternal: true\n  name: IsByRefImpl()\n  fullName: System.Type.IsByRefImpl()\n  spec.csharp:\n  - uid: System.Type.IsByRefImpl\n    name: IsByRefImpl\n    fullName: System.Type.IsByRefImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsByRefImpl\n    name: IsByRefImpl\n    fullName: System.Type.IsByRefImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.IsByRefImpl()\n  commentId: M:System.Type.IsByRefImpl\n- uid: System.Type.IsPointerImpl\n  parent: System.Type\n  isExternal: true\n  name: IsPointerImpl()\n  fullName: System.Type.IsPointerImpl()\n  spec.csharp:\n  - uid: System.Type.IsPointerImpl\n    name: IsPointerImpl\n    fullName: System.Type.IsPointerImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsPointerImpl\n    name: IsPointerImpl\n    fullName: System.Type.IsPointerImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.IsPointerImpl()\n  commentId: M:System.Type.IsPointerImpl\n- uid: System.Type.IsPrimitiveImpl\n  parent: System.Type\n  isExternal: true\n  name: IsPrimitiveImpl()\n  fullName: System.Type.IsPrimitiveImpl()\n  spec.csharp:\n  - uid: System.Type.IsPrimitiveImpl\n    name: IsPrimitiveImpl\n    fullName: System.Type.IsPrimitiveImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsPrimitiveImpl\n    name: IsPrimitiveImpl\n    fullName: System.Type.IsPrimitiveImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.IsPrimitiveImpl()\n  commentId: M:System.Type.IsPrimitiveImpl\n- uid: System.Type.IsCOMObjectImpl\n  parent: System.Type\n  isExternal: true\n  name: IsCOMObjectImpl()\n  fullName: System.Type.IsCOMObjectImpl()\n  spec.csharp:\n  - uid: System.Type.IsCOMObjectImpl\n    name: IsCOMObjectImpl\n    fullName: System.Type.IsCOMObjectImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsCOMObjectImpl\n    name: IsCOMObjectImpl\n    fullName: System.Type.IsCOMObjectImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.IsCOMObjectImpl()\n  commentId: M:System.Type.IsCOMObjectImpl\n- uid: System.Type.IsContextfulImpl\n  parent: System.Type\n  isExternal: true\n  name: IsContextfulImpl()\n  fullName: System.Type.IsContextfulImpl()\n  spec.csharp:\n  - uid: System.Type.IsContextfulImpl\n    name: IsContextfulImpl\n    fullName: System.Type.IsContextfulImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsContextfulImpl\n    name: IsContextfulImpl\n    fullName: System.Type.IsContextfulImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.IsContextfulImpl()\n  commentId: M:System.Type.IsContextfulImpl\n- uid: System.Type.IsMarshalByRefImpl\n  parent: System.Type\n  isExternal: true\n  name: IsMarshalByRefImpl()\n  fullName: System.Type.IsMarshalByRefImpl()\n  spec.csharp:\n  - uid: System.Type.IsMarshalByRefImpl\n    name: IsMarshalByRefImpl\n    fullName: System.Type.IsMarshalByRefImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsMarshalByRefImpl\n    name: IsMarshalByRefImpl\n    fullName: System.Type.IsMarshalByRefImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.IsMarshalByRefImpl()\n  commentId: M:System.Type.IsMarshalByRefImpl\n- uid: System.Type.GetGenericArguments\n  parent: System.Type\n  isExternal: true\n  name: GetGenericArguments()\n  fullName: System.Type.GetGenericArguments()\n  spec.csharp:\n  - uid: System.Type.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Type.GetGenericArguments\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Type.GetGenericArguments\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetGenericArguments()\n  commentId: M:System.Type.GetGenericArguments\n- uid: System.Type.HasElementTypeImpl\n  parent: System.Type\n  isExternal: true\n  name: HasElementTypeImpl()\n  fullName: System.Type.HasElementTypeImpl()\n  spec.csharp:\n  - uid: System.Type.HasElementTypeImpl\n    name: HasElementTypeImpl\n    fullName: System.Type.HasElementTypeImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.HasElementTypeImpl\n    name: HasElementTypeImpl\n    fullName: System.Type.HasElementTypeImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.HasElementTypeImpl()\n  commentId: M:System.Type.HasElementTypeImpl\n- uid: System.Type.GetEnumNames\n  parent: System.Type\n  isExternal: true\n  name: GetEnumNames()\n  fullName: System.Type.GetEnumNames()\n  spec.csharp:\n  - uid: System.Type.GetEnumNames\n    name: GetEnumNames\n    fullName: System.Type.GetEnumNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetEnumNames\n    name: GetEnumNames\n    fullName: System.Type.GetEnumNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetEnumNames()\n  commentId: M:System.Type.GetEnumNames\n- uid: System.Type.GetEnumValues\n  parent: System.Type\n  isExternal: true\n  name: GetEnumValues()\n  fullName: System.Type.GetEnumValues()\n  spec.csharp:\n  - uid: System.Type.GetEnumValues\n    name: GetEnumValues\n    fullName: System.Type.GetEnumValues\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetEnumValues\n    name: GetEnumValues\n    fullName: System.Type.GetEnumValues\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetEnumValues()\n  commentId: M:System.Type.GetEnumValues\n- uid: System.Type.GetEnumUnderlyingType\n  parent: System.Type\n  isExternal: true\n  name: GetEnumUnderlyingType()\n  fullName: System.Type.GetEnumUnderlyingType()\n  spec.csharp:\n  - uid: System.Type.GetEnumUnderlyingType\n    name: GetEnumUnderlyingType\n    fullName: System.Type.GetEnumUnderlyingType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetEnumUnderlyingType\n    name: GetEnumUnderlyingType\n    fullName: System.Type.GetEnumUnderlyingType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetEnumUnderlyingType()\n  commentId: M:System.Type.GetEnumUnderlyingType\n- uid: System.Type.IsEnumDefined(System.Object)\n  parent: System.Type\n  isExternal: true\n  name: IsEnumDefined(Object)\n  fullName: System.Type.IsEnumDefined(System.Object)\n  spec.csharp:\n  - uid: System.Type.IsEnumDefined(System.Object)\n    name: IsEnumDefined\n    fullName: System.Type.IsEnumDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsEnumDefined(System.Object)\n    name: IsEnumDefined\n    fullName: System.Type.IsEnumDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.IsEnumDefined(Object)\n  commentId: M:System.Type.IsEnumDefined(System.Object)\n- uid: System.Type.GetEnumName(System.Object)\n  parent: System.Type\n  isExternal: true\n  name: GetEnumName(Object)\n  fullName: System.Type.GetEnumName(System.Object)\n  spec.csharp:\n  - uid: System.Type.GetEnumName(System.Object)\n    name: GetEnumName\n    fullName: System.Type.GetEnumName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetEnumName(System.Object)\n    name: GetEnumName\n    fullName: System.Type.GetEnumName\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetEnumName(Object)\n  commentId: M:System.Type.GetEnumName(System.Object)\n- uid: System.Type.IsSubclassOf(System.Type)\n  parent: System.Type\n  isExternal: true\n  name: IsSubclassOf(Type)\n  fullName: System.Type.IsSubclassOf(System.Type)\n  spec.csharp:\n  - uid: System.Type.IsSubclassOf(System.Type)\n    name: IsSubclassOf\n    fullName: System.Type.IsSubclassOf\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsSubclassOf(System.Type)\n    name: IsSubclassOf\n    fullName: System.Type.IsSubclassOf\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.IsSubclassOf(Type)\n  commentId: M:System.Type.IsSubclassOf(System.Type)\n- uid: System.Type.IsInstanceOfType(System.Object)\n  parent: System.Type\n  isExternal: true\n  name: IsInstanceOfType(Object)\n  fullName: System.Type.IsInstanceOfType(System.Object)\n  spec.csharp:\n  - uid: System.Type.IsInstanceOfType(System.Object)\n    name: IsInstanceOfType\n    fullName: System.Type.IsInstanceOfType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsInstanceOfType(System.Object)\n    name: IsInstanceOfType\n    fullName: System.Type.IsInstanceOfType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.IsInstanceOfType(Object)\n  commentId: M:System.Type.IsInstanceOfType(System.Object)\n- uid: System.Type.IsAssignableFrom(System.Type)\n  parent: System.Type\n  isExternal: true\n  name: IsAssignableFrom(Type)\n  fullName: System.Type.IsAssignableFrom(System.Type)\n  spec.csharp:\n  - uid: System.Type.IsAssignableFrom(System.Type)\n    name: IsAssignableFrom\n    fullName: System.Type.IsAssignableFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsAssignableFrom(System.Type)\n    name: IsAssignableFrom\n    fullName: System.Type.IsAssignableFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.IsAssignableFrom(Type)\n  commentId: M:System.Type.IsAssignableFrom(System.Type)\n- uid: System.Type.IsEquivalentTo(System.Type)\n  parent: System.Type\n  isExternal: true\n  name: IsEquivalentTo(Type)\n  fullName: System.Type.IsEquivalentTo(System.Type)\n  spec.csharp:\n  - uid: System.Type.IsEquivalentTo(System.Type)\n    name: IsEquivalentTo\n    fullName: System.Type.IsEquivalentTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.IsEquivalentTo(System.Type)\n    name: IsEquivalentTo\n    fullName: System.Type.IsEquivalentTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.IsEquivalentTo(Type)\n  commentId: M:System.Type.IsEquivalentTo(System.Type)\n- uid: System.Type.GetTypeArray(System.Object[])\n  parent: System.Type\n  isExternal: true\n  name: GetTypeArray(Object[])\n  fullName: System.Type.GetTypeArray(System.Object[])\n  fullname.vb: System.Type.GetTypeArray(System.Object())\n  name.vb: GetTypeArray(Object())\n  spec.csharp:\n  - uid: System.Type.GetTypeArray(System.Object[])\n    name: GetTypeArray\n    fullName: System.Type.GetTypeArray\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetTypeArray(System.Object[])\n    name: GetTypeArray\n    fullName: System.Type.GetTypeArray\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.GetTypeArray(Object[])\n  nameWithType.vb: Type.GetTypeArray(Object())\n  commentId: M:System.Type.GetTypeArray(System.Object[])\n- uid: System.Type.Equals(System.Object)\n  parent: System.Type\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Type.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Type.Equals(System.Object)\n    name: Equals\n    fullName: System.Type.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.Equals(System.Object)\n    name: Equals\n    fullName: System.Type.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.Equals(Object)\n  commentId: M:System.Type.Equals(System.Object)\n- uid: System.Type.Equals(System.Type)\n  parent: System.Type\n  isExternal: true\n  name: Equals(Type)\n  fullName: System.Type.Equals(System.Type)\n  spec.csharp:\n  - uid: System.Type.Equals(System.Type)\n    name: Equals\n    fullName: System.Type.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.Equals(System.Type)\n    name: Equals\n    fullName: System.Type.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.Equals(Type)\n  commentId: M:System.Type.Equals(System.Type)\n- uid: System.Type.GetHashCode\n  parent: System.Type\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Type.GetHashCode()\n  spec.csharp:\n  - uid: System.Type.GetHashCode\n    name: GetHashCode\n    fullName: System.Type.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetHashCode\n    name: GetHashCode\n    fullName: System.Type.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetHashCode()\n  commentId: M:System.Type.GetHashCode\n- uid: System.Type.GetInterfaceMap(System.Type)\n  parent: System.Type\n  isExternal: true\n  name: GetInterfaceMap(Type)\n  fullName: System.Type.GetInterfaceMap(System.Type)\n  spec.csharp:\n  - uid: System.Type.GetInterfaceMap(System.Type)\n    name: GetInterfaceMap\n    fullName: System.Type.GetInterfaceMap\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetInterfaceMap(System.Type)\n    name: GetInterfaceMap\n    fullName: System.Type.GetInterfaceMap\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.GetInterfaceMap(Type)\n  commentId: M:System.Type.GetInterfaceMap(System.Type)\n- uid: System.Type.GetType\n  parent: System.Type\n  isExternal: true\n  name: GetType()\n  fullName: System.Type.GetType()\n  spec.csharp:\n  - uid: System.Type.GetType\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetType\n    name: GetType\n    fullName: System.Type.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetType()\n  commentId: M:System.Type.GetType\n- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)\n  parent: System.Type\n  isExternal: true\n  name: _Type.GetTypeInfoCount(UInt32)\n  fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32)\n  name.vb: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)\n  spec.csharp:\n  - uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)\n    name: _Type.GetTypeInfoCount\n    fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)\n    name: System.Runtime.InteropServices._Type.GetTypeInfoCount\n    fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type._Type.GetTypeInfoCount(UInt32)\n  nameWithType.vb: Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)\n  commentId: M:System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)\n- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Type\n  isExternal: true\n  name: _Type.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: _Type.GetTypeInfo\n    fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._Type.GetTypeInfo\n    fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type._Type.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType.vb: Type.System.Runtime.InteropServices._Type.GetTypeInfo(UInt32, UInt32, IntPtr)\n  commentId: M:System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Type\n  isExternal: true\n  name: _Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: _Type.GetIDsOfNames\n    fullName: System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._Type.GetIDsOfNames\n    fullName: System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type._Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType.vb: Type.System.Runtime.InteropServices._Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  commentId: M:System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Type\n  isExternal: true\n  name: _Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: System.Type.System.Runtime.InteropServices._Type.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  spec.csharp:\n  - uid: System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: _Type.Invoke\n    fullName: System.Type.System.Runtime.InteropServices._Type.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: System.Runtime.InteropServices._Type.Invoke\n    fullName: System.Type.System.Runtime.InteropServices._Type.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type._Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType.vb: Type.System.Runtime.InteropServices._Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  commentId: M:System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n- uid: System.Type.MemberType\n  parent: System.Type\n  isExternal: true\n  name: MemberType\n  fullName: System.Type.MemberType\n  nameWithType: Type.MemberType\n  commentId: P:System.Type.MemberType\n- uid: System.Type.ReflectedType\n  parent: System.Type\n  isExternal: true\n  name: ReflectedType\n  fullName: System.Type.ReflectedType\n  nameWithType: Type.ReflectedType\n  commentId: P:System.Type.ReflectedType\n- uid: System.Type.StructLayoutAttribute\n  parent: System.Type\n  isExternal: true\n  name: StructLayoutAttribute\n  fullName: System.Type.StructLayoutAttribute\n  nameWithType: Type.StructLayoutAttribute\n  commentId: P:System.Type.StructLayoutAttribute\n- uid: System.Type.DefaultBinder\n  parent: System.Type\n  isExternal: true\n  name: DefaultBinder\n  fullName: System.Type.DefaultBinder\n  nameWithType: Type.DefaultBinder\n  commentId: P:System.Type.DefaultBinder\n- uid: System.Type.TypeHandle\n  parent: System.Type\n  isExternal: true\n  name: TypeHandle\n  fullName: System.Type.TypeHandle\n  nameWithType: Type.TypeHandle\n  commentId: P:System.Type.TypeHandle\n- uid: System.Type.TypeInitializer\n  parent: System.Type\n  isExternal: true\n  name: TypeInitializer\n  fullName: System.Type.TypeInitializer\n  nameWithType: Type.TypeInitializer\n  commentId: P:System.Type.TypeInitializer\n- uid: System.Type.IsNested\n  parent: System.Type\n  isExternal: true\n  name: IsNested\n  fullName: System.Type.IsNested\n  nameWithType: Type.IsNested\n  commentId: P:System.Type.IsNested\n- uid: System.Type.IsVisible\n  parent: System.Type\n  isExternal: true\n  name: IsVisible\n  fullName: System.Type.IsVisible\n  nameWithType: Type.IsVisible\n  commentId: P:System.Type.IsVisible\n- uid: System.Type.IsNotPublic\n  parent: System.Type\n  isExternal: true\n  name: IsNotPublic\n  fullName: System.Type.IsNotPublic\n  nameWithType: Type.IsNotPublic\n  commentId: P:System.Type.IsNotPublic\n- uid: System.Type.IsPublic\n  parent: System.Type\n  isExternal: true\n  name: IsPublic\n  fullName: System.Type.IsPublic\n  nameWithType: Type.IsPublic\n  commentId: P:System.Type.IsPublic\n- uid: System.Type.IsNestedPublic\n  parent: System.Type\n  isExternal: true\n  name: IsNestedPublic\n  fullName: System.Type.IsNestedPublic\n  nameWithType: Type.IsNestedPublic\n  commentId: P:System.Type.IsNestedPublic\n- uid: System.Type.IsNestedPrivate\n  parent: System.Type\n  isExternal: true\n  name: IsNestedPrivate\n  fullName: System.Type.IsNestedPrivate\n  nameWithType: Type.IsNestedPrivate\n  commentId: P:System.Type.IsNestedPrivate\n- uid: System.Type.IsNestedFamily\n  parent: System.Type\n  isExternal: true\n  name: IsNestedFamily\n  fullName: System.Type.IsNestedFamily\n  nameWithType: Type.IsNestedFamily\n  commentId: P:System.Type.IsNestedFamily\n- uid: System.Type.IsNestedAssembly\n  parent: System.Type\n  isExternal: true\n  name: IsNestedAssembly\n  fullName: System.Type.IsNestedAssembly\n  nameWithType: Type.IsNestedAssembly\n  commentId: P:System.Type.IsNestedAssembly\n- uid: System.Type.IsNestedFamANDAssem\n  parent: System.Type\n  isExternal: true\n  name: IsNestedFamANDAssem\n  fullName: System.Type.IsNestedFamANDAssem\n  nameWithType: Type.IsNestedFamANDAssem\n  commentId: P:System.Type.IsNestedFamANDAssem\n- uid: System.Type.IsNestedFamORAssem\n  parent: System.Type\n  isExternal: true\n  name: IsNestedFamORAssem\n  fullName: System.Type.IsNestedFamORAssem\n  nameWithType: Type.IsNestedFamORAssem\n  commentId: P:System.Type.IsNestedFamORAssem\n- uid: System.Type.IsAutoLayout\n  parent: System.Type\n  isExternal: true\n  name: IsAutoLayout\n  fullName: System.Type.IsAutoLayout\n  nameWithType: Type.IsAutoLayout\n  commentId: P:System.Type.IsAutoLayout\n- uid: System.Type.IsLayoutSequential\n  parent: System.Type\n  isExternal: true\n  name: IsLayoutSequential\n  fullName: System.Type.IsLayoutSequential\n  nameWithType: Type.IsLayoutSequential\n  commentId: P:System.Type.IsLayoutSequential\n- uid: System.Type.IsExplicitLayout\n  parent: System.Type\n  isExternal: true\n  name: IsExplicitLayout\n  fullName: System.Type.IsExplicitLayout\n  nameWithType: Type.IsExplicitLayout\n  commentId: P:System.Type.IsExplicitLayout\n- uid: System.Type.IsClass\n  parent: System.Type\n  isExternal: true\n  name: IsClass\n  fullName: System.Type.IsClass\n  nameWithType: Type.IsClass\n  commentId: P:System.Type.IsClass\n- uid: System.Type.IsInterface\n  parent: System.Type\n  isExternal: true\n  name: IsInterface\n  fullName: System.Type.IsInterface\n  nameWithType: Type.IsInterface\n  commentId: P:System.Type.IsInterface\n- uid: System.Type.IsValueType\n  parent: System.Type\n  isExternal: true\n  name: IsValueType\n  fullName: System.Type.IsValueType\n  nameWithType: Type.IsValueType\n  commentId: P:System.Type.IsValueType\n- uid: System.Type.IsAbstract\n  parent: System.Type\n  isExternal: true\n  name: IsAbstract\n  fullName: System.Type.IsAbstract\n  nameWithType: Type.IsAbstract\n  commentId: P:System.Type.IsAbstract\n- uid: System.Type.IsSealed\n  parent: System.Type\n  isExternal: true\n  name: IsSealed\n  fullName: System.Type.IsSealed\n  nameWithType: Type.IsSealed\n  commentId: P:System.Type.IsSealed\n- uid: System.Type.IsSpecialName\n  parent: System.Type\n  isExternal: true\n  name: IsSpecialName\n  fullName: System.Type.IsSpecialName\n  nameWithType: Type.IsSpecialName\n  commentId: P:System.Type.IsSpecialName\n- uid: System.Type.IsImport\n  parent: System.Type\n  isExternal: true\n  name: IsImport\n  fullName: System.Type.IsImport\n  nameWithType: Type.IsImport\n  commentId: P:System.Type.IsImport\n- uid: System.Type.IsAnsiClass\n  parent: System.Type\n  isExternal: true\n  name: IsAnsiClass\n  fullName: System.Type.IsAnsiClass\n  nameWithType: Type.IsAnsiClass\n  commentId: P:System.Type.IsAnsiClass\n- uid: System.Type.IsUnicodeClass\n  parent: System.Type\n  isExternal: true\n  name: IsUnicodeClass\n  fullName: System.Type.IsUnicodeClass\n  nameWithType: Type.IsUnicodeClass\n  commentId: P:System.Type.IsUnicodeClass\n- uid: System.Type.IsAutoClass\n  parent: System.Type\n  isExternal: true\n  name: IsAutoClass\n  fullName: System.Type.IsAutoClass\n  nameWithType: Type.IsAutoClass\n  commentId: P:System.Type.IsAutoClass\n- uid: System.Type.IsArray\n  parent: System.Type\n  isExternal: true\n  name: IsArray\n  fullName: System.Type.IsArray\n  nameWithType: Type.IsArray\n  commentId: P:System.Type.IsArray\n- uid: System.Type.IsConstructedGenericType\n  parent: System.Type\n  isExternal: true\n  name: IsConstructedGenericType\n  fullName: System.Type.IsConstructedGenericType\n  nameWithType: Type.IsConstructedGenericType\n  commentId: P:System.Type.IsConstructedGenericType\n- uid: System.Type.IsByRef\n  parent: System.Type\n  isExternal: true\n  name: IsByRef\n  fullName: System.Type.IsByRef\n  nameWithType: Type.IsByRef\n  commentId: P:System.Type.IsByRef\n- uid: System.Type.IsPointer\n  parent: System.Type\n  isExternal: true\n  name: IsPointer\n  fullName: System.Type.IsPointer\n  nameWithType: Type.IsPointer\n  commentId: P:System.Type.IsPointer\n- uid: System.Type.IsPrimitive\n  parent: System.Type\n  isExternal: true\n  name: IsPrimitive\n  fullName: System.Type.IsPrimitive\n  nameWithType: Type.IsPrimitive\n  commentId: P:System.Type.IsPrimitive\n- uid: System.Type.IsCOMObject\n  parent: System.Type\n  isExternal: true\n  name: IsCOMObject\n  fullName: System.Type.IsCOMObject\n  nameWithType: Type.IsCOMObject\n  commentId: P:System.Type.IsCOMObject\n- uid: System.Type.HasElementType\n  parent: System.Type\n  isExternal: true\n  name: HasElementType\n  fullName: System.Type.HasElementType\n  nameWithType: Type.HasElementType\n  commentId: P:System.Type.HasElementType\n- uid: System.Type.IsContextful\n  parent: System.Type\n  isExternal: true\n  name: IsContextful\n  fullName: System.Type.IsContextful\n  nameWithType: Type.IsContextful\n  commentId: P:System.Type.IsContextful\n- uid: System.Type.IsMarshalByRef\n  parent: System.Type\n  isExternal: true\n  name: IsMarshalByRef\n  fullName: System.Type.IsMarshalByRef\n  nameWithType: Type.IsMarshalByRef\n  commentId: P:System.Type.IsMarshalByRef\n- uid: System.Type.IsSecurityCritical\n  parent: System.Type\n  isExternal: true\n  name: IsSecurityCritical\n  fullName: System.Type.IsSecurityCritical\n  nameWithType: Type.IsSecurityCritical\n  commentId: P:System.Type.IsSecurityCritical\n- uid: System.Type.IsSecuritySafeCritical\n  parent: System.Type\n  isExternal: true\n  name: IsSecuritySafeCritical\n  fullName: System.Type.IsSecuritySafeCritical\n  nameWithType: Type.IsSecuritySafeCritical\n  commentId: P:System.Type.IsSecuritySafeCritical\n- uid: System.Type.IsSecurityTransparent\n  parent: System.Type\n  isExternal: true\n  name: IsSecurityTransparent\n  fullName: System.Type.IsSecurityTransparent\n  nameWithType: Type.IsSecurityTransparent\n  commentId: P:System.Type.IsSecurityTransparent\n- uid: System.Type.UnderlyingSystemType\n  parent: System.Type\n  isExternal: true\n  name: UnderlyingSystemType\n  fullName: System.Type.UnderlyingSystemType\n  nameWithType: Type.UnderlyingSystemType\n  commentId: P:System.Type.UnderlyingSystemType\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: GetCustomAttributes(Boolean)\n  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: IsDefined(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.IsDefined(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.MemberInfo.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.MemberInfo.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributesData\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: GetCustomAttributesData()\n  fullName: System.Reflection.MemberInfo.GetCustomAttributesData()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.MemberInfo.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.MemberInfo.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.GetCustomAttributesData()\n  commentId: M:System.Reflection.MemberInfo.GetCustomAttributesData\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetType()\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetType()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n    name: _MemberInfo.GetType\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n    name: System.Runtime.InteropServices._MemberInfo.GetType\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetType()\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32)\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n    name: _MemberInfo.GetTypeInfoCount\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: _MemberInfo.GetTypeInfo\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfo\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: _MemberInfo.GetIDsOfNames\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: _MemberInfo.Invoke\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: System.Runtime.InteropServices._MemberInfo.Invoke\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n- uid: System.Reflection.MemberInfo.CustomAttributes\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: CustomAttributes\n  fullName: System.Reflection.MemberInfo.CustomAttributes\n  nameWithType: MemberInfo.CustomAttributes\n  commentId: P:System.Reflection.MemberInfo.CustomAttributes\n- uid: System.Reflection.MemberInfo.MetadataToken\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: MetadataToken\n  fullName: System.Reflection.MemberInfo.MetadataToken\n  nameWithType: MemberInfo.MetadataToken\n  commentId: P:System.Reflection.MemberInfo.MetadataToken\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Type.System.Reflection.IntrospectionExtensions.GetTypeInfo\n  parent: System.Reflection.IntrospectionExtensions\n  definition: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)\n  name: GetTypeInfo()\n  fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo()\n  spec.csharp:\n  - uid: System.Reflection.IntrospectionExtensions.GetTypeInfo\n    name: GetTypeInfo\n    fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.IntrospectionExtensions.GetTypeInfo\n    name: GetTypeInfo\n    fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IntrospectionExtensions.GetTypeInfo()\n  commentId: M:System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken\n  parent: System.Reflection.MemberInfoExtensions\n  definition: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  name: HasMetadataToken()\n  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.HasMetadataToken()\n  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken\n  parent: System.Reflection.MemberInfoExtensions\n  definition: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  name: GetMetadataToken()\n  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.GetMetadataToken()\n  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Type.System.Reflection.TypeExtensions.GetConstructor(System.Type[])\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])\n  name: GetConstructor(Type[])\n  fullName: System.Reflection.TypeExtensions.GetConstructor(System.Type[])\n  fullname.vb: System.Reflection.TypeExtensions.GetConstructor(System.Type())\n  name.vb: GetConstructor(Type())\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetConstructor(System.Type[])\n    name: GetConstructor\n    fullName: System.Reflection.TypeExtensions.GetConstructor\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetConstructor(System.Type[])\n    name: GetConstructor\n    fullName: System.Reflection.TypeExtensions.GetConstructor\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetConstructor(Type[])\n  nameWithType.vb: TypeExtensions.GetConstructor(Type())\n  commentId: M:System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])\n- uid: System.Type.System.Reflection.TypeExtensions.GetConstructors\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetConstructors(System.Type)\n  name: GetConstructors()\n  fullName: System.Reflection.TypeExtensions.GetConstructors()\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetConstructors\n    name: GetConstructors\n    fullName: System.Reflection.TypeExtensions.GetConstructors\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetConstructors\n    name: GetConstructors\n    fullName: System.Reflection.TypeExtensions.GetConstructors\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetConstructors()\n  commentId: M:System.Reflection.TypeExtensions.GetConstructors(System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)\n  name: GetConstructors(BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)\n    name: GetConstructors\n    fullName: System.Reflection.TypeExtensions.GetConstructors\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Reflection.BindingFlags)\n    name: GetConstructors\n    fullName: System.Reflection.TypeExtensions.GetConstructors\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetConstructors(BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetDefaultMembers\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)\n  name: GetDefaultMembers()\n  fullName: System.Reflection.TypeExtensions.GetDefaultMembers()\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetDefaultMembers\n    name: GetDefaultMembers\n    fullName: System.Reflection.TypeExtensions.GetDefaultMembers\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetDefaultMembers\n    name: GetDefaultMembers\n    fullName: System.Reflection.TypeExtensions.GetDefaultMembers\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetDefaultMembers()\n  commentId: M:System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetEvent(System.String)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)\n  name: GetEvent(String)\n  fullName: System.Reflection.TypeExtensions.GetEvent(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetEvent(System.String)\n    name: GetEvent\n    fullName: System.Reflection.TypeExtensions.GetEvent\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetEvent(System.String)\n    name: GetEvent\n    fullName: System.Reflection.TypeExtensions.GetEvent\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetEvent(String)\n  commentId: M:System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)\n- uid: System.Type.System.Reflection.TypeExtensions.GetEvent(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)\n  name: GetEvent(String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetEvent(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetEvent(System.String,System.Reflection.BindingFlags)\n    name: GetEvent\n    fullName: System.Reflection.TypeExtensions.GetEvent\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetEvent(System.String,System.Reflection.BindingFlags)\n    name: GetEvent\n    fullName: System.Reflection.TypeExtensions.GetEvent\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetEvent(String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetEvents\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetEvents(System.Type)\n  name: GetEvents()\n  fullName: System.Reflection.TypeExtensions.GetEvents()\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetEvents\n    name: GetEvents\n    fullName: System.Reflection.TypeExtensions.GetEvents\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetEvents\n    name: GetEvents\n    fullName: System.Reflection.TypeExtensions.GetEvents\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetEvents()\n  commentId: M:System.Reflection.TypeExtensions.GetEvents(System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)\n  name: GetEvents(BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)\n    name: GetEvents\n    fullName: System.Reflection.TypeExtensions.GetEvents\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetEvents(System.Reflection.BindingFlags)\n    name: GetEvents\n    fullName: System.Reflection.TypeExtensions.GetEvents\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetEvents(BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetField(System.String)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetField(System.Type,System.String)\n  name: GetField(String)\n  fullName: System.Reflection.TypeExtensions.GetField(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetField(System.String)\n    name: GetField\n    fullName: System.Reflection.TypeExtensions.GetField\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetField(System.String)\n    name: GetField\n    fullName: System.Reflection.TypeExtensions.GetField\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetField(String)\n  commentId: M:System.Reflection.TypeExtensions.GetField(System.Type,System.String)\n- uid: System.Type.System.Reflection.TypeExtensions.GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)\n  name: GetField(String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetField(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetField(System.String,System.Reflection.BindingFlags)\n    name: GetField\n    fullName: System.Reflection.TypeExtensions.GetField\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetField(System.String,System.Reflection.BindingFlags)\n    name: GetField\n    fullName: System.Reflection.TypeExtensions.GetField\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetField(String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetFields\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetFields(System.Type)\n  name: GetFields()\n  fullName: System.Reflection.TypeExtensions.GetFields()\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetFields\n    name: GetFields\n    fullName: System.Reflection.TypeExtensions.GetFields\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetFields\n    name: GetFields\n    fullName: System.Reflection.TypeExtensions.GetFields\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetFields()\n  commentId: M:System.Reflection.TypeExtensions.GetFields(System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)\n  name: GetFields(BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)\n    name: GetFields\n    fullName: System.Reflection.TypeExtensions.GetFields\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetFields(System.Reflection.BindingFlags)\n    name: GetFields\n    fullName: System.Reflection.TypeExtensions.GetFields\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetFields(BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetGenericArguments\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)\n  name: GetGenericArguments()\n  fullName: System.Reflection.TypeExtensions.GetGenericArguments()\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Reflection.TypeExtensions.GetGenericArguments\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Reflection.TypeExtensions.GetGenericArguments\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetGenericArguments()\n  commentId: M:System.Reflection.TypeExtensions.GetGenericArguments(System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetInterfaces\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetInterfaces(System.Type)\n  name: GetInterfaces()\n  fullName: System.Reflection.TypeExtensions.GetInterfaces()\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetInterfaces\n    name: GetInterfaces\n    fullName: System.Reflection.TypeExtensions.GetInterfaces\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetInterfaces\n    name: GetInterfaces\n    fullName: System.Reflection.TypeExtensions.GetInterfaces\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetInterfaces()\n  commentId: M:System.Reflection.TypeExtensions.GetInterfaces(System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetMember(System.String)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)\n  name: GetMember(String)\n  fullName: System.Reflection.TypeExtensions.GetMember(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMember(System.String)\n    name: GetMember\n    fullName: System.Reflection.TypeExtensions.GetMember\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMember(System.String)\n    name: GetMember\n    fullName: System.Reflection.TypeExtensions.GetMember\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMember(String)\n  commentId: M:System.Reflection.TypeExtensions.GetMember(System.Type,System.String)\n- uid: System.Type.System.Reflection.TypeExtensions.GetMember(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)\n  name: GetMember(String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetMember(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMember(System.String,System.Reflection.BindingFlags)\n    name: GetMember\n    fullName: System.Reflection.TypeExtensions.GetMember\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMember(System.String,System.Reflection.BindingFlags)\n    name: GetMember\n    fullName: System.Reflection.TypeExtensions.GetMember\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMember(String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetMembers\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetMembers(System.Type)\n  name: GetMembers()\n  fullName: System.Reflection.TypeExtensions.GetMembers()\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMembers\n    name: GetMembers\n    fullName: System.Reflection.TypeExtensions.GetMembers\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMembers\n    name: GetMembers\n    fullName: System.Reflection.TypeExtensions.GetMembers\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMembers()\n  commentId: M:System.Reflection.TypeExtensions.GetMembers(System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)\n  name: GetMembers(BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)\n    name: GetMembers\n    fullName: System.Reflection.TypeExtensions.GetMembers\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMembers(System.Reflection.BindingFlags)\n    name: GetMembers\n    fullName: System.Reflection.TypeExtensions.GetMembers\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMembers(BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetMethod(System.String)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)\n  name: GetMethod(String)\n  fullName: System.Reflection.TypeExtensions.GetMethod(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.String)\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.String)\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethod(String)\n  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)\n- uid: System.Type.System.Reflection.TypeExtensions.GetMethod(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)\n  name: GetMethod(String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetMethod(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.String,System.Reflection.BindingFlags)\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.String,System.Reflection.BindingFlags)\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethod(String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetMethod(System.String,System.Type[])\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])\n  name: GetMethod(String, Type[])\n  fullName: System.Reflection.TypeExtensions.GetMethod(System.String, System.Type[])\n  fullname.vb: System.Reflection.TypeExtensions.GetMethod(System.String, System.Type())\n  name.vb: GetMethod(String, Type())\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.String,System.Type[])\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.String,System.Type[])\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethod(String, Type[])\n  nameWithType.vb: TypeExtensions.GetMethod(String, Type())\n  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])\n- uid: System.Type.System.Reflection.TypeExtensions.GetMethods\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetMethods(System.Type)\n  name: GetMethods()\n  fullName: System.Reflection.TypeExtensions.GetMethods()\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethods\n    name: GetMethods\n    fullName: System.Reflection.TypeExtensions.GetMethods\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethods\n    name: GetMethods\n    fullName: System.Reflection.TypeExtensions.GetMethods\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethods()\n  commentId: M:System.Reflection.TypeExtensions.GetMethods(System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)\n  name: GetMethods(BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)\n    name: GetMethods\n    fullName: System.Reflection.TypeExtensions.GetMethods\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethods(System.Reflection.BindingFlags)\n    name: GetMethods\n    fullName: System.Reflection.TypeExtensions.GetMethods\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethods(BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetNestedType(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)\n  name: GetNestedType(String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetNestedType(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetNestedType(System.String,System.Reflection.BindingFlags)\n    name: GetNestedType\n    fullName: System.Reflection.TypeExtensions.GetNestedType\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetNestedType(System.String,System.Reflection.BindingFlags)\n    name: GetNestedType\n    fullName: System.Reflection.TypeExtensions.GetNestedType\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetNestedType(String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)\n  name: GetNestedTypes(BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)\n    name: GetNestedTypes\n    fullName: System.Reflection.TypeExtensions.GetNestedTypes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Reflection.BindingFlags)\n    name: GetNestedTypes\n    fullName: System.Reflection.TypeExtensions.GetNestedTypes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetNestedTypes(BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetProperties\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetProperties(System.Type)\n  name: GetProperties()\n  fullName: System.Reflection.TypeExtensions.GetProperties()\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperties\n    name: GetProperties\n    fullName: System.Reflection.TypeExtensions.GetProperties\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperties\n    name: GetProperties\n    fullName: System.Reflection.TypeExtensions.GetProperties\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperties()\n  commentId: M:System.Reflection.TypeExtensions.GetProperties(System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)\n  name: GetProperties(BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)\n    name: GetProperties\n    fullName: System.Reflection.TypeExtensions.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperties(System.Reflection.BindingFlags)\n    name: GetProperties\n    fullName: System.Reflection.TypeExtensions.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperties(BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetProperty(System.String)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)\n  name: GetProperty(String)\n  fullName: System.Reflection.TypeExtensions.GetProperty(System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.String)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.String)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperty(String)\n  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)\n- uid: System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)\n  name: GetProperty(String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetProperty(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Reflection.BindingFlags)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Reflection.BindingFlags)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperty(String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Type)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)\n  name: GetProperty(String, Type)\n  fullName: System.Reflection.TypeExtensions.GetProperty(System.String, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Type)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Type)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperty(String, Type)\n  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.GetProperty(System.String,System.Type,System.Type[])\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])\n  name: GetProperty(String, Type, Type[])\n  fullName: System.Reflection.TypeExtensions.GetProperty(System.String, System.Type, System.Type[])\n  fullname.vb: System.Reflection.TypeExtensions.GetProperty(System.String, System.Type, System.Type())\n  name.vb: GetProperty(String, Type, Type())\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Type,System.Type[])\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.String,System.Type,System.Type[])\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperty(String, Type, Type[])\n  nameWithType.vb: TypeExtensions.GetProperty(String, Type, Type())\n  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])\n- uid: System.Type.System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)\n  name: IsAssignableFrom(Type)\n  fullName: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)\n    name: IsAssignableFrom\n    fullName: System.Reflection.TypeExtensions.IsAssignableFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type)\n    name: IsAssignableFrom\n    fullName: System.Reflection.TypeExtensions.IsAssignableFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.IsAssignableFrom(Type)\n  commentId: M:System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)\n- uid: System.Type.System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)\n  parent: System.Reflection.TypeExtensions\n  definition: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)\n  name: IsInstanceOfType(Object)\n  fullName: System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)\n    name: IsInstanceOfType\n    fullName: System.Reflection.TypeExtensions.IsInstanceOfType\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Object)\n    name: IsInstanceOfType\n    fullName: System.Reflection.TypeExtensions.IsInstanceOfType\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.IsInstanceOfType(Object)\n  commentId: M:System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  name: GetCustomAttribute(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  name: GetCustomAttribute(Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  name: GetCustomAttribute<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  name.vb: GetCustomAttribute(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  name: GetCustomAttribute<T>(Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Boolean)\n  name.vb: GetCustomAttribute(Of T)(Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  name: GetCustomAttributes()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  name: GetCustomAttributes(Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  name: GetCustomAttributes(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  name: GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  name: GetCustomAttributes<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  name.vb: GetCustomAttributes(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  name: GetCustomAttributes<T>(Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Boolean)\n  name.vb: GetCustomAttributes(Of T)(Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  name: IsDefined(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  name: IsDefined(Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)\n  name: GetRuntimeEvent(String)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)\n    name: GetRuntimeEvent\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.String)\n    name: GetRuntimeEvent\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeEvent(String)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)\n- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)\n  name: GetRuntimeEvents()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents\n    name: GetRuntimeEvents\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents\n    name: GetRuntimeEvents\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeEvents()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)\n- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)\n  name: GetRuntimeField(String)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)\n    name: GetRuntimeField\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.String)\n    name: GetRuntimeField\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeField(String)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)\n- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)\n  name: GetRuntimeFields()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields\n    name: GetRuntimeFields\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields\n    name: GetRuntimeFields\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeFields()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)\n- uid: System.Reflection.TypeInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)\n  name: GetRuntimeInterfaceMap(Type)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)\n    name: GetRuntimeInterfaceMap\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Type)\n    name: GetRuntimeInterfaceMap\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(Type)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)\n- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String,System.Type[])\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])\n  name: GetRuntimeMethod(String, Type[])\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String, System.Type[])\n  fullname.vb: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String, System.Type())\n  name.vb: GetRuntimeMethod(String, Type())\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String,System.Type[])\n    name: GetRuntimeMethod\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.String,System.Type[])\n    name: GetRuntimeMethod\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeMethod(String, Type[])\n  nameWithType.vb: RuntimeReflectionExtensions.GetRuntimeMethod(String, Type())\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])\n- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)\n  name: GetRuntimeMethods()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods\n    name: GetRuntimeMethods\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods\n    name: GetRuntimeMethods\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeMethods()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)\n- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)\n  name: GetRuntimeProperties()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties\n    name: GetRuntimeProperties\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties\n    name: GetRuntimeProperties\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeProperties()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)\n- uid: System.Type.System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)\n  name: GetRuntimeProperty(String)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)\n    name: GetRuntimeProperty\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.String)\n    name: GetRuntimeProperty\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeProperty(String)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)\n  isExternal: true\n  name: GetTypeInfo(Type)\n  fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)\n    name: GetTypeInfo\n    fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)\n    name: GetTypeInfo\n    fullName: System.Reflection.IntrospectionExtensions.GetTypeInfo\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IntrospectionExtensions.GetTypeInfo(Type)\n  commentId: M:System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)\n- uid: System.Reflection.IntrospectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: IntrospectionExtensions\n  fullName: System.Reflection.IntrospectionExtensions\n  nameWithType: IntrospectionExtensions\n  commentId: T:System.Reflection.IntrospectionExtensions\n- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  isExternal: true\n  name: HasMetadataToken(MemberInfo)\n  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfoExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfoExtensions\n  fullName: System.Reflection.MemberInfoExtensions\n  nameWithType: MemberInfoExtensions\n  commentId: T:System.Reflection.MemberInfoExtensions\n- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetMetadataToken(MemberInfo)\n  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])\n  isExternal: true\n  name: GetConstructor(Type, Type[])\n  fullName: System.Reflection.TypeExtensions.GetConstructor(System.Type, System.Type[])\n  fullname.vb: System.Reflection.TypeExtensions.GetConstructor(System.Type, System.Type())\n  name.vb: GetConstructor(Type, Type())\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])\n    name: GetConstructor\n    fullName: System.Reflection.TypeExtensions.GetConstructor\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])\n    name: GetConstructor\n    fullName: System.Reflection.TypeExtensions.GetConstructor\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetConstructor(Type, Type[])\n  nameWithType.vb: TypeExtensions.GetConstructor(Type, Type())\n  commentId: M:System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])\n- uid: System.Reflection.TypeExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: TypeExtensions\n  fullName: System.Reflection.TypeExtensions\n  nameWithType: TypeExtensions\n  commentId: T:System.Reflection.TypeExtensions\n- uid: System.Reflection.TypeExtensions.GetConstructors(System.Type)\n  isExternal: true\n  name: GetConstructors(Type)\n  fullName: System.Reflection.TypeExtensions.GetConstructors(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Type)\n    name: GetConstructors\n    fullName: System.Reflection.TypeExtensions.GetConstructors\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Type)\n    name: GetConstructors\n    fullName: System.Reflection.TypeExtensions.GetConstructors\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetConstructors(Type)\n  commentId: M:System.Reflection.TypeExtensions.GetConstructors(System.Type)\n- uid: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetConstructors(Type, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetConstructors(System.Type, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)\n    name: GetConstructors\n    fullName: System.Reflection.TypeExtensions.GetConstructors\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)\n    name: GetConstructors\n    fullName: System.Reflection.TypeExtensions.GetConstructors\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetConstructors(Type, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)\n  isExternal: true\n  name: GetDefaultMembers(Type)\n  fullName: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)\n    name: GetDefaultMembers\n    fullName: System.Reflection.TypeExtensions.GetDefaultMembers\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)\n    name: GetDefaultMembers\n    fullName: System.Reflection.TypeExtensions.GetDefaultMembers\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetDefaultMembers(Type)\n  commentId: M:System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)\n- uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)\n  isExternal: true\n  name: GetEvent(Type, String)\n  fullName: System.Reflection.TypeExtensions.GetEvent(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)\n    name: GetEvent\n    fullName: System.Reflection.TypeExtensions.GetEvent\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)\n    name: GetEvent\n    fullName: System.Reflection.TypeExtensions.GetEvent\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetEvent(Type, String)\n  commentId: M:System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)\n- uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetEvent(Type, String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetEvent(System.Type, System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetEvent\n    fullName: System.Reflection.TypeExtensions.GetEvent\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetEvent\n    fullName: System.Reflection.TypeExtensions.GetEvent\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetEvent(Type, String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetEvents(System.Type)\n  isExternal: true\n  name: GetEvents(Type)\n  fullName: System.Reflection.TypeExtensions.GetEvents(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetEvents(System.Type)\n    name: GetEvents\n    fullName: System.Reflection.TypeExtensions.GetEvents\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetEvents(System.Type)\n    name: GetEvents\n    fullName: System.Reflection.TypeExtensions.GetEvents\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetEvents(Type)\n  commentId: M:System.Reflection.TypeExtensions.GetEvents(System.Type)\n- uid: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetEvents(Type, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetEvents(System.Type, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)\n    name: GetEvents\n    fullName: System.Reflection.TypeExtensions.GetEvents\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)\n    name: GetEvents\n    fullName: System.Reflection.TypeExtensions.GetEvents\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetEvents(Type, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String)\n  isExternal: true\n  name: GetField(Type, String)\n  fullName: System.Reflection.TypeExtensions.GetField(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String)\n    name: GetField\n    fullName: System.Reflection.TypeExtensions.GetField\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String)\n    name: GetField\n    fullName: System.Reflection.TypeExtensions.GetField\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetField(Type, String)\n  commentId: M:System.Reflection.TypeExtensions.GetField(System.Type,System.String)\n- uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetField(Type, String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetField(System.Type, System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetField\n    fullName: System.Reflection.TypeExtensions.GetField\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetField\n    fullName: System.Reflection.TypeExtensions.GetField\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetField(Type, String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetFields(System.Type)\n  isExternal: true\n  name: GetFields(Type)\n  fullName: System.Reflection.TypeExtensions.GetFields(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetFields(System.Type)\n    name: GetFields\n    fullName: System.Reflection.TypeExtensions.GetFields\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetFields(System.Type)\n    name: GetFields\n    fullName: System.Reflection.TypeExtensions.GetFields\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetFields(Type)\n  commentId: M:System.Reflection.TypeExtensions.GetFields(System.Type)\n- uid: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetFields(Type, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetFields(System.Type, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)\n    name: GetFields\n    fullName: System.Reflection.TypeExtensions.GetFields\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)\n    name: GetFields\n    fullName: System.Reflection.TypeExtensions.GetFields\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetFields(Type, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)\n  isExternal: true\n  name: GetGenericArguments(Type)\n  fullName: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)\n    name: GetGenericArguments\n    fullName: System.Reflection.TypeExtensions.GetGenericArguments\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)\n    name: GetGenericArguments\n    fullName: System.Reflection.TypeExtensions.GetGenericArguments\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetGenericArguments(Type)\n  commentId: M:System.Reflection.TypeExtensions.GetGenericArguments(System.Type)\n- uid: System.Reflection.TypeExtensions.GetInterfaces(System.Type)\n  isExternal: true\n  name: GetInterfaces(Type)\n  fullName: System.Reflection.TypeExtensions.GetInterfaces(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetInterfaces(System.Type)\n    name: GetInterfaces\n    fullName: System.Reflection.TypeExtensions.GetInterfaces\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetInterfaces(System.Type)\n    name: GetInterfaces\n    fullName: System.Reflection.TypeExtensions.GetInterfaces\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetInterfaces(Type)\n  commentId: M:System.Reflection.TypeExtensions.GetInterfaces(System.Type)\n- uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)\n  isExternal: true\n  name: GetMember(Type, String)\n  fullName: System.Reflection.TypeExtensions.GetMember(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)\n    name: GetMember\n    fullName: System.Reflection.TypeExtensions.GetMember\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)\n    name: GetMember\n    fullName: System.Reflection.TypeExtensions.GetMember\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMember(Type, String)\n  commentId: M:System.Reflection.TypeExtensions.GetMember(System.Type,System.String)\n- uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetMember(Type, String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetMember(System.Type, System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetMember\n    fullName: System.Reflection.TypeExtensions.GetMember\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetMember\n    fullName: System.Reflection.TypeExtensions.GetMember\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMember(Type, String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetMembers(System.Type)\n  isExternal: true\n  name: GetMembers(Type)\n  fullName: System.Reflection.TypeExtensions.GetMembers(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMembers(System.Type)\n    name: GetMembers\n    fullName: System.Reflection.TypeExtensions.GetMembers\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMembers(System.Type)\n    name: GetMembers\n    fullName: System.Reflection.TypeExtensions.GetMembers\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMembers(Type)\n  commentId: M:System.Reflection.TypeExtensions.GetMembers(System.Type)\n- uid: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetMembers(Type, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetMembers(System.Type, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)\n    name: GetMembers\n    fullName: System.Reflection.TypeExtensions.GetMembers\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)\n    name: GetMembers\n    fullName: System.Reflection.TypeExtensions.GetMembers\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMembers(Type, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)\n  isExternal: true\n  name: GetMethod(Type, String)\n  fullName: System.Reflection.TypeExtensions.GetMethod(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethod(Type, String)\n  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)\n- uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetMethod(Type, String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetMethod(System.Type, System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethod(Type, String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])\n  isExternal: true\n  name: GetMethod(Type, String, Type[])\n  fullName: System.Reflection.TypeExtensions.GetMethod(System.Type, System.String, System.Type[])\n  fullname.vb: System.Reflection.TypeExtensions.GetMethod(System.Type, System.String, System.Type())\n  name.vb: GetMethod(Type, String, Type())\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])\n    name: GetMethod\n    fullName: System.Reflection.TypeExtensions.GetMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethod(Type, String, Type[])\n  nameWithType.vb: TypeExtensions.GetMethod(Type, String, Type())\n  commentId: M:System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])\n- uid: System.Reflection.TypeExtensions.GetMethods(System.Type)\n  isExternal: true\n  name: GetMethods(Type)\n  fullName: System.Reflection.TypeExtensions.GetMethods(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethods(System.Type)\n    name: GetMethods\n    fullName: System.Reflection.TypeExtensions.GetMethods\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethods(System.Type)\n    name: GetMethods\n    fullName: System.Reflection.TypeExtensions.GetMethods\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethods(Type)\n  commentId: M:System.Reflection.TypeExtensions.GetMethods(System.Type)\n- uid: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetMethods(Type, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetMethods(System.Type, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)\n    name: GetMethods\n    fullName: System.Reflection.TypeExtensions.GetMethods\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)\n    name: GetMethods\n    fullName: System.Reflection.TypeExtensions.GetMethods\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetMethods(Type, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetNestedType(Type, String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetNestedType(System.Type, System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetNestedType\n    fullName: System.Reflection.TypeExtensions.GetNestedType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetNestedType\n    fullName: System.Reflection.TypeExtensions.GetNestedType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetNestedType(Type, String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetNestedTypes(Type, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetNestedTypes(System.Type, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)\n    name: GetNestedTypes\n    fullName: System.Reflection.TypeExtensions.GetNestedTypes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)\n    name: GetNestedTypes\n    fullName: System.Reflection.TypeExtensions.GetNestedTypes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetNestedTypes(Type, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetProperties(System.Type)\n  isExternal: true\n  name: GetProperties(Type)\n  fullName: System.Reflection.TypeExtensions.GetProperties(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperties(System.Type)\n    name: GetProperties\n    fullName: System.Reflection.TypeExtensions.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperties(System.Type)\n    name: GetProperties\n    fullName: System.Reflection.TypeExtensions.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperties(Type)\n  commentId: M:System.Reflection.TypeExtensions.GetProperties(System.Type)\n- uid: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetProperties(Type, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetProperties(System.Type, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)\n    name: GetProperties\n    fullName: System.Reflection.TypeExtensions.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)\n    name: GetProperties\n    fullName: System.Reflection.TypeExtensions.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperties(Type, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)\n  isExternal: true\n  name: GetProperty(Type, String)\n  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperty(Type, String)\n  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)\n- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)\n  isExternal: true\n  name: GetProperty(Type, String, BindingFlags)\n  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperty(Type, String, BindingFlags)\n  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)\n- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)\n  isExternal: true\n  name: GetProperty(Type, String, Type)\n  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperty(Type, String, Type)\n  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)\n- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])\n  isExternal: true\n  name: GetProperty(Type, String, Type, Type[])\n  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String, System.Type, System.Type[])\n  fullname.vb: System.Reflection.TypeExtensions.GetProperty(System.Type, System.String, System.Type, System.Type())\n  name.vb: GetProperty(Type, String, Type, Type())\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])\n    name: GetProperty\n    fullName: System.Reflection.TypeExtensions.GetProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.GetProperty(Type, String, Type, Type[])\n  nameWithType.vb: TypeExtensions.GetProperty(Type, String, Type, Type())\n  commentId: M:System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])\n- uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)\n  isExternal: true\n  name: IsAssignableFrom(Type, Type)\n  fullName: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)\n    name: IsAssignableFrom\n    fullName: System.Reflection.TypeExtensions.IsAssignableFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)\n    name: IsAssignableFrom\n    fullName: System.Reflection.TypeExtensions.IsAssignableFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.IsAssignableFrom(Type, Type)\n  commentId: M:System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)\n- uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)\n  isExternal: true\n  name: IsInstanceOfType(Type, Object)\n  fullName: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type, System.Object)\n  spec.csharp:\n  - uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)\n    name: IsInstanceOfType\n    fullName: System.Reflection.TypeExtensions.IsInstanceOfType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)\n    name: IsInstanceOfType\n    fullName: System.Reflection.TypeExtensions.IsInstanceOfType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeExtensions.IsInstanceOfType(Type, Object)\n  commentId: M:System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  isExternal: true\n  name: GetCustomAttribute(MemberInfo, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: CustomAttributeExtensions\n  fullName: System.Reflection.CustomAttributeExtensions\n  nameWithType: CustomAttributeExtensions\n  commentId: T:System.Reflection.CustomAttributeExtensions\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  isExternal: true\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetCustomAttribute<T>(MemberInfo)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo)\n  name.vb: GetCustomAttribute(Of T)(MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  isExternal: true\n  name: GetCustomAttribute<T>(MemberInfo, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo, System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo, System.Boolean)\n  name.vb: GetCustomAttribute(Of T)(MemberInfo, Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetCustomAttributes<T>(MemberInfo)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo)\n  name.vb: GetCustomAttributes(Of T)(MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  isExternal: true\n  name: GetCustomAttributes<T>(MemberInfo, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo, System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo, System.Boolean)\n  name.vb: GetCustomAttributes(Of T)(MemberInfo, Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  isExternal: true\n  name: IsDefined(MemberInfo, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  isExternal: true\n  name: IsDefined(MemberInfo, Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)\n  isExternal: true\n  name: GetRuntimeEvent(Type, String)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)\n    name: GetRuntimeEvent\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)\n    name: GetRuntimeEvent\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeEvent(Type, String)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)\n  isExternal: true\n  name: GetRuntimeEvents(Type)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)\n    name: GetRuntimeEvents\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)\n    name: GetRuntimeEvents\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeEvents(Type)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)\n  isExternal: true\n  name: GetRuntimeField(Type, String)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)\n    name: GetRuntimeField\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)\n    name: GetRuntimeField\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeField\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeField(Type, String)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)\n  isExternal: true\n  name: GetRuntimeFields(Type)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)\n    name: GetRuntimeFields\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)\n    name: GetRuntimeFields\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeFields(Type)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)\n  isExternal: true\n  name: GetRuntimeInterfaceMap(TypeInfo, Type)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)\n    name: GetRuntimeInterfaceMap\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    fullName: System.Reflection.TypeInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)\n    name: GetRuntimeInterfaceMap\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    fullName: System.Reflection.TypeInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])\n  isExternal: true\n  name: GetRuntimeMethod(Type, String, Type[])\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type, System.String, System.Type[])\n  fullname.vb: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type, System.String, System.Type())\n  name.vb: GetRuntimeMethod(Type, String, Type())\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])\n    name: GetRuntimeMethod\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])\n    name: GetRuntimeMethod\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeMethod(Type, String, Type[])\n  nameWithType.vb: RuntimeReflectionExtensions.GetRuntimeMethod(Type, String, Type())\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)\n  isExternal: true\n  name: GetRuntimeMethods(Type)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)\n    name: GetRuntimeMethods\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)\n    name: GetRuntimeMethods\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeMethods(Type)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)\n  isExternal: true\n  name: GetRuntimeProperties(Type)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)\n    name: GetRuntimeProperties\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)\n    name: GetRuntimeProperties\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeProperties(Type)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)\n  isExternal: true\n  name: GetRuntimeProperty(Type, String)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)\n    name: GetRuntimeProperty\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)\n    name: GetRuntimeProperty\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeProperty(Type, String)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Type.AssemblyQualifiedName\n  parent: System.Type\n  isExternal: true\n  name: AssemblyQualifiedName\n  fullName: System.Type.AssemblyQualifiedName\n  nameWithType: Type.AssemblyQualifiedName\n  commentId: P:System.Type.AssemblyQualifiedName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Type.FullName\n  parent: System.Type\n  isExternal: true\n  name: FullName\n  fullName: System.Type.FullName\n  nameWithType: Type.FullName\n  commentId: P:System.Type.FullName\n- uid: System.Type.IsGenericParameter\n  parent: System.Type\n  isExternal: true\n  name: IsGenericParameter\n  fullName: System.Type.IsGenericParameter\n  nameWithType: Type.IsGenericParameter\n  commentId: P:System.Type.IsGenericParameter\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Reflection.MemberInfo.Name\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Name\n  fullName: System.Reflection.MemberInfo.Name\n  nameWithType: MemberInfo.Name\n  commentId: P:System.Reflection.MemberInfo.Name\n- uid: System.Reflection.Emit.PackingSize\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PackingSize\n  fullName: System.Reflection.Emit.PackingSize\n  nameWithType: PackingSize\n  commentId: T:System.Reflection.Emit.PackingSize\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n  nameWithType: MethodAttributes\n  commentId: T:System.Reflection.MethodAttributes\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  fullName: System.Reflection.CallingConventions\n  nameWithType: CallingConventions\n  commentId: T:System.Reflection.CallingConventions\n- uid: System.Type[]\n  name: Type[]\n  fullName: System.Type[]\n  fullname.vb: System.Type()\n  name.vb: Type()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ()\n    fullName: ()\n  nameWithType: Type[]\n  nameWithType.vb: Type()\n- uid: System.Reflection.Emit.ConstructorBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ConstructorBuilder\n  fullName: System.Reflection.Emit.ConstructorBuilder\n  nameWithType: ConstructorBuilder\n  commentId: T:System.Reflection.Emit.ConstructorBuilder\n- uid: System.Type[][]\n  name: Type[][]\n  fullName: System.Type[][]\n  fullname.vb: System.Type()()\n  name.vb: Type()()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ()\n    fullName: ()\n  nameWithType: Type[][]\n  nameWithType.vb: Type()()\n- uid: System.Reflection.EventAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: EventAttributes\n  fullName: System.Reflection.EventAttributes\n  nameWithType: EventAttributes\n  commentId: T:System.Reflection.EventAttributes\n- uid: System.Reflection.Emit.EventBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: EventBuilder\n  fullName: System.Reflection.Emit.EventBuilder\n  nameWithType: EventBuilder\n  commentId: T:System.Reflection.Emit.EventBuilder\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n  nameWithType: FieldAttributes\n  commentId: T:System.Reflection.FieldAttributes\n- uid: System.Reflection.Emit.FieldBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldBuilder\n  fullName: System.Reflection.Emit.FieldBuilder\n  nameWithType: FieldBuilder\n  commentId: T:System.Reflection.Emit.FieldBuilder\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.Reflection.Emit.GenericTypeParameterBuilder[]\n  name: GenericTypeParameterBuilder[]\n  fullName: System.Reflection.Emit.GenericTypeParameterBuilder[]\n  fullname.vb: System.Reflection.Emit.GenericTypeParameterBuilder()\n  name.vb: GenericTypeParameterBuilder()\n  spec.csharp:\n  - uid: System.Reflection.Emit.GenericTypeParameterBuilder\n    name: GenericTypeParameterBuilder\n    fullName: System.Reflection.Emit.GenericTypeParameterBuilder\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Reflection.Emit.GenericTypeParameterBuilder\n    name: GenericTypeParameterBuilder\n    fullName: System.Reflection.Emit.GenericTypeParameterBuilder\n  - name: ()\n    fullName: ()\n  nameWithType: GenericTypeParameterBuilder[]\n  nameWithType.vb: GenericTypeParameterBuilder()\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Reflection.Emit.MethodBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodBuilder\n  fullName: System.Reflection.Emit.MethodBuilder\n  nameWithType: MethodBuilder\n  commentId: T:System.Reflection.Emit.MethodBuilder\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  fullName: System.Reflection.MethodInfo\n  nameWithType: MethodInfo\n  commentId: T:System.Reflection.MethodInfo\n- uid: System.Reflection.Emit.TypeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeBuilder\n  fullName: System.Reflection.Emit.TypeBuilder\n  nameWithType: TypeBuilder\n  commentId: T:System.Reflection.Emit.TypeBuilder\n- uid: System.Reflection.TypeAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: TypeAttributes\n  fullName: System.Reflection.TypeAttributes\n  nameWithType: TypeAttributes\n  commentId: T:System.Reflection.TypeAttributes\n- uid: System.Reflection.PropertyAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyAttributes\n  fullName: System.Reflection.PropertyAttributes\n  nameWithType: PropertyAttributes\n  commentId: T:System.Reflection.PropertyAttributes\n- uid: System.Reflection.Emit.PropertyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PropertyBuilder\n  fullName: System.Reflection.Emit.PropertyBuilder\n  nameWithType: PropertyBuilder\n  commentId: T:System.Reflection.Emit.PropertyBuilder\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  nameWithType: ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  fullName: System.Reflection.FieldInfo\n  nameWithType: FieldInfo\n  commentId: T:System.Reflection.FieldInfo\n- uid: System.Type.GetGenericTypeDefinition\n  parent: System.Type\n  isExternal: true\n  name: GetGenericTypeDefinition()\n  fullName: System.Type.GetGenericTypeDefinition()\n  spec.csharp:\n  - uid: System.Type.GetGenericTypeDefinition\n    name: GetGenericTypeDefinition\n    fullName: System.Type.GetGenericTypeDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetGenericTypeDefinition\n    name: GetGenericTypeDefinition\n    fullName: System.Type.GetGenericTypeDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetGenericTypeDefinition()\n  commentId: M:System.Type.GetGenericTypeDefinition\n- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  parent: System.Reflection.TypeInfo\n  isExternal: true\n  name: IsAssignableFrom(TypeInfo)\n  fullName: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  spec.csharp:\n  - uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n    name: IsAssignableFrom\n    fullName: System.Reflection.TypeInfo.IsAssignableFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    fullName: System.Reflection.TypeInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n    name: IsAssignableFrom\n    fullName: System.Reflection.TypeInfo.IsAssignableFrom\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    fullName: System.Reflection.TypeInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeInfo.IsAssignableFrom(TypeInfo)\n  commentId: M:System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n- uid: System.Type.MakeArrayType\n  parent: System.Type\n  isExternal: true\n  name: MakeArrayType()\n  fullName: System.Type.MakeArrayType()\n  spec.csharp:\n  - uid: System.Type.MakeArrayType\n    name: MakeArrayType\n    fullName: System.Type.MakeArrayType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.MakeArrayType\n    name: MakeArrayType\n    fullName: System.Type.MakeArrayType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.MakeArrayType()\n  commentId: M:System.Type.MakeArrayType\n- uid: System.Type.MakeArrayType(System.Int32)\n  parent: System.Type\n  isExternal: true\n  name: MakeArrayType(Int32)\n  fullName: System.Type.MakeArrayType(System.Int32)\n  spec.csharp:\n  - uid: System.Type.MakeArrayType(System.Int32)\n    name: MakeArrayType\n    fullName: System.Type.MakeArrayType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.MakeArrayType(System.Int32)\n    name: MakeArrayType\n    fullName: System.Type.MakeArrayType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Type.MakeArrayType(Int32)\n  commentId: M:System.Type.MakeArrayType(System.Int32)\n- uid: System.Type.MakeByRefType\n  parent: System.Type\n  isExternal: true\n  name: MakeByRefType()\n  fullName: System.Type.MakeByRefType()\n  spec.csharp:\n  - uid: System.Type.MakeByRefType\n    name: MakeByRefType\n    fullName: System.Type.MakeByRefType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.MakeByRefType\n    name: MakeByRefType\n    fullName: System.Type.MakeByRefType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.MakeByRefType()\n  commentId: M:System.Type.MakeByRefType\n- uid: System.Type.MakeGenericType(System.Type[])\n  parent: System.Type\n  isExternal: true\n  name: MakeGenericType(Type[])\n  fullName: System.Type.MakeGenericType(System.Type[])\n  fullname.vb: System.Type.MakeGenericType(System.Type())\n  name.vb: MakeGenericType(Type())\n  spec.csharp:\n  - uid: System.Type.MakeGenericType(System.Type[])\n    name: MakeGenericType\n    fullName: System.Type.MakeGenericType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.MakeGenericType(System.Type[])\n    name: MakeGenericType\n    fullName: System.Type.MakeGenericType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Type.MakeGenericType(Type[])\n  nameWithType.vb: Type.MakeGenericType(Type())\n  commentId: M:System.Type.MakeGenericType(System.Type[])\n- uid: System.Type.MakePointerType\n  parent: System.Type\n  isExternal: true\n  name: MakePointerType()\n  fullName: System.Type.MakePointerType()\n  spec.csharp:\n  - uid: System.Type.MakePointerType\n    name: MakePointerType\n    fullName: System.Type.MakePointerType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.MakePointerType\n    name: MakePointerType\n    fullName: System.Type.MakePointerType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.MakePointerType()\n  commentId: M:System.Type.MakePointerType\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  commentId: T:System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.Type.ToString\n  parent: System.Type\n  isExternal: true\n  name: ToString()\n  fullName: System.Type.ToString()\n  spec.csharp:\n  - uid: System.Type.ToString\n    name: ToString\n    fullName: System.Type.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.ToString\n    name: ToString\n    fullName: System.Type.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.ToString()\n  commentId: M:System.Type.ToString\n- uid: System.Type.Assembly\n  parent: System.Type\n  isExternal: true\n  name: Assembly\n  fullName: System.Type.Assembly\n  nameWithType: Type.Assembly\n  commentId: P:System.Type.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  fullName: System.Reflection.Assembly\n  nameWithType: Assembly\n  commentId: T:System.Reflection.Assembly\n- uid: System.Type.BaseType\n  parent: System.Type\n  isExternal: true\n  name: BaseType\n  fullName: System.Type.BaseType\n  nameWithType: Type.BaseType\n  commentId: P:System.Type.BaseType\n- uid: System.Type.DeclaringMethod\n  parent: System.Type\n  isExternal: true\n  name: DeclaringMethod\n  fullName: System.Type.DeclaringMethod\n  nameWithType: Type.DeclaringMethod\n  commentId: P:System.Type.DeclaringMethod\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  fullName: System.Reflection.MethodBase\n  nameWithType: MethodBase\n  commentId: T:System.Reflection.MethodBase\n- uid: System.Type.GenericParameterAttributes\n  parent: System.Type\n  isExternal: true\n  name: GenericParameterAttributes\n  fullName: System.Type.GenericParameterAttributes\n  nameWithType: Type.GenericParameterAttributes\n  commentId: P:System.Type.GenericParameterAttributes\n- uid: System.Reflection.GenericParameterAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: GenericParameterAttributes\n  fullName: System.Reflection.GenericParameterAttributes\n  nameWithType: GenericParameterAttributes\n  commentId: T:System.Reflection.GenericParameterAttributes\n- uid: System.Type.Module\n  parent: System.Type\n  isExternal: true\n  name: Module\n  fullName: System.Type.Module\n  nameWithType: Type.Module\n  commentId: P:System.Type.Module\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.Module\n  nameWithType: Module\n  commentId: T:System.Reflection.Module\n- uid: System.Type.GetArrayRank\n  parent: System.Type\n  isExternal: true\n  name: GetArrayRank()\n  fullName: System.Type.GetArrayRank()\n  spec.csharp:\n  - uid: System.Type.GetArrayRank\n    name: GetArrayRank\n    fullName: System.Type.GetArrayRank\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetArrayRank\n    name: GetArrayRank\n    fullName: System.Type.GetArrayRank\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetArrayRank()\n  commentId: M:System.Type.GetArrayRank\n- uid: System.Type.GetElementType\n  parent: System.Type\n  isExternal: true\n  name: GetElementType()\n  fullName: System.Type.GetElementType()\n  spec.csharp:\n  - uid: System.Type.GetElementType\n    name: GetElementType\n    fullName: System.Type.GetElementType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetElementType\n    name: GetElementType\n    fullName: System.Type.GetElementType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetElementType()\n  commentId: M:System.Type.GetElementType\n- uid: System.Type.GetGenericParameterConstraints\n  parent: System.Type\n  isExternal: true\n  name: GetGenericParameterConstraints()\n  fullName: System.Type.GetGenericParameterConstraints()\n  spec.csharp:\n  - uid: System.Type.GetGenericParameterConstraints\n    name: GetGenericParameterConstraints\n    fullName: System.Type.GetGenericParameterConstraints\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Type.GetGenericParameterConstraints\n    name: GetGenericParameterConstraints\n    fullName: System.Type.GetGenericParameterConstraints\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Type.GetGenericParameterConstraints()\n  commentId: M:System.Type.GetGenericParameterConstraints\n- uid: System.Type.GenericTypeArguments\n  parent: System.Type\n  isExternal: true\n  name: GenericTypeArguments\n  fullName: System.Type.GenericTypeArguments\n  nameWithType: Type.GenericTypeArguments\n  commentId: P:System.Type.GenericTypeArguments\n- uid: System.Type.ContainsGenericParameters\n  parent: System.Type\n  isExternal: true\n  name: ContainsGenericParameters\n  fullName: System.Type.ContainsGenericParameters\n  nameWithType: Type.ContainsGenericParameters\n  commentId: P:System.Type.ContainsGenericParameters\n- uid: System.Type.GenericParameterPosition\n  parent: System.Type\n  isExternal: true\n  name: GenericParameterPosition\n  fullName: System.Type.GenericParameterPosition\n  nameWithType: Type.GenericParameterPosition\n  commentId: P:System.Type.GenericParameterPosition\n- uid: System.Type.GUID\n  parent: System.Type\n  isExternal: true\n  name: GUID\n  fullName: System.Type.GUID\n  nameWithType: Type.GUID\n  commentId: P:System.Type.GUID\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  fullName: System.Guid\n  nameWithType: Guid\n  commentId: T:System.Guid\n- uid: System.Type.IsEnum\n  parent: System.Type\n  isExternal: true\n  name: IsEnum\n  fullName: System.Type.IsEnum\n  nameWithType: Type.IsEnum\n  commentId: P:System.Type.IsEnum\n- uid: System.Type.IsGenericType\n  parent: System.Type\n  isExternal: true\n  name: IsGenericType\n  fullName: System.Type.IsGenericType\n  nameWithType: Type.IsGenericType\n  commentId: P:System.Type.IsGenericType\n- uid: System.Type.IsGenericTypeDefinition\n  parent: System.Type\n  isExternal: true\n  name: IsGenericTypeDefinition\n  fullName: System.Type.IsGenericTypeDefinition\n  nameWithType: Type.IsGenericTypeDefinition\n  commentId: P:System.Type.IsGenericTypeDefinition\n- uid: System.Type.IsSerializable\n  parent: System.Type\n  isExternal: true\n  name: IsSerializable\n  fullName: System.Type.IsSerializable\n  nameWithType: Type.IsSerializable\n  commentId: P:System.Type.IsSerializable\n- uid: System.Type.Namespace\n  parent: System.Type\n  isExternal: true\n  name: Namespace\n  fullName: System.Type.Namespace\n  nameWithType: Type.Namespace\n  commentId: P:System.Type.Namespace\n- uid: System.Type.DeclaringType\n  parent: System.Type\n  isExternal: true\n  name: DeclaringType\n  fullName: System.Type.DeclaringType\n  nameWithType: Type.DeclaringType\n  commentId: P:System.Type.DeclaringType\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.IndexOutOfRangeException\n  isExternal: false\n  name: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  commentId: T:System.IndexOutOfRangeException\n"}