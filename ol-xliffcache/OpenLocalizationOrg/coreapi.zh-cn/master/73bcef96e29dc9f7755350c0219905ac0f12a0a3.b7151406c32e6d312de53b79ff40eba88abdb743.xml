{"nodes":[{"pos":[1306,1315],"content":"X509Store","needQuote":true,"nodes":[{"content":"X509Store","pos":[0,9]}]},{"pos":[2957,2968],"content":"X509Store()","needQuote":true,"nodes":[{"content":"X509Store()","pos":[0,11]}]},{"pos":[4687,4722],"content":"X509Store(StoreName, StoreLocation)","needQuote":true,"nodes":[{"content":"X509Store(StoreName, StoreLocation)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies the name of the X.509 certificate store.","pos":[6164,6254],"source":"\\n<p>One of the enumeration values that specifies the name of the X.509 certificate store."},{"content":"&lt;/p&gt;\\n","pos":[6255,6261],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies the location of the X.509 certificate store.","pos":[6379,6473],"source":"\\n<p>One of the enumeration values that specifies the location of the X.509 certificate store."},{"content":"&lt;/p&gt;\\n","pos":[6474,6480],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;storeLocation&lt;/em&gt; is not a valid location or &lt;em&gt;storeName&lt;/em&gt; is not a valid name.","pos":[6591,6687],"source":"\\n<p>\\n<em>storeLocation</em> is not a valid location or <em>storeName</em> is not a valid name."},{"content":"&lt;/p&gt;\\n","pos":[6688,6694],"source":" </p>\\n"},{"pos":[7424,7456],"content":"X509Store(String, StoreLocation)","needQuote":true,"nodes":[{"content":"X509Store(String, StoreLocation)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies the location of the X.509 certificate store.","pos":[9170,9264],"source":"\\n<p>One of the enumeration values that specifies the location of the X.509 certificate store."},{"content":"&lt;/p&gt;\\n","pos":[9265,9271],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;storeLocation&lt;/em&gt; contains invalid values.","pos":[9382,9436],"source":"\\n<p>\\n<em>storeLocation</em> contains invalid values."},{"content":"&lt;/p&gt;\\n","pos":[9437,9443],"source":" </p>\\n"},{"pos":[9964,9976],"content":"Certificates","needQuote":true,"nodes":[{"content":"Certificates","pos":[0,12]}]},{"content":"\\n&lt;p&gt;A collection of certificates.&lt;/p&gt;\\n","pos":[10957,10997],"source":"\\n<p>A collection of certificates.</p>\\n"},{"pos":[11507,11515],"content":"Location","needQuote":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The location of the certificate store.&lt;/p&gt;\\n","pos":[12415,12464],"source":"\\n<p>The location of the certificate store.</p>\\n"},{"pos":[12836,12840],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The name of the certificate store.&lt;/p&gt;\\n","pos":[13660,13705],"source":"\\n<p>The name of the certificate store.</p>\\n"},{"pos":[14262,14283],"content":"Add(X509Certificate2)","needQuote":true,"nodes":[{"content":"Add(X509Certificate2)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The certificate to add.","pos":[15249,15277],"source":"\\n<p>The certificate to add."},{"content":"&lt;/p&gt;\\n","pos":[15278,15284],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificate&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[15403,15456],"source":"\\n<p>\\n<em>certificate</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[15457,15463],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The certificate could not be added to the store.&lt;/p&gt;\\n","pos":[15614,15673],"source":"\\n<p>The certificate could not be added to the store.</p>\\n"},{"pos":[16168,16177],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[17572,17587],"content":"Open(OpenFlags)","needQuote":true,"nodes":[{"content":"Open(OpenFlags)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;A bitwise combination of enumeration values that specifies the way to open the X.509 certificate store.","pos":[18662,18770],"source":"\\n<p>A bitwise combination of enumeration values that specifies the way to open the X.509 certificate store."},{"content":"&lt;/p&gt;\\n","pos":[18771,18777],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The store is unreadable.","pos":[18942,18971],"source":"\\n<p>The store is unreadable."},{"content":"&lt;/p&gt;\\n","pos":[18972,18978],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[19093,19147],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[19148,19154],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The store contains invalid values.&lt;/p&gt;\\n","pos":[19251,19296],"source":"\\n<p>The store contains invalid values.</p>\\n"},{"pos":[19974,19998],"content":"Remove(X509Certificate2)","needQuote":true,"nodes":[{"content":"Remove(X509Certificate2)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The certificate to remove.&lt;/p&gt;\\n","pos":[20981,21018],"source":"\\n<p>The certificate to remove.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;certificate&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[21137,21190],"source":"\\n<p>\\n<em>certificate</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[21191,21197],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[21312,21366],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[21367,21373],"source":" </p>\\n"},{"pos":[21699,21744],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[21992,21998],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22148,22159],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[22334,22344],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22439,22447],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22516,22517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22544,22545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22615,22623],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22692,22693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22720,22721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22904,22918],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[23037,23043],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23110,23111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23161,23167],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23227,23228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23311,23317],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23384,23385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23435,23441],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23501,23502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23716,23738],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[23886,23892],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23959,23960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24010,24016],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24077,24078]},{"pos":[24133,24139],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24199,24200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24297,24303],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24370,24371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24421,24427],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24488,24489]},{"pos":[24544,24550],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24610,24611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24856,24887],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[25053,25068],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25144,25145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25195,25201],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25262,25263]},{"pos":[25318,25324],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25384,25385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25491,25506],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25582,25583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25633,25639],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25700,25701]},{"pos":[25756,25762],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25822,25823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26053,26066],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[26167,26178],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26250,26251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26278,26279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26352,26363],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26435,26436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26463,26464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26639,26648],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[26741,26748],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26816,26817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26844,26845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26914,26921],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26989,26990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27017,27018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27193,27210],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[27319,27334],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[27410,27411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27438,27439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27516,27531],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[27607,27608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27635,27636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27781,27787],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[27999,28008],"content":"StoreName","needQuote":true,"nodes":[{"content":"StoreName","pos":[0,9]}]},{"pos":[28325,28338],"content":"StoreLocation","needQuote":true,"nodes":[{"content":"StoreLocation","pos":[0,13]}]},{"pos":[28582,28588],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28831,28857],"content":"X509Certificate2Collection","needQuote":true,"nodes":[{"content":"X509Certificate2Collection","pos":[0,26]}]},{"pos":[29228,29244],"content":"X509Certificate2","needQuote":true,"nodes":[{"content":"X509Certificate2","pos":[0,16]}]},{"pos":[29522,29531],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[29634,29641],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[29693,29694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29721,29722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29796,29803],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[29855,29856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29883,29884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30128,30137],"content":"OpenFlags","needQuote":true,"nodes":[{"content":"OpenFlags","pos":[0,9]}]},{"pos":[30380,30397],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[30573,30594],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[30805,30827],"content":"CryptographicException","needQuote":true,"nodes":[{"content":"CryptographicException","pos":[0,22]}]},{"pos":[31067,31084],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]}],"content":"items:\n- uid: System.Security.Cryptography.X509Certificates.X509Store\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Store\n  id: X509Store\n  parent: System.Security.Cryptography.X509Certificates\n  children:\n  - System.Security.Cryptography.X509Certificates.X509Store.#ctor\n  - System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  - System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  - System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.X509Certificates.X509Store.Certificates\n  - System.Security.Cryptography.X509Certificates.X509Store.Dispose\n  - System.Security.Cryptography.X509Certificates.X509Store.Location\n  - System.Security.Cryptography.X509Certificates.X509Store.Name\n  - System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)\n  - System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  langs:\n  - csharp\n  - vb\n  name: X509Store\n  fullName: System.Security.Cryptography.X509Certificates.X509Store\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X509Store\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 425\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: 'public sealed class X509Store : IDisposable'\n    content.vb: >-\n      Public NotInheritable Class X509Store\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: X509Store\n- uid: System.Security.Cryptography.X509Certificates.X509Store.#ctor\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: X509Store()\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.X509Store()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 427\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Store\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the personal certificates of the current user store.</p>\\n\"\n  syntax:\n    content: public X509Store()\n    content.vb: Public Sub New\n  see:\n  - type: System.Security.Permissions.StorePermission\n    commentId: T:System.Security.Permissions.StorePermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Store.X509Store()\n- uid: System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)'\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: X509Store(StoreName, StoreLocation)\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.X509Store(System.Security.Cryptography.X509Certificates.StoreName, System.Security.Cryptography.X509Certificates.StoreLocation)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 428\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Store\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified <xref href=\\\"System.Security.Cryptography.X509Certificates.StoreName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Security.Cryptography.X509Certificates.StoreLocation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  syntax:\n    content: public X509Store(StoreName storeName, StoreLocation storeLocation)\n    content.vb: Public Sub New(storeName As StoreName, storeLocation As StoreLocation)\n    parameters:\n    - id: storeName\n      type: System.Security.Cryptography.X509Certificates.StoreName\n      description: \"\\n<p>One of the enumeration values that specifies the name of the X.509 certificate store. </p>\\n\"\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: \"\\n<p>One of the enumeration values that specifies the location of the X.509 certificate store. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>storeLocation</em> is not a valid location or <em>storeName</em> is not a valid name. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.StorePermission\n    commentId: T:System.Security.Permissions.StorePermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Store.X509Store(StoreName, StoreLocation)\n- uid: System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  id: '#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)'\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: X509Store(String, StoreLocation)\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.X509Store(System.String, System.Security.Cryptography.X509Certificates.StoreLocation)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 429\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Store\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using a string that represents a value from the <xref href=\\\"System.Security.Cryptography.X509Certificates.StoreName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration and a value from the <xref href=\\\"System.Security.Cryptography.X509Certificates.StoreLocation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration.</p>\\n\"\n  syntax:\n    content: public X509Store(string storeName, StoreLocation storeLocation)\n    content.vb: Public Sub New(storeName As String, storeLocation As StoreLocation)\n    parameters:\n    - id: storeName\n      type: System.String\n      description: \"\\n<p>A string that represents a value from the <xref href=\\\"System.Security.Cryptography.X509Certificates.StoreName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration. </p>\\n\"\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: \"\\n<p>One of the enumeration values that specifies the location of the X.509 certificate store. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>storeLocation</em> contains invalid values. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.StorePermission\n    commentId: T:System.Security.Permissions.StorePermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Store.X509Store(String, StoreLocation)\n- uid: System.Security.Cryptography.X509Certificates.X509Store.Certificates\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Store.Certificates\n  id: Certificates\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: Certificates\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.Certificates\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Certificates\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 430\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Returns a collection of certificates located in an X.509 certificate store.</p>\\n\"\n  syntax:\n    content: public X509Certificate2Collection Certificates { get; }\n    content.vb: Public ReadOnly Property Certificates As X509Certificate2Collection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: \"\\n<p>A collection of certificates.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.StorePermission\n    commentId: T:System.Security.Permissions.StorePermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509Store.Certificates\n- uid: System.Security.Cryptography.X509Certificates.X509Store.Location\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Store.Location\n  id: Location\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: Location\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.Location\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Location\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 431\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets the location of the X.509 certificate store.</p>\\n\"\n  syntax:\n    content: public StoreLocation Location { get; }\n    content.vb: Public ReadOnly Property Location As StoreLocation\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: \"\\n<p>The location of the certificate store.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509Store.Location\n- uid: System.Security.Cryptography.X509Certificates.X509Store.Name\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Store.Name\n  id: Name\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 432\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets the name of the X.509 certificate store.</p>\\n\"\n  syntax:\n    content: public string Name { get; }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the certificate store.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509Store.Name\n- uid: System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: Add(X509Certificate2)\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 433\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Adds a certificate to an X.509 certificate store.</p>\\n\"\n  syntax:\n    content: public void Add(X509Certificate2 certificate)\n    content.vb: Public Sub Add(certificate As X509Certificate2)\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>The certificate to add. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificate</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>The certificate could not be added to the store.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.StorePermission\n    commentId: T:System.Security.Permissions.StorePermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Store.Add(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Store.Dispose\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 434\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Releases the resources used by this <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Store\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Store.Dispose()\n- uid: System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)\n  id: Open(System.Security.Cryptography.X509Certificates.OpenFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: Open(OpenFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Open\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 435\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Opens an X.509 certificate store or creates a new store, depending on <xref href=\\\"System.Security.Cryptography.X509Certificates.OpenFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag settings.</p>\\n\"\n  syntax:\n    content: public void Open(OpenFlags flags)\n    content.vb: Public Sub Open(flags As OpenFlags)\n    parameters:\n    - id: flags\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n      description: \"\\n<p>A bitwise combination of enumeration values that specifies the way to open the X.509 certificate store. </p>\\n\"\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>The store is unreadable. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The store contains invalid values.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.StorePermission\n    commentId: T:System.Security.Permissions.StorePermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Store.Open(OpenFlags)\n- uid: System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.X509Store\n  langs:\n  - csharp\n  - vb\n  name: Remove(X509Certificate2)\n  fullName: System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 436\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Removes a certificate from an X.509 certificate store.</p>\\n\"\n  syntax:\n    content: public void Remove(X509Certificate2 certificate)\n    content.vb: Public Sub Remove(certificate As X509Certificate2)\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>The certificate to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>certificate</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.StorePermission\n    commentId: T:System.Security.Permissions.StorePermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Store.Remove(X509Certificate2)\nreferences:\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.X509Certificates.StoreName\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreName\n  fullName: System.Security.Cryptography.X509Certificates.StoreName\n  commentId: T:System.Security.Cryptography.X509Certificates.StoreName\n  nameWithType: StoreName\n- uid: System.Security.Cryptography.X509Certificates.StoreLocation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreLocation\n  fullName: System.Security.Cryptography.X509Certificates.StoreLocation\n  commentId: T:System.Security.Cryptography.X509Certificates.StoreLocation\n  nameWithType: StoreLocation\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2Collection\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  nameWithType: X509Certificate2Collection\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2\n  nameWithType: X509Certificate2\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: OpenFlags\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags\n  commentId: T:System.Security.Cryptography.X509Certificates.OpenFlags\n  nameWithType: OpenFlags\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  isExternal: false\n  name: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n  commentId: T:System.Security.Cryptography.CryptographicException\n  nameWithType: CryptographicException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n"}