{"nodes":[{"pos":[1218,1231],"content":"TcpStatistics","needQuote":true,"nodes":[{"content":"TcpStatistics","pos":[0,13]}]},{"pos":[2580,2595],"content":"TcpStatistics()","needQuote":true,"nodes":[{"content":"TcpStatistics()","pos":[0,15]}]},{"pos":[3695,3714],"content":"ConnectionsAccepted","needQuote":true,"nodes":[{"content":"ConnectionsAccepted","pos":[0,19]}]},{"pos":[5132,5152],"content":"ConnectionsInitiated","needQuote":true,"nodes":[{"content":"ConnectionsInitiated","pos":[0,20]}]},{"pos":[6589,6610],"content":"CumulativeConnections","needQuote":true,"nodes":[{"content":"CumulativeConnections","pos":[0,21]}]},{"pos":[8029,8047],"content":"CurrentConnections","needQuote":true,"nodes":[{"content":"CurrentConnections","pos":[0,18]}]},{"pos":[9424,9438],"content":"ErrorsReceived","needQuote":true,"nodes":[{"content":"ErrorsReceived","pos":[0,14]}]},{"pos":[10817,10841],"content":"FailedConnectionAttempts","needQuote":true,"nodes":[{"content":"FailedConnectionAttempts","pos":[0,24]}]},{"pos":[12274,12292],"content":"MaximumConnections","needQuote":true,"nodes":[{"content":"MaximumConnections","pos":[0,18]}]},{"pos":[13729,13755],"content":"MaximumTransmissionTimeout","needQuote":true,"nodes":[{"content":"MaximumTransmissionTimeout","pos":[0,26]}]},{"pos":[15292,15318],"content":"MinimumTransmissionTimeout","needQuote":true,"nodes":[{"content":"MinimumTransmissionTimeout","pos":[0,26]}]},{"pos":[16825,16841],"content":"ResetConnections","needQuote":true,"nodes":[{"content":"ResetConnections","pos":[0,16]}]},{"pos":[18210,18220],"content":"ResetsSent","needQuote":true,"nodes":[{"content":"ResetsSent","pos":[0,10]}]},{"pos":[19599,19615],"content":"SegmentsReceived","needQuote":true,"nodes":[{"content":"SegmentsReceived","pos":[0,16]}]},{"pos":[20978,20992],"content":"SegmentsResent","needQuote":true,"nodes":[{"content":"SegmentsResent","pos":[0,14]}]},{"pos":[22343,22355],"content":"SegmentsSent","needQuote":true,"nodes":[{"content":"SegmentsSent","pos":[0,12]}]},{"pos":[23517,23546],"content":"System.Net.NetworkInformation","needQuote":true,"nodes":[{"content":"System.Net.NetworkInformation","pos":[0,29]}]},{"pos":[23746,23752],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23912,23922],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[24017,24025],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[24094,24095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24122,24123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24193,24201],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[24270,24271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24298,24299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24482,24496],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[24615,24621],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24688,24689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24739,24745],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24805,24806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24889,24895],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24962,24963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25013,25019],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25079,25080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25294,25316],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[25464,25470],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25537,25538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25588,25594],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25655,25656]},{"pos":[25711,25717],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25777,25778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25875,25881],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25948,25949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25999,26005],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26066,26067]},{"pos":[26122,26128],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26188,26189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26434,26465],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[26631,26646],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[26722,26723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26773,26779],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26840,26841]},{"pos":[26896,26902],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26962,26963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27069,27084],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[27160,27161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27211,27217],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27278,27279]},{"pos":[27334,27340],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27400,27401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27631,27644],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[27745,27756],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27828,27829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27856,27857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27930,27941],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28013,28014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28041,28042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28217,28226],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[28319,28326],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28394,28395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28422,28423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28492,28499],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28567,28568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28595,28596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28771,28788],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[28897,28912],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[28988,28989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29016,29017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29094,29109],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[29185,29186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29213,29214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29359,29365],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[29495,29500],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]}],"content":"items:\n- uid: System.Net.NetworkInformation.TcpStatistics\n  commentId: T:System.Net.NetworkInformation.TcpStatistics\n  id: TcpStatistics\n  parent: System.Net.NetworkInformation\n  children:\n  - System.Net.NetworkInformation.TcpStatistics.#ctor\n  - System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted\n  - System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated\n  - System.Net.NetworkInformation.TcpStatistics.CumulativeConnections\n  - System.Net.NetworkInformation.TcpStatistics.CurrentConnections\n  - System.Net.NetworkInformation.TcpStatistics.ErrorsReceived\n  - System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts\n  - System.Net.NetworkInformation.TcpStatistics.MaximumConnections\n  - System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout\n  - System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout\n  - System.Net.NetworkInformation.TcpStatistics.ResetConnections\n  - System.Net.NetworkInformation.TcpStatistics.ResetsSent\n  - System.Net.NetworkInformation.TcpStatistics.SegmentsReceived\n  - System.Net.NetworkInformation.TcpStatistics.SegmentsResent\n  - System.Net.NetworkInformation.TcpStatistics.SegmentsSent\n  langs:\n  - csharp\n  - vb\n  name: TcpStatistics\n  fullName: System.Net.NetworkInformation.TcpStatistics\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TcpStatistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 391\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides Transmission Control Protocol (TCP) statistical data.</p>\\n\"\n  syntax:\n    content: public abstract class TcpStatistics\n    content.vb: Public MustInherit Class TcpStatistics\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: TcpStatistics\n- uid: System.Net.NetworkInformation.TcpStatistics.#ctor\n  commentId: M:System.Net.NetworkInformation.TcpStatistics.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: TcpStatistics()\n  fullName: System.Net.NetworkInformation.TcpStatistics.TcpStatistics()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 393\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.NetworkInformation.TcpStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected TcpStatistics()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: TcpStatistics.TcpStatistics()\n- uid: System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted\n  id: ConnectionsAccepted\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: ConnectionsAccepted\n  fullName: System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConnectionsAccepted\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 394\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of accepted Transmission Control Protocol (TCP) connection requests.</p>\\n\"\n  syntax:\n    content: public abstract long ConnectionsAccepted { get; }\n    content.vb: Public MustOverride ReadOnly Property ConnectionsAccepted As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of TCP connection requests accepted.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.ConnectionsAccepted\n- uid: System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated\n  id: ConnectionsInitiated\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: ConnectionsInitiated\n  fullName: System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConnectionsInitiated\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 395\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Transmission Control Protocol (TCP) connection requests made by clients.</p>\\n\"\n  syntax:\n    content: public abstract long ConnectionsInitiated { get; }\n    content.vb: Public MustOverride ReadOnly Property ConnectionsInitiated As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of TCP connections initiated by clients.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.ConnectionsInitiated\n- uid: System.Net.NetworkInformation.TcpStatistics.CumulativeConnections\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.CumulativeConnections\n  id: CumulativeConnections\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: CumulativeConnections\n  fullName: System.Net.NetworkInformation.TcpStatistics.CumulativeConnections\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CumulativeConnections\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 396\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Specifies the total number of Transmission Control Protocol (TCP) connections established.</p>\\n\"\n  syntax:\n    content: public abstract long CumulativeConnections { get; }\n    content.vb: Public MustOverride ReadOnly Property CumulativeConnections As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of connections established.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.CumulativeConnections\n- uid: System.Net.NetworkInformation.TcpStatistics.CurrentConnections\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.CurrentConnections\n  id: CurrentConnections\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: CurrentConnections\n  fullName: System.Net.NetworkInformation.TcpStatistics.CurrentConnections\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CurrentConnections\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 397\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of current Transmission Control Protocol (TCP) connections.</p>\\n\"\n  syntax:\n    content: public abstract long CurrentConnections { get; }\n    content.vb: Public MustOverride ReadOnly Property CurrentConnections As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of current TCP connections.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.CurrentConnections\n- uid: System.Net.NetworkInformation.TcpStatistics.ErrorsReceived\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.ErrorsReceived\n  id: ErrorsReceived\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: ErrorsReceived\n  fullName: System.Net.NetworkInformation.TcpStatistics.ErrorsReceived\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ErrorsReceived\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 398\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Transmission Control Protocol (TCP) errors received.</p>\\n\"\n  syntax:\n    content: public abstract long ErrorsReceived { get; }\n    content.vb: Public MustOverride ReadOnly Property ErrorsReceived As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of TCP errors received.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.ErrorsReceived\n- uid: System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts\n  id: FailedConnectionAttempts\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: FailedConnectionAttempts\n  fullName: System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FailedConnectionAttempts\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 399\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of failed Transmission Control Protocol (TCP) connection attempts.</p>\\n\"\n  syntax:\n    content: public abstract long FailedConnectionAttempts { get; }\n    content.vb: Public MustOverride ReadOnly Property FailedConnectionAttempts As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of failed TCP connection attempts.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.FailedConnectionAttempts\n- uid: System.Net.NetworkInformation.TcpStatistics.MaximumConnections\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.MaximumConnections\n  id: MaximumConnections\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: MaximumConnections\n  fullName: System.Net.NetworkInformation.TcpStatistics.MaximumConnections\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaximumConnections\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 400\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the maximum number of supported Transmission Control Protocol (TCP) connections.</p>\\n\"\n  syntax:\n    content: public abstract long MaximumConnections { get; }\n    content.vb: Public MustOverride ReadOnly Property MaximumConnections As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of TCP connections that can be supported.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.MaximumConnections\n- uid: System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout\n  id: MaximumTransmissionTimeout\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: MaximumTransmissionTimeout\n  fullName: System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaximumTransmissionTimeout\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 401\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the maximum retransmission time-out value for Transmission Control Protocol (TCP) segments.</p>\\n\"\n  syntax:\n    content: public abstract long MaximumTransmissionTimeout { get; }\n    content.vb: Public MustOverride ReadOnly Property MaximumTransmissionTimeout As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the maximum number of milliseconds permitted by a TCP implementation for the retransmission time-out value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.MaximumTransmissionTimeout\n- uid: System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout\n  id: MinimumTransmissionTimeout\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: MinimumTransmissionTimeout\n  fullName: System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MinimumTransmissionTimeout\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 402\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the minimum retransmission time-out value for Transmission Control Protocol (TCP) segments.</p>\\n\"\n  syntax:\n    content: public abstract long MinimumTransmissionTimeout { get; }\n    content.vb: Public MustOverride ReadOnly Property MinimumTransmissionTimeout As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the minimum number of milliseconds permitted by a TCP implementation for the retransmission time-out value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.MinimumTransmissionTimeout\n- uid: System.Net.NetworkInformation.TcpStatistics.ResetConnections\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.ResetConnections\n  id: ResetConnections\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: ResetConnections\n  fullName: System.Net.NetworkInformation.TcpStatistics.ResetConnections\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetConnections\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 403\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of RST packets received by Transmission Control Protocol (TCP) connections.</p>\\n\"\n  syntax:\n    content: public abstract long ResetConnections { get; }\n    content.vb: Public MustOverride ReadOnly Property ResetConnections As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of reset TCP connections.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.ResetConnections\n- uid: System.Net.NetworkInformation.TcpStatistics.ResetsSent\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.ResetsSent\n  id: ResetsSent\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: ResetsSent\n  fullName: System.Net.NetworkInformation.TcpStatistics.ResetsSent\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetsSent\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 404\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Transmission Control Protocol (TCP) segments sent with the reset flag set.</p>\\n\"\n  syntax:\n    content: public abstract long ResetsSent { get; }\n    content.vb: Public MustOverride ReadOnly Property ResetsSent As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of TCP segments sent with the reset flag set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.ResetsSent\n- uid: System.Net.NetworkInformation.TcpStatistics.SegmentsReceived\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.SegmentsReceived\n  id: SegmentsReceived\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: SegmentsReceived\n  fullName: System.Net.NetworkInformation.TcpStatistics.SegmentsReceived\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SegmentsReceived\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 405\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Transmission Control Protocol (TCP) segments received.</p>\\n\"\n  syntax:\n    content: public abstract long SegmentsReceived { get; }\n    content.vb: Public MustOverride ReadOnly Property SegmentsReceived As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of TCP segments received.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.SegmentsReceived\n- uid: System.Net.NetworkInformation.TcpStatistics.SegmentsResent\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.SegmentsResent\n  id: SegmentsResent\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: SegmentsResent\n  fullName: System.Net.NetworkInformation.TcpStatistics.SegmentsResent\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SegmentsResent\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 406\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Transmission Control Protocol (TCP) segments re-sent.</p>\\n\"\n  syntax:\n    content: public abstract long SegmentsResent { get; }\n    content.vb: Public MustOverride ReadOnly Property SegmentsResent As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of TCP segments retransmitted.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.SegmentsResent\n- uid: System.Net.NetworkInformation.TcpStatistics.SegmentsSent\n  commentId: P:System.Net.NetworkInformation.TcpStatistics.SegmentsSent\n  id: SegmentsSent\n  parent: System.Net.NetworkInformation.TcpStatistics\n  langs:\n  - csharp\n  - vb\n  name: SegmentsSent\n  fullName: System.Net.NetworkInformation.TcpStatistics.SegmentsSent\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SegmentsSent\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 407\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Transmission Control Protocol (TCP) segments sent.</p>\\n\"\n  syntax:\n    content: public abstract long SegmentsSent { get; }\n    content.vb: Public MustOverride ReadOnly Property SegmentsSent As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of TCP segments sent.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: TcpStatistics.SegmentsSent\nreferences:\n- uid: System.Net.NetworkInformation\n  isExternal: false\n  name: System.Net.NetworkInformation\n  fullName: System.Net.NetworkInformation\n  commentId: N:System.Net.NetworkInformation\n  nameWithType: System.Net.NetworkInformation\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n"}