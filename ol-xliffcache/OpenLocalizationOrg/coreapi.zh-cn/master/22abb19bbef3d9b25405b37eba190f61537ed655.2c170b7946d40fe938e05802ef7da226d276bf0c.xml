{"nodes":[{"pos":[716,735],"content":"XmlDocumentFragment","needQuote":true,"nodes":[{"content":"XmlDocumentFragment","pos":[0,19]}]},{"pos":[3979,4011],"content":"XmlDocumentFragment(XmlDocument)","needQuote":true,"nodes":[{"content":"XmlDocumentFragment(XmlDocument)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The XML document that is the source of the fragment.&lt;/p&gt;\\n","pos":[4840,4903],"source":"\\n<p>The XML document that is the source of the fragment.</p>\\n"},{"pos":[5231,5239],"content":"InnerXml","needQuote":true,"nodes":[{"content":"InnerXml","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The markup of the children of this node.&lt;/p&gt;\\n","pos":[5933,5984],"source":"\\n<p>The markup of the children of this node.</p>\\n"},{"content":"\\n&lt;p&gt;The XML specified when setting this property is not well-formed.","pos":[6135,6204],"source":"\\n<p>The XML specified when setting this property is not well-formed."},{"content":"&lt;/p&gt;\\n","pos":[6205,6211],"source":" </p>\\n"},{"pos":[6555,6564],"content":"LocalName","needQuote":true,"nodes":[{"content":"LocalName","pos":[0,9]}]},{"content":"\\n&lt;p&gt;For &lt;strong&gt;XmlDocumentFragment&lt;/strong&gt; nodes, the local name is &lt;strong&gt;#document-fragment&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7235,7348],"source":"\\n<p>For <strong>XmlDocumentFragment</strong> nodes, the local name is <strong>#document-fragment</strong>.</p>\\n"},{"pos":[7726,7730],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;For &lt;strong&gt;XmlDocumentFragment&lt;/strong&gt;, the name is &lt;strong&gt;#document-fragment&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8385,8486],"source":"\\n<p>For <strong>XmlDocumentFragment</strong>, the name is <strong>#document-fragment</strong>.</p>\\n"},{"pos":[8866,8874],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"content":"\\n&lt;p&gt;For &lt;strong&gt;XmlDocumentFragment&lt;/strong&gt; nodes, this value is XmlNodeType.DocumentFragment.&lt;/p&gt;\\n","pos":[9562,9664],"source":"\\n<p>For <strong>XmlDocumentFragment</strong> nodes, this value is XmlNodeType.DocumentFragment.</p>\\n"},{"pos":[10151,10164],"content":"OwnerDocument","needQuote":true,"nodes":[{"content":"OwnerDocument","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlDocument&lt;/strong&gt; to which this node belongs.&lt;/p&gt;\\n","pos":[10957,11028],"source":"\\n<p>The <strong>XmlDocument</strong> to which this node belongs.</p>\\n"},{"pos":[11432,11442],"content":"ParentNode","needQuote":true,"nodes":[{"content":"ParentNode","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The parent of this node.&lt;/p&gt;\\n&lt;p&gt;For &lt;strong&gt;XmlDocumentFragment&lt;/strong&gt; nodes, this property is always &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12155,12293],"source":"\\n<p>The parent of this node.</p>\\n<p>For <strong>XmlDocumentFragment</strong> nodes, this property is always <strong>null</strong>.</p>\\n"},{"pos":[12736,12754],"content":"CloneNode(Boolean)","needQuote":true,"nodes":[{"content":"CloneNode(Boolean)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to recursively clone the subtree under the specified node; &lt;strong&gt;false&lt;/strong&gt; to clone only the node itself.","pos":[13453,13594],"source":"\\n<p>\\n<strong>true</strong> to recursively clone the subtree under the specified node; <strong>false</strong> to clone only the node itself."},{"content":"&lt;/p&gt;\\n","pos":[13595,13601],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The cloned node.&lt;/p&gt;\\n","pos":[13666,13693],"source":"\\n<p>The cloned node.</p>\\n"},{"pos":[14171,14196],"content":"WriteContentTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteContentTo(XmlWriter)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlWriter&lt;/strong&gt; to which you want to save.","pos":[15006,15068],"source":"\\n<p>The <strong>XmlWriter</strong> to which you want to save."},{"content":"&lt;/p&gt;\\n","pos":[15069,15075],"source":" </p>\\n"},{"pos":[15550,15568],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlWriter&lt;/strong&gt; to which you want to save.","pos":[16330,16392],"source":"\\n<p>The <strong>XmlWriter</strong> to which you want to save."},{"content":"&lt;/p&gt;\\n","pos":[16393,16399],"source":" </p>\\n"},{"pos":[16662,16672],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[16815,16821],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16975,16982],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[17167,17178],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[17390,17400],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[17614,17621],"content":"BaseURI","needQuote":true,"nodes":[{"content":"BaseURI","pos":[0,7]}]},{"pos":[17829,17839],"content":"ChildNodes","needQuote":true,"nodes":[{"content":"ChildNodes","pos":[0,10]}]},{"pos":[18056,18066],"content":"FirstChild","needQuote":true,"nodes":[{"content":"FirstChild","pos":[0,10]}]},{"pos":[18286,18299],"content":"HasChildNodes","needQuote":true,"nodes":[{"content":"HasChildNodes","pos":[0,13]}]},{"pos":[18524,18533],"content":"InnerText","needQuote":true,"nodes":[{"content":"InnerText","pos":[0,9]}]},{"pos":[18747,18757],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[18982,18994],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"pos":[19197,19201],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[19251,19252]},{"pos":[19305,19311],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"]","pos":[19372,19373]},{"pos":[19462,19466],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[19515,19516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19566,19572],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19632,19633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19897,19917],"content":"Item[String, String]","needQuote":true,"nodes":[{"content":"Item[String, String]","pos":[0,20]}]},{"pos":[20172,20176],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[20226,20227]},{"pos":[20280,20286],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[20347,20348]},{"pos":[20403,20409],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"]","pos":[20470,20471]},{"pos":[20574,20578],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[20627,20628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20678,20684],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[20745,20746]},{"pos":[20801,20807],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20867,20868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21139,21148],"content":"LastChild","needQuote":true,"nodes":[{"content":"LastChild","pos":[0,9]}]},{"pos":[21364,21376],"content":"NamespaceURI","needQuote":true,"nodes":[{"content":"NamespaceURI","pos":[0,12]}]},{"pos":[21600,21611],"content":"NextSibling","needQuote":true,"nodes":[{"content":"NextSibling","pos":[0,11]}]},{"pos":[21829,21837],"content":"OuterXml","needQuote":true,"nodes":[{"content":"OuterXml","pos":[0,8]}]},{"pos":[22044,22050],"content":"Prefix","needQuote":true,"nodes":[{"content":"Prefix","pos":[0,6]}]},{"pos":[22260,22275],"content":"PreviousSibling","needQuote":true,"nodes":[{"content":"PreviousSibling","pos":[0,15]}]},{"pos":[22509,22521],"content":"PreviousText","needQuote":true,"nodes":[{"content":"PreviousText","pos":[0,12]}]},{"pos":[22739,22744],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[22967,22987],"content":"AppendChild(XmlNode)","needQuote":true,"nodes":[{"content":"AppendChild(XmlNode)","pos":[0,20]}]},{"pos":[23136,23147],"content":"AppendChild","needQuote":true,"nodes":[{"content":"AppendChild","pos":[0,11]}]},{"pos":[23203,23204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23259,23266],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[23310,23311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23409,23420],"content":"AppendChild","needQuote":true,"nodes":[{"content":"AppendChild","pos":[0,11]}]},{"pos":[23476,23477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23532,23539],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[23583,23584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23809,23824],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[23939,23952],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[24010,24011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24038,24039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24119,24132],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[24190,24191],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24218,24219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24442,24470],"content":"GetNamespaceOfPrefix(String)","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix(String)","pos":[0,28]}]},{"pos":[24627,24647],"content":"GetNamespaceOfPrefix","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix","pos":[0,20]}]},{"pos":[24712,24713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24763,24769],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24829,24830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24932,24952],"content":"GetNamespaceOfPrefix","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix","pos":[0,20]}]},{"pos":[25017,25018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25068,25074],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25134,25135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25393,25421],"content":"GetPrefixOfNamespace(String)","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace(String)","pos":[0,28]}]},{"pos":[25578,25598],"content":"GetPrefixOfNamespace","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace","pos":[0,20]}]},{"pos":[25663,25664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25714,25720],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25780,25781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25883,25903],"content":"GetPrefixOfNamespace","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace","pos":[0,20]}]},{"pos":[25968,25969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26019,26025],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26085,26086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26360,26389],"content":"InsertAfter(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"InsertAfter(XmlNode, XmlNode)","pos":[0,29]}]},{"pos":[26577,26588],"content":"InsertAfter","needQuote":true,"nodes":[{"content":"InsertAfter","pos":[0,11]}]},{"pos":[26644,26645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26700,26707],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[26752,26753]},{"pos":[26813,26820],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[26864,26865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26982,26993],"content":"InsertAfter","needQuote":true,"nodes":[{"content":"InsertAfter","pos":[0,11]}]},{"pos":[27049,27050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27105,27112],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[27157,27158]},{"pos":[27218,27225],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[27269,27270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27561,27591],"content":"InsertBefore(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"InsertBefore(XmlNode, XmlNode)","pos":[0,30]}]},{"pos":[27781,27793],"content":"InsertBefore","needQuote":true,"nodes":[{"content":"InsertBefore","pos":[0,12]}]},{"pos":[27850,27851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27906,27913],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[27958,27959]},{"pos":[28019,28026],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[28070,28071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28189,28201],"content":"InsertBefore","needQuote":true,"nodes":[{"content":"InsertBefore","pos":[0,12]}]},{"pos":[28258,28259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28314,28321],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[28366,28367]},{"pos":[28427,28434],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[28478,28479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28730,28741],"content":"Normalize()","needQuote":true,"nodes":[{"content":"Normalize()","pos":[0,11]}]},{"pos":[28848,28857],"content":"Normalize","needQuote":true,"nodes":[{"content":"Normalize","pos":[0,9]}]},{"pos":[28911,28912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28939,28940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29016,29025],"content":"Normalize","needQuote":true,"nodes":[{"content":"Normalize","pos":[0,9]}]},{"pos":[29079,29080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29107,29108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29321,29342],"content":"PrependChild(XmlNode)","needQuote":true,"nodes":[{"content":"PrependChild(XmlNode)","pos":[0,21]}]},{"pos":[29493,29505],"content":"PrependChild","needQuote":true,"nodes":[{"content":"PrependChild","pos":[0,12]}]},{"pos":[29562,29563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29618,29625],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[29669,29670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29769,29781],"content":"PrependChild","needQuote":true,"nodes":[{"content":"PrependChild","pos":[0,12]}]},{"pos":[29838,29839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29894,29901],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[29945,29946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30169,30180],"content":"RemoveAll()","needQuote":true,"nodes":[{"content":"RemoveAll()","pos":[0,11]}]},{"pos":[30287,30296],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[30350,30351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30378,30379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30455,30464],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[30518,30519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30546,30547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30759,30779],"content":"RemoveChild(XmlNode)","needQuote":true,"nodes":[{"content":"RemoveChild(XmlNode)","pos":[0,20]}]},{"pos":[30928,30939],"content":"RemoveChild","needQuote":true,"nodes":[{"content":"RemoveChild","pos":[0,11]}]},{"pos":[30995,30996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31051,31058],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[31102,31103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31201,31212],"content":"RemoveChild","needQuote":true,"nodes":[{"content":"RemoveChild","pos":[0,11]}]},{"pos":[31268,31269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31324,31331],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[31375,31376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31639,31669],"content":"ReplaceChild(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"ReplaceChild(XmlNode, XmlNode)","pos":[0,30]}]},{"pos":[31859,31871],"content":"ReplaceChild","needQuote":true,"nodes":[{"content":"ReplaceChild","pos":[0,12]}]},{"pos":[31928,31929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31984,31991],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[32036,32037]},{"pos":[32097,32104],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[32148,32149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32267,32279],"content":"ReplaceChild","needQuote":true,"nodes":[{"content":"ReplaceChild","pos":[0,12]}]},{"pos":[32336,32337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32392,32399],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[32444,32445]},{"pos":[32505,32512],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[32556,32557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32835,32859],"content":"Supports(String, String)","needQuote":true,"nodes":[{"content":"Supports(String, String)","pos":[0,24]}]},{"pos":[33021,33029],"content":"Supports","needQuote":true,"nodes":[{"content":"Supports","pos":[0,8]}]},{"pos":[33082,33083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33133,33139],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[33200,33201]},{"pos":[33256,33262],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[33322,33323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33427,33435],"content":"Supports","needQuote":true,"nodes":[{"content":"Supports","pos":[0,8]}]},{"pos":[33488,33489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33539,33545],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[33606,33607]},{"pos":[33662,33668],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[33728,33729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33995,34022],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[34257,34282],"content":"IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator","pos":[0,25]}]},{"pos":[34371,34372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34399,34400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34511,34555],"content":"System.Collections.IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator","pos":[0,44]}]},{"pos":[34644,34645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34672,34673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34976,34986],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[35081,35089],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[35158,35159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35186,35187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35257,35265],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[35334,35335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35362,35363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35546,35560],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[35679,35685],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[35752,35753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35803,35809],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35869,35870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35953,35959],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36026,36027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36077,36083],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36143,36144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36358,36380],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[36528,36534],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36601,36602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36652,36658],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36719,36720]},{"pos":[36775,36781],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36841,36842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36939,36945],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[37012,37013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37063,37069],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[37130,37131]},{"pos":[37186,37192],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37252,37253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37498,37529],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[37695,37710],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[37786,37787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37837,37843],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[37904,37905]},{"pos":[37960,37966],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38026,38027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38133,38148],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[38224,38225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38275,38281],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[38342,38343]},{"pos":[38398,38404],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38464,38465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38695,38708],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[38809,38820],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[38892,38893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38920,38921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38994,39005],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[39077,39078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39105,39106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39281,39290],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[39383,39390],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[39458,39459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39486,39487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39556,39563],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[39631,39632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39659,39660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39835,39852],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[39961,39976],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[40052,40053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40080,40081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40158,40173],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[40249,40250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40277,40278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40573,40586],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[40703,40714],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[40773,40774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40801,40802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40883,40894],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[40953,40954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40981,40982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41337,41349],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[41482,41492],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[41559,41560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41587,41588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41677,41687],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[41754,41755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41782,41783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42124,42139],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[42343,42356],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[42418,42419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42446,42447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42525,42541],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[42606,42607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42634,42635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43013,43030],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[43242,43257],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[43321,43322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43349,43350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43430,43448],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[43515,43516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43543,43544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43779,43785],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[43904,43922],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[44123,44147],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[44326,44337],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[44396,44397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44464,44475],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[44552,44553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44666,44677],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[44736,44737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44804,44815],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[44892,44893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45121,45130],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[45336,45359],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[45554,45564],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[45631,45632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45699,45710],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[45787,45788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45909,45919],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[45986,45987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46054,46065],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[46142,46143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46396,46414],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[46636,46662],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[46969,46982],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[47044,47045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47112,47123],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[47200,47201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47311,47327],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[47392,47393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47460,47471],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[47548,47549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47838,47848],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[48048,48076],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[48391,48406],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[48470,48471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48538,48549],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[48626,48627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48739,48757],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[48824,48825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48892,48903],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[48980,48981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49243,49254],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[49413,49424],"content":"XmlDocument","needQuote":true,"nodes":[{"content":"XmlDocument","pos":[0,11]}]},{"pos":[49618,49626],"content":"InnerXml","needQuote":true,"nodes":[{"content":"InnerXml","pos":[0,8]}]},{"pos":[49809,49815],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[49987,49996],"content":"LocalName","needQuote":true,"nodes":[{"content":"LocalName","pos":[0,9]}]},{"pos":[50204,50208],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[50405,50413],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[50609,50620],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[50819,50832],"content":"OwnerDocument","needQuote":true,"nodes":[{"content":"OwnerDocument","pos":[0,13]}]},{"pos":[51058,51068],"content":"ParentNode","needQuote":true,"nodes":[{"content":"ParentNode","pos":[0,10]}]},{"pos":[51299,51317],"content":"CloneNode(Boolean)","needQuote":true,"nodes":[{"content":"CloneNode(Boolean)","pos":[0,18]}]},{"pos":[51454,51463],"content":"CloneNode","needQuote":true,"nodes":[{"content":"CloneNode","pos":[0,9]}]},{"pos":[51517,51518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51569,51576],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[51637,51638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51730,51739],"content":"CloneNode","needQuote":true,"nodes":[{"content":"CloneNode","pos":[0,9]}]},{"pos":[51793,51794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51845,51852],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[51913,51914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52101,52108],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[52309,52334],"content":"WriteContentTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteContentTo(XmlWriter)","pos":[0,25]}]},{"pos":[52493,52507],"content":"WriteContentTo","needQuote":true,"nodes":[{"content":"WriteContentTo","pos":[0,14]}]},{"pos":[52566,52567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52624,52633],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[52700,52701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52804,52818],"content":"WriteContentTo","needQuote":true,"nodes":[{"content":"WriteContentTo","pos":[0,14]}]},{"pos":[52877,52878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52935,52944],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[53011,53012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53227,53236],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[53444,53462],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[53607,53614],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[53666,53667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53724,53733],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[53800,53801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53897,53904],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[53956,53957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54014,54023],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[54090,54091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54274,54286],"content":"XmlException","needQuote":true,"nodes":[{"content":"XmlException","pos":[0,12]}]}],"content":"items:\n- uid: System.Xml.XmlDocumentFragment\n  commentId: T:System.Xml.XmlDocumentFragment\n  id: XmlDocumentFragment\n  parent: System.Xml\n  children:\n  - System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)\n  - System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)\n  - System.Xml.XmlDocumentFragment.InnerXml\n  - System.Xml.XmlDocumentFragment.LocalName\n  - System.Xml.XmlDocumentFragment.Name\n  - System.Xml.XmlDocumentFragment.NodeType\n  - System.Xml.XmlDocumentFragment.OwnerDocument\n  - System.Xml.XmlDocumentFragment.ParentNode\n  - System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)\n  - System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  - vb\n  name: XmlDocumentFragment\n  fullName: System.Xml.XmlDocumentFragment\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlDocumentFragment\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 164\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Represents a lightweight object that is useful for tree insert operations.</p>\\n\"\n  syntax:\n    content: 'public class XmlDocumentFragment : XmlNode, IEnumerable'\n    content.vb: >-\n      Public Class XmlDocumentFragment\n          Inherits XmlNode\n          Implements IEnumerable\n  seealso:\n  - type: System.Xml.XmlDocument.CreateDocumentFragment\n    commentId: M:System.Xml.XmlDocument.CreateDocumentFragment\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNode\n  implements:\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Xml.XmlNode.Attributes\n  - System.Xml.XmlNode.BaseURI\n  - System.Xml.XmlNode.ChildNodes\n  - System.Xml.XmlNode.FirstChild\n  - System.Xml.XmlNode.HasChildNodes\n  - System.Xml.XmlNode.InnerText\n  - System.Xml.XmlNode.IsReadOnly\n  - System.Xml.XmlNode.Item(System.String)\n  - System.Xml.XmlNode.Item(System.String,System.String)\n  - System.Xml.XmlNode.LastChild\n  - System.Xml.XmlNode.NamespaceURI\n  - System.Xml.XmlNode.NextSibling\n  - System.Xml.XmlNode.OuterXml\n  - System.Xml.XmlNode.Prefix\n  - System.Xml.XmlNode.PreviousSibling\n  - System.Xml.XmlNode.PreviousText\n  - System.Xml.XmlNode.Value\n  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.GetEnumerator\n  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Normalize\n  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.RemoveAll\n  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Supports(System.String,System.String)\n  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlDocumentFragment\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)\n  commentId: M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)\n  id: '#ctor(System.Xml.XmlDocument)'\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: XmlDocumentFragment(XmlDocument)\n  fullName: System.Xml.XmlDocumentFragment.XmlDocumentFragment(System.Xml.XmlDocument)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 166\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.XmlDocumentFragment\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected XmlDocumentFragment(XmlDocument ownerDocument)\n    content.vb: Protected Sub New(ownerDocument As XmlDocument)\n    parameters:\n    - id: ownerDocument\n      type: System.Xml.XmlDocument\n      description: \"\\n<p>The XML document that is the source of the fragment.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: XmlDocumentFragment.XmlDocumentFragment(XmlDocument)\n- uid: System.Xml.XmlDocumentFragment.InnerXml\n  commentId: P:System.Xml.XmlDocumentFragment.InnerXml\n  id: InnerXml\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: InnerXml\n  fullName: System.Xml.XmlDocumentFragment.InnerXml\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InnerXml\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 167\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the markup representing the children of this node.</p>\\n\"\n  syntax:\n    content: public override string InnerXml { get; set; }\n    content.vb: Public Overrides Property InnerXml As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The markup of the children of this node.</p>\\n\"\n  overridden: System.Xml.XmlNode.InnerXml\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The XML specified when setting this property is not well-formed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlDocumentFragment.InnerXml\n- uid: System.Xml.XmlDocumentFragment.LocalName\n  commentId: P:System.Xml.XmlDocumentFragment.LocalName\n  id: LocalName\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: LocalName\n  fullName: System.Xml.XmlDocumentFragment.LocalName\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocalName\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 168\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the local name of the node.</p>\\n\"\n  syntax:\n    content: public override string LocalName { get; }\n    content.vb: Public Overrides ReadOnly Property LocalName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>For <strong>XmlDocumentFragment</strong> nodes, the local name is <strong>#document-fragment</strong>.</p>\\n\"\n  overridden: System.Xml.XmlNode.LocalName\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlDocumentFragment.LocalName\n- uid: System.Xml.XmlDocumentFragment.Name\n  commentId: P:System.Xml.XmlDocumentFragment.Name\n  id: Name\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Xml.XmlDocumentFragment.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 169\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the qualified name of the node.</p>\\n\"\n  syntax:\n    content: public override string Name { get; }\n    content.vb: Public Overrides ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>For <strong>XmlDocumentFragment</strong>, the name is <strong>#document-fragment</strong>.</p>\\n\"\n  overridden: System.Xml.XmlNode.Name\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlDocumentFragment.Name\n- uid: System.Xml.XmlDocumentFragment.NodeType\n  commentId: P:System.Xml.XmlDocumentFragment.NodeType\n  id: NodeType\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Xml.XmlDocumentFragment.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 170\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the type of the current node.</p>\\n\"\n  syntax:\n    content: public override XmlNodeType NodeType { get; }\n    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeType\n      description: \"\\n<p>For <strong>XmlDocumentFragment</strong> nodes, this value is XmlNodeType.DocumentFragment.</p>\\n\"\n  overridden: System.Xml.XmlNode.NodeType\n  seealso:\n  - type: System.Xml.XmlNodeType\n    commentId: T:System.Xml.XmlNodeType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlDocumentFragment.NodeType\n- uid: System.Xml.XmlDocumentFragment.OwnerDocument\n  commentId: P:System.Xml.XmlDocumentFragment.OwnerDocument\n  id: OwnerDocument\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: OwnerDocument\n  fullName: System.Xml.XmlDocumentFragment.OwnerDocument\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OwnerDocument\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 171\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Xml.XmlDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to which this node belongs.</p>\\n\"\n  syntax:\n    content: public override XmlDocument OwnerDocument { get; }\n    content.vb: Public Overrides ReadOnly Property OwnerDocument As XmlDocument\n    parameters: []\n    return:\n      type: System.Xml.XmlDocument\n      description: \"\\n<p>The <strong>XmlDocument</strong> to which this node belongs.</p>\\n\"\n  overridden: System.Xml.XmlNode.OwnerDocument\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlDocumentFragment.OwnerDocument\n- uid: System.Xml.XmlDocumentFragment.ParentNode\n  commentId: P:System.Xml.XmlDocumentFragment.ParentNode\n  id: ParentNode\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: ParentNode\n  fullName: System.Xml.XmlDocumentFragment.ParentNode\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ParentNode\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 172\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the parent of this node (for nodes that can have parents).</p>\\n\"\n  syntax:\n    content: public override XmlNode ParentNode { get; }\n    content.vb: Public Overrides ReadOnly Property ParentNode As XmlNode\n    parameters: []\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>The parent of this node.</p>\\n<p>For <strong>XmlDocumentFragment</strong> nodes, this property is always <strong>null</strong>.</p>\\n\"\n  overridden: System.Xml.XmlNode.ParentNode\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlDocumentFragment.ParentNode\n- uid: System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)\n  commentId: M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)\n  id: CloneNode(System.Boolean)\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: CloneNode(Boolean)\n  fullName: System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CloneNode\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 173\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a duplicate of this node.</p>\\n\"\n  syntax:\n    content: public override XmlNode CloneNode(bool deep)\n    content.vb: Public Overrides Function CloneNode(deep As Boolean) As XmlNode\n    parameters:\n    - id: deep\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to recursively clone the subtree under the specified node; <strong>false</strong> to clone only the node itself. </p>\\n\"\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>The cloned node.</p>\\n\"\n  overridden: System.Xml.XmlNode.CloneNode(System.Boolean)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlDocumentFragment.CloneNode(Boolean)\n- uid: System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)\n  id: WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteContentTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 174\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Saves all the children of the node to the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteContentTo(XmlWriter w)\n    content.vb: Public Overrides Sub WriteContentTo(w As XmlWriter)\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\\n\"\n  overridden: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlDocumentFragment.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlDocumentFragment\n  langs:\n  - csharp\n  - vb\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 175\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Saves the node to the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteTo(XmlWriter w)\n    content.vb: Public Overrides Sub WriteTo(w As XmlWriter)\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\\n\"\n  overridden: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlDocumentFragment.WriteTo(XmlWriter)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  fullName: System.Xml.XmlNode\n  commentId: T:System.Xml.XmlNode\n  nameWithType: XmlNode\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Xml.XmlNode.Attributes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Attributes\n  fullName: System.Xml.XmlNode.Attributes\n  commentId: P:System.Xml.XmlNode.Attributes\n  nameWithType: XmlNode.Attributes\n- uid: System.Xml.XmlNode.BaseURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: BaseURI\n  fullName: System.Xml.XmlNode.BaseURI\n  commentId: P:System.Xml.XmlNode.BaseURI\n  nameWithType: XmlNode.BaseURI\n- uid: System.Xml.XmlNode.ChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ChildNodes\n  fullName: System.Xml.XmlNode.ChildNodes\n  commentId: P:System.Xml.XmlNode.ChildNodes\n  nameWithType: XmlNode.ChildNodes\n- uid: System.Xml.XmlNode.FirstChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: FirstChild\n  fullName: System.Xml.XmlNode.FirstChild\n  commentId: P:System.Xml.XmlNode.FirstChild\n  nameWithType: XmlNode.FirstChild\n- uid: System.Xml.XmlNode.HasChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: HasChildNodes\n  fullName: System.Xml.XmlNode.HasChildNodes\n  commentId: P:System.Xml.XmlNode.HasChildNodes\n  nameWithType: XmlNode.HasChildNodes\n- uid: System.Xml.XmlNode.InnerText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerText\n  fullName: System.Xml.XmlNode.InnerText\n  commentId: P:System.Xml.XmlNode.InnerText\n  nameWithType: XmlNode.InnerText\n- uid: System.Xml.XmlNode.IsReadOnly\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Xml.XmlNode.IsReadOnly\n  commentId: P:System.Xml.XmlNode.IsReadOnly\n  nameWithType: XmlNode.IsReadOnly\n- uid: System.Xml.XmlNode.Item(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Item[String]\n  fullName: System.Xml.XmlNode.Item[System.String]\n  fullname.vb: System.Xml.XmlNode.Item(System.String)\n  name.vb: Item(String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Item(System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: '['\n    fullName: '['\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Xml.XmlNode.Item(System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Xml.XmlNode.Item(System.String)\n  nameWithType: XmlNode.Item[String]\n  nameWithType.vb: XmlNode.Item(String)\n- uid: System.Xml.XmlNode.Item(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Item[String, String]\n  fullName: System.Xml.XmlNode.Item[System.String, System.String]\n  fullname.vb: System.Xml.XmlNode.Item(System.String, System.String)\n  name.vb: Item(String, String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Item(System.String,System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: '['\n    fullName: '['\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Xml.XmlNode.Item(System.String,System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Xml.XmlNode.Item(System.String,System.String)\n  nameWithType: XmlNode.Item[String, String]\n  nameWithType.vb: XmlNode.Item(String, String)\n- uid: System.Xml.XmlNode.LastChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LastChild\n  fullName: System.Xml.XmlNode.LastChild\n  commentId: P:System.Xml.XmlNode.LastChild\n  nameWithType: XmlNode.LastChild\n- uid: System.Xml.XmlNode.NamespaceURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NamespaceURI\n  fullName: System.Xml.XmlNode.NamespaceURI\n  commentId: P:System.Xml.XmlNode.NamespaceURI\n  nameWithType: XmlNode.NamespaceURI\n- uid: System.Xml.XmlNode.NextSibling\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NextSibling\n  fullName: System.Xml.XmlNode.NextSibling\n  commentId: P:System.Xml.XmlNode.NextSibling\n  nameWithType: XmlNode.NextSibling\n- uid: System.Xml.XmlNode.OuterXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OuterXml\n  fullName: System.Xml.XmlNode.OuterXml\n  commentId: P:System.Xml.XmlNode.OuterXml\n  nameWithType: XmlNode.OuterXml\n- uid: System.Xml.XmlNode.Prefix\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Prefix\n  fullName: System.Xml.XmlNode.Prefix\n  commentId: P:System.Xml.XmlNode.Prefix\n  nameWithType: XmlNode.Prefix\n- uid: System.Xml.XmlNode.PreviousSibling\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PreviousSibling\n  fullName: System.Xml.XmlNode.PreviousSibling\n  commentId: P:System.Xml.XmlNode.PreviousSibling\n  nameWithType: XmlNode.PreviousSibling\n- uid: System.Xml.XmlNode.PreviousText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PreviousText\n  fullName: System.Xml.XmlNode.PreviousText\n  commentId: P:System.Xml.XmlNode.PreviousText\n  nameWithType: XmlNode.PreviousText\n- uid: System.Xml.XmlNode.Value\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Value\n  fullName: System.Xml.XmlNode.Value\n  commentId: P:System.Xml.XmlNode.Value\n  nameWithType: XmlNode.Value\n- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: AppendChild(XmlNode)\n  fullName: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n    name: AppendChild\n    fullName: System.Xml.XmlNode.AppendChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n    name: AppendChild\n    fullName: System.Xml.XmlNode.AppendChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.AppendChild(XmlNode)\n- uid: System.Xml.XmlNode.GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Xml.XmlNode.GetEnumerator()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNode.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNode.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetEnumerator\n  nameWithType: XmlNode.GetEnumerator()\n- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: GetNamespaceOfPrefix(String)\n  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n    name: GetNamespaceOfPrefix\n    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n    name: GetNamespaceOfPrefix\n    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  nameWithType: XmlNode.GetNamespaceOfPrefix(String)\n- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: GetPrefixOfNamespace(String)\n  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n    name: GetPrefixOfNamespace\n    fullName: System.Xml.XmlNode.GetPrefixOfNamespace\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n    name: GetPrefixOfNamespace\n    fullName: System.Xml.XmlNode.GetPrefixOfNamespace\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  nameWithType: XmlNode.GetPrefixOfNamespace(String)\n- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertAfter(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertAfter\n    fullName: System.Xml.XmlNode.InsertAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertAfter\n    fullName: System.Xml.XmlNode.InsertAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.InsertAfter(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertBefore(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertBefore\n    fullName: System.Xml.XmlNode.InsertBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertBefore\n    fullName: System.Xml.XmlNode.InsertBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.InsertBefore(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.Normalize\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Normalize()\n  fullName: System.Xml.XmlNode.Normalize()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Normalize\n    name: Normalize\n    fullName: System.Xml.XmlNode.Normalize\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.Normalize\n    name: Normalize\n    fullName: System.Xml.XmlNode.Normalize\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.Normalize\n  nameWithType: XmlNode.Normalize()\n- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PrependChild(XmlNode)\n  fullName: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n    name: PrependChild\n    fullName: System.Xml.XmlNode.PrependChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n    name: PrependChild\n    fullName: System.Xml.XmlNode.PrependChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.PrependChild(XmlNode)\n- uid: System.Xml.XmlNode.RemoveAll\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveAll()\n  fullName: System.Xml.XmlNode.RemoveAll()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.RemoveAll\n    name: RemoveAll\n    fullName: System.Xml.XmlNode.RemoveAll\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.RemoveAll\n    name: RemoveAll\n    fullName: System.Xml.XmlNode.RemoveAll\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.RemoveAll\n  nameWithType: XmlNode.RemoveAll()\n- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveChild(XmlNode)\n  fullName: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n    name: RemoveChild\n    fullName: System.Xml.XmlNode.RemoveChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n    name: RemoveChild\n    fullName: System.Xml.XmlNode.RemoveChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.RemoveChild(XmlNode)\n- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ReplaceChild(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: ReplaceChild\n    fullName: System.Xml.XmlNode.ReplaceChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: ReplaceChild\n    fullName: System.Xml.XmlNode.ReplaceChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.ReplaceChild(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.Supports(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Supports(String, String)\n  fullName: System.Xml.XmlNode.Supports(System.String, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Supports(System.String,System.String)\n    name: Supports\n    fullName: System.Xml.XmlNode.Supports\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.Supports(System.String,System.String)\n    name: Supports\n    fullName: System.Xml.XmlNode.Supports\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.Supports(System.String,System.String)\n  nameWithType: XmlNode.Supports(String, String)\n- uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n    name: IEnumerable.GetEnumerator\n    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n    name: System.Collections.IEnumerable.GetEnumerator\n    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  nameWithType: XmlNode.IEnumerable.GetEnumerator()\n  nameWithType.vb: XmlNode.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  fullName: System.Xml.XmlDocument\n  commentId: T:System.Xml.XmlDocument\n  nameWithType: XmlDocument\n- uid: System.Xml.XmlNode.InnerXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerXml\n  fullName: System.Xml.XmlNode.InnerXml\n  commentId: P:System.Xml.XmlNode.InnerXml\n  nameWithType: XmlNode.InnerXml\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XmlNode.LocalName\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LocalName\n  fullName: System.Xml.XmlNode.LocalName\n  commentId: P:System.Xml.XmlNode.LocalName\n  nameWithType: XmlNode.LocalName\n- uid: System.Xml.XmlNode.Name\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Name\n  fullName: System.Xml.XmlNode.Name\n  commentId: P:System.Xml.XmlNode.Name\n  nameWithType: XmlNode.Name\n- uid: System.Xml.XmlNode.NodeType\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NodeType\n  fullName: System.Xml.XmlNode.NodeType\n  commentId: P:System.Xml.XmlNode.NodeType\n  nameWithType: XmlNode.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n  commentId: T:System.Xml.XmlNodeType\n  nameWithType: XmlNodeType\n- uid: System.Xml.XmlNode.OwnerDocument\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OwnerDocument\n  fullName: System.Xml.XmlNode.OwnerDocument\n  commentId: P:System.Xml.XmlNode.OwnerDocument\n  nameWithType: XmlNode.OwnerDocument\n- uid: System.Xml.XmlNode.ParentNode\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ParentNode\n  fullName: System.Xml.XmlNode.ParentNode\n  commentId: P:System.Xml.XmlNode.ParentNode\n  nameWithType: XmlNode.ParentNode\n- uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: CloneNode(Boolean)\n  fullName: System.Xml.XmlNode.CloneNode(System.Boolean)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n    name: CloneNode\n    fullName: System.Xml.XmlNode.CloneNode\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n    name: CloneNode\n    fullName: System.Xml.XmlNode.CloneNode\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.CloneNode(System.Boolean)\n  nameWithType: XmlNode.CloneNode(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n    name: WriteContentTo\n    fullName: System.Xml.XmlNode.WriteContentTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n    name: WriteContentTo\n    fullName: System.Xml.XmlNode.WriteContentTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  nameWithType: XmlNode.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.XmlNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.XmlNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  nameWithType: XmlNode.WriteTo(XmlWriter)\n- uid: System.Xml.XmlException\n  isExternal: false\n  name: XmlException\n  fullName: System.Xml.XmlException\n  commentId: T:System.Xml.XmlException\n  nameWithType: XmlException\n"}