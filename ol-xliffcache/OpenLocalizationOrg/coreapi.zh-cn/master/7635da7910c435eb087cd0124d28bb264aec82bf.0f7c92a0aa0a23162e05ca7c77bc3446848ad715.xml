{"nodes":[{"pos":[532,542],"content":"WebUtility","needQuote":true,"nodes":[{"content":"WebUtility","pos":[0,10]}]},{"pos":[2081,2099],"content":"HtmlDecode(String)","needQuote":true,"nodes":[{"content":"HtmlDecode(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The string to decode.&lt;/p&gt;\\n","pos":[2859,2891],"source":"\\n<p>The string to decode.</p>\\n"},{"content":"\\n&lt;p&gt;A decoded string.&lt;/p&gt;\\n","pos":[2951,2979],"source":"\\n<p>A decoded string.</p>\\n"},{"pos":[3632,3650],"content":"HtmlEncode(String)","needQuote":true,"nodes":[{"content":"HtmlEncode(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The string to encode.&lt;/p&gt;\\n","pos":[4365,4397],"source":"\\n<p>The string to encode.</p>\\n"},{"content":"\\n&lt;p&gt;An encoded string.&lt;/p&gt;\\n","pos":[4457,4486],"source":"\\n<p>An encoded string.</p>\\n"},{"pos":[5136,5153],"content":"UrlDecode(String)","needQuote":true,"nodes":[{"content":"UrlDecode(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A URL-encoded string to decode.&lt;/p&gt;\\n","pos":[5929,5971],"source":"\\n<p>A URL-encoded string to decode.</p>\\n"},{"pos":[6590,6628],"content":"UrlDecodeToBytes(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"UrlDecodeToBytes(Byte[], Int32, Int32)","pos":[0,38]}]},{"pos":[8875,8892],"content":"UrlEncode(String)","needQuote":true,"nodes":[{"content":"UrlEncode(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The text to URL-encode.&lt;/p&gt;\\n","pos":[9608,9642],"source":"\\n<p>The text to URL-encode.</p>\\n"},{"pos":[10265,10303],"content":"UrlEncodeToBytes(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"UrlEncodeToBytes(Byte[], Int32, Int32)","pos":[0,38]}]},{"pos":[12315,12325],"content":"System.Net","needQuote":true,"nodes":[{"content":"System.Net","pos":[0,10]}]},{"pos":[12468,12474],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12634,12644],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12739,12747],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12816,12817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12844,12845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12915,12923],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12992,12993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13020,13021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13204,13218],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13337,13343],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13410,13411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13461,13467],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13527,13528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13611,13617],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13684,13685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13735,13741],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13801,13802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14016,14038],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[14186,14192],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14259,14260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14310,14316],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14377,14378]},{"pos":[14433,14439],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14499,14500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14597,14603],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14670,14671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14721,14727],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14788,14789]},{"pos":[14844,14850],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14910,14911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15156,15187],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15353,15368],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15444,15445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15495,15501],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15562,15563]},{"pos":[15618,15624],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15684,15685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15791,15806],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15882,15883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15933,15939],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16000,16001]},{"pos":[16056,16062],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16122,16123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16353,16366],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16467,16478],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16550,16551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16578,16579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16652,16663],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16735,16736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16763,16764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16939,16948],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[17041,17048],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17116,17117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17144,17145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17214,17221],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17289,17290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17317,17318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17493,17510],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[17619,17634],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17710,17711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17738,17739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17816,17831],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17907,17908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17935,17936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18081,18087],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18218,18224],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18332,18338],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[18458,18462],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[18521,18523]},{"pos":[18586,18590],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[18648,18650],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[18782,18787],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Net.WebUtility\n  commentId: T:System.Net.WebUtility\n  id: WebUtility\n  parent: System.Net\n  children:\n  - System.Net.WebUtility.HtmlDecode(System.String)\n  - System.Net.WebUtility.HtmlEncode(System.String)\n  - System.Net.WebUtility.UrlDecode(System.String)\n  - System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)\n  - System.Net.WebUtility.UrlEncode(System.String)\n  - System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: WebUtility\n  fullName: System.Net.WebUtility\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WebUtility\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 640\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System.Net\n  summary: \"\\n<p>Provides methods for encoding and decoding URLs when processing Web requests. </p>\\n\"\n  syntax:\n    content: public class WebUtility\n    content.vb: Public Class WebUtility\n  seealso:\n  - type: System.Uri\n    commentId: T:System.Uri\n  - type: System.Web.HttpUtility\n    commentId: T:System.Web.HttpUtility\n  - type: System.Web.HttpServerUtility\n    commentId: T:System.Web.HttpServerUtility\n  - type: System.Web.HttpContext.Server\n    commentId: P:System.Web.HttpContext.Server\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: WebUtility\n- uid: System.Net.WebUtility.HtmlDecode(System.String)\n  commentId: M:System.Net.WebUtility.HtmlDecode(System.String)\n  id: HtmlDecode(System.String)\n  parent: System.Net.WebUtility\n  langs:\n  - csharp\n  - vb\n  name: HtmlDecode(String)\n  fullName: System.Net.WebUtility.HtmlDecode(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HtmlDecode\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 642\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System.Net\n  summary: \"\\n<p>Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</p>\\n\"\n  syntax:\n    content: public static string HtmlDecode(string value)\n    content.vb: Public Shared Function HtmlDecode(value As String) As String\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The string to decode.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A decoded string.</p>\\n\"\n  seealso:\n  - type: System.Net.WebUtility.HtmlEncode(System.String)\n    commentId: M:System.Net.WebUtility.HtmlEncode(System.String)\n  - type: System.Web.HttpUtility.HtmlEncode(System.String)\n    commentId: M:System.Web.HttpUtility.HtmlEncode(System.String)\n  - type: System.Uri\n    commentId: T:System.Uri\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebUtility.HtmlDecode(String)\n- uid: System.Net.WebUtility.HtmlEncode(System.String)\n  commentId: M:System.Net.WebUtility.HtmlEncode(System.String)\n  id: HtmlEncode(System.String)\n  parent: System.Net.WebUtility\n  langs:\n  - csharp\n  - vb\n  name: HtmlEncode(String)\n  fullName: System.Net.WebUtility.HtmlEncode(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HtmlEncode\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 643\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System.Net\n  summary: \"\\n<p>Converts a string to an HTML-encoded string.</p>\\n\"\n  syntax:\n    content: public static string HtmlEncode(string value)\n    content.vb: Public Shared Function HtmlEncode(value As String) As String\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The string to encode.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>An encoded string.</p>\\n\"\n  seealso:\n  - type: System.Net.WebUtility.HtmlDecode(System.String)\n    commentId: M:System.Net.WebUtility.HtmlDecode(System.String)\n  - type: System.Web.HttpUtility.HtmlDecode(System.String)\n    commentId: M:System.Web.HttpUtility.HtmlDecode(System.String)\n  - type: System.Uri\n    commentId: T:System.Uri\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebUtility.HtmlEncode(String)\n- uid: System.Net.WebUtility.UrlDecode(System.String)\n  commentId: M:System.Net.WebUtility.UrlDecode(System.String)\n  id: UrlDecode(System.String)\n  parent: System.Net.WebUtility\n  langs:\n  - csharp\n  - vb\n  name: UrlDecode(String)\n  fullName: System.Net.WebUtility.UrlDecode(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UrlDecode\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 644\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System.Net\n  summary: \"\\n<p>Converts a string that has been encoded for transmission in a URL into a decoded string.</p>\\n\"\n  syntax:\n    content: public static string UrlDecode(string encodedValue)\n    content.vb: Public Shared Function UrlDecode(encodedValue As String) As String\n    parameters:\n    - id: encodedValue\n      type: System.String\n      description: \"\\n<p>A URL-encoded string to decode.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A decoded string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebUtility.UrlDecode(String)\n- uid: System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)\n  id: UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.WebUtility\n  langs:\n  - csharp\n  - vb\n  name: UrlDecodeToBytes(Byte[], Int32, Int32)\n  fullName: System.Net.WebUtility.UrlDecodeToBytes(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UrlDecodeToBytes\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 645\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System.Net\n  summary: \"\\n<p>Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</p>\\n\"\n  syntax:\n    content: public static byte[] UrlDecodeToBytes(byte[] encodedValue, int offset, int count)\n    content.vb: Public Shared Function UrlDecodeToBytes(encodedValue As Byte(), offset As Integer, count As Integer) As Byte()\n    parameters:\n    - id: encodedValue\n      type: System.Byte[]\n      description: \"\\n<p>A URL-encoded <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array to decode.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The offset, in bytes, from the start of the <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array to decode.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The count, in bytes, to decode from the <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array.</p>\\n\"\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>Returns <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A decoded <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.WebUtility.UrlDecodeToBytes(System.Byte(), System.Int32, System.Int32)\n  name.vb: UrlDecodeToBytes(Byte(), Int32, Int32)\n  nameWithType: WebUtility.UrlDecodeToBytes(Byte[], Int32, Int32)\n  nameWithType.vb: WebUtility.UrlDecodeToBytes(Byte(), Int32, Int32)\n- uid: System.Net.WebUtility.UrlEncode(System.String)\n  commentId: M:System.Net.WebUtility.UrlEncode(System.String)\n  id: UrlEncode(System.String)\n  parent: System.Net.WebUtility\n  langs:\n  - csharp\n  - vb\n  name: UrlEncode(String)\n  fullName: System.Net.WebUtility.UrlEncode(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UrlEncode\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 646\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System.Net\n  summary: \"\\n<p>Converts a text string into a URL-encoded string.</p>\\n\"\n  syntax:\n    content: public static string UrlEncode(string value)\n    content.vb: Public Shared Function UrlEncode(value As String) As String\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The text to URL-encode.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A URL-encoded string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebUtility.UrlEncode(String)\n- uid: System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)\n  id: UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.WebUtility\n  langs:\n  - csharp\n  - vb\n  name: UrlEncodeToBytes(Byte[], Int32, Int32)\n  fullName: System.Net.WebUtility.UrlEncodeToBytes(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UrlEncodeToBytes\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 647\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System.Net\n  summary: \"\\n<p>Converts a byte array into a URL-encoded byte array.</p>\\n\"\n  syntax:\n    content: public static byte[] UrlEncodeToBytes(byte[] value, int offset, int count)\n    content.vb: Public Shared Function UrlEncodeToBytes(value As Byte(), offset As Integer, count As Integer) As Byte()\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: \"\\n<p>The <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array to URL-encode.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The offset, in bytes, from the start of the <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array to encode.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The count, in bytes, to encode from the <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array.</p>\\n\"\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>Returns <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An encoded <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.WebUtility.UrlEncodeToBytes(System.Byte(), System.Int32, System.Int32)\n  name.vb: UrlEncodeToBytes(Byte(), Int32, Int32)\n  nameWithType: WebUtility.UrlEncodeToBytes(Byte[], Int32, Int32)\n  nameWithType.vb: WebUtility.UrlEncodeToBytes(Byte(), Int32, Int32)\nreferences:\n- uid: System.Net\n  isExternal: false\n  name: System.Net\n  fullName: System.Net\n  commentId: N:System.Net\n  nameWithType: System.Net\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n"}