{"nodes":[{"pos":[3769,3776],"content":"Console","needQuote":true,"nodes":[{"content":"Console","pos":[0,7]}]},{"pos":[4921,4936],"content":"BackgroundColor","needQuote":true,"nodes":[{"content":"BackgroundColor","pos":[0,15]}]},{"content":"\\n&lt;p&gt;A value that specifies the background color of the console; that is, the color that appears behind each character.","pos":[5596,5715],"source":"\\n<p>A value that specifies the background color of the console; that is, the color that appears behind each character."},{"content":"The default is black.&lt;/p&gt;\\n","pos":[5716,5743],"source":" The default is black.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[6125,6187],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[6188,6194],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[6285,6312],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[6313,6319],"source":" </p>\\n"},{"pos":[6706,6712],"content":"Beep()","needQuote":true,"nodes":[{"content":"Beep()","pos":[0,6]}]},{"content":"\\n&lt;p&gt;This method was executed on a server, such as SQL Server, that does not permit access to a user interface.&lt;/p&gt;\\n","pos":[7348,7465],"source":"\\n<p>This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</p>\\n"},{"pos":[7792,7810],"content":"Beep(Int32, Int32)","needQuote":true,"nodes":[{"content":"Beep(Int32, Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The frequency of the beep, ranging from 37 to 32767 hertz.&lt;/p&gt;\\n","pos":[8522,8591],"source":"\\n<p>The frequency of the beep, ranging from 37 to 32767 hertz.</p>\\n"},{"content":"\\n&lt;p&gt;The duration of the beep measured in milliseconds.&lt;/p&gt;\\n","pos":[8657,8718],"source":"\\n<p>The duration of the beep measured in milliseconds.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;frequency&lt;/em&gt; is less than 37 or more than 32767 hertz.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;duration&lt;/em&gt; is less than or equal to zero.&lt;/p&gt;\\n","pos":[8849,8994],"source":"\\n<p>\\n<em>frequency</em> is less than 37 or more than 32767 hertz.</p>\\n<p>-or-</p>\\n<p>\\n<em>duration</em> is less than or equal to zero.</p>\\n"},{"content":"\\n&lt;p&gt;This method was executed on a server, such as SQL Server, that does not permit access to the console.&lt;/p&gt;\\n","pos":[9121,9233],"source":"\\n<p>This method was executed on a server, such as SQL Server, that does not permit access to the console.</p>\\n"},{"pos":[9515,9527],"content":"BufferHeight","needQuote":true,"nodes":[{"content":"BufferHeight","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The current height, in rows, of the buffer area.&lt;/p&gt;\\n","pos":[10148,10207],"source":"\\n<p>The current height, in rows, of the buffer area.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[10926,10988],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[10989,10995],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[11086,11113],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[11114,11120],"source":" </p>\\n"},{"pos":[11525,11536],"content":"BufferWidth","needQuote":true,"nodes":[{"content":"BufferWidth","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The current width, in columns, of the buffer area.&lt;/p&gt;\\n","pos":[12152,12213],"source":"\\n<p>The current width, in columns, of the buffer area.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[12932,12994],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[12995,13001],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[13092,13119],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[13120,13126],"source":" </p>\\n"},{"pos":[13521,13529],"content":"CapsLock","needQuote":true,"nodes":[{"content":"CapsLock","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if CAPS LOCK is turned on; &lt;strong&gt;false&lt;/strong&gt; if CAPS LOCK is turned off.&lt;/p&gt;\\n","pos":[14187,14299],"source":"\\n<p>\\n<strong>true</strong> if CAPS LOCK is turned on; <strong>false</strong> if CAPS LOCK is turned off.</p>\\n"},{"pos":[14598,14612],"content":"CancelKeyPress","needQuote":true,"nodes":[{"content":"CancelKeyPress","pos":[0,14]}]},{"pos":[16172,16179],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[16811,16844],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[17109,17119],"content":"CursorLeft","needQuote":true,"nodes":[{"content":"CursorLeft","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The current position, in columns, of the cursor.&lt;/p&gt;\\n","pos":[17759,17818],"source":"\\n<p>The current position, in columns, of the cursor.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[18290,18352],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[18353,18359],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[18450,18477],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[18478,18484],"source":" </p>\\n"},{"pos":[18884,18894],"content":"CursorSize","needQuote":true,"nodes":[{"content":"CursorSize","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The size of the cursor expressed as a percentage of the height of a character cell.","pos":[19526,19614],"source":"\\n<p>The size of the cursor expressed as a percentage of the height of a character cell."},{"content":"The property value ranges from 1 to 100.&lt;/p&gt;\\n","pos":[19615,19661],"source":" The property value ranges from 1 to 100.</p>\\n"},{"content":"\\n&lt;p&gt;The value specified in a set operation is less than 1 or greater than 100.","pos":[19792,19871],"source":"\\n<p>The value specified in a set operation is less than 1 or greater than 100."},{"content":"&lt;/p&gt;\\n","pos":[19872,19878],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[19993,20055],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[20056,20062],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[20153,20186],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[20583,20592],"content":"CursorTop","needQuote":true,"nodes":[{"content":"CursorTop","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The current position, in rows, of the cursor.&lt;/p&gt;\\n","pos":[21225,21281],"source":"\\n<p>The current position, in rows, of the cursor.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[21754,21816],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[21817,21823],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[21914,21947],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[22355,22368],"content":"CursorVisible","needQuote":true,"nodes":[{"content":"CursorVisible","pos":[0,13]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the cursor is visible; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[23015,23110],"source":"\\n<p>\\n<strong>true</strong> if the cursor is visible; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[23239,23301],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[23302,23308],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[23399,23432],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[23820,23825],"content":"Error","needQuote":true,"nodes":[{"content":"Error","pos":[0,5]}]},{"pos":[25228,25243],"content":"ForegroundColor","needQuote":true,"nodes":[{"content":"ForegroundColor","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[26506,26568],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[26569,26575],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[26666,26693],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[26694,26700],"source":" </p>\\n"},{"pos":[27114,27127],"content":"InputEncoding","needQuote":true,"nodes":[{"content":"InputEncoding","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The encoding used to read console input.&lt;/p&gt;\\n","pos":[27781,27832],"source":"\\n<p>The encoding used to read console input.</p>\\n"},{"content":"\\n&lt;p&gt;The property value in a set operation is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[27951,28025],"source":"\\n<p>The property value in a set operation is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred during the execution of this operation.&lt;/p&gt;\\n","pos":[28116,28184],"source":"\\n<p>An error occurred during the execution of this operation.</p>\\n"},{"content":"\\n&lt;p&gt;Your application does not have permission to perform this operation.&lt;/p&gt;\\n","pos":[28299,28378],"source":"\\n<p>Your application does not have permission to perform this operation.</p>\\n"},{"pos":[28882,28899],"content":"IsErrorRedirected","needQuote":true,"nodes":[{"content":"IsErrorRedirected","pos":[0,17]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if error output is redirected; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[29615,29715],"source":"\\n<p>\\n<strong>true</strong> if error output is redirected; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[30324,30341],"content":"IsInputRedirected","needQuote":true,"nodes":[{"content":"IsInputRedirected","pos":[0,17]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if input is redirected; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[31039,31132],"source":"\\n<p>\\n<strong>true</strong> if input is redirected; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[31732,31750],"content":"IsOutputRedirected","needQuote":true,"nodes":[{"content":"IsOutputRedirected","pos":[0,18]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if output is redirected; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[32454,32548],"source":"\\n<p>\\n<strong>true</strong> if output is redirected; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[33105,33107],"content":"In","needQuote":true,"nodes":[{"content":"In","pos":[0,2]}]},{"pos":[34565,34577],"content":"KeyAvailable","needQuote":true,"nodes":[{"content":"KeyAvailable","pos":[0,12]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a key press is available; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35239,35337],"source":"\\n<p>\\n<strong>true</strong> if a key press is available; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[35442,35469],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[35470,35476],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Standard input is redirected to a file instead of the keyboard.","pos":[35589,35657],"source":"\\n<p>Standard input is redirected to a file instead of the keyboard."},{"content":"&lt;/p&gt;\\n","pos":[35658,35664],"source":" </p>\\n"},{"pos":[35979,35997],"content":"LargestWindowWidth","needQuote":true,"nodes":[{"content":"LargestWindowWidth","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The width of the largest possible console window measured in columns.&lt;/p&gt;\\n","pos":[36711,36791],"source":"\\n<p>The width of the largest possible console window measured in columns.</p>\\n"},{"pos":[37115,37134],"content":"LargestWindowHeight","needQuote":true,"nodes":[{"content":"LargestWindowHeight","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The height of the largest possible console window measured in rows.&lt;/p&gt;\\n","pos":[37849,37927],"source":"\\n<p>The height of the largest possible console window measured in rows.</p>\\n"},{"pos":[38474,38530],"content":"MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32)","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The leftmost column of the source area.","pos":[39495,39539],"source":"\\n<p>The leftmost column of the source area."},{"content":"&lt;/p&gt;\\n","pos":[39540,39546],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The topmost row of the source area.","pos":[39613,39653],"source":"\\n<p>The topmost row of the source area."},{"content":"&lt;/p&gt;\\n","pos":[39654,39660],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of columns in the source area.","pos":[39729,39775],"source":"\\n<p>The number of columns in the source area."},{"content":"&lt;/p&gt;\\n","pos":[39776,39782],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of rows in the source area.","pos":[39852,39895],"source":"\\n<p>The number of rows in the source area."},{"content":"&lt;/p&gt;\\n","pos":[39896,39902],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The leftmost column of the destination area.","pos":[39970,40019],"source":"\\n<p>The leftmost column of the destination area."},{"content":"&lt;/p&gt;\\n","pos":[40020,40026],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The topmost row of the destination area.","pos":[40093,40138],"source":"\\n<p>The topmost row of the destination area."},{"content":"&lt;/p&gt;\\n","pos":[40139,40145],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[41183,41245],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[41246,41252],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[41343,41376],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[42211,42301],"content":"MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor)","needQuote":true,"nodes":[{"content":"MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor)","pos":[0,90]}]},{"content":"\\n&lt;p&gt;The leftmost column of the source area.","pos":[43484,43528],"source":"\\n<p>The leftmost column of the source area."},{"content":"&lt;/p&gt;\\n","pos":[43529,43535],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The topmost row of the source area.","pos":[43602,43642],"source":"\\n<p>The topmost row of the source area."},{"content":"&lt;/p&gt;\\n","pos":[43643,43649],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of columns in the source area.","pos":[43718,43764],"source":"\\n<p>The number of columns in the source area."},{"content":"&lt;/p&gt;\\n","pos":[43765,43771],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of rows in the source area.","pos":[43841,43884],"source":"\\n<p>The number of rows in the source area."},{"content":"&lt;/p&gt;\\n","pos":[43885,43891],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The leftmost column of the destination area.","pos":[43959,44008],"source":"\\n<p>The leftmost column of the destination area."},{"content":"&lt;/p&gt;\\n","pos":[44009,44015],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The topmost row of the destination area.","pos":[44082,44127],"source":"\\n<p>The topmost row of the destination area."},{"content":"&lt;/p&gt;\\n","pos":[44128,44134],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The character used to fill the source area.","pos":[44201,44249],"source":"\\n<p>The character used to fill the source area."},{"content":"&lt;/p&gt;\\n","pos":[44250,44256],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The foreground color used to fill the source area.","pos":[44336,44391],"source":"\\n<p>The foreground color used to fill the source area."},{"content":"&lt;/p&gt;\\n","pos":[44392,44398],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The background color used to fill the source area.","pos":[44478,44533],"source":"\\n<p>The background color used to fill the source area."},{"content":"&lt;/p&gt;\\n","pos":[44534,44540],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[45838,45900],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[45901,45907],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[45998,46031],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[46495,46505],"content":"NumberLock","needQuote":true,"nodes":[{"content":"NumberLock","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if NUM LOCK is turned on; &lt;strong&gt;false&lt;/strong&gt; if NUM LOCK is turned off.&lt;/p&gt;\\n","pos":[47170,47280],"source":"\\n<p>\\n<strong>true</strong> if NUM LOCK is turned on; <strong>false</strong> if NUM LOCK is turned off.</p>\\n"},{"pos":[47590,47609],"content":"OpenStandardError()","needQuote":true,"nodes":[{"content":"OpenStandardError()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The standard error stream.&lt;/p&gt;\\n","pos":[48217,48254],"source":"\\n<p>The standard error stream.</p>\\n"},{"pos":[48844,48863],"content":"OpenStandardInput()","needQuote":true,"nodes":[{"content":"OpenStandardInput()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The standard input stream.&lt;/p&gt;\\n","pos":[49471,49508],"source":"\\n<p>The standard input stream.</p>\\n"},{"pos":[50089,50109],"content":"OpenStandardOutput()","needQuote":true,"nodes":[{"content":"OpenStandardOutput()","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The standard output stream.&lt;/p&gt;\\n","pos":[50722,50760],"source":"\\n<p>The standard output stream.</p>\\n"},{"pos":[51303,51306],"content":"Out","needQuote":true,"nodes":[{"content":"Out","pos":[0,3]}]},{"pos":[52591,52605],"content":"OutputEncoding","needQuote":true,"nodes":[{"content":"OutputEncoding","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The encoding used to write console output.&lt;/p&gt;\\n","pos":[53265,53318],"source":"\\n<p>The encoding used to write console output.</p>\\n"},{"content":"\\n&lt;p&gt;The property value in a set operation is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[53437,53511],"source":"\\n<p>The property value in a set operation is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred during the execution of this operation.&lt;/p&gt;\\n","pos":[53602,53670],"source":"\\n<p>An error occurred during the execution of this operation.</p>\\n"},{"content":"\\n&lt;p&gt;Your application does not have permission to perform this operation.&lt;/p&gt;\\n","pos":[53785,53864],"source":"\\n<p>Your application does not have permission to perform this operation.</p>\\n"},{"pos":[54250,54256],"content":"Read()","needQuote":true,"nodes":[{"content":"Read()","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.&lt;/p&gt;\\n","pos":[54827,54954],"source":"\\n<p>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[55059,55086],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[55087,55093],"source":" </p>\\n"},{"pos":[55638,55647],"content":"ReadKey()","needQuote":true,"nodes":[{"content":"ReadKey()","pos":[0,9]}]},{"pos":[57781,57797],"content":"ReadKey(Boolean)","needQuote":true,"nodes":[{"content":"ReadKey(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;Determines whether to display the pressed key in the console window.","pos":[58544,58617],"source":"\\n<p>Determines whether to display the pressed key in the console window."},{"content":"&lt;strong&gt;true&lt;/strong&gt; to not display the pressed key; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[58618,58706],"source":" <strong>true</strong> to not display the pressed key; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[58707,58713],"source":" </p>\\n"},{"pos":[60208,60218],"content":"ReadLine()","needQuote":true,"nodes":[{"content":"ReadLine()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The next line of characters from the input stream, or &lt;strong&gt;null&lt;/strong&gt; if no more lines are available.&lt;/p&gt;\\n","pos":[60817,60935],"source":"\\n<p>The next line of characters from the input stream, or <strong>null</strong> if no more lines are available.</p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[61040,61067],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[61068,61074],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;There is insufficient memory to allocate a buffer for the returned string.","pos":[61177,61256],"source":"\\n<p>There is insufficient memory to allocate a buffer for the returned string."},{"content":"&lt;/p&gt;\\n","pos":[61257,61263],"source":" </p>\\n"},{"pos":[62095,62107],"content":"ResetColor()","needQuote":true,"nodes":[{"content":"ResetColor()","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[62769,62831],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[62832,62838],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[62929,62956],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[62957,62963],"source":" </p>\\n"},{"pos":[63439,63466],"content":"SetBufferSize(Int32, Int32)","needQuote":true,"nodes":[{"content":"SetBufferSize(Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The width of the buffer area measured in columns.","pos":[64182,64236],"source":"\\n<p>The width of the buffer area measured in columns."},{"content":"&lt;/p&gt;\\n","pos":[64237,64243],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The height of the buffer area measured in rows.","pos":[64307,64359],"source":"\\n<p>The height of the buffer area measured in rows."},{"content":"&lt;/p&gt;\\n","pos":[64360,64366],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[65316,65378],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[65379,65385],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[65476,65509],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[66012,66043],"content":"SetCursorPosition(Int32, Int32)","needQuote":true,"nodes":[{"content":"SetCursorPosition(Int32, Int32)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The column position of the cursor.","pos":[66722,66761],"source":"\\n<p>The column position of the cursor."},{"content":"Columns are numbered from left to right starting at 0.","pos":[66762,66816]},{"content":"&lt;/p&gt;\\n","pos":[66817,66823],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The row position of the cursor.","pos":[66884,66920],"source":"\\n<p>The row position of the cursor."},{"content":"Rows are numbered from top to bottom starting at 0.","pos":[66921,66972]},{"content":"&lt;/p&gt;\\n","pos":[66973,66979],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[67595,67657],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[67658,67664],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[67755,67788],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[68253,68273],"content":"SetError(TextWriter)","needQuote":true,"nodes":[{"content":"SetError(TextWriter)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;A stream that is the new standard error output.","pos":[69087,69139],"source":"\\n<p>A stream that is the new standard error output."},{"content":"&lt;/p&gt;\\n","pos":[69140,69146],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;newError&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[69265,69315],"source":"\\n<p>\\n<em>newError</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[69316,69322],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[69437,69491],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[69492,69498],"source":" </p>\\n"},{"pos":[70128,70145],"content":"SetIn(TextReader)","needQuote":true,"nodes":[{"content":"SetIn(TextReader)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A stream that is the new standard input.","pos":[70935,70980],"source":"\\n<p>A stream that is the new standard input."},{"content":"&lt;/p&gt;\\n","pos":[70981,70987],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;newIn&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[71106,71153],"source":"\\n<p>\\n<em>newIn</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[71154,71160],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[71275,71329],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[71330,71336],"source":" </p>\\n"},{"pos":[71936,71954],"content":"SetOut(TextWriter)","needQuote":true,"nodes":[{"content":"SetOut(TextWriter)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A stream that is the new standard output.","pos":[72752,72798],"source":"\\n<p>A stream that is the new standard output."},{"content":"&lt;/p&gt;\\n","pos":[72799,72805],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;newOut&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[72924,72972],"source":"\\n<p>\\n<em>newOut</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[72973,72979],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[73094,73148],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[73149,73155],"source":" </p>\\n"},{"pos":[73806,73837],"content":"SetWindowPosition(Int32, Int32)","needQuote":true,"nodes":[{"content":"SetWindowPosition(Int32, Int32)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The column position of the upper left  corner of the console window.","pos":[74554,74627],"source":"\\n<p>The column position of the upper left  corner of the console window."},{"content":"&lt;/p&gt;\\n","pos":[74628,74634],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The row position of the upper left corner of the console window.","pos":[74695,74764],"source":"\\n<p>The row position of the upper left corner of the console window."},{"content":"&lt;/p&gt;\\n","pos":[74765,74771],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[75542,75604],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[75605,75611],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[75702,75735],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[76230,76257],"content":"SetWindowSize(Int32, Int32)","needQuote":true,"nodes":[{"content":"SetWindowSize(Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The width of the console window measured in columns.","pos":[76969,77026],"source":"\\n<p>The width of the console window measured in columns."},{"content":"&lt;/p&gt;\\n","pos":[77027,77033],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The height of the console window measured in rows.","pos":[77097,77152],"source":"\\n<p>The height of the console window measured in rows."},{"content":"&lt;/p&gt;\\n","pos":[77153,77159],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have permission to perform this action.","pos":[78002,78064],"source":"\\n<p>The user does not have permission to perform this action."},{"content":"&lt;/p&gt;\\n","pos":[78065,78071],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.&lt;/p&gt;\\n","pos":[78162,78195],"source":"\\n<p>An I/O error occurred.</p>\\n"},{"pos":[78581,78586],"content":"Title","needQuote":true,"nodes":[{"content":"Title","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The string to be displayed in the title bar of the console.","pos":[79198,79262],"source":"\\n<p>The string to be displayed in the title bar of the console."},{"content":"The maximum length of the title string is 24500 characters.&lt;/p&gt;\\n","pos":[79263,79328],"source":" The maximum length of the title string is 24500 characters.</p>\\n"},{"content":"\\n&lt;p&gt;In a get operation, the retrieved title is longer than 24500 characters.","pos":[79455,79532],"source":"\\n<p>In a get operation, the retrieved title is longer than 24500 characters."},{"content":"&lt;/p&gt;\\n","pos":[79533,79539],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;In a set operation, the specified title is longer than 24500 characters.","pos":[79656,79733],"source":"\\n<p>In a set operation, the specified title is longer than 24500 characters."},{"content":"&lt;/p&gt;\\n","pos":[79734,79740],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;In a set operation, the specified title is &lt;strong&gt;null&lt;/strong&gt;.","pos":[79845,79915],"source":"\\n<p>In a set operation, the specified title is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[79916,79922],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[80013,80040],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[80041,80047],"source":" </p>\\n"},{"pos":[80472,80492],"content":"TreatControlCAsInput","needQuote":true,"nodes":[{"content":"TreatControlCAsInput","pos":[0,20]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if Ctrl+C is treated as ordinary input; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[81469,81578],"source":"\\n<p>\\n<strong>true</strong> if Ctrl+C is treated as ordinary input; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;Unable to get or set the input mode of the console input buffer.","pos":[81683,81752],"source":"\\n<p>Unable to get or set the input mode of the console input buffer."},{"content":"&lt;/p&gt;\\n","pos":[81753,81759],"source":" </p>\\n"},{"pos":[82431,82443],"content":"WindowHeight","needQuote":true,"nodes":[{"content":"WindowHeight","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The height of the console window measured in rows.&lt;/p&gt;\\n","pos":[83072,83133],"source":"\\n<p>The height of the console window measured in rows.</p>\\n"},{"content":"\\n&lt;p&gt;Error reading or writing information.&lt;/p&gt;\\n","pos":[84348,84396],"source":"\\n<p>Error reading or writing information.</p>\\n"},{"pos":[84685,84696],"content":"WindowWidth","needQuote":true,"nodes":[{"content":"WindowWidth","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The width of the console window measured in columns.&lt;/p&gt;\\n","pos":[85315,85378],"source":"\\n<p>The width of the console window measured in columns.</p>\\n"},{"content":"\\n&lt;p&gt;Error reading or writing information.&lt;/p&gt;\\n","pos":[86593,86641],"source":"\\n<p>Error reading or writing information.</p>\\n"},{"pos":[86926,86936],"content":"WindowLeft","needQuote":true,"nodes":[{"content":"WindowLeft","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The leftmost console window position measured in columns.&lt;/p&gt;\\n","pos":[87598,87666],"source":"\\n<p>The leftmost console window position measured in columns.</p>\\n"},{"content":"\\n&lt;p&gt;Error reading or writing information.&lt;/p&gt;\\n","pos":[88294,88342],"source":"\\n<p>Error reading or writing information.</p>\\n"},{"pos":[88623,88632],"content":"WindowTop","needQuote":true,"nodes":[{"content":"WindowTop","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The uppermost console window position measured in rows.&lt;/p&gt;\\n","pos":[89285,89351],"source":"\\n<p>The uppermost console window position measured in rows.</p>\\n"},{"content":"\\n&lt;p&gt;Error reading or writing information.&lt;/p&gt;\\n","pos":[89979,90027],"source":"\\n<p>Error reading or writing information.</p>\\n"},{"pos":[90343,90357],"content":"Write(Boolean)","needQuote":true,"nodes":[{"content":"Write(Boolean)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[91017,91041],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[91042,91048],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[91153,91180],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[91181,91187],"source":" </p>\\n"},{"pos":[91829,91840],"content":"Write(Char)","needQuote":true,"nodes":[{"content":"Write(Char)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[92474,92498],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[92499,92505],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[92610,92637],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[92638,92644],"source":" </p>\\n"},{"pos":[93289,93302],"content":"Write(Char[])","needQuote":true,"nodes":[{"content":"Write(Char[])","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A Unicode character array.","pos":[93951,93982],"source":"\\n<p>A Unicode character array."},{"content":"&lt;/p&gt;\\n","pos":[93983,93989],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[94094,94121],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[94122,94128],"source":" </p>\\n"},{"pos":[94970,94997],"content":"Write(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Char[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;An array of Unicode characters.","pos":[95735,95771],"source":"\\n<p>An array of Unicode characters."},{"content":"&lt;/p&gt;\\n","pos":[95772,95778],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The starting position in &lt;em&gt;buffer&lt;/em&gt;.","pos":[95841,95887],"source":"\\n<p>The starting position in <em>buffer</em>."},{"content":"&lt;/p&gt;\\n","pos":[95888,95894],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of characters to write.","pos":[95957,95996],"source":"\\n<p>The number of characters to write."},{"content":"&lt;/p&gt;\\n","pos":[95997,96003],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[96122,96170],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[96171,96177],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is less than zero.","pos":[96294,96352],"source":"\\n<p>\\n<em>index</em> or <em>count</em> is less than zero."},{"content":"&lt;/p&gt;\\n","pos":[96353,96359],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; plus &lt;em&gt;count&lt;/em&gt; specify a position that is not within &lt;em&gt;buffer&lt;/em&gt;.","pos":[96456,96552],"source":"\\n<p>\\n<em>index</em> plus <em>count</em> specify a position that is not within <em>buffer</em>."},{"content":"&lt;/p&gt;\\n","pos":[96553,96559],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[96650,96677],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[96678,96684],"source":" </p>\\n"},{"pos":[97521,97535],"content":"Write(Decimal)","needQuote":true,"nodes":[{"content":"Write(Decimal)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[98265,98289],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[98290,98296],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[98401,98428],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[98429,98435],"source":" </p>\\n"},{"pos":[99083,99096],"content":"Write(Double)","needQuote":true,"nodes":[{"content":"Write(Double)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[99779,99803],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[99804,99810],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[99915,99942],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[99943,99949],"source":" </p>\\n"},{"pos":[100593,100605],"content":"Write(Int32)","needQuote":true,"nodes":[{"content":"Write(Int32)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[101274,101298],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[101299,101305],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[101410,101437],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[101438,101444],"source":" </p>\\n"},{"pos":[102087,102099],"content":"Write(Int64)","needQuote":true,"nodes":[{"content":"Write(Int64)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[102766,102790],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[102791,102797],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[102902,102929],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[102930,102936],"source":" </p>\\n"},{"pos":[103582,103595],"content":"Write(Object)","needQuote":true,"nodes":[{"content":"Write(Object)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The value to write, or &lt;strong&gt;null&lt;/strong&gt;.","pos":[104247,104297],"source":"\\n<p>The value to write, or <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[104298,104304],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[104409,104436],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[104437,104443],"source":" </p>\\n"},{"pos":[105090,105103],"content":"Write(Single)","needQuote":true,"nodes":[{"content":"Write(Single)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[105785,105809],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[105810,105816],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[105921,105948],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[105949,105955],"source":" </p>\\n"},{"pos":[106602,106615],"content":"Write(String)","needQuote":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[107400,107427],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[107428,107434],"source":" </p>\\n"},{"pos":[108123,108144],"content":"Write(String, Object)","needQuote":true,"nodes":[{"content":"Write(String, Object)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;A composite format string (see Remarks).","pos":[108882,108927],"source":"\\n<p>A composite format string (see Remarks)."},{"content":"&lt;/p&gt;\\n","pos":[108928,108934],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[108997,109043],"source":"\\n<p>An object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[109044,109050],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[109155,109182],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[109183,109189],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[109294,109342],"source":"\\n<p>\\n<em>format</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[109343,109349],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The format specification in &lt;em&gt;format&lt;/em&gt; is invalid.","pos":[109442,109502],"source":"\\n<p>The format specification in <em>format</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[109503,109509],"source":" </p>\\n"},{"pos":[110248,110277],"content":"Write(String, Object, Object)","needQuote":true,"nodes":[{"content":"Write(String, Object, Object)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\\n","pos":[111060,111111],"source":"\\n<p>A composite format string (see Remarks).</p>\\n"},{"content":"\\n&lt;p&gt;The first object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[111174,111227],"source":"\\n<p>The first object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[111228,111234],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[111297,111351],"source":"\\n<p>The second object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[111352,111358],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[111463,111490],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[111491,111497],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[111602,111650],"source":"\\n<p>\\n<em>format</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[111651,111657],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The format specification in &lt;em&gt;format&lt;/em&gt; is invalid.","pos":[111750,111810],"source":"\\n<p>The format specification in <em>format</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[111811,111817],"source":" </p>\\n"},{"pos":[112606,112643],"content":"Write(String, Object, Object, Object)","needQuote":true,"nodes":[{"content":"Write(String, Object, Object, Object)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\\n","pos":[113470,113521],"source":"\\n<p>A composite format string (see Remarks).</p>\\n"},{"content":"\\n&lt;p&gt;The first object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[113584,113637],"source":"\\n<p>The first object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[113638,113644],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[113707,113761],"source":"\\n<p>The second object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[113762,113768],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The third object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[113831,113884],"source":"\\n<p>The third object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[113885,113891],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[113996,114023],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[114024,114030],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[114135,114183],"source":"\\n<p>\\n<em>format</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[114184,114190],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The format specification in &lt;em&gt;format&lt;/em&gt; is invalid.","pos":[114283,114343],"source":"\\n<p>The format specification in <em>format</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[114344,114350],"source":" </p>\\n"},{"pos":[115069,115092],"content":"Write(String, Object[])","needQuote":true,"nodes":[{"content":"Write(String, Object[])","pos":[0,23]}]},{"content":"\\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\\n","pos":[115862,115913],"source":"\\n<p>A composite format string (see Remarks).</p>\\n"},{"content":"\\n&lt;p&gt;An array of objects to write using &lt;em&gt;format&lt;/em&gt;.","pos":[115977,116033],"source":"\\n<p>An array of objects to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[116034,116040],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[116145,116172],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[116173,116179],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; or &lt;em&gt;arg&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[116284,116348],"source":"\\n<p>\\n<em>format</em> or <em>arg</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[116349,116355],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The format specification in &lt;em&gt;format&lt;/em&gt; is invalid.","pos":[116448,116508],"source":"\\n<p>The format specification in <em>format</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[116509,116515],"source":" </p>\\n"},{"pos":[117326,117339],"content":"Write(UInt32)","needQuote":true,"nodes":[{"content":"Write(UInt32)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[118090,118114],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[118115,118121],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[118226,118253],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[118254,118260],"source":" </p>\\n"},{"pos":[119082,119095],"content":"Write(UInt64)","needQuote":true,"nodes":[{"content":"Write(UInt64)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[119844,119868],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[119869,119875],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[119980,120007],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[120008,120014],"source":" </p>\\n"},{"pos":[120803,120814],"content":"WriteLine()","needQuote":true,"nodes":[{"content":"WriteLine()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[121450,121477],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[121478,121484],"source":" </p>\\n"},{"pos":[122344,122362],"content":"WriteLine(Boolean)","needQuote":true,"nodes":[{"content":"WriteLine(Boolean)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[123080,123104],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[123105,123111],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[123216,123243],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[123244,123250],"source":" </p>\\n"},{"pos":[123958,123973],"content":"WriteLine(Char)","needQuote":true,"nodes":[{"content":"WriteLine(Char)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[124665,124689],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[124690,124696],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[124801,124828],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[124829,124835],"source":" </p>\\n"},{"pos":[125546,125563],"content":"WriteLine(Char[])","needQuote":true,"nodes":[{"content":"WriteLine(Char[])","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A Unicode character array.","pos":[126270,126301],"source":"\\n<p>A Unicode character array."},{"content":"&lt;/p&gt;\\n","pos":[126302,126308],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[126413,126440],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[126441,126447],"source":" </p>\\n"},{"pos":[127367,127398],"content":"WriteLine(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteLine(Char[], Int32, Int32)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;An array of Unicode characters.","pos":[128194,128230],"source":"\\n<p>An array of Unicode characters."},{"content":"&lt;/p&gt;\\n","pos":[128231,128237],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The starting position in &lt;em&gt;buffer&lt;/em&gt;.","pos":[128300,128346],"source":"\\n<p>The starting position in <em>buffer</em>."},{"content":"&lt;/p&gt;\\n","pos":[128347,128353],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of characters to write.","pos":[128416,128455],"source":"\\n<p>The number of characters to write."},{"content":"&lt;/p&gt;\\n","pos":[128456,128462],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[128581,128629],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[128630,128636],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is less than zero.","pos":[128753,128811],"source":"\\n<p>\\n<em>index</em> or <em>count</em> is less than zero."},{"content":"&lt;/p&gt;\\n","pos":[128812,128818],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; plus &lt;em&gt;count&lt;/em&gt; specify a position that is not within &lt;em&gt;buffer&lt;/em&gt;.","pos":[128915,129011],"source":"\\n<p>\\n<em>index</em> plus <em>count</em> specify a position that is not within <em>buffer</em>."},{"content":"&lt;/p&gt;\\n","pos":[129012,129018],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[129109,129136],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[129137,129143],"source":" </p>\\n"},{"pos":[130058,130076],"content":"WriteLine(Decimal)","needQuote":true,"nodes":[{"content":"WriteLine(Decimal)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[130864,130888],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[130889,130895],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[131000,131027],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[131028,131034],"source":" </p>\\n"},{"pos":[131748,131765],"content":"WriteLine(Double)","needQuote":true,"nodes":[{"content":"WriteLine(Double)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[132506,132530],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[132531,132537],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[132642,132669],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[132670,132676],"source":" </p>\\n"},{"pos":[133386,133402],"content":"WriteLine(Int32)","needQuote":true,"nodes":[{"content":"WriteLine(Int32)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[134129,134153],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[134154,134160],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[134265,134292],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[134293,134299],"source":" </p>\\n"},{"pos":[135008,135024],"content":"WriteLine(Int64)","needQuote":true,"nodes":[{"content":"WriteLine(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[135749,135773],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[135774,135780],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[135885,135912],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[135913,135919],"source":" </p>\\n"},{"pos":[136631,136648],"content":"WriteLine(Object)","needQuote":true,"nodes":[{"content":"WriteLine(Object)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[137358,137382],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[137383,137389],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[137494,137521],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[137522,137528],"source":" </p>\\n"},{"pos":[138241,138258],"content":"WriteLine(Single)","needQuote":true,"nodes":[{"content":"WriteLine(Single)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[138998,139022],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[139023,139029],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[139134,139161],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[139162,139168],"source":" </p>\\n"},{"pos":[139881,139898],"content":"WriteLine(String)","needQuote":true,"nodes":[{"content":"WriteLine(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[140663,140690],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[140691,140697],"source":" </p>\\n"},{"pos":[141452,141477],"content":"WriteLine(String, Object)","needQuote":true,"nodes":[{"content":"WriteLine(String, Object)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\\n","pos":[142273,142324],"source":"\\n<p>A composite format string (see Remarks).</p>\\n"},{"content":"\\n&lt;p&gt;An object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[142387,142433],"source":"\\n<p>An object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[142434,142440],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[142545,142572],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[142573,142579],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[142684,142732],"source":"\\n<p>\\n<em>format</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[142733,142739],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The format specification in &lt;em&gt;format&lt;/em&gt; is invalid.","pos":[142832,142892],"source":"\\n<p>The format specification in <em>format</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[142893,142899],"source":" </p>\\n"},{"pos":[143704,143737],"content":"WriteLine(String, Object, Object)","needQuote":true,"nodes":[{"content":"WriteLine(String, Object, Object)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\\n","pos":[144578,144629],"source":"\\n<p>A composite format string (see Remarks).</p>\\n"},{"content":"\\n&lt;p&gt;The first object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[144692,144745],"source":"\\n<p>The first object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[144746,144752],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[144815,144869],"source":"\\n<p>The second object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[144870,144876],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[144981,145008],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[145009,145015],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[145120,145168],"source":"\\n<p>\\n<em>format</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[145169,145175],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The format specification in &lt;em&gt;format&lt;/em&gt; is invalid.","pos":[145268,145328],"source":"\\n<p>The format specification in <em>format</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[145329,145335],"source":" </p>\\n"},{"pos":[146190,146231],"content":"WriteLine(String, Object, Object, Object)","needQuote":true,"nodes":[{"content":"WriteLine(String, Object, Object, Object)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\\n","pos":[147116,147167],"source":"\\n<p>A composite format string (see Remarks).</p>\\n"},{"content":"\\n&lt;p&gt;The first object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[147230,147283],"source":"\\n<p>The first object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[147284,147290],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[147353,147407],"source":"\\n<p>The second object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[147408,147414],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The third object to write using &lt;em&gt;format&lt;/em&gt;.","pos":[147477,147530],"source":"\\n<p>The third object to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[147531,147537],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[147642,147669],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[147670,147676],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[147781,147829],"source":"\\n<p>\\n<em>format</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[147830,147836],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The format specification in &lt;em&gt;format&lt;/em&gt; is invalid.","pos":[147929,147989],"source":"\\n<p>The format specification in <em>format</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[147990,147996],"source":" </p>\\n"},{"pos":[148781,148808],"content":"WriteLine(String, Object[])","needQuote":true,"nodes":[{"content":"WriteLine(String, Object[])","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\\n","pos":[149636,149687],"source":"\\n<p>A composite format string (see Remarks).</p>\\n"},{"content":"\\n&lt;p&gt;An array of objects to write using &lt;em&gt;format&lt;/em&gt;.","pos":[149751,149807],"source":"\\n<p>An array of objects to write using <em>format</em>."},{"content":"&lt;/p&gt;\\n","pos":[149808,149814],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[149919,149946],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[149947,149953],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; or &lt;em&gt;arg&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[150058,150122],"source":"\\n<p>\\n<em>format</em> or <em>arg</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[150123,150129],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The format specification in &lt;em&gt;format&lt;/em&gt; is invalid.","pos":[150222,150282],"source":"\\n<p>The format specification in <em>format</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[150283,150289],"source":" </p>\\n"},{"pos":[151178,151195],"content":"WriteLine(UInt32)","needQuote":true,"nodes":[{"content":"WriteLine(UInt32)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[152004,152028],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[152029,152035],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[152140,152167],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[152168,152174],"source":" </p>\\n"},{"pos":[153062,153079],"content":"WriteLine(UInt64)","needQuote":true,"nodes":[{"content":"WriteLine(UInt64)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The value to write.","pos":[153886,153910],"source":"\\n<p>The value to write."},{"content":"&lt;/p&gt;\\n","pos":[153911,153917],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[154022,154049],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[154050,154056],"source":" </p>\\n"},{"pos":[154805,154811],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[154942,154948],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[155108,155118],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[155213,155221],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[155290,155291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155318,155319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155389,155397],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[155466,155467],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155494,155495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155678,155692],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[155811,155817],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[155884,155885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155935,155941],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[156001,156002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156085,156091],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[156158,156159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156209,156215],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[156275,156276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156490,156512],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[156660,156666],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[156733,156734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156784,156790],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[156851,156852]},{"pos":[156907,156913],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[156973,156974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157071,157077],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[157144,157145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157195,157201],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[157262,157263]},{"pos":[157318,157324],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[157384,157385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157630,157661],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[157827,157842],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[157918,157919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157969,157975],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[158036,158037]},{"pos":[158092,158098],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[158158,158159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158265,158280],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[158356,158357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158407,158413],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[158474,158475]},{"pos":[158530,158536],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[158596,158597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158827,158840],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[158941,158952],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[159024,159025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159052,159053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159126,159137],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[159209,159210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159237,159238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159413,159422],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[159515,159522],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[159590,159591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159618,159619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159688,159695],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[159763,159764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159791,159792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159967,159984],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[160093,160108],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[160184,160185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160212,160213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160290,160305],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[160381,160382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160409,160410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160585,160597],"content":"ConsoleColor","needQuote":true,"nodes":[{"content":"ConsoleColor","pos":[0,12]}]},{"pos":[160759,160764],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[160907,160914],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[161081,161106],"content":"ConsoleCancelEventHandler","needQuote":true,"nodes":[{"content":"ConsoleCancelEventHandler","pos":[0,25]}]},{"pos":[161318,161328],"content":"TextWriter","needQuote":true,"nodes":[{"content":"TextWriter","pos":[0,10]}]},{"pos":[161470,161479],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[161631,161639],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[161781,161792],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[161948,161958],"content":"TextReader","needQuote":true,"nodes":[{"content":"TextReader","pos":[0,10]}]},{"pos":[162119,162123],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[162268,162274],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[162433,162447],"content":"ConsoleKeyInfo","needQuote":true,"nodes":[{"content":"ConsoleKeyInfo","pos":[0,14]}]},{"pos":[162616,162622],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[162730,162736],"content":"Char[]","needQuote":true,"nodes":[{"content":"Char[]","pos":[0,6]}]},{"pos":[162856,162860],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[162919,162921]},{"pos":[162984,162988],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[163046,163048],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[163182,163189],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[163337,163343],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[163487,163492],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[163634,163640],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[163750,163758],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[163886,163892],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[163953,163955]},{"pos":[164020,164026],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[164086,164088],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[164225,164231],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[164376,164382],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[164538,164555],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[164736,164753],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[164960,164971],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[165188,165215],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[165421,165442],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[165651,165676],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[165875,165895],"content":"OutOfMemoryException","needQuote":true,"nodes":[{"content":"OutOfMemoryException","pos":[0,20]}]},{"pos":[166091,166106],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.Console\n  commentId: T:System.Console\n  id: Console\n  parent: System\n  children:\n  - System.Console.BackgroundColor\n  - System.Console.Beep\n  - System.Console.Beep(System.Int32,System.Int32)\n  - System.Console.BufferHeight\n  - System.Console.BufferWidth\n  - System.Console.CancelKeyPress\n  - System.Console.CapsLock\n  - System.Console.Clear\n  - System.Console.CursorLeft\n  - System.Console.CursorSize\n  - System.Console.CursorTop\n  - System.Console.CursorVisible\n  - System.Console.Error\n  - System.Console.ForegroundColor\n  - System.Console.In\n  - System.Console.InputEncoding\n  - System.Console.IsErrorRedirected\n  - System.Console.IsInputRedirected\n  - System.Console.IsOutputRedirected\n  - System.Console.KeyAvailable\n  - System.Console.LargestWindowHeight\n  - System.Console.LargestWindowWidth\n  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)\n  - System.Console.NumberLock\n  - System.Console.OpenStandardError\n  - System.Console.OpenStandardInput\n  - System.Console.OpenStandardOutput\n  - System.Console.Out\n  - System.Console.OutputEncoding\n  - System.Console.Read\n  - System.Console.ReadKey\n  - System.Console.ReadKey(System.Boolean)\n  - System.Console.ReadLine\n  - System.Console.ResetColor\n  - System.Console.SetBufferSize(System.Int32,System.Int32)\n  - System.Console.SetCursorPosition(System.Int32,System.Int32)\n  - System.Console.SetError(System.IO.TextWriter)\n  - System.Console.SetIn(System.IO.TextReader)\n  - System.Console.SetOut(System.IO.TextWriter)\n  - System.Console.SetWindowPosition(System.Int32,System.Int32)\n  - System.Console.SetWindowSize(System.Int32,System.Int32)\n  - System.Console.Title\n  - System.Console.TreatControlCAsInput\n  - System.Console.WindowHeight\n  - System.Console.WindowLeft\n  - System.Console.WindowTop\n  - System.Console.WindowWidth\n  - System.Console.Write(System.Boolean)\n  - System.Console.Write(System.Char)\n  - System.Console.Write(System.Char[])\n  - System.Console.Write(System.Char[],System.Int32,System.Int32)\n  - System.Console.Write(System.Decimal)\n  - System.Console.Write(System.Double)\n  - System.Console.Write(System.Int32)\n  - System.Console.Write(System.Int64)\n  - System.Console.Write(System.Object)\n  - System.Console.Write(System.Single)\n  - System.Console.Write(System.String)\n  - System.Console.Write(System.String,System.Object)\n  - System.Console.Write(System.String,System.Object,System.Object)\n  - System.Console.Write(System.String,System.Object,System.Object,System.Object)\n  - System.Console.Write(System.String,System.Object[])\n  - System.Console.Write(System.UInt32)\n  - System.Console.Write(System.UInt64)\n  - System.Console.WriteLine\n  - System.Console.WriteLine(System.Boolean)\n  - System.Console.WriteLine(System.Char)\n  - System.Console.WriteLine(System.Char[])\n  - System.Console.WriteLine(System.Char[],System.Int32,System.Int32)\n  - System.Console.WriteLine(System.Decimal)\n  - System.Console.WriteLine(System.Double)\n  - System.Console.WriteLine(System.Int32)\n  - System.Console.WriteLine(System.Int64)\n  - System.Console.WriteLine(System.Object)\n  - System.Console.WriteLine(System.Single)\n  - System.Console.WriteLine(System.String)\n  - System.Console.WriteLine(System.String,System.Object)\n  - System.Console.WriteLine(System.String,System.Object,System.Object)\n  - System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)\n  - System.Console.WriteLine(System.String,System.Object[])\n  - System.Console.WriteLine(System.UInt32)\n  - System.Console.WriteLine(System.UInt64)\n  langs:\n  - csharp\n  - vb\n  name: Console\n  fullName: System.Console\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/LowLevelConsole.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Console\n    path: src/mscorlib/src/System/LowLevelConsole.cs\n    startLine: 16\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Represents the standard input, output, and error streams for console applications. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public class Console\n    content.vb: Public Class Console\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: Console\n- uid: System.Console.BackgroundColor\n  commentId: P:System.Console.BackgroundColor\n  id: BackgroundColor\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: BackgroundColor\n  fullName: System.Console.BackgroundColor\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BackgroundColor\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 12\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the background color of the console.</p>\\n\"\n  syntax:\n    content: public static ConsoleColor BackgroundColor { get; set; }\n    content.vb: Public Shared Property BackgroundColor As ConsoleColor\n    parameters: []\n    return:\n      type: System.ConsoleColor\n      description: \"\\n<p>A value that specifies the background color of the console; that is, the color that appears behind each character. The default is black.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The color specified in a set operation is not a valid member of <xref href=\\\"System.ConsoleColor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.BackgroundColor\n- uid: System.Console.Beep\n  commentId: M:System.Console.Beep\n  id: Beep\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Beep()\n  fullName: System.Console.Beep()\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Beep\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 13\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Plays the sound of a beep through the console speaker.</p>\\n\"\n  syntax:\n    content: public static void Beep()\n    content.vb: Public Shared Sub Beep\n  exceptions:\n  - type: System.Security.HostProtectionException\n    commentId: T:System.Security.HostProtectionException\n    description: \"\\n<p>This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Beep()\n- uid: System.Console.Beep(System.Int32,System.Int32)\n  commentId: M:System.Console.Beep(System.Int32,System.Int32)\n  id: Beep(System.Int32,System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Beep(Int32, Int32)\n  fullName: System.Console.Beep(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Beep\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 14\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Plays the sound of a beep of a specified frequency and duration through the console speaker.</p>\\n\"\n  syntax:\n    content: public static void Beep(int frequency, int duration)\n    content.vb: Public Shared Sub Beep(frequency As Integer, duration As Integer)\n    parameters:\n    - id: frequency\n      type: System.Int32\n      description: \"\\n<p>The frequency of the beep, ranging from 37 to 32767 hertz.</p>\\n\"\n    - id: duration\n      type: System.Int32\n      description: \"\\n<p>The duration of the beep measured in milliseconds.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>frequency</em> is less than 37 or more than 32767 hertz.</p>\\n<p>-or-</p>\\n<p>\\n<em>duration</em> is less than or equal to zero.</p>\\n\"\n  - type: System.Security.HostProtectionException\n    commentId: T:System.Security.HostProtectionException\n    description: \"\\n<p>This method was executed on a server, such as SQL Server, that does not permit access to the console.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Beep(Int32, Int32)\n- uid: System.Console.BufferHeight\n  commentId: P:System.Console.BufferHeight\n  id: BufferHeight\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: BufferHeight\n  fullName: System.Console.BufferHeight\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BufferHeight\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 15\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the height of the buffer area.</p>\\n\"\n  syntax:\n    content: public static int BufferHeight { get; set; }\n    content.vb: Public Shared Property BufferHeight As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The current height, in rows, of the buffer area.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value in a set operation is less than or equal to zero.</p>\\n<p>-or- </p>\\n<p>The value in a set operation is greater than or equal to <xref href=\\\"System.Int16.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>The value in a set operation is less than <xref href=\\\"System.Console.WindowTop\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> + <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.BufferHeight\n- uid: System.Console.BufferWidth\n  commentId: P:System.Console.BufferWidth\n  id: BufferWidth\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: BufferWidth\n  fullName: System.Console.BufferWidth\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BufferWidth\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 16\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the width of the buffer area.</p>\\n\"\n  syntax:\n    content: public static int BufferWidth { get; set; }\n    content.vb: Public Shared Property BufferWidth As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The current width, in columns, of the buffer area.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value in a set operation is less than or equal to zero.</p>\\n<p>-or- </p>\\n<p>The value in a set operation is greater than or equal to <xref href=\\\"System.Int16.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>The value in a set operation is less than <xref href=\\\"System.Console.WindowLeft\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> + <xref href=\\\"System.Console.WindowWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.BufferWidth\n- uid: System.Console.CapsLock\n  commentId: P:System.Console.CapsLock\n  id: CapsLock\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: CapsLock\n  fullName: System.Console.CapsLock\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CapsLock\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 17\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</p>\\n\"\n  syntax:\n    content: public static bool CapsLock { get; }\n    content.vb: Public Shared ReadOnly Property CapsLock As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if CAPS LOCK is turned on; <strong>false</strong> if CAPS LOCK is turned off.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.CapsLock\n- uid: System.Console.CancelKeyPress\n  commentId: E:System.Console.CancelKeyPress\n  id: CancelKeyPress\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: CancelKeyPress\n  fullName: System.Console.CancelKeyPress\n  type: Event\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CancelKeyPress\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 18\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Occurs when the <xref href=\\\"System.ConsoleModifiers.Control\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> modifier key (Ctrl) and either the <xref href=\\\"System.ConsoleKey.C\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</p>\\n\"\n  syntax:\n    content: public static event ConsoleCancelEventHandler CancelKeyPress\n    content.vb: Public Shared Event CancelKeyPress As ConsoleCancelEventHandler\n    return:\n      type: System.ConsoleCancelEventHandler\n  seealso:\n  - type: System.ConsoleCancelEventArgs\n    commentId: T:System.ConsoleCancelEventArgs\n  - type: System.ConsoleCancelEventHandler\n    commentId: T:System.ConsoleCancelEventHandler\n  - type: System.Console.TreatControlCAsInput\n    commentId: P:System.Console.TreatControlCAsInput\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.CancelKeyPress\n- uid: System.Console.Clear\n  commentId: M:System.Console.Clear\n  id: Clear\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Console.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 19\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Clears the console buffer and corresponding console window of display information.</p>\\n\"\n  syntax:\n    content: public static void Clear()\n    content.vb: Public Shared Sub Clear\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Clear()\n- uid: System.Console.CursorLeft\n  commentId: P:System.Console.CursorLeft\n  id: CursorLeft\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: CursorLeft\n  fullName: System.Console.CursorLeft\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CursorLeft\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 20\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the column position of the cursor within the buffer area.</p>\\n\"\n  syntax:\n    content: public static int CursorLeft { get; set; }\n    content.vb: Public Shared Property CursorLeft As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The current position, in columns, of the cursor.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value in a set operation is less than zero.</p>\\n<p>-or- </p>\\n<p>The value in a set operation is greater than or equal to <xref href=\\\"System.Console.BufferWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.CursorLeft\n- uid: System.Console.CursorSize\n  commentId: P:System.Console.CursorSize\n  id: CursorSize\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: CursorSize\n  fullName: System.Console.CursorSize\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CursorSize\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 21\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the height of the cursor within a character cell.</p>\\n\"\n  syntax:\n    content: public static int CursorSize { get; set; }\n    content.vb: Public Shared Property CursorSize As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The size of the cursor expressed as a percentage of the height of a character cell. The property value ranges from 1 to 100.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value specified in a set operation is less than 1 or greater than 100. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.CursorSize\n- uid: System.Console.CursorTop\n  commentId: P:System.Console.CursorTop\n  id: CursorTop\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: CursorTop\n  fullName: System.Console.CursorTop\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CursorTop\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 22\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the row position of the cursor within the buffer area.</p>\\n\"\n  syntax:\n    content: public static int CursorTop { get; set; }\n    content.vb: Public Shared Property CursorTop As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The current position, in rows, of the cursor.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value in a set operation is less than zero.</p>\\n<p>-or- </p>\\n<p>The value in a set operation is greater than or equal to <xref href=\\\"System.Console.BufferHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.CursorTop\n- uid: System.Console.CursorVisible\n  commentId: P:System.Console.CursorVisible\n  id: CursorVisible\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: CursorVisible\n  fullName: System.Console.CursorVisible\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CursorVisible\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 23\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets a value indicating whether the cursor is visible.</p>\\n\"\n  syntax:\n    content: public static bool CursorVisible { get; set; }\n    content.vb: Public Shared Property CursorVisible As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the cursor is visible; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.CursorVisible\n- uid: System.Console.Error\n  commentId: P:System.Console.Error\n  id: Error\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Error\n  fullName: System.Console.Error\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Error\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 24\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets the standard error output stream.</p>\\n\"\n  syntax:\n    content: public static TextWriter Error { get; }\n    content.vb: Public Shared ReadOnly Property Error As TextWriter\n    parameters: []\n    return:\n      type: System.IO.TextWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the standard error output stream.</p>\\n\"\n  seealso:\n  - type: System.Console.In\n    commentId: P:System.Console.In\n  - type: System.Console.Out\n    commentId: P:System.Console.Out\n  - type: System.Console.IsErrorRedirected\n    commentId: P:System.Console.IsErrorRedirected\n  - type: System.Console.SetError(System.IO.TextWriter)\n    commentId: M:System.Console.SetError(System.IO.TextWriter)\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.Error\n- uid: System.Console.ForegroundColor\n  commentId: P:System.Console.ForegroundColor\n  id: ForegroundColor\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: ForegroundColor\n  fullName: System.Console.ForegroundColor\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ForegroundColor\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 25\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the foreground color of the console.</p>\\n\"\n  syntax:\n    content: public static ConsoleColor ForegroundColor { get; set; }\n    content.vb: Public Shared Property ForegroundColor As ConsoleColor\n    parameters: []\n    return:\n      type: System.ConsoleColor\n      description: \"\\n<p>A <xref href=\\\"System.ConsoleColor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the foreground color of the console; that is, the color of each character that is displayed. The default is gray.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The color specified in a set operation is not a valid member of <xref href=\\\"System.ConsoleColor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.ForegroundColor\n- uid: System.Console.InputEncoding\n  commentId: P:System.Console.InputEncoding\n  id: InputEncoding\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: InputEncoding\n  fullName: System.Console.InputEncoding\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InputEncoding\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 26\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the encoding the console uses to read input. </p>\\n\"\n  syntax:\n    content: public static Encoding InputEncoding { get; set; }\n    content.vb: Public Shared Property InputEncoding As Encoding\n    parameters: []\n    return:\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding used to read console input.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property value in a set operation is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred during the execution of this operation.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>Your application does not have permission to perform this operation.</p>\\n\"\n  seealso:\n  - type: System.Text.Encoding\n    commentId: T:System.Text.Encoding\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.InputEncoding\n- uid: System.Console.IsErrorRedirected\n  commentId: P:System.Console.IsErrorRedirected\n  id: IsErrorRedirected\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: IsErrorRedirected\n  fullName: System.Console.IsErrorRedirected\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsErrorRedirected\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 27\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</p>\\n\"\n  syntax:\n    content: public static bool IsErrorRedirected { get; }\n    content.vb: Public Shared ReadOnly Property IsErrorRedirected As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if error output is redirected; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Console.Error\n    commentId: P:System.Console.Error\n  - type: System.Console.SetError(System.IO.TextWriter)\n    commentId: M:System.Console.SetError(System.IO.TextWriter)\n  - type: System.Console.OpenStandardError\n    commentId: M:System.Console.OpenStandardError\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.IsErrorRedirected\n- uid: System.Console.IsInputRedirected\n  commentId: P:System.Console.IsInputRedirected\n  id: IsInputRedirected\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: IsInputRedirected\n  fullName: System.Console.IsInputRedirected\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsInputRedirected\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 28\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets a value that indicates whether input has been redirected from the standard input stream.</p>\\n\"\n  syntax:\n    content: public static bool IsInputRedirected { get; }\n    content.vb: Public Shared ReadOnly Property IsInputRedirected As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if input is redirected; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Console.In\n    commentId: P:System.Console.In\n  - type: System.Console.SetIn(System.IO.TextReader)\n    commentId: M:System.Console.SetIn(System.IO.TextReader)\n  - type: System.Console.OpenStandardInput\n    commentId: M:System.Console.OpenStandardInput\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.IsInputRedirected\n- uid: System.Console.IsOutputRedirected\n  commentId: P:System.Console.IsOutputRedirected\n  id: IsOutputRedirected\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: IsOutputRedirected\n  fullName: System.Console.IsOutputRedirected\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsOutputRedirected\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 29\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets a value that indicates whether output has been redirected from the standard output stream.</p>\\n\"\n  syntax:\n    content: public static bool IsOutputRedirected { get; }\n    content.vb: Public Shared ReadOnly Property IsOutputRedirected As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if output is redirected; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Console.Out\n    commentId: P:System.Console.Out\n  - type: System.Console.SetOut(System.IO.TextWriter)\n    commentId: M:System.Console.SetOut(System.IO.TextWriter)\n  - type: System.Console.OpenStandardError\n    commentId: M:System.Console.OpenStandardError\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.IsOutputRedirected\n- uid: System.Console.In\n  commentId: P:System.Console.In\n  id: In\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: In\n  fullName: System.Console.In\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: In\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 30\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets the standard input stream.</p>\\n\"\n  syntax:\n    content: public static TextReader In { get; }\n    content.vb: Public Shared ReadOnly Property In As TextReader\n    parameters: []\n    return:\n      type: System.IO.TextReader\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the standard input stream.</p>\\n\"\n  seealso:\n  - type: System.Console.OpenStandardInput\n    commentId: M:System.Console.OpenStandardInput\n  - type: System.Console.IsInputRedirected\n    commentId: P:System.Console.IsInputRedirected\n  - type: System.Console.Error\n    commentId: P:System.Console.Error\n  - type: System.Console.Out\n    commentId: P:System.Console.Out\n  - type: System.Console.SetIn(System.IO.TextReader)\n    commentId: M:System.Console.SetIn(System.IO.TextReader)\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.In\n- uid: System.Console.KeyAvailable\n  commentId: P:System.Console.KeyAvailable\n  id: KeyAvailable\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: KeyAvailable\n  fullName: System.Console.KeyAvailable\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeyAvailable\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 31\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets a value indicating whether a key press is available in the input stream.</p>\\n\"\n  syntax:\n    content: public static bool KeyAvailable { get; }\n    content.vb: Public Shared ReadOnly Property KeyAvailable As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a key press is available; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Standard input is redirected to a file instead of the keyboard. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.KeyAvailable\n- uid: System.Console.LargestWindowWidth\n  commentId: P:System.Console.LargestWindowWidth\n  id: LargestWindowWidth\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: LargestWindowWidth\n  fullName: System.Console.LargestWindowWidth\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LargestWindowWidth\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 32\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets the largest possible number of console window columns, based on the current font and screen resolution.</p>\\n\"\n  syntax:\n    content: public static int LargestWindowWidth { get; }\n    content.vb: Public Shared ReadOnly Property LargestWindowWidth As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The width of the largest possible console window measured in columns.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.LargestWindowWidth\n- uid: System.Console.LargestWindowHeight\n  commentId: P:System.Console.LargestWindowHeight\n  id: LargestWindowHeight\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: LargestWindowHeight\n  fullName: System.Console.LargestWindowHeight\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LargestWindowHeight\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 33\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets the largest possible number of console window rows, based on the current font and screen resolution.</p>\\n\"\n  syntax:\n    content: public static int LargestWindowHeight { get; }\n    content.vb: Public Shared ReadOnly Property LargestWindowHeight As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The height of the largest possible console window measured in rows.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.LargestWindowHeight\n- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: System.Console.MoveBufferArea(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveBufferArea\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 34\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Copies a specified source area of the screen buffer to a specified destination area.</p>\\n\"\n  syntax:\n    content: public static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop)\n    content.vb: Public Shared Sub MoveBufferArea(sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer)\n    parameters:\n    - id: sourceLeft\n      type: System.Int32\n      description: \"\\n<p>The leftmost column of the source area. </p>\\n\"\n    - id: sourceTop\n      type: System.Int32\n      description: \"\\n<p>The topmost row of the source area. </p>\\n\"\n    - id: sourceWidth\n      type: System.Int32\n      description: \"\\n<p>The number of columns in the source area. </p>\\n\"\n    - id: sourceHeight\n      type: System.Int32\n      description: \"\\n<p>The number of rows in the source area. </p>\\n\"\n    - id: targetLeft\n      type: System.Int32\n      description: \"\\n<p>The leftmost column of the destination area. </p>\\n\"\n    - id: targetTop\n      type: System.Int32\n      description: \"\\n<p>The topmost row of the destination area. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>One or more of the parameters is less than zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceLeft</em> or <em>targetLeft</em> is greater than or equal to <xref href=\\\"System.Console.BufferWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceTop</em> or <em>targetTop</em> is greater than or equal to <xref href=\\\"System.Console.BufferHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceTop</em> + <em>sourceHeight</em> is greater than or equal to <xref href=\\\"System.Console.BufferHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceLeft</em> + <em>sourceWidth</em> is greater than or equal to <xref href=\\\"System.Console.BufferWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)\n  commentId: M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)\n  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor)\n  fullName: System.Console.MoveBufferArea(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Char, System.ConsoleColor, System.ConsoleColor)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveBufferArea\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 35\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Copies a specified source area of the screen buffer to a specified destination area.</p>\\n\"\n  syntax:\n    content: public static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor)\n    content.vb: Public Shared Sub MoveBufferArea(sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer, sourceChar As Char, sourceForeColor As ConsoleColor, sourceBackColor As ConsoleColor)\n    parameters:\n    - id: sourceLeft\n      type: System.Int32\n      description: \"\\n<p>The leftmost column of the source area. </p>\\n\"\n    - id: sourceTop\n      type: System.Int32\n      description: \"\\n<p>The topmost row of the source area. </p>\\n\"\n    - id: sourceWidth\n      type: System.Int32\n      description: \"\\n<p>The number of columns in the source area. </p>\\n\"\n    - id: sourceHeight\n      type: System.Int32\n      description: \"\\n<p>The number of rows in the source area. </p>\\n\"\n    - id: targetLeft\n      type: System.Int32\n      description: \"\\n<p>The leftmost column of the destination area. </p>\\n\"\n    - id: targetTop\n      type: System.Int32\n      description: \"\\n<p>The topmost row of the destination area. </p>\\n\"\n    - id: sourceChar\n      type: System.Char\n      description: \"\\n<p>The character used to fill the source area. </p>\\n\"\n    - id: sourceForeColor\n      type: System.ConsoleColor\n      description: \"\\n<p>The foreground color used to fill the source area. </p>\\n\"\n    - id: sourceBackColor\n      type: System.ConsoleColor\n      description: \"\\n<p>The background color used to fill the source area. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>One or more of the parameters is less than zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceLeft</em> or <em>targetLeft</em> is greater than or equal to <xref href=\\\"System.Console.BufferWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceTop</em> or <em>targetTop</em> is greater than or equal to <xref href=\\\"System.Console.BufferHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceTop</em> + <em>sourceHeight</em> is greater than or equal to <xref href=\\\"System.Console.BufferHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>sourceLeft</em> + <em>sourceWidth</em> is greater than or equal to <xref href=\\\"System.Console.BufferWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>One or both of the color parameters is not a member of the <xref href=\\\"System.ConsoleColor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor)\n- uid: System.Console.NumberLock\n  commentId: P:System.Console.NumberLock\n  id: NumberLock\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: NumberLock\n  fullName: System.Console.NumberLock\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NumberLock\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 36\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</p>\\n\"\n  syntax:\n    content: public static bool NumberLock { get; }\n    content.vb: Public Shared ReadOnly Property NumberLock As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if NUM LOCK is turned on; <strong>false</strong> if NUM LOCK is turned off.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.NumberLock\n- uid: System.Console.OpenStandardError\n  commentId: M:System.Console.OpenStandardError\n  id: OpenStandardError\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: OpenStandardError()\n  fullName: System.Console.OpenStandardError()\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OpenStandardError\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 37\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Acquires the standard error stream.</p>\\n\"\n  syntax:\n    content: public static Stream OpenStandardError()\n    content.vb: Public Shared Function OpenStandardError As Stream\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The standard error stream.</p>\\n\"\n  seealso:\n  - type: System.Console.Error\n    commentId: P:System.Console.Error\n  - type: System.Console.IsErrorRedirected\n    commentId: P:System.Console.IsErrorRedirected\n  - type: System.Console.SetError(System.IO.TextWriter)\n    commentId: M:System.Console.SetError(System.IO.TextWriter)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.OpenStandardError()\n- uid: System.Console.OpenStandardInput\n  commentId: M:System.Console.OpenStandardInput\n  id: OpenStandardInput\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: OpenStandardInput()\n  fullName: System.Console.OpenStandardInput()\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OpenStandardInput\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 38\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Acquires the standard input stream.</p>\\n\"\n  syntax:\n    content: public static Stream OpenStandardInput()\n    content.vb: Public Shared Function OpenStandardInput As Stream\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The standard input stream.</p>\\n\"\n  seealso:\n  - type: System.Console.In\n    commentId: P:System.Console.In\n  - type: System.Console.IsInputRedirected\n    commentId: P:System.Console.IsInputRedirected\n  - type: System.Console.SetIn(System.IO.TextReader)\n    commentId: M:System.Console.SetIn(System.IO.TextReader)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.OpenStandardInput()\n- uid: System.Console.OpenStandardOutput\n  commentId: M:System.Console.OpenStandardOutput\n  id: OpenStandardOutput\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: OpenStandardOutput()\n  fullName: System.Console.OpenStandardOutput()\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OpenStandardOutput\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 39\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Acquires the standard output stream.</p>\\n\"\n  syntax:\n    content: public static Stream OpenStandardOutput()\n    content.vb: Public Shared Function OpenStandardOutput As Stream\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The standard output stream.</p>\\n\"\n  seealso:\n  - type: System.Console.Out\n    commentId: P:System.Console.Out\n  - type: System.Console.IsOutputRedirected\n    commentId: P:System.Console.IsOutputRedirected\n  - type: System.Console.SetOut(System.IO.TextWriter)\n    commentId: M:System.Console.SetOut(System.IO.TextWriter)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.OpenStandardOutput()\n- uid: System.Console.Out\n  commentId: P:System.Console.Out\n  id: Out\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Out\n  fullName: System.Console.Out\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Out\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 40\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets the standard output stream.</p>\\n\"\n  syntax:\n    content: public static TextWriter Out { get; }\n    content.vb: Public Shared ReadOnly Property Out As TextWriter\n    parameters: []\n    return:\n      type: System.IO.TextWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the standard output stream.</p>\\n\"\n  seealso:\n  - type: System.Console.Error\n    commentId: P:System.Console.Error\n  - type: System.Console.In\n    commentId: P:System.Console.In\n  - type: System.Console.SetOut(System.IO.TextWriter)\n    commentId: M:System.Console.SetOut(System.IO.TextWriter)\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Console.Out\n- uid: System.Console.OutputEncoding\n  commentId: P:System.Console.OutputEncoding\n  id: OutputEncoding\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: OutputEncoding\n  fullName: System.Console.OutputEncoding\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OutputEncoding\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 41\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the encoding the console uses to write output. </p>\\n\"\n  syntax:\n    content: public static Encoding OutputEncoding { get; set; }\n    content.vb: Public Shared Property OutputEncoding As Encoding\n    parameters: []\n    return:\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding used to write console output.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property value in a set operation is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred during the execution of this operation.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>Your application does not have permission to perform this operation.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.OutputEncoding\n- uid: System.Console.Read\n  commentId: M:System.Console.Read\n  id: Read\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Read()\n  fullName: System.Console.Read()\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 42\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Reads the next character from the standard input stream.</p>\\n\"\n  syntax:\n    content: public static int Read()\n    content.vb: Public Shared Function Read As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Read()\n- uid: System.Console.ReadKey\n  commentId: M:System.Console.ReadKey\n  id: ReadKey\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: ReadKey()\n  fullName: System.Console.ReadKey()\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadKey\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 43\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Obtains the next character or function key pressed by the user. The pressed key is displayed in the console window.</p>\\n\"\n  syntax:\n    content: public static ConsoleKeyInfo ReadKey()\n    content.vb: Public Shared Function ReadKey As ConsoleKeyInfo\n    return:\n      type: System.ConsoleKeyInfo\n      description: \"\\n<p>An object that describes the <xref href=\\\"System.ConsoleKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constant and Unicode character, if any, that correspond to the pressed console key. The <xref href=\\\"System.ConsoleKeyInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object also describes, in a bitwise combination of <xref href=\\\"System.ConsoleModifiers\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Console.In\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is redirected from some stream other than the console.</p>\\n\"\n  seealso:\n  - type: System.ConsoleKey\n    commentId: T:System.ConsoleKey\n  - type: System.Console.KeyAvailable\n    commentId: P:System.Console.KeyAvailable\n  - type: System.Console.TreatControlCAsInput\n    commentId: P:System.Console.TreatControlCAsInput\n  - type: System.Console.CancelKeyPress\n    commentId: E:System.Console.CancelKeyPress\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.ReadKey()\n- uid: System.Console.ReadKey(System.Boolean)\n  commentId: M:System.Console.ReadKey(System.Boolean)\n  id: ReadKey(System.Boolean)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: ReadKey(Boolean)\n  fullName: System.Console.ReadKey(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadKey\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 44\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Obtains the next character or function key pressed by the user. The pressed key is optionally displayed in the console window.</p>\\n\"\n  syntax:\n    content: public static ConsoleKeyInfo ReadKey(bool intercept)\n    content.vb: Public Shared Function ReadKey(intercept As Boolean) As ConsoleKeyInfo\n    parameters:\n    - id: intercept\n      type: System.Boolean\n      description: \"\\n<p>Determines whether to display the pressed key in the console window. <strong>true</strong> to not display the pressed key; otherwise, <strong>false</strong>. </p>\\n\"\n    return:\n      type: System.ConsoleKeyInfo\n      description: \"\\n<p>An object that describes the <xref href=\\\"System.ConsoleKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constant and Unicode character, if any, that correspond to the pressed console key. The <xref href=\\\"System.ConsoleKeyInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object also describes, in a bitwise combination of <xref href=\\\"System.ConsoleModifiers\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Console.In\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is redirected from some stream other than the console.</p>\\n\"\n  seealso:\n  - type: System.ConsoleKey\n    commentId: T:System.ConsoleKey\n  - type: System.Console.KeyAvailable\n    commentId: P:System.Console.KeyAvailable\n  - type: System.Console.TreatControlCAsInput\n    commentId: P:System.Console.TreatControlCAsInput\n  - type: System.Console.CancelKeyPress\n    commentId: E:System.Console.CancelKeyPress\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.ReadKey(Boolean)\n- uid: System.Console.ReadLine\n  commentId: M:System.Console.ReadLine\n  id: ReadLine\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: ReadLine()\n  fullName: System.Console.ReadLine()\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 45\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Reads the next line of characters from the standard input stream.</p>\\n\"\n  syntax:\n    content: public static string ReadLine()\n    content.vb: Public Shared Function ReadLine As String\n    return:\n      type: System.String\n      description: \"\\n<p>The next line of characters from the input stream, or <strong>null</strong> if no more lines are available.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: \"\\n<p>There is insufficient memory to allocate a buffer for the returned string. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The number of characters in the next line of characters is greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.ReadLine()\n- uid: System.Console.ResetColor\n  commentId: M:System.Console.ResetColor\n  id: ResetColor\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: ResetColor()\n  fullName: System.Console.ResetColor()\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetColor\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 46\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Sets the foreground and background console colors to their defaults.</p>\\n\"\n  syntax:\n    content: public static void ResetColor()\n    content.vb: Public Shared Sub ResetColor\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.ResetColor()\n- uid: System.Console.SetBufferSize(System.Int32,System.Int32)\n  commentId: M:System.Console.SetBufferSize(System.Int32,System.Int32)\n  id: SetBufferSize(System.Int32,System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: SetBufferSize(Int32, Int32)\n  fullName: System.Console.SetBufferSize(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetBufferSize\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 47\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Sets the height and width of the screen buffer area to the specified values.</p>\\n\"\n  syntax:\n    content: public static void SetBufferSize(int width, int height)\n    content.vb: Public Shared Sub SetBufferSize(width As Integer, height As Integer)\n    parameters:\n    - id: width\n      type: System.Int32\n      description: \"\\n<p>The width of the buffer area measured in columns. </p>\\n\"\n    - id: height\n      type: System.Int32\n      description: \"\\n<p>The height of the buffer area measured in rows. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>height</em> or <em>width</em> is less than or equal to zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>height</em> or <em>width</em> is greater than or equal to <xref href=\\\"System.Int16.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>width</em> is less than <xref href=\\\"System.Console.WindowLeft\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> + <xref href=\\\"System.Console.WindowWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>height</em> is less than <xref href=\\\"System.Console.WindowTop\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> + <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.SetBufferSize(Int32, Int32)\n- uid: System.Console.SetCursorPosition(System.Int32,System.Int32)\n  commentId: M:System.Console.SetCursorPosition(System.Int32,System.Int32)\n  id: SetCursorPosition(System.Int32,System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: SetCursorPosition(Int32, Int32)\n  fullName: System.Console.SetCursorPosition(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetCursorPosition\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 48\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Sets the position of the cursor.</p>\\n\"\n  syntax:\n    content: public static void SetCursorPosition(int left, int top)\n    content.vb: Public Shared Sub SetCursorPosition(left As Integer, top As Integer)\n    parameters:\n    - id: left\n      type: System.Int32\n      description: \"\\n<p>The column position of the cursor. Columns are numbered from left to right starting at 0. </p>\\n\"\n    - id: top\n      type: System.Int32\n      description: \"\\n<p>The row position of the cursor. Rows are numbered from top to bottom starting at 0. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>left</em> or <em>top</em> is less than zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>left</em> is greater than or equal to <xref href=\\\"System.Console.BufferWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>top</em> is greater than or equal to <xref href=\\\"System.Console.BufferHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.SetCursorPosition(Int32, Int32)\n- uid: System.Console.SetError(System.IO.TextWriter)\n  commentId: M:System.Console.SetError(System.IO.TextWriter)\n  id: SetError(System.IO.TextWriter)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: SetError(TextWriter)\n  fullName: System.Console.SetError(System.IO.TextWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetError\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 49\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Sets the <xref href=\\\"System.Console.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to the specified <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public static void SetError(TextWriter newError)\n    content.vb: Public Shared Sub SetError(newError As TextWriter)\n    parameters:\n    - id: newError\n      type: System.IO.TextWriter\n      description: \"\\n<p>A stream that is the new standard error output. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>newError</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  seealso:\n  - type: System.Console.IsErrorRedirected\n    commentId: P:System.Console.IsErrorRedirected\n  - type: System.Console.Error\n    commentId: P:System.Console.Error\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.SetError(TextWriter)\n- uid: System.Console.SetIn(System.IO.TextReader)\n  commentId: M:System.Console.SetIn(System.IO.TextReader)\n  id: SetIn(System.IO.TextReader)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: SetIn(TextReader)\n  fullName: System.Console.SetIn(System.IO.TextReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetIn\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 50\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Sets the <xref href=\\\"System.Console.In\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to the specified <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public static void SetIn(TextReader newIn)\n    content.vb: Public Shared Sub SetIn(newIn As TextReader)\n    parameters:\n    - id: newIn\n      type: System.IO.TextReader\n      description: \"\\n<p>A stream that is the new standard input. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>newIn</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  seealso:\n  - type: System.IO.TextReader\n    commentId: T:System.IO.TextReader\n  - type: System.Console.In\n    commentId: P:System.Console.In\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.SetIn(TextReader)\n- uid: System.Console.SetOut(System.IO.TextWriter)\n  commentId: M:System.Console.SetOut(System.IO.TextWriter)\n  id: SetOut(System.IO.TextWriter)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: SetOut(TextWriter)\n  fullName: System.Console.SetOut(System.IO.TextWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetOut\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 51\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Sets the <xref href=\\\"System.Console.Out\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to the specified <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public static void SetOut(TextWriter newOut)\n    content.vb: Public Shared Sub SetOut(newOut As TextWriter)\n    parameters:\n    - id: newOut\n      type: System.IO.TextWriter\n      description: \"\\n<p>A stream that is the new standard output. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>newOut</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  seealso:\n  - type: System.IO.TextWriter\n    commentId: T:System.IO.TextWriter\n  - type: System.Console.Out\n    commentId: P:System.Console.Out\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.SetOut(TextWriter)\n- uid: System.Console.SetWindowPosition(System.Int32,System.Int32)\n  commentId: M:System.Console.SetWindowPosition(System.Int32,System.Int32)\n  id: SetWindowPosition(System.Int32,System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: SetWindowPosition(Int32, Int32)\n  fullName: System.Console.SetWindowPosition(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetWindowPosition\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 52\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Sets the position of the console window relative to the screen buffer.</p>\\n\"\n  syntax:\n    content: public static void SetWindowPosition(int left, int top)\n    content.vb: Public Shared Sub SetWindowPosition(left As Integer, top As Integer)\n    parameters:\n    - id: left\n      type: System.Int32\n      description: \"\\n<p>The column position of the upper left  corner of the console window. </p>\\n\"\n    - id: top\n      type: System.Int32\n      description: \"\\n<p>The row position of the upper left corner of the console window. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>left</em> or <em>top</em> is less than zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>left</em> + <xref href=\\\"System.Console.WindowWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than <xref href=\\\"System.Console.BufferWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>top</em> + <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than <xref href=\\\"System.Console.BufferHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.SetWindowPosition(Int32, Int32)\n- uid: System.Console.SetWindowSize(System.Int32,System.Int32)\n  commentId: M:System.Console.SetWindowSize(System.Int32,System.Int32)\n  id: SetWindowSize(System.Int32,System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: SetWindowSize(Int32, Int32)\n  fullName: System.Console.SetWindowSize(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetWindowSize\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 53\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Sets the height and width of the console window to the specified values.</p>\\n\"\n  syntax:\n    content: public static void SetWindowSize(int width, int height)\n    content.vb: Public Shared Sub SetWindowSize(width As Integer, height As Integer)\n    parameters:\n    - id: width\n      type: System.Int32\n      description: \"\\n<p>The width of the console window measured in columns. </p>\\n\"\n    - id: height\n      type: System.Int32\n      description: \"\\n<p>The height of the console window measured in rows. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>width</em> or <em>height</em> is less than or equal to zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>width</em> plus <xref href=\\\"System.Console.WindowLeft\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <em>height</em> plus <xref href=\\\"System.Console.WindowTop\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than or equal to <xref href=\\\"System.Int16.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>width</em> or <em>height</em> is greater than the largest possible window width or height for the current screen resolution and console font.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have permission to perform this action. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.SetWindowSize(Int32, Int32)\n- uid: System.Console.Title\n  commentId: P:System.Console.Title\n  id: Title\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Title\n  fullName: System.Console.Title\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Title\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 54\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the title to display in the console title bar.</p>\\n\"\n  syntax:\n    content: public static string Title { get; set; }\n    content.vb: Public Shared Property Title As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string to be displayed in the title bar of the console. The maximum length of the title string is 24500 characters.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>In a get operation, the retrieved title is longer than 24500 characters. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>In a set operation, the specified title is longer than 24500 characters. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>In a set operation, the specified title is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Title\n- uid: System.Console.TreatControlCAsInput\n  commentId: P:System.Console.TreatControlCAsInput\n  id: TreatControlCAsInput\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: TreatControlCAsInput\n  fullName: System.Console.TreatControlCAsInput\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TreatControlCAsInput\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 55\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets a value indicating whether the combination of the <xref href=\\\"System.ConsoleModifiers.Control\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> modifier key and <xref href=\\\"System.ConsoleKey.C\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</p>\\n\"\n  syntax:\n    content: public static bool TreatControlCAsInput { get; set; }\n    content.vb: Public Shared Property TreatControlCAsInput As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if Ctrl+C is treated as ordinary input; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>Unable to get or set the input mode of the console input buffer. </p>\\n\"\n  seealso:\n  - type: System.ConsoleModifiers.Control\n    commentId: F:System.ConsoleModifiers.Control\n  - type: System.ConsoleKey.C\n    commentId: F:System.ConsoleKey.C\n  - type: System.Console.CancelKeyPress\n    commentId: E:System.Console.CancelKeyPress\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.TreatControlCAsInput\n- uid: System.Console.WindowHeight\n  commentId: P:System.Console.WindowHeight\n  id: WindowHeight\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WindowHeight\n  fullName: System.Console.WindowHeight\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WindowHeight\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 56\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the height of the console window area.</p>\\n\"\n  syntax:\n    content: public static int WindowHeight { get; set; }\n    content.vb: Public Shared Property WindowHeight As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The height of the console window measured in rows.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value of the <xref href=\\\"System.Console.WindowWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property or the value of the <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is less than or equal to 0.</p>\\n<p>-or-</p>\\n<p>The value of the <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property plus the value of the <xref href=\\\"System.Console.WindowTop\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is greater than or equal to <xref href=\\\"System.Int16.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>The value of the <xref href=\\\"System.Console.WindowWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property or the value of the <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is greater than the largest possible window width or height for the current screen resolution and console font.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>Error reading or writing information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WindowHeight\n- uid: System.Console.WindowWidth\n  commentId: P:System.Console.WindowWidth\n  id: WindowWidth\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WindowWidth\n  fullName: System.Console.WindowWidth\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WindowWidth\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 57\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the width of the console window.</p>\\n\"\n  syntax:\n    content: public static int WindowWidth { get; set; }\n    content.vb: Public Shared Property WindowWidth As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The width of the console window measured in columns.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value of the <xref href=\\\"System.Console.WindowWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property or the value of the <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is less than or equal to 0.</p>\\n<p>-or-</p>\\n<p>The value of the <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property plus the value of the <xref href=\\\"System.Console.WindowTop\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is greater than or equal to <xref href=\\\"System.Int16.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>The value of the <xref href=\\\"System.Console.WindowWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property or the value of the <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is greater than the largest possible window width or height for the current screen resolution and console font.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>Error reading or writing information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WindowWidth\n- uid: System.Console.WindowLeft\n  commentId: P:System.Console.WindowLeft\n  id: WindowLeft\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WindowLeft\n  fullName: System.Console.WindowLeft\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WindowLeft\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 58\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the leftmost position of the console window area relative to the screen buffer.</p>\\n\"\n  syntax:\n    content: public static int WindowLeft { get; set; }\n    content.vb: Public Shared Property WindowLeft As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The leftmost console window position measured in columns.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>In a set operation, the value to be assigned is less than zero.</p>\\n<p>-or-</p>\\n<p>As a result of the assignment, <xref href=\\\"System.Console.WindowLeft\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> plus <xref href=\\\"System.Console.WindowWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> would exceed <xref href=\\\"System.Console.BufferWidth\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>Error reading or writing information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WindowLeft\n- uid: System.Console.WindowTop\n  commentId: P:System.Console.WindowTop\n  id: WindowTop\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WindowTop\n  fullName: System.Console.WindowTop\n  type: Property\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WindowTop\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 59\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Gets or sets the top position of the console window area relative to the screen buffer.</p>\\n\"\n  syntax:\n    content: public static int WindowTop { get; set; }\n    content.vb: Public Shared Property WindowTop As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The uppermost console window position measured in rows.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>In a set operation, the value to be assigned is less than zero.</p>\\n<p>-or-</p>\\n<p>As a result of the assignment, <xref href=\\\"System.Console.WindowTop\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> plus <xref href=\\\"System.Console.WindowHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> would exceed <xref href=\\\"System.Console.BufferHeight\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>Error reading or writing information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WindowTop\n- uid: System.Console.Write(System.Boolean)\n  commentId: M:System.Console.Write(System.Boolean)\n  id: Write(System.Boolean)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Boolean)\n  fullName: System.Console.Write(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 60\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified Boolean value to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(bool value)\n    content.vb: Public Shared Sub Write(value As Boolean)\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(Boolean)\n- uid: System.Console.Write(System.Char)\n  commentId: M:System.Console.Write(System.Char)\n  id: Write(System.Char)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Char)\n  fullName: System.Console.Write(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 61\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the specified Unicode character value to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(char value)\n    content.vb: Public Shared Sub Write(value As Char)\n    parameters:\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(Char)\n- uid: System.Console.Write(System.Char[])\n  commentId: M:System.Console.Write(System.Char[])\n  id: Write(System.Char[])\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Char[])\n  fullName: System.Console.Write(System.Char[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 62\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the specified array of Unicode characters to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(char[] buffer)\n    content.vb: Public Shared Sub Write(buffer As Char())\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>A Unicode character array. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Console.Write(System.Char())\n  name.vb: Write(Char())\n  nameWithType: Console.Write(Char[])\n  nameWithType.vb: Console.Write(Char())\n- uid: System.Console.Write(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Console.Write(System.Char[],System.Int32,System.Int32)\n  id: Write(System.Char[],System.Int32,System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Char[], Int32, Int32)\n  fullName: System.Console.Write(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 63\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the specified subarray of Unicode characters to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(char[] buffer, int index, int count)\n    content.vb: Public Shared Sub Write(buffer As Char(), index As Integer, count As Integer)\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>An array of Unicode characters. </p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The starting position in <em>buffer</em>. </p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The number of characters to write. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> or <em>count</em> is less than zero. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>index</em> plus <em>count</em> specify a position that is not within <em>buffer</em>. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Console.Write(System.Char(), System.Int32, System.Int32)\n  name.vb: Write(Char(), Int32, Int32)\n  nameWithType: Console.Write(Char[], Int32, Int32)\n  nameWithType.vb: Console.Write(Char(), Int32, Int32)\n- uid: System.Console.Write(System.Decimal)\n  commentId: M:System.Console.Write(System.Decimal)\n  id: Write(System.Decimal)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Decimal)\n  fullName: System.Console.Write(System.Decimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 64\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(decimal value)\n    content.vb: Public Shared Sub Write(value As Decimal)\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(Decimal)\n- uid: System.Console.Write(System.Double)\n  commentId: M:System.Console.Write(System.Double)\n  id: Write(System.Double)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Double)\n  fullName: System.Console.Write(System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 65\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified double-precision floating-point value to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(double value)\n    content.vb: Public Shared Sub Write(value As Double)\n    parameters:\n    - id: value\n      type: System.Double\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(Double)\n- uid: System.Console.Write(System.Int32)\n  commentId: M:System.Console.Write(System.Int32)\n  id: Write(System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Int32)\n  fullName: System.Console.Write(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 66\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(int value)\n    content.vb: Public Shared Sub Write(value As Integer)\n    parameters:\n    - id: value\n      type: System.Int32\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(Int32)\n- uid: System.Console.Write(System.Int64)\n  commentId: M:System.Console.Write(System.Int64)\n  id: Write(System.Int64)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64)\n  fullName: System.Console.Write(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 67\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(long value)\n    content.vb: Public Shared Sub Write(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(Int64)\n- uid: System.Console.Write(System.Object)\n  commentId: M:System.Console.Write(System.Object)\n  id: Write(System.Object)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Object)\n  fullName: System.Console.Write(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 68\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified object to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(object value)\n    content.vb: Public Shared Sub Write(value As Object)\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to write, or <strong>null</strong>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(Object)\n- uid: System.Console.Write(System.Single)\n  commentId: M:System.Console.Write(System.Single)\n  id: Write(System.Single)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(Single)\n  fullName: System.Console.Write(System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 69\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified single-precision floating-point value to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void Write(float value)\n    content.vb: Public Shared Sub Write(value As Single)\n    parameters:\n    - id: value\n      type: System.Single\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(Single)\n- uid: System.Console.Write(System.String)\n  commentId: M:System.Console.Write(System.String)\n  id: Write(System.String)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(String)\n  fullName: System.Console.Write(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/LowLevelConsole.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/LowLevelConsole.cs\n    startLine: 27\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the specified string value to the standard output stream.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void Write(string s)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub Write(s As String)\n    parameters:\n    - id: s\n      type: System.String\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(String)\n- uid: System.Console.Write(System.String,System.Object)\n  commentId: M:System.Console.Write(System.String,System.Object)\n  id: Write(System.String,System.Object)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(String, Object)\n  fullName: System.Console.Write(System.String, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 71\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified object to the standard output stream using the specified format information.</p>\\n\"\n  syntax:\n    content: public static void Write(string format, object arg0)\n    content.vb: Public Shared Sub Write(format As String, arg0 As Object)\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A composite format string (see Remarks). </p>\\n\"\n    - id: arg0\n      type: System.Object\n      description: \"\\n<p>An object to write using <em>format</em>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>format</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The format specification in <em>format</em> is invalid. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(String, Object)\n- uid: System.Console.Write(System.String,System.Object,System.Object)\n  commentId: M:System.Console.Write(System.String,System.Object,System.Object)\n  id: Write(System.String,System.Object,System.Object)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(String, Object, Object)\n  fullName: System.Console.Write(System.String, System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 72\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified objects to the standard output stream using the specified format information.</p>\\n\"\n  syntax:\n    content: public static void Write(string format, object arg0, object arg1)\n    content.vb: Public Shared Sub Write(format As String, arg0 As Object, arg1 As Object)\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A composite format string (see Remarks).</p>\\n\"\n    - id: arg0\n      type: System.Object\n      description: \"\\n<p>The first object to write using <em>format</em>. </p>\\n\"\n    - id: arg1\n      type: System.Object\n      description: \"\\n<p>The second object to write using <em>format</em>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>format</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The format specification in <em>format</em> is invalid. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(String, Object, Object)\n- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object)\n  commentId: M:System.Console.Write(System.String,System.Object,System.Object,System.Object)\n  id: Write(System.String,System.Object,System.Object,System.Object)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(String, Object, Object, Object)\n  fullName: System.Console.Write(System.String, System.Object, System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 73\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified objects to the standard output stream using the specified format information.</p>\\n\"\n  syntax:\n    content: public static void Write(string format, object arg0, object arg1, object arg2)\n    content.vb: Public Shared Sub Write(format As String, arg0 As Object, arg1 As Object, arg2 As Object)\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A composite format string (see Remarks).</p>\\n\"\n    - id: arg0\n      type: System.Object\n      description: \"\\n<p>The first object to write using <em>format</em>. </p>\\n\"\n    - id: arg1\n      type: System.Object\n      description: \"\\n<p>The second object to write using <em>format</em>. </p>\\n\"\n    - id: arg2\n      type: System.Object\n      description: \"\\n<p>The third object to write using <em>format</em>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>format</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The format specification in <em>format</em> is invalid. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(String, Object, Object, Object)\n- uid: System.Console.Write(System.String,System.Object[])\n  commentId: M:System.Console.Write(System.String,System.Object[])\n  id: Write(System.String,System.Object[])\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(String, Object[])\n  fullName: System.Console.Write(System.String, System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 74\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</p>\\n\"\n  syntax:\n    content: public static void Write(string format, params object[] arg)\n    content.vb: Public Shared Sub Write(format As String, ParamArray arg As Object())\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A composite format string (see Remarks).</p>\\n\"\n    - id: arg\n      type: System.Object[]\n      description: \"\\n<p>An array of objects to write using <em>format</em>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>format</em> or <em>arg</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The format specification in <em>format</em> is invalid. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Console.Write(System.String, System.Object())\n  name.vb: Write(String, Object())\n  nameWithType: Console.Write(String, Object[])\n  nameWithType.vb: Console.Write(String, Object())\n- uid: System.Console.Write(System.UInt32)\n  commentId: M:System.Console.Write(System.UInt32)\n  id: Write(System.UInt32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(UInt32)\n  fullName: System.Console.Write(System.UInt32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 75\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static void Write(uint value)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Sub Write(value As UInteger)\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(UInt32)\n- uid: System.Console.Write(System.UInt64)\n  commentId: M:System.Console.Write(System.UInt64)\n  id: Write(System.UInt64)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: Write(UInt64)\n  fullName: System.Console.Write(System.UInt64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 77\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static void Write(ulong value)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Sub Write(value As ULong)\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.WriteLine\n    commentId: M:System.Console.WriteLine\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.Write(UInt64)\n- uid: System.Console.WriteLine\n  commentId: M:System.Console.WriteLine\n  id: WriteLine\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine()\n  fullName: System.Console.WriteLine()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/LowLevelConsole.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteLine\n    path: src/mscorlib/src/System/LowLevelConsole.cs\n    startLine: 44\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the current line terminator to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine()\n    content.vb: Public Shared Sub WriteLine\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  - type: System.IO.TextWriter.NewLine\n    commentId: P:System.IO.TextWriter.NewLine\n  - type: System.Console.Out\n    commentId: P:System.Console.Out\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine()\n- uid: System.Console.WriteLine(System.Boolean)\n  commentId: M:System.Console.WriteLine(System.Boolean)\n  id: WriteLine(System.Boolean)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Boolean)\n  fullName: System.Console.WriteLine(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 80\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(bool value)\n    content.vb: Public Shared Sub WriteLine(value As Boolean)\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(Boolean)\n- uid: System.Console.WriteLine(System.Char)\n  commentId: M:System.Console.WriteLine(System.Char)\n  id: WriteLine(System.Char)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Char)\n  fullName: System.Console.WriteLine(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 81\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(char value)\n    content.vb: Public Shared Sub WriteLine(value As Char)\n    parameters:\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(Char)\n- uid: System.Console.WriteLine(System.Char[])\n  commentId: M:System.Console.WriteLine(System.Char[])\n  id: WriteLine(System.Char[])\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Char[])\n  fullName: System.Console.WriteLine(System.Char[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 82\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(char[] buffer)\n    content.vb: Public Shared Sub WriteLine(buffer As Char())\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>A Unicode character array. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Console.WriteLine(System.Char())\n  name.vb: WriteLine(Char())\n  nameWithType: Console.WriteLine(Char[])\n  nameWithType.vb: Console.WriteLine(Char())\n- uid: System.Console.WriteLine(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)\n  id: WriteLine(System.Char[],System.Int32,System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Char[], Int32, Int32)\n  fullName: System.Console.WriteLine(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 83\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(char[] buffer, int index, int count)\n    content.vb: Public Shared Sub WriteLine(buffer As Char(), index As Integer, count As Integer)\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>An array of Unicode characters. </p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The starting position in <em>buffer</em>. </p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The number of characters to write. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> or <em>count</em> is less than zero. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>index</em> plus <em>count</em> specify a position that is not within <em>buffer</em>. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Console.WriteLine(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteLine(Char(), Int32, Int32)\n  nameWithType: Console.WriteLine(Char[], Int32, Int32)\n  nameWithType.vb: Console.WriteLine(Char(), Int32, Int32)\n- uid: System.Console.WriteLine(System.Decimal)\n  commentId: M:System.Console.WriteLine(System.Decimal)\n  id: WriteLine(System.Decimal)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Decimal)\n  fullName: System.Console.WriteLine(System.Decimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 84\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(decimal value)\n    content.vb: Public Shared Sub WriteLine(value As Decimal)\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(Decimal)\n- uid: System.Console.WriteLine(System.Double)\n  commentId: M:System.Console.WriteLine(System.Double)\n  id: WriteLine(System.Double)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Double)\n  fullName: System.Console.WriteLine(System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 85\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(double value)\n    content.vb: Public Shared Sub WriteLine(value As Double)\n    parameters:\n    - id: value\n      type: System.Double\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(Double)\n- uid: System.Console.WriteLine(System.Int32)\n  commentId: M:System.Console.WriteLine(System.Int32)\n  id: WriteLine(System.Int32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Int32)\n  fullName: System.Console.WriteLine(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 86\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(int value)\n    content.vb: Public Shared Sub WriteLine(value As Integer)\n    parameters:\n    - id: value\n      type: System.Int32\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(Int32)\n- uid: System.Console.WriteLine(System.Int64)\n  commentId: M:System.Console.WriteLine(System.Int64)\n  id: WriteLine(System.Int64)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Int64)\n  fullName: System.Console.WriteLine(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 87\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(long value)\n    content.vb: Public Shared Sub WriteLine(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(Int64)\n- uid: System.Console.WriteLine(System.Object)\n  commentId: M:System.Console.WriteLine(System.Object)\n  id: WriteLine(System.Object)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Object)\n  fullName: System.Console.WriteLine(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 88\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(object value)\n    content.vb: Public Shared Sub WriteLine(value As Object)\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(Object)\n- uid: System.Console.WriteLine(System.Single)\n  commentId: M:System.Console.WriteLine(System.Single)\n  id: WriteLine(System.Single)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(Single)\n  fullName: System.Console.WriteLine(System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 89\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(float value)\n    content.vb: Public Shared Sub WriteLine(value As Single)\n    parameters:\n    - id: value\n      type: System.Single\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(Single)\n- uid: System.Console.WriteLine(System.String)\n  commentId: M:System.Console.WriteLine(System.String)\n  id: WriteLine(System.String)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(String)\n  fullName: System.Console.WriteLine(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/LowLevelConsole.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteLine\n    path: src/mscorlib/src/System/LowLevelConsole.cs\n    startLine: 39\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the specified string value, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(string s)\n    content.vb: Public Shared Sub WriteLine(s As String)\n    parameters:\n    - id: s\n      type: System.String\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(String)\n- uid: System.Console.WriteLine(System.String,System.Object)\n  commentId: M:System.Console.WriteLine(System.String,System.Object)\n  id: WriteLine(System.String,System.Object)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(String, Object)\n  fullName: System.Console.WriteLine(System.String, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 91\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(string format, object arg0)\n    content.vb: Public Shared Sub WriteLine(format As String, arg0 As Object)\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A composite format string (see Remarks).</p>\\n\"\n    - id: arg0\n      type: System.Object\n      description: \"\\n<p>An object to write using <em>format</em>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>format</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The format specification in <em>format</em> is invalid. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(String, Object)\n- uid: System.Console.WriteLine(System.String,System.Object,System.Object)\n  commentId: M:System.Console.WriteLine(System.String,System.Object,System.Object)\n  id: WriteLine(System.String,System.Object,System.Object)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(String, Object, Object)\n  fullName: System.Console.WriteLine(System.String, System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 92\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(string format, object arg0, object arg1)\n    content.vb: Public Shared Sub WriteLine(format As String, arg0 As Object, arg1 As Object)\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A composite format string (see Remarks).</p>\\n\"\n    - id: arg0\n      type: System.Object\n      description: \"\\n<p>The first object to write using <em>format</em>. </p>\\n\"\n    - id: arg1\n      type: System.Object\n      description: \"\\n<p>The second object to write using <em>format</em>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>format</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The format specification in <em>format</em> is invalid. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(String, Object, Object)\n- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)\n  commentId: M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)\n  id: WriteLine(System.String,System.Object,System.Object,System.Object)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(String, Object, Object, Object)\n  fullName: System.Console.WriteLine(System.String, System.Object, System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 93\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(string format, object arg0, object arg1, object arg2)\n    content.vb: Public Shared Sub WriteLine(format As String, arg0 As Object, arg1 As Object, arg2 As Object)\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A composite format string (see Remarks).</p>\\n\"\n    - id: arg0\n      type: System.Object\n      description: \"\\n<p>The first object to write using <em>format</em>. </p>\\n\"\n    - id: arg1\n      type: System.Object\n      description: \"\\n<p>The second object to write using <em>format</em>. </p>\\n\"\n    - id: arg2\n      type: System.Object\n      description: \"\\n<p>The third object to write using <em>format</em>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>format</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The format specification in <em>format</em> is invalid. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(String, Object, Object, Object)\n- uid: System.Console.WriteLine(System.String,System.Object[])\n  commentId: M:System.Console.WriteLine(System.String,System.Object[])\n  id: WriteLine(System.String,System.Object[])\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(String, Object[])\n  fullName: System.Console.WriteLine(System.String, System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 94\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</p>\\n\"\n  syntax:\n    content: public static void WriteLine(string format, params object[] arg)\n    content.vb: Public Shared Sub WriteLine(format As String, ParamArray arg As Object())\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A composite format string (see Remarks).</p>\\n\"\n    - id: arg\n      type: System.Object[]\n      description: \"\\n<p>An array of objects to write using <em>format</em>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>format</em> or <em>arg</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The format specification in <em>format</em> is invalid. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Console.WriteLine(System.String, System.Object())\n  name.vb: WriteLine(String, Object())\n  nameWithType: Console.WriteLine(String, Object[])\n  nameWithType.vb: Console.WriteLine(String, Object())\n- uid: System.Console.WriteLine(System.UInt32)\n  commentId: M:System.Console.WriteLine(System.UInt32)\n  id: WriteLine(System.UInt32)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(UInt32)\n  fullName: System.Console.WriteLine(System.UInt32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 95\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static void WriteLine(uint value)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Sub WriteLine(value As UInteger)\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(UInt32)\n- uid: System.Console.WriteLine(System.UInt64)\n  commentId: M:System.Console.WriteLine(System.UInt64)\n  id: WriteLine(System.UInt64)\n  parent: System.Console\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(UInt64)\n  fullName: System.Console.WriteLine(System.UInt64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Console/ref/System.Console.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Console/ref/System.Console.cs\n    startLine: 97\n  assemblies:\n  - System.Console\n  namespace: System\n  summary: \"\\n<p>Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static void WriteLine(ulong value)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Sub WriteLine(value As ULong)\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: \"\\n<p>The value to write. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  seealso:\n  - type: System.Console.Read\n    commentId: M:System.Console.Read\n  - type: System.Console.ReadLine\n    commentId: M:System.Console.ReadLine\n  - type: System.Console.Write(System.String,System.Object)\n    commentId: M:System.Console.Write(System.String,System.Object)\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Console.WriteLine(UInt64)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.ConsoleColor\n  parent: System\n  isExternal: false\n  name: ConsoleColor\n  fullName: System.ConsoleColor\n  nameWithType: ConsoleColor\n  commentId: T:System.ConsoleColor\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ConsoleCancelEventHandler\n  parent: System\n  isExternal: false\n  name: ConsoleCancelEventHandler\n  fullName: System.ConsoleCancelEventHandler\n  nameWithType: ConsoleCancelEventHandler\n  commentId: T:System.ConsoleCancelEventHandler\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  fullName: System.IO.TextWriter\n  nameWithType: TextWriter\n  commentId: T:System.IO.TextWriter\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  fullName: System.Text.Encoding\n  nameWithType: Encoding\n  commentId: T:System.Text.Encoding\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: false\n  name: TextReader\n  fullName: System.IO.TextReader\n  nameWithType: TextReader\n  commentId: T:System.IO.TextReader\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  nameWithType: Stream\n  commentId: T:System.IO.Stream\n- uid: System.ConsoleKeyInfo\n  parent: System\n  isExternal: false\n  name: ConsoleKeyInfo\n  fullName: System.ConsoleKeyInfo\n  nameWithType: ConsoleKeyInfo\n  commentId: T:System.ConsoleKeyInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Char[]\n  name: Char[]\n  fullName: System.Char[]\n  fullname.vb: System.Char()\n  name.vb: Char()\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Char[]\n  nameWithType.vb: Char()\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  nameWithType: UInt32\n  commentId: T:System.UInt32\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  fullName: System.UInt64\n  nameWithType: UInt64\n  commentId: T:System.UInt64\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.Security.HostProtectionException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.OutOfMemoryException\n  isExternal: false\n  name: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  commentId: T:System.OutOfMemoryException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}