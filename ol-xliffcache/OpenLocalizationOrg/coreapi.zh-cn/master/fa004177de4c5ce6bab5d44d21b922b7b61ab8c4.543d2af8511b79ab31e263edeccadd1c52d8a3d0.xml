{"nodes":[{"pos":[1632,1641],"content":"XDocument","needQuote":true,"nodes":[{"content":"XDocument","pos":[0,9]}]},{"pos":[5987,5998],"content":"XDocument()","needQuote":true,"nodes":[{"content":"XDocument()","pos":[0,11]}]},{"pos":[7069,7088],"content":"XDocument(Object[])","needQuote":true,"nodes":[{"content":"XDocument(Object[])","pos":[0,19]}]},{"content":"\\n&lt;p&gt;A parameter list of content objects to add to this document.&lt;/p&gt;\\n","pos":[7883,7954],"source":"\\n<p>A parameter list of content objects to add to this document.</p>\\n"},{"pos":[8653,8686],"content":"XDocument(XDeclaration, Object[])","needQuote":true,"nodes":[{"content":"XDocument(XDeclaration, Object[])","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The content of the document.&lt;/p&gt;\\n","pos":[9864,9903],"source":"\\n<p>The content of the document.</p>\\n"},{"pos":[10617,10637],"content":"XDocument(XDocument)","needQuote":true,"nodes":[{"content":"XDocument(XDocument)","pos":[0,20]}]},{"pos":[12071,12082],"content":"Declaration","needQuote":true,"nodes":[{"content":"Declaration","pos":[0,11]}]},{"pos":[13329,13341],"content":"DocumentType","needQuote":true,"nodes":[{"content":"DocumentType","pos":[0,12]}]},{"pos":[14687,14695],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[16148,16152],"content":"Root","needQuote":true,"nodes":[{"content":"Root","pos":[0,4]}]},{"pos":[17266,17278],"content":"Load(Stream)","needQuote":true,"nodes":[{"content":"Load(Stream)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The stream that contains the XML data.&lt;/p&gt;\\n","pos":[18063,18112],"source":"\\n<p>The stream that contains the XML data.</p>\\n"},{"pos":[18769,18794],"content":"Load(Stream, LoadOptions)","needQuote":true,"nodes":[{"content":"Load(Stream, LoadOptions)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The stream containing the XML data.&lt;/p&gt;\\n","pos":[19742,19788],"source":"\\n<p>The stream containing the XML data.</p>\\n"},{"pos":[20627,20643],"content":"Load(TextReader)","needQuote":true,"nodes":[{"content":"Load(TextReader)","pos":[0,16]}]},{"pos":[22854,22883],"content":"Load(TextReader, LoadOptions)","needQuote":true,"nodes":[{"content":"Load(TextReader, LoadOptions)","pos":[0,29]}]},{"pos":[25443,25455],"content":"Load(String)","needQuote":true,"nodes":[{"content":"Load(String)","pos":[0,12]}]},{"pos":[27386,27411],"content":"Load(String, LoadOptions)","needQuote":true,"nodes":[{"content":"Load(String, LoadOptions)","pos":[0,25]}]},{"pos":[29722,29737],"content":"Load(XmlReader)","needQuote":true,"nodes":[{"content":"Load(XmlReader)","pos":[0,15]}]},{"pos":[31934,31962],"content":"Load(XmlReader, LoadOptions)","needQuote":true,"nodes":[{"content":"Load(XmlReader, LoadOptions)","pos":[0,28]}]},{"pos":[34463,34476],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that contains XML.&lt;/p&gt;\\n","pos":[35228,35266],"source":"\\n<p>A string that contains XML.</p>\\n"},{"pos":[36302,36328],"content":"Parse(String, LoadOptions)","needQuote":true,"nodes":[{"content":"Parse(String, LoadOptions)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;A string that contains XML.&lt;/p&gt;\\n","pos":[37243,37281],"source":"\\n<p>A string that contains XML.</p>\\n"},{"pos":[38520,38532],"content":"Save(Stream)","needQuote":true,"nodes":[{"content":"Save(Stream)","pos":[0,12]}]},{"pos":[39863,39888],"content":"Save(Stream, SaveOptions)","needQuote":true,"nodes":[{"content":"Save(Stream, SaveOptions)","pos":[0,25]}]},{"pos":[41493,41509],"content":"Save(TextWriter)","needQuote":true,"nodes":[{"content":"Save(TextWriter)","pos":[0,16]}]},{"pos":[43495,43524],"content":"Save(TextWriter, SaveOptions)","needQuote":true,"nodes":[{"content":"Save(TextWriter, SaveOptions)","pos":[0,29]}]},{"pos":[45671,45686],"content":"Save(XmlWriter)","needQuote":true,"nodes":[{"content":"Save(XmlWriter)","pos":[0,15]}]},{"pos":[47583,47601],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[49134,49149],"content":"System.Xml.Linq","needQuote":true,"nodes":[{"content":"System.Xml.Linq","pos":[0,15]}]},{"pos":[49307,49313],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49477,49484],"content":"XObject","needQuote":true,"nodes":[{"content":"XObject","pos":[0,7]}]},{"pos":[49667,49672],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[49854,49864],"content":"XContainer","needQuote":true,"nodes":[{"content":"XContainer","pos":[0,10]}]},{"pos":[50082,50091],"content":"FirstNode","needQuote":true,"nodes":[{"content":"FirstNode","pos":[0,9]}]},{"pos":[50338,50346],"content":"LastNode","needQuote":true,"nodes":[{"content":"LastNode","pos":[0,8]}]},{"pos":[50599,50610],"content":"Add(Object)","needQuote":true,"nodes":[{"content":"Add(Object)","pos":[0,11]}]},{"pos":[50749,50752],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[50808,50809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50859,50865],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50925,50926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51019,51022],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[51078,51079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51129,51135],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51195,51196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51432,51445],"content":"Add(Object[])","needQuote":true,"nodes":[{"content":"Add(Object[])","pos":[0,13]}]},{"pos":[51676,51679],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[51735,51736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51786,51792],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[51853,51855]},{"pos":[51886,51887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51982,51985],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[52041,52042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52092,52098],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52158,52160],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[52188,52189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52476,52492],"content":"AddFirst(Object)","needQuote":true,"nodes":[{"content":"AddFirst(Object)","pos":[0,16]}]},{"pos":[52641,52649],"content":"AddFirst","needQuote":true,"nodes":[{"content":"AddFirst","pos":[0,8]}]},{"pos":[52710,52711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52761,52767],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52827,52828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52926,52934],"content":"AddFirst","needQuote":true,"nodes":[{"content":"AddFirst","pos":[0,8]}]},{"pos":[52995,52996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53046,53052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53112,53113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53364,53382],"content":"AddFirst(Object[])","needQuote":true,"nodes":[{"content":"AddFirst(Object[])","pos":[0,18]}]},{"pos":[53633,53641],"content":"AddFirst","needQuote":true,"nodes":[{"content":"AddFirst","pos":[0,8]}]},{"pos":[53702,53703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53753,53759],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[53820,53822]},{"pos":[53853,53854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53954,53962],"content":"AddFirst","needQuote":true,"nodes":[{"content":"AddFirst","pos":[0,8]}]},{"pos":[54023,54024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54074,54080],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54140,54142],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[54170,54171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54463,54477],"content":"CreateWriter()","needQuote":true,"nodes":[{"content":"CreateWriter()","pos":[0,14]}]},{"pos":[54606,54618],"content":"CreateWriter","needQuote":true,"nodes":[{"content":"CreateWriter","pos":[0,12]}]},{"pos":[54683,54684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54711,54712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54799,54811],"content":"CreateWriter","needQuote":true,"nodes":[{"content":"CreateWriter","pos":[0,12]}]},{"pos":[54876,54877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54904,54905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55134,55151],"content":"DescendantNodes()","needQuote":true,"nodes":[{"content":"DescendantNodes()","pos":[0,17]}]},{"pos":[55286,55301],"content":"DescendantNodes","needQuote":true,"nodes":[{"content":"DescendantNodes","pos":[0,15]}]},{"pos":[55369,55370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55397,55398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55488,55503],"content":"DescendantNodes","needQuote":true,"nodes":[{"content":"DescendantNodes","pos":[0,15]}]},{"pos":[55571,55572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55599,55600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55831,55844],"content":"Descendants()","needQuote":true,"nodes":[{"content":"Descendants()","pos":[0,13]}]},{"pos":[55971,55982],"content":"Descendants","needQuote":true,"nodes":[{"content":"Descendants","pos":[0,11]}]},{"pos":[56046,56047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56074,56075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56161,56172],"content":"Descendants","needQuote":true,"nodes":[{"content":"Descendants","pos":[0,11]}]},{"pos":[56236,56237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56264,56265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56511,56529],"content":"Descendants(XName)","needQuote":true,"nodes":[{"content":"Descendants(XName)","pos":[0,18]}]},{"pos":[56700,56711],"content":"Descendants","needQuote":true,"nodes":[{"content":"Descendants","pos":[0,11]}]},{"pos":[56775,56776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56834,56839],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[56886,56887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56996,57007],"content":"Descendants","needQuote":true,"nodes":[{"content":"Descendants","pos":[0,11]}]},{"pos":[57071,57072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57130,57135],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[57182,57183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57453,57467],"content":"Element(XName)","needQuote":true,"nodes":[{"content":"Element(XName)","pos":[0,14]}]},{"pos":[57630,57637],"content":"Element","needQuote":true,"nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[57697,57698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57756,57761],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[57808,57809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57914,57921],"content":"Element","needQuote":true,"nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[57981,57982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58040,58045],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[58092,58093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58333,58343],"content":"Elements()","needQuote":true,"nodes":[{"content":"Elements()","pos":[0,10]}]},{"pos":[58464,58472],"content":"Elements","needQuote":true,"nodes":[{"content":"Elements","pos":[0,8]}]},{"pos":[58533,58534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58561,58562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58645,58653],"content":"Elements","needQuote":true,"nodes":[{"content":"Elements","pos":[0,8]}]},{"pos":[58714,58715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58742,58743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58980,58995],"content":"Elements(XName)","needQuote":true,"nodes":[{"content":"Elements(XName)","pos":[0,15]}]},{"pos":[59160,59168],"content":"Elements","needQuote":true,"nodes":[{"content":"Elements","pos":[0,8]}]},{"pos":[59229,59230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59288,59293],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[59340,59341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59447,59455],"content":"Elements","needQuote":true,"nodes":[{"content":"Elements","pos":[0,8]}]},{"pos":[59516,59517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59575,59580],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[59627,59628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59867,59874],"content":"Nodes()","needQuote":true,"nodes":[{"content":"Nodes()","pos":[0,7]}]},{"pos":[59989,59994],"content":"Nodes","needQuote":true,"nodes":[{"content":"Nodes","pos":[0,5]}]},{"pos":[60052,60053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60080,60081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60161,60166],"content":"Nodes","needQuote":true,"nodes":[{"content":"Nodes","pos":[0,5]}]},{"pos":[60224,60225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60252,60253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60464,60477],"content":"RemoveNodes()","needQuote":true,"nodes":[{"content":"RemoveNodes()","pos":[0,13]}]},{"pos":[60604,60615],"content":"RemoveNodes","needQuote":true,"nodes":[{"content":"RemoveNodes","pos":[0,11]}]},{"pos":[60679,60680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60707,60708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60794,60805],"content":"RemoveNodes","needQuote":true,"nodes":[{"content":"RemoveNodes","pos":[0,11]}]},{"pos":[60869,60870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60897,60898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61136,61156],"content":"ReplaceNodes(Object)","needQuote":true,"nodes":[{"content":"ReplaceNodes(Object)","pos":[0,20]}]},{"pos":[61313,61325],"content":"ReplaceNodes","needQuote":true,"nodes":[{"content":"ReplaceNodes","pos":[0,12]}]},{"pos":[61390,61391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61441,61447],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61507,61508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61610,61622],"content":"ReplaceNodes","needQuote":true,"nodes":[{"content":"ReplaceNodes","pos":[0,12]}]},{"pos":[61687,61688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61738,61744],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61804,61805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62068,62090],"content":"ReplaceNodes(Object[])","needQuote":true,"nodes":[{"content":"ReplaceNodes(Object[])","pos":[0,22]}]},{"pos":[62357,62369],"content":"ReplaceNodes","needQuote":true,"nodes":[{"content":"ReplaceNodes","pos":[0,12]}]},{"pos":[62434,62435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62485,62491],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[62552,62554]},{"pos":[62585,62586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62690,62702],"content":"ReplaceNodes","needQuote":true,"nodes":[{"content":"ReplaceNodes","pos":[0,12]}]},{"pos":[62767,62768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62818,62824],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62884,62886],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[62914,62915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63218,63239],"content":"DocumentOrderComparer","needQuote":true,"nodes":[{"content":"DocumentOrderComparer","pos":[0,21]}]},{"pos":[63505,63521],"content":"EqualityComparer","needQuote":true,"nodes":[{"content":"EqualityComparer","pos":[0,16]}]},{"pos":[63764,63772],"content":"NextNode","needQuote":true,"nodes":[{"content":"NextNode","pos":[0,8]}]},{"pos":[63995,64007],"content":"PreviousNode","needQuote":true,"nodes":[{"content":"PreviousNode","pos":[0,12]}]},{"pos":[64256,64276],"content":"AddAfterSelf(Object)","needQuote":true,"nodes":[{"content":"AddAfterSelf(Object)","pos":[0,20]}]},{"pos":[64423,64435],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[64495,64496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64546,64552],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64612,64613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64710,64722],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[64782,64783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64833,64839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64899,64900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65143,65165],"content":"AddAfterSelf(Object[])","needQuote":true,"nodes":[{"content":"AddAfterSelf(Object[])","pos":[0,22]}]},{"pos":[65417,65429],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[65489,65490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65540,65546],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[65607,65609]},{"pos":[65640,65641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65740,65752],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[65812,65813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65863,65869],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65929,65931],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[65959,65960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66254,66275],"content":"AddBeforeSelf(Object)","needQuote":true,"nodes":[{"content":"AddBeforeSelf(Object)","pos":[0,21]}]},{"pos":[66424,66437],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[66498,66499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66549,66555],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66615,66616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66714,66727],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[66788,66789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66839,66845],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66905,66906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67152,67175],"content":"AddBeforeSelf(Object[])","needQuote":true,"nodes":[{"content":"AddBeforeSelf(Object[])","pos":[0,23]}]},{"pos":[67431,67444],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[67505,67506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67556,67562],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[67623,67625]},{"pos":[67656,67657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67757,67770],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[67831,67832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67882,67888],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67948,67950],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[67978,67979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68258,68269],"content":"Ancestors()","needQuote":true,"nodes":[{"content":"Ancestors()","pos":[0,11]}]},{"pos":[68382,68391],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[68448,68449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68476,68477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68556,68565],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[68622,68623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68650,68651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68871,68887],"content":"Ancestors(XName)","needQuote":true,"nodes":[{"content":"Ancestors(XName)","pos":[0,16]}]},{"pos":[69044,69053],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[69110,69111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69169,69174],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[69221,69222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69324,69333],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[69390,69391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69449,69454],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[69501,69502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69783,69817],"content":"CompareDocumentOrder(XNode, XNode)","needQuote":true,"nodes":[{"content":"CompareDocumentOrder(XNode, XNode)","pos":[0,34]}]},{"pos":[70041,70061],"content":"CompareDocumentOrder","needQuote":true,"nodes":[{"content":"CompareDocumentOrder","pos":[0,20]}]},{"pos":[70129,70130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70188,70193],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[70241,70242]},{"pos":[70305,70310],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[70357,70358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70493,70513],"content":"CompareDocumentOrder","needQuote":true,"nodes":[{"content":"CompareDocumentOrder","pos":[0,20]}]},{"pos":[70581,70582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70640,70645],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[70693,70694]},{"pos":[70757,70762],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[70809,70810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71089,71103],"content":"CreateReader()","needQuote":true,"nodes":[{"content":"CreateReader()","pos":[0,14]}]},{"pos":[71222,71234],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[71294,71295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71322,71323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71405,71417],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[71477,71478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71505,71506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71743,71770],"content":"CreateReader(ReaderOptions)","needQuote":true,"nodes":[{"content":"CreateReader(ReaderOptions)","pos":[0,27]}]},{"pos":[71949,71961],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[72021,72022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72088,72101],"content":"ReaderOptions","needQuote":true,"nodes":[{"content":"ReaderOptions","pos":[0,13]}]},{"pos":[72156,72157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72270,72282],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[72342,72343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72409,72422],"content":"ReaderOptions","needQuote":true,"nodes":[{"content":"ReaderOptions","pos":[0,13]}]},{"pos":[72477,72478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72771,72795],"content":"DeepEquals(XNode, XNode)","needQuote":true,"nodes":[{"content":"DeepEquals(XNode, XNode)","pos":[0,24]}]},{"pos":[72999,73009],"content":"DeepEquals","needQuote":true,"nodes":[{"content":"DeepEquals","pos":[0,10]}]},{"pos":[73067,73068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73126,73131],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[73179,73180]},{"pos":[73243,73248],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[73295,73296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73421,73431],"content":"DeepEquals","needQuote":true,"nodes":[{"content":"DeepEquals","pos":[0,10]}]},{"pos":[73489,73490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73548,73553],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[73601,73602]},{"pos":[73665,73670],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[73717,73718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73982,74001],"content":"ElementsAfterSelf()","needQuote":true,"nodes":[{"content":"ElementsAfterSelf()","pos":[0,19]}]},{"pos":[74130,74147],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[74212,74213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74240,74241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74328,74345],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[74410,74411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74438,74439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74683,74707],"content":"ElementsAfterSelf(XName)","needQuote":true,"nodes":[{"content":"ElementsAfterSelf(XName)","pos":[0,24]}]},{"pos":[74880,74897],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[74962,74963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75021,75026],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[75073,75074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75184,75201],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[75266,75267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75325,75330],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[75377,75378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75628,75648],"content":"ElementsBeforeSelf()","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf()","pos":[0,20]}]},{"pos":[75779,75797],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[75863,75864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75891,75892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75980,75998],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[76064,76065],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76092,76093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76340,76365],"content":"ElementsBeforeSelf(XName)","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf(XName)","pos":[0,25]}]},{"pos":[76540,76558],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[76624,76625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76683,76688],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[76735,76736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76847,76865],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[76931,76932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76990,76995],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[77042,77043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77307,77321],"content":"IsAfter(XNode)","needQuote":true,"nodes":[{"content":"IsAfter(XNode)","pos":[0,14]}]},{"pos":[77474,77481],"content":"IsAfter","needQuote":true,"nodes":[{"content":"IsAfter","pos":[0,7]}]},{"pos":[77536,77537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77595,77600],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[77647,77648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77748,77755],"content":"IsAfter","needQuote":true,"nodes":[{"content":"IsAfter","pos":[0,7]}]},{"pos":[77810,77811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77869,77874],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[77921,77922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78165,78180],"content":"IsBefore(XNode)","needQuote":true,"nodes":[{"content":"IsBefore(XNode)","pos":[0,15]}]},{"pos":[78335,78343],"content":"IsBefore","needQuote":true,"nodes":[{"content":"IsBefore","pos":[0,8]}]},{"pos":[78399,78400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78458,78463],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[78510,78511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78612,78620],"content":"IsBefore","needQuote":true,"nodes":[{"content":"IsBefore","pos":[0,8]}]},{"pos":[78676,78677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78735,78740],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[78787,78788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79016,79032],"content":"NodesAfterSelf()","needQuote":true,"nodes":[{"content":"NodesAfterSelf()","pos":[0,16]}]},{"pos":[79155,79169],"content":"NodesAfterSelf","needQuote":true,"nodes":[{"content":"NodesAfterSelf","pos":[0,14]}]},{"pos":[79231,79232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79259,79260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79344,79358],"content":"NodesAfterSelf","needQuote":true,"nodes":[{"content":"NodesAfterSelf","pos":[0,14]}]},{"pos":[79420,79421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79448,79449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79662,79679],"content":"NodesBeforeSelf()","needQuote":true,"nodes":[{"content":"NodesBeforeSelf()","pos":[0,17]}]},{"pos":[79804,79819],"content":"NodesBeforeSelf","needQuote":true,"nodes":[{"content":"NodesBeforeSelf","pos":[0,15]}]},{"pos":[79882,79883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79910,79911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79996,80011],"content":"NodesBeforeSelf","needQuote":true,"nodes":[{"content":"NodesBeforeSelf","pos":[0,15]}]},{"pos":[80074,80075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80102,80103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80332,80351],"content":"ReadFrom(XmlReader)","needQuote":true,"nodes":[{"content":"ReadFrom(XmlReader)","pos":[0,19]}]},{"pos":[80504,80512],"content":"ReadFrom","needQuote":true,"nodes":[{"content":"ReadFrom","pos":[0,8]}]},{"pos":[80568,80569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80626,80635],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[80702,80703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80803,80811],"content":"ReadFrom","needQuote":true,"nodes":[{"content":"ReadFrom","pos":[0,8]}]},{"pos":[80867,80868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80925,80934],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[81001,81002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81225,81233],"content":"Remove()","needQuote":true,"nodes":[{"content":"Remove()","pos":[0,8]}]},{"pos":[81340,81346],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[81400,81401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81428,81429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81505,81511],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[81565,81566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81593,81594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81801,81820],"content":"ReplaceWith(Object)","needQuote":true,"nodes":[{"content":"ReplaceWith(Object)","pos":[0,19]}]},{"pos":[81965,81976],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[82035,82036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82086,82092],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[82152,82153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82249,82260],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[82319,82320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82370,82376],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[82436,82437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82677,82698],"content":"ReplaceWith(Object[])","needQuote":true,"nodes":[{"content":"ReplaceWith(Object[])","pos":[0,21]}]},{"pos":[82946,82957],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[83016,83017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83067,83073],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[83134,83136]},{"pos":[83167,83168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83266,83277],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[83336,83337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83387,83393],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[83453,83455],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[83483,83484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83756,83766],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[83877,83885],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[83941,83942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83969,83970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84048,84056],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[84112,84113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84140,84141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84364,84385],"content":"ToString(SaveOptions)","needQuote":true,"nodes":[{"content":"ToString(SaveOptions)","pos":[0,21]}]},{"pos":[84552,84560],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[84616,84617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84681,84692],"content":"SaveOptions","needQuote":true,"nodes":[{"content":"SaveOptions","pos":[0,11]}]},{"pos":[84745,84746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84853,84861],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[84917,84918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84982,84993],"content":"SaveOptions","needQuote":true,"nodes":[{"content":"SaveOptions","pos":[0,11]}]},{"pos":[85046,85047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85284,85291],"content":"BaseUri","needQuote":true,"nodes":[{"content":"BaseUri","pos":[0,7]}]},{"pos":[85517,85525],"content":"Document","needQuote":true,"nodes":[{"content":"Document","pos":[0,8]}]},{"pos":[85752,85758],"content":"Parent","needQuote":true,"nodes":[{"content":"Parent","pos":[0,6]}]},{"pos":[85980,85987],"content":"Changed","needQuote":true,"nodes":[{"content":"Changed","pos":[0,7]}]},{"pos":[86213,86221],"content":"Changing","needQuote":true,"nodes":[{"content":"Changing","pos":[0,8]}]},{"pos":[86469,86490],"content":"AddAnnotation(Object)","needQuote":true,"nodes":[{"content":"AddAnnotation(Object)","pos":[0,21]}]},{"pos":[86643,86656],"content":"AddAnnotation","needQuote":true,"nodes":[{"content":"AddAnnotation","pos":[0,13]}]},{"pos":[86719,86720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86770,86776],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86836,86837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86937,86950],"content":"AddAnnotation","needQuote":true,"nodes":[{"content":"AddAnnotation","pos":[0,13]}]},{"pos":[87013,87014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87064,87070],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87130,87131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87378,87394],"content":"Annotation(Type)","needQuote":true,"nodes":[{"content":"Annotation(Type)","pos":[0,16]}]},{"pos":[87537,87547],"content":"Annotation","needQuote":true,"nodes":[{"content":"Annotation","pos":[0,10]}]},{"pos":[87607,87608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87656,87660],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[87718,87719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87814,87824],"content":"Annotation","needQuote":true,"nodes":[{"content":"Annotation","pos":[0,10]}]},{"pos":[87884,87885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87933,87937],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[87995,87996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88224,88239],"content":"Annotation<T>()","needQuote":true,"nodes":[{"content":"Annotation&lt;T&gt;()","pos":[0,15],"source":"Annotation<T>()"}]},{"pos":[88452,88465],"content":"Annotation<T>","needQuote":true,"nodes":[{"content":"Annotation&lt;T&gt;","pos":[0,13],"source":"Annotation<T>"}]},{"pos":[88528,88529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88556,88557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88642,88658],"content":"Annotation(Of T)","needQuote":true,"nodes":[{"content":"Annotation(Of T)","pos":[0,16]}]},{"pos":[88724,88725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88752,88753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89026,89043],"content":"Annotations(Type)","needQuote":true,"nodes":[{"content":"Annotations(Type)","pos":[0,17]}]},{"pos":[89188,89199],"content":"Annotations","needQuote":true,"nodes":[{"content":"Annotations","pos":[0,11]}]},{"pos":[89260,89261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89309,89313],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[89371,89372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89468,89479],"content":"Annotations","needQuote":true,"nodes":[{"content":"Annotations","pos":[0,11]}]},{"pos":[89540,89541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89589,89593],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[89651,89652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89883,89899],"content":"Annotations<T>()","needQuote":true,"nodes":[{"content":"Annotations&lt;T&gt;()","pos":[0,16],"source":"Annotations<T>()"}]},{"pos":[90116,90130],"content":"Annotations<T>","needQuote":true,"nodes":[{"content":"Annotations&lt;T&gt;","pos":[0,14],"source":"Annotations<T>"}]},{"pos":[90194,90195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90222,90223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90309,90326],"content":"Annotations(Of T)","needQuote":true,"nodes":[{"content":"Annotations(Of T)","pos":[0,17]}]},{"pos":[90393,90394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90421,90422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90704,90727],"content":"RemoveAnnotations(Type)","needQuote":true,"nodes":[{"content":"RemoveAnnotations(Type)","pos":[0,23]}]},{"pos":[90884,90901],"content":"RemoveAnnotations","needQuote":true,"nodes":[{"content":"RemoveAnnotations","pos":[0,17]}]},{"pos":[90968,90969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91017,91021],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[91079,91080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91182,91199],"content":"RemoveAnnotations","needQuote":true,"nodes":[{"content":"RemoveAnnotations","pos":[0,17]}]},{"pos":[91266,91267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91315,91319],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[91377,91378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91627,91649],"content":"RemoveAnnotations<T>()","needQuote":true,"nodes":[{"content":"RemoveAnnotations&lt;T&gt;()","pos":[0,22],"source":"RemoveAnnotations<T>()"}]},{"pos":[91890,91910],"content":"RemoveAnnotations<T>","needQuote":true,"nodes":[{"content":"RemoveAnnotations&lt;T&gt;","pos":[0,20],"source":"RemoveAnnotations<T>"}]},{"pos":[91980,91981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92008,92009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92101,92124],"content":"RemoveAnnotations(Of T)","needQuote":true,"nodes":[{"content":"RemoveAnnotations(Of T)","pos":[0,23]}]},{"pos":[92197,92198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92225,92226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92445,92451],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[92547,92555],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[92683,92689],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[92750,92752]},{"pos":[92817,92823],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[92883,92885],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[93046,93058],"content":"XDeclaration","needQuote":true,"nodes":[{"content":"XDeclaration","pos":[0,12]}]},{"pos":[93260,93269],"content":"XDocument","needQuote":true,"nodes":[{"content":"XDocument","pos":[0,9]}]},{"pos":[93466,93479],"content":"XDocumentType","needQuote":true,"nodes":[{"content":"XDocumentType","pos":[0,13]}]},{"pos":[93699,93707],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[93913,93924],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[94072,94082],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[94245,94253],"content":"XElement","needQuote":true,"nodes":[{"content":"XElement","pos":[0,8]}]},{"pos":[94428,94434],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[94564,94573],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[94736,94747],"content":"LoadOptions","needQuote":true,"nodes":[{"content":"LoadOptions","pos":[0,11]}]},{"pos":[94935,94945],"content":"TextReader","needQuote":true,"nodes":[{"content":"TextReader","pos":[0,10]}]},{"pos":[95108,95114],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[95270,95279],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[95464,95475],"content":"SaveOptions","needQuote":true,"nodes":[{"content":"SaveOptions","pos":[0,11]}]},{"pos":[95663,95673],"content":"TextWriter","needQuote":true,"nodes":[{"content":"TextWriter","pos":[0,10]}]},{"pos":[95847,95856],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[96070,96088],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[96239,96246],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[96301,96302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96359,96368],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[96435,96436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96535,96542],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[96597,96598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96655,96664],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[96731,96732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Xml.Linq.XDocument\n  commentId: T:System.Xml.Linq.XDocument\n  id: XDocument\n  parent: System.Xml.Linq\n  children:\n  - System.Xml.Linq.XDocument.#ctor\n  - System.Xml.Linq.XDocument.#ctor(System.Object[])\n  - System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])\n  - System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)\n  - System.Xml.Linq.XDocument.Declaration\n  - System.Xml.Linq.XDocument.DocumentType\n  - System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  - System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XDocument.Load(System.IO.TextReader)\n  - System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XDocument.Load(System.String)\n  - System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)\n  - System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XDocument.NodeType\n  - System.Xml.Linq.XDocument.Parse(System.String)\n  - System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XDocument.Root\n  - System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XDocument.Save(System.IO.TextWriter)\n  - System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)\n  - System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  - vb\n  name: XDocument\n  fullName: System.Xml.Linq.XDocument\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XDocument\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 162\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Represents an XML document. For the components and usage of an <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object, see XDocument Class Overview.</p>\\n\"\n  syntax:\n    content: 'public class XDocument : XContainer'\n    content.vb: >-\n      Public Class XDocument\n          Inherits XContainer\n  seealso:\n  - type: System.Xml.Linq.XNamespace\n    commentId: T:System.Xml.Linq.XNamespace\n  - type: System.Xml.Linq.XDeclaration\n    commentId: T:System.Xml.Linq.XDeclaration\n  - type: System.Xml.Linq.XElement\n    commentId: T:System.Xml.Linq.XElement\n  - type: System.Xml.Linq.XNode\n    commentId: T:System.Xml.Linq.XNode\n  inheritance:\n  - System.Object\n  - System.Xml.Linq.XObject\n  - System.Xml.Linq.XNode\n  - System.Xml.Linq.XContainer\n  inheritedMembers:\n  - System.Xml.Linq.XContainer.FirstNode\n  - System.Xml.Linq.XContainer.LastNode\n  - System.Xml.Linq.XContainer.Add(System.Object)\n  - System.Xml.Linq.XContainer.Add(System.Object[])\n  - System.Xml.Linq.XContainer.AddFirst(System.Object)\n  - System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  - System.Xml.Linq.XContainer.CreateWriter\n  - System.Xml.Linq.XContainer.DescendantNodes\n  - System.Xml.Linq.XContainer.Descendants\n  - System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  - System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  - System.Xml.Linq.XContainer.Elements\n  - System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  - System.Xml.Linq.XContainer.Nodes\n  - System.Xml.Linq.XContainer.RemoveNodes\n  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  - System.Xml.Linq.XNode.DocumentOrderComparer\n  - System.Xml.Linq.XNode.EqualityComparer\n  - System.Xml.Linq.XNode.NextNode\n  - System.Xml.Linq.XNode.PreviousNode\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  - System.Xml.Linq.XNode.Ancestors\n  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.CreateReader\n  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.ElementsAfterSelf\n  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.ElementsBeforeSelf\n  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.NodesAfterSelf\n  - System.Xml.Linq.XNode.NodesBeforeSelf\n  - System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  - System.Xml.Linq.XNode.Remove\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  - System.Xml.Linq.XNode.ToString\n  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XObject.BaseUri\n  - System.Xml.Linq.XObject.Document\n  - System.Xml.Linq.XObject.Parent\n  - System.Xml.Linq.XObject.Changed\n  - System.Xml.Linq.XObject.Changing\n  - System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  - System.Xml.Linq.XObject.Annotation(System.Type)\n  - System.Xml.Linq.XObject.Annotation``1\n  - System.Xml.Linq.XObject.Annotations(System.Type)\n  - System.Xml.Linq.XObject.Annotations``1\n  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  - System.Xml.Linq.XObject.RemoveAnnotations``1\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XDocument\n- uid: System.Xml.Linq.XDocument.#ctor\n  commentId: M:System.Xml.Linq.XDocument.#ctor\n  id: '#ctor'\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: XDocument()\n  fullName: System.Xml.Linq.XDocument.XDocument()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 164\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public XDocument()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XDocument.XDocument()\n- uid: System.Xml.Linq.XDocument.#ctor(System.Object[])\n  commentId: M:System.Xml.Linq.XDocument.#ctor(System.Object[])\n  id: '#ctor(System.Object[])'\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: XDocument(Object[])\n  fullName: System.Xml.Linq.XDocument.XDocument(System.Object[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 165\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified content.</p>\\n\"\n  syntax:\n    content: public XDocument(params object[] content)\n    content.vb: Public Sub New(ParamArray content As Object())\n    parameters:\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>A parameter list of content objects to add to this document.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XDocument.XDocument(System.Object())\n  name.vb: XDocument(Object())\n  nameWithType: XDocument.XDocument(Object[])\n  nameWithType.vb: XDocument.XDocument(Object())\n- uid: System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])\n  commentId: M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])\n  id: '#ctor(System.Xml.Linq.XDeclaration,System.Object[])'\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: XDocument(XDeclaration, Object[])\n  fullName: System.Xml.Linq.XDocument.XDocument(System.Xml.Linq.XDeclaration, System.Object[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 166\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified <xref href=\\\"System.Xml.Linq.XDeclaration\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and content.</p>\\n\"\n  syntax:\n    content: public XDocument(XDeclaration declaration, params object[] content)\n    content.vb: Public Sub New(declaration As XDeclaration, ParamArray content As Object())\n    parameters:\n    - id: declaration\n      type: System.Xml.Linq.XDeclaration\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDeclaration\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the document.</p>\\n\"\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>The content of the document.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XDocument.XDocument(System.Xml.Linq.XDeclaration, System.Object())\n  name.vb: XDocument(XDeclaration, Object())\n  nameWithType: XDocument.XDocument(XDeclaration, Object[])\n  nameWithType.vb: XDocument.XDocument(XDeclaration, Object())\n- uid: System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)\n  commentId: M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)\n  id: '#ctor(System.Xml.Linq.XDocument)'\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: XDocument(XDocument)\n  fullName: System.Xml.Linq.XDocument.XDocument(System.Xml.Linq.XDocument)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 167\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class from an existing <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public XDocument(XDocument other)\n    content.vb: Public Sub New(other As XDocument)\n    parameters:\n    - id: other\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that will be copied.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XDocument.XDocument(XDocument)\n- uid: System.Xml.Linq.XDocument.Declaration\n  commentId: P:System.Xml.Linq.XDocument.Declaration\n  id: Declaration\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Declaration\n  fullName: System.Xml.Linq.XDocument.Declaration\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Declaration\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 168\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets or sets the XML declaration for this document.</p>\\n\"\n  syntax:\n    content: public XDeclaration Declaration { get; set; }\n    content.vb: Public Property Declaration As XDeclaration\n    parameters: []\n    return:\n      type: System.Xml.Linq.XDeclaration\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDeclaration\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML declaration for this document.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDeclaration\n    commentId: T:System.Xml.Linq.XDeclaration\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XDocument.Declaration\n- uid: System.Xml.Linq.XDocument.DocumentType\n  commentId: P:System.Xml.Linq.XDocument.DocumentType\n  id: DocumentType\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: DocumentType\n  fullName: System.Xml.Linq.XDocument.DocumentType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DocumentType\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 169\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the Document Type Definition (DTD) for this document.</p>\\n\"\n  syntax:\n    content: public XDocumentType DocumentType { get; }\n    content.vb: Public ReadOnly Property DocumentType As XDocumentType\n    parameters: []\n    return:\n      type: System.Xml.Linq.XDocumentType\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.XDocumentType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the DTD for this document.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocumentType\n    commentId: T:System.Xml.Linq.XDocumentType\n  - type: System.Xml.Linq.XDocument.NodeType\n    commentId: P:System.Xml.Linq.XDocument.NodeType\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XDocument.DocumentType\n- uid: System.Xml.Linq.XDocument.NodeType\n  commentId: P:System.Xml.Linq.XDocument.NodeType\n  id: NodeType\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Xml.Linq.XDocument.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 170\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the node type for this node.</p>\\n\"\n  syntax:\n    content: public override XmlNodeType NodeType { get; }\n    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeType\n      description: \"\\n<p>The node type. For <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects, this value is <xref href=\\\"System.Xml.XmlNodeType.Document\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Xml.Linq.XObject.NodeType\n  seealso:\n  - type: System.Xml.XmlNodeType\n    commentId: T:System.Xml.XmlNodeType\n  - type: System.Xml.Linq.XDocument.DocumentType\n    commentId: P:System.Xml.Linq.XDocument.DocumentType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XDocument.NodeType\n- uid: System.Xml.Linq.XDocument.Root\n  commentId: P:System.Xml.Linq.XDocument.Root\n  id: Root\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Root\n  fullName: System.Xml.Linq.XDocument.Root\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Root\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 171\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the root element of the XML Tree for this document.</p>\\n\"\n  syntax:\n    content: public XElement Root { get; }\n    content.vb: Public ReadOnly Property Root As XElement\n    parameters: []\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The root <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the XML tree.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XDocument.Root\n- uid: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  id: Load(System.IO.Stream)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Load(Stream)\n  fullName: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 172\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance by using the specified stream.</p>\\n\"\n  syntax:\n    content: public static XDocument Load(Stream stream)\n    content.vb: Public Shared Function Load(stream As Stream) As XDocument\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream that contains the XML data.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that reads the data that is contained in the stream. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Load(Stream)\n- uid: System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)\n  id: Load(System.IO.Stream,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Load(Stream, LoadOptions)\n  fullName: System.Xml.Linq.XDocument.Load(System.IO.Stream, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 173\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</p>\\n\"\n  syntax:\n    content: public static XDocument Load(Stream stream, LoadOptions options)\n    content.vb: Public Shared Function Load(stream As Stream, options As LoadOptions) As XDocument\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream containing the XML data.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that reads the data that is contained in the stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Load(Stream, LoadOptions)\n- uid: System.Xml.Linq.XDocument.Load(System.IO.TextReader)\n  commentId: M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)\n  id: Load(System.IO.TextReader)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Load(TextReader)\n  fullName: System.Xml.Linq.XDocument.Load(System.IO.TextReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 174\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public static XDocument Load(TextReader textReader)\n    content.vb: Public Shared Function Load(textReader As TextReader) As XDocument\n    parameters:\n    - id: textReader\n      type: System.IO.TextReader\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content for the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the contents of the specified <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  - type: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Load(TextReader)\n- uid: System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)\n  id: Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Load(TextReader, LoadOptions)\n  fullName: System.Xml.Linq.XDocument.Load(System.IO.TextReader, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 175\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally preserving white space, setting the base URI, and retaining line information.</p>\\n\"\n  syntax:\n    content: public static XDocument Load(TextReader textReader, LoadOptions options)\n    content.vb: Public Shared Function Load(textReader As TextReader, options As LoadOptions) As XDocument\n    parameters:\n    - id: textReader\n      type: System.IO.TextReader\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content for the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML that was read from the specified <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  - type: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Load(TextReader, LoadOptions)\n- uid: System.Xml.Linq.XDocument.Load(System.String)\n  commentId: M:System.Xml.Linq.XDocument.Load(System.String)\n  id: Load(System.String)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Load(String)\n  fullName: System.Xml.Linq.XDocument.Load(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 176\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a file. </p>\\n\"\n  syntax:\n    content: public static XDocument Load(string uri)\n    content.vb: Public Shared Function Load(uri As String) As XDocument\n    parameters:\n    - id: uri\n      type: System.String\n      description: \"\\n<p>A URI string that references the file to load into a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the contents of the specified file.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  - type: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Load(String)\n- uid: System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)\n  id: Load(System.String,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Load(String, LoadOptions)\n  fullName: System.Xml.Linq.XDocument.Load(System.String, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 177\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a file, optionally preserving white space, setting the base URI, and retaining line information.</p>\\n\"\n  syntax:\n    content: public static XDocument Load(string uri, LoadOptions options)\n    content.vb: Public Shared Function Load(uri As String, options As LoadOptions) As XDocument\n    parameters:\n    - id: uri\n      type: System.String\n      description: \"\\n<p>A URI string that references the file to load into a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the contents of the specified file.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  - type: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Load(String, LoadOptions)\n- uid: System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)\n  commentId: M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)\n  id: Load(System.Xml.XmlReader)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Load(XmlReader)\n  fullName: System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 178\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public static XDocument Load(XmlReader reader)\n    content.vb: Public Shared Function Load(reader As XmlReader) As XDocument\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>A <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content for the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the contents of the specified <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  - type: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Load(XmlReader)\n- uid: System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)\n  id: Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Load(XmlReader, LoadOptions)\n  fullName: System.Xml.Linq.XDocument.Load(System.Xml.XmlReader, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 179\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Loads an <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally setting the base URI, and retaining line information.</p>\\n\"\n  syntax:\n    content: public static XDocument Load(XmlReader reader, LoadOptions options)\n    content.vb: Public Shared Function Load(reader As XmlReader, options As LoadOptions) As XDocument\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>A <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that will be read for the content of the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML that was read from the specified <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  - type: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Load(XmlReader, LoadOptions)\n- uid: System.Xml.Linq.XDocument.Parse(System.String)\n  commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Xml.Linq.XDocument.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 180\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a string.</p>\\n\"\n  syntax:\n    content: public static XDocument Parse(string text)\n    content.vb: Public Shared Function Parse(text As String) As XDocument\n    parameters:\n    - id: text\n      type: System.String\n      description: \"\\n<p>A string that contains XML.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> populated from the string that contains XML.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Parse(String)\n- uid: System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)\n  id: Parse(System.String,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, LoadOptions)\n  fullName: System.Xml.Linq.XDocument.Parse(System.String, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 181\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a string, optionally preserving white space, setting the base URI, and retaining line information.</p>\\n\"\n  syntax:\n    content: public static XDocument Parse(string text, LoadOptions options)\n    content.vb: Public Shared Function Parse(text As String, options As LoadOptions) As XDocument\n    parameters:\n    - id: text\n      type: System.String\n      description: \"\\n<p>A string that contains XML.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> populated from the string that contains XML.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XDocument.Parse(String, LoadOptions)\n- uid: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  id: Save(System.IO.Stream)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Save(Stream)\n  fullName: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 182\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Outputs this <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Save(Stream stream)\n    content.vb: Public Sub Save(stream As Stream)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to output this <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XDocument.Save(Stream)\n- uid: System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  id: Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Save(Stream, SaveOptions)\n  fullName: System.Xml.Linq.XDocument.Save(System.IO.Stream, System.Xml.Linq.SaveOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 183\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Outputs this <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally specifying formatting behavior.</p>\\n\"\n  syntax:\n    content: public void Save(Stream stream, SaveOptions options)\n    content.vb: Public Sub Save(stream As Stream, options As SaveOptions)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to output this <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.SaveOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.SaveOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies formatting behavior.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XDocument.Save(Stream, SaveOptions)\n- uid: System.Xml.Linq.XDocument.Save(System.IO.TextWriter)\n  commentId: M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)\n  id: Save(System.IO.TextWriter)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Save(TextWriter)\n  fullName: System.Xml.Linq.XDocument.Save(System.IO.TextWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 184\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Serialize this <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Save(TextWriter textWriter)\n    content.vb: Public Sub Save(textWriter As TextWriter)\n    parameters:\n    - id: textWriter\n      type: System.IO.TextWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be written to.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XDocument.Save(TextWriter)\n- uid: System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  commentId: M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  id: Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Save(TextWriter, SaveOptions)\n  fullName: System.Xml.Linq.XDocument.Save(System.IO.TextWriter, System.Xml.Linq.SaveOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 185\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Serialize this <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally disabling formatting.</p>\\n\"\n  syntax:\n    content: public void Save(TextWriter textWriter, SaveOptions options)\n    content.vb: Public Sub Save(textWriter As TextWriter, options As SaveOptions)\n    parameters:\n    - id: textWriter\n      type: System.IO.TextWriter\n      description: \"\\n<p>The <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to output the XML to.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.SaveOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.SaveOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies formatting behavior.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XDocument.Save(TextWriter, SaveOptions)\n- uid: System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)\n  commentId: M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)\n  id: Save(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: Save(XmlWriter)\n  fullName: System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 186\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Serialize this <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Save(XmlWriter writer)\n    content.vb: Public Sub Save(writer As XmlWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>A <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be written to.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  - type: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n    commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XDocument.Save(XmlWriter)\n- uid: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XDocument\n  langs:\n  - csharp\n  - vb\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTo\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 187\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Write this document to an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteTo(XmlWriter writer)\n    content.vb: Public Overrides Sub WriteTo(writer As XmlWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into which this method will write.</p>\\n\"\n  overridden: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  seealso:\n  - type: System.Xml.Linq.XDocument.Save(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Save(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  - type: System.Xml.Linq.XDocument.Parse(System.String)\n    commentId: M:System.Xml.Linq.XDocument.Parse(System.String)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XDocument.WriteTo(XmlWriter)\nreferences:\n- uid: System.Xml.Linq\n  isExternal: false\n  name: System.Xml.Linq\n  fullName: System.Xml.Linq\n  commentId: N:System.Xml.Linq\n  nameWithType: System.Xml.Linq\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.Linq.XObject\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XObject\n  fullName: System.Xml.Linq.XObject\n  commentId: T:System.Xml.Linq.XObject\n  nameWithType: XObject\n- uid: System.Xml.Linq.XNode\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XNode\n  fullName: System.Xml.Linq.XNode\n  commentId: T:System.Xml.Linq.XNode\n  nameWithType: XNode\n- uid: System.Xml.Linq.XContainer\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XContainer\n  fullName: System.Xml.Linq.XContainer\n  commentId: T:System.Xml.Linq.XContainer\n  nameWithType: XContainer\n- uid: System.Xml.Linq.XContainer.FirstNode\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: FirstNode\n  fullName: System.Xml.Linq.XContainer.FirstNode\n  commentId: P:System.Xml.Linq.XContainer.FirstNode\n  nameWithType: XContainer.FirstNode\n- uid: System.Xml.Linq.XContainer.LastNode\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: LastNode\n  fullName: System.Xml.Linq.XContainer.LastNode\n  commentId: P:System.Xml.Linq.XContainer.LastNode\n  nameWithType: XContainer.LastNode\n- uid: System.Xml.Linq.XContainer.Add(System.Object)\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: Add(Object)\n  fullName: System.Xml.Linq.XContainer.Add(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Add(System.Object)\n    name: Add\n    fullName: System.Xml.Linq.XContainer.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Add(System.Object)\n    name: Add\n    fullName: System.Xml.Linq.XContainer.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Add(System.Object)\n  nameWithType: XContainer.Add(Object)\n- uid: System.Xml.Linq.XContainer.Add(System.Object[])\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: Add(Object[])\n  fullName: System.Xml.Linq.XContainer.Add(System.Object[])\n  fullname.vb: System.Xml.Linq.XContainer.Add(System.Object())\n  name.vb: Add(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Add(System.Object[])\n    name: Add\n    fullName: System.Xml.Linq.XContainer.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Add(System.Object[])\n    name: Add\n    fullName: System.Xml.Linq.XContainer.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Add(System.Object[])\n  nameWithType: XContainer.Add(Object[])\n  nameWithType.vb: XContainer.Add(Object())\n- uid: System.Xml.Linq.XContainer.AddFirst(System.Object)\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: AddFirst(Object)\n  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object)\n    name: AddFirst\n    fullName: System.Xml.Linq.XContainer.AddFirst\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object)\n    name: AddFirst\n    fullName: System.Xml.Linq.XContainer.AddFirst\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object)\n  nameWithType: XContainer.AddFirst(Object)\n- uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: AddFirst(Object[])\n  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  fullname.vb: System.Xml.Linq.XContainer.AddFirst(System.Object())\n  name.vb: AddFirst(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n    name: AddFirst\n    fullName: System.Xml.Linq.XContainer.AddFirst\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n    name: AddFirst\n    fullName: System.Xml.Linq.XContainer.AddFirst\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  nameWithType: XContainer.AddFirst(Object[])\n  nameWithType.vb: XContainer.AddFirst(Object())\n- uid: System.Xml.Linq.XContainer.CreateWriter\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: CreateWriter()\n  fullName: System.Xml.Linq.XContainer.CreateWriter()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.CreateWriter\n    name: CreateWriter\n    fullName: System.Xml.Linq.XContainer.CreateWriter\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.CreateWriter\n    name: CreateWriter\n    fullName: System.Xml.Linq.XContainer.CreateWriter\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.CreateWriter\n  nameWithType: XContainer.CreateWriter()\n- uid: System.Xml.Linq.XContainer.DescendantNodes\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: DescendantNodes()\n  fullName: System.Xml.Linq.XContainer.DescendantNodes()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.DescendantNodes\n    name: DescendantNodes\n    fullName: System.Xml.Linq.XContainer.DescendantNodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.DescendantNodes\n    name: DescendantNodes\n    fullName: System.Xml.Linq.XContainer.DescendantNodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.DescendantNodes\n  nameWithType: XContainer.DescendantNodes()\n- uid: System.Xml.Linq.XContainer.Descendants\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Descendants()\n  fullName: System.Xml.Linq.XContainer.Descendants()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Descendants\n    name: Descendants\n    fullName: System.Xml.Linq.XContainer.Descendants\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Descendants\n    name: Descendants\n    fullName: System.Xml.Linq.XContainer.Descendants\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Descendants\n  nameWithType: XContainer.Descendants()\n- uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Descendants(XName)\n  fullName: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n    name: Descendants\n    fullName: System.Xml.Linq.XContainer.Descendants\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n    name: Descendants\n    fullName: System.Xml.Linq.XContainer.Descendants\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  nameWithType: XContainer.Descendants(XName)\n- uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Element(XName)\n  fullName: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n    name: Element\n    fullName: System.Xml.Linq.XContainer.Element\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n    name: Element\n    fullName: System.Xml.Linq.XContainer.Element\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  nameWithType: XContainer.Element(XName)\n- uid: System.Xml.Linq.XContainer.Elements\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Elements()\n  fullName: System.Xml.Linq.XContainer.Elements()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Elements\n    name: Elements\n    fullName: System.Xml.Linq.XContainer.Elements\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Elements\n    name: Elements\n    fullName: System.Xml.Linq.XContainer.Elements\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Elements\n  nameWithType: XContainer.Elements()\n- uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Elements(XName)\n  fullName: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n    name: Elements\n    fullName: System.Xml.Linq.XContainer.Elements\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n    name: Elements\n    fullName: System.Xml.Linq.XContainer.Elements\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  nameWithType: XContainer.Elements(XName)\n- uid: System.Xml.Linq.XContainer.Nodes\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Nodes()\n  fullName: System.Xml.Linq.XContainer.Nodes()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Nodes\n    name: Nodes\n    fullName: System.Xml.Linq.XContainer.Nodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Nodes\n    name: Nodes\n    fullName: System.Xml.Linq.XContainer.Nodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Nodes\n  nameWithType: XContainer.Nodes()\n- uid: System.Xml.Linq.XContainer.RemoveNodes\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: RemoveNodes()\n  fullName: System.Xml.Linq.XContainer.RemoveNodes()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.RemoveNodes\n    name: RemoveNodes\n    fullName: System.Xml.Linq.XContainer.RemoveNodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.RemoveNodes\n    name: RemoveNodes\n    fullName: System.Xml.Linq.XContainer.RemoveNodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  nameWithType: XContainer.RemoveNodes()\n- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: ReplaceNodes(Object)\n  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n    name: ReplaceNodes\n    fullName: System.Xml.Linq.XContainer.ReplaceNodes\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n    name: ReplaceNodes\n    fullName: System.Xml.Linq.XContainer.ReplaceNodes\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  nameWithType: XContainer.ReplaceNodes(Object)\n- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: ReplaceNodes(Object[])\n  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  fullname.vb: System.Xml.Linq.XContainer.ReplaceNodes(System.Object())\n  name.vb: ReplaceNodes(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n    name: ReplaceNodes\n    fullName: System.Xml.Linq.XContainer.ReplaceNodes\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n    name: ReplaceNodes\n    fullName: System.Xml.Linq.XContainer.ReplaceNodes\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  nameWithType: XContainer.ReplaceNodes(Object[])\n  nameWithType.vb: XContainer.ReplaceNodes(Object())\n- uid: System.Xml.Linq.XNode.DocumentOrderComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DocumentOrderComparer\n  fullName: System.Xml.Linq.XNode.DocumentOrderComparer\n  commentId: P:System.Xml.Linq.XNode.DocumentOrderComparer\n  nameWithType: XNode.DocumentOrderComparer\n- uid: System.Xml.Linq.XNode.EqualityComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: EqualityComparer\n  fullName: System.Xml.Linq.XNode.EqualityComparer\n  commentId: P:System.Xml.Linq.XNode.EqualityComparer\n  nameWithType: XNode.EqualityComparer\n- uid: System.Xml.Linq.XNode.NextNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NextNode\n  fullName: System.Xml.Linq.XNode.NextNode\n  commentId: P:System.Xml.Linq.XNode.NextNode\n  nameWithType: XNode.NextNode\n- uid: System.Xml.Linq.XNode.PreviousNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: PreviousNode\n  fullName: System.Xml.Linq.XNode.PreviousNode\n  commentId: P:System.Xml.Linq.XNode.PreviousNode\n  nameWithType: XNode.PreviousNode\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddAfterSelf(Object)\n  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  nameWithType: XNode.AddAfterSelf(Object)\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddAfterSelf(Object[])\n  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  fullname.vb: System.Xml.Linq.XNode.AddAfterSelf(System.Object())\n  name.vb: AddAfterSelf(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  nameWithType: XNode.AddAfterSelf(Object[])\n  nameWithType.vb: XNode.AddAfterSelf(Object())\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddBeforeSelf(Object)\n  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  nameWithType: XNode.AddBeforeSelf(Object)\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddBeforeSelf(Object[])\n  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  fullname.vb: System.Xml.Linq.XNode.AddBeforeSelf(System.Object())\n  name.vb: AddBeforeSelf(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  nameWithType: XNode.AddBeforeSelf(Object[])\n  nameWithType.vb: XNode.AddBeforeSelf(Object())\n- uid: System.Xml.Linq.XNode.Ancestors\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors()\n  fullName: System.Xml.Linq.XNode.Ancestors()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.Ancestors\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.Ancestors\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.Ancestors\n  nameWithType: XNode.Ancestors()\n- uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors(XName)\n  fullName: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  nameWithType: XNode.Ancestors(XName)\n- uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CompareDocumentOrder(XNode, XNode)\n  fullName: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode, System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: CompareDocumentOrder\n    fullName: System.Xml.Linq.XNode.CompareDocumentOrder\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: CompareDocumentOrder\n    fullName: System.Xml.Linq.XNode.CompareDocumentOrder\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  nameWithType: XNode.CompareDocumentOrder(XNode, XNode)\n- uid: System.Xml.Linq.XNode.CreateReader\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader()\n  fullName: System.Xml.Linq.XNode.CreateReader()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.CreateReader\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.CreateReader\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.CreateReader\n  nameWithType: XNode.CreateReader()\n- uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader(ReaderOptions)\n  fullName: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.ReaderOptions\n    name: ReaderOptions\n    fullName: System.Xml.Linq.ReaderOptions\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.ReaderOptions\n    name: ReaderOptions\n    fullName: System.Xml.Linq.ReaderOptions\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  nameWithType: XNode.CreateReader(ReaderOptions)\n- uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DeepEquals(XNode, XNode)\n  fullName: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode, System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: DeepEquals\n    fullName: System.Xml.Linq.XNode.DeepEquals\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: DeepEquals\n    fullName: System.Xml.Linq.XNode.DeepEquals\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  nameWithType: XNode.DeepEquals(XNode, XNode)\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf()\n  fullName: System.Xml.Linq.XNode.ElementsAfterSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsAfterSelf\n  nameWithType: XNode.ElementsAfterSelf()\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf(XName)\n  fullName: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  nameWithType: XNode.ElementsAfterSelf(XName)\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf()\n  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsBeforeSelf\n  nameWithType: XNode.ElementsBeforeSelf()\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf(XName)\n  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  nameWithType: XNode.ElementsBeforeSelf(XName)\n- uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsAfter(XNode)\n  fullName: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n    name: IsAfter\n    fullName: System.Xml.Linq.XNode.IsAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n    name: IsAfter\n    fullName: System.Xml.Linq.XNode.IsAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  nameWithType: XNode.IsAfter(XNode)\n- uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsBefore(XNode)\n  fullName: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n    name: IsBefore\n    fullName: System.Xml.Linq.XNode.IsBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n    name: IsBefore\n    fullName: System.Xml.Linq.XNode.IsBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  nameWithType: XNode.IsBefore(XNode)\n- uid: System.Xml.Linq.XNode.NodesAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesAfterSelf()\n  fullName: System.Xml.Linq.XNode.NodesAfterSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.NodesAfterSelf\n    name: NodesAfterSelf\n    fullName: System.Xml.Linq.XNode.NodesAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.NodesAfterSelf\n    name: NodesAfterSelf\n    fullName: System.Xml.Linq.XNode.NodesAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.NodesAfterSelf\n  nameWithType: XNode.NodesAfterSelf()\n- uid: System.Xml.Linq.XNode.NodesBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesBeforeSelf()\n  fullName: System.Xml.Linq.XNode.NodesBeforeSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.NodesBeforeSelf\n    name: NodesBeforeSelf\n    fullName: System.Xml.Linq.XNode.NodesBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.NodesBeforeSelf\n    name: NodesBeforeSelf\n    fullName: System.Xml.Linq.XNode.NodesBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.NodesBeforeSelf\n  nameWithType: XNode.NodesBeforeSelf()\n- uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: ReadFrom(XmlReader)\n  fullName: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n    name: ReadFrom\n    fullName: System.Xml.Linq.XNode.ReadFrom\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n    name: ReadFrom\n    fullName: System.Xml.Linq.XNode.ReadFrom\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  nameWithType: XNode.ReadFrom(XmlReader)\n- uid: System.Xml.Linq.XNode.Remove\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Remove()\n  fullName: System.Xml.Linq.XNode.Remove()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.Remove\n    name: Remove\n    fullName: System.Xml.Linq.XNode.Remove\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.Remove\n    name: Remove\n    fullName: System.Xml.Linq.XNode.Remove\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.Remove\n  nameWithType: XNode.Remove()\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: ReplaceWith(Object)\n  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  nameWithType: XNode.ReplaceWith(Object)\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: ReplaceWith(Object[])\n  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  fullname.vb: System.Xml.Linq.XNode.ReplaceWith(System.Object())\n  name.vb: ReplaceWith(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  nameWithType: XNode.ReplaceWith(Object[])\n  nameWithType.vb: XNode.ReplaceWith(Object())\n- uid: System.Xml.Linq.XNode.ToString\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString()\n  fullName: System.Xml.Linq.XNode.ToString()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ToString\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ToString\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ToString\n  nameWithType: XNode.ToString()\n- uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString(SaveOptions)\n  fullName: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.SaveOptions\n    name: SaveOptions\n    fullName: System.Xml.Linq.SaveOptions\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.SaveOptions\n    name: SaveOptions\n    fullName: System.Xml.Linq.SaveOptions\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  nameWithType: XNode.ToString(SaveOptions)\n- uid: System.Xml.Linq.XObject.BaseUri\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: BaseUri\n  fullName: System.Xml.Linq.XObject.BaseUri\n  commentId: P:System.Xml.Linq.XObject.BaseUri\n  nameWithType: XObject.BaseUri\n- uid: System.Xml.Linq.XObject.Document\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Document\n  fullName: System.Xml.Linq.XObject.Document\n  commentId: P:System.Xml.Linq.XObject.Document\n  nameWithType: XObject.Document\n- uid: System.Xml.Linq.XObject.Parent\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Parent\n  fullName: System.Xml.Linq.XObject.Parent\n  commentId: P:System.Xml.Linq.XObject.Parent\n  nameWithType: XObject.Parent\n- uid: System.Xml.Linq.XObject.Changed\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changed\n  fullName: System.Xml.Linq.XObject.Changed\n  commentId: E:System.Xml.Linq.XObject.Changed\n  nameWithType: XObject.Changed\n- uid: System.Xml.Linq.XObject.Changing\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changing\n  fullName: System.Xml.Linq.XObject.Changing\n  commentId: E:System.Xml.Linq.XObject.Changing\n  nameWithType: XObject.Changing\n- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: AddAnnotation(Object)\n  fullName: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n    name: AddAnnotation\n    fullName: System.Xml.Linq.XObject.AddAnnotation\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n    name: AddAnnotation\n    fullName: System.Xml.Linq.XObject.AddAnnotation\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  nameWithType: XObject.AddAnnotation(Object)\n- uid: System.Xml.Linq.XObject.Annotation(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: Annotation(Type)\n  fullName: System.Xml.Linq.XObject.Annotation(System.Type)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotation(System.Type)\n    name: Annotation\n    fullName: System.Xml.Linq.XObject.Annotation\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotation(System.Type)\n    name: Annotation\n    fullName: System.Xml.Linq.XObject.Annotation\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotation(System.Type)\n  nameWithType: XObject.Annotation(Type)\n- uid: System.Xml.Linq.XObject.Annotation``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotation<T>()\n  fullName: System.Xml.Linq.XObject.Annotation<T>()\n  fullname.vb: System.Xml.Linq.XObject.Annotation(Of T)()\n  name.vb: Annotation(Of T)()\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotation``1\n    name: Annotation<T>\n    fullName: System.Xml.Linq.XObject.Annotation<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotation``1\n    name: Annotation(Of T)\n    fullName: System.Xml.Linq.XObject.Annotation(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotation``1\n  nameWithType: XObject.Annotation<T>()\n  nameWithType.vb: XObject.Annotation(Of T)()\n- uid: System.Xml.Linq.XObject.Annotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: Annotations(Type)\n  fullName: System.Xml.Linq.XObject.Annotations(System.Type)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotations(System.Type)\n    name: Annotations\n    fullName: System.Xml.Linq.XObject.Annotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotations(System.Type)\n    name: Annotations\n    fullName: System.Xml.Linq.XObject.Annotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotations(System.Type)\n  nameWithType: XObject.Annotations(Type)\n- uid: System.Xml.Linq.XObject.Annotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotations<T>()\n  fullName: System.Xml.Linq.XObject.Annotations<T>()\n  fullname.vb: System.Xml.Linq.XObject.Annotations(Of T)()\n  name.vb: Annotations(Of T)()\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotations``1\n    name: Annotations<T>\n    fullName: System.Xml.Linq.XObject.Annotations<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotations``1\n    name: Annotations(Of T)\n    fullName: System.Xml.Linq.XObject.Annotations(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotations``1\n  nameWithType: XObject.Annotations<T>()\n  nameWithType.vb: XObject.Annotations(Of T)()\n- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: RemoveAnnotations(Type)\n  fullName: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n    name: RemoveAnnotations\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n    name: RemoveAnnotations\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  nameWithType: XObject.RemoveAnnotations(Type)\n- uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: RemoveAnnotations<T>()\n  fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>()\n  fullname.vb: System.Xml.Linq.XObject.RemoveAnnotations(Of T)()\n  name.vb: RemoveAnnotations(Of T)()\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n    name: RemoveAnnotations<T>\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n    name: RemoveAnnotations(Of T)\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations``1\n  nameWithType: XObject.RemoveAnnotations<T>()\n  nameWithType.vb: XObject.RemoveAnnotations(Of T)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Xml.Linq.XDeclaration\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XDeclaration\n  fullName: System.Xml.Linq.XDeclaration\n  commentId: T:System.Xml.Linq.XDeclaration\n  nameWithType: XDeclaration\n- uid: System.Xml.Linq.XDocument\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XDocument\n  fullName: System.Xml.Linq.XDocument\n  commentId: T:System.Xml.Linq.XDocument\n  nameWithType: XDocument\n- uid: System.Xml.Linq.XDocumentType\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XDocumentType\n  fullName: System.Xml.Linq.XDocumentType\n  commentId: T:System.Xml.Linq.XDocumentType\n  nameWithType: XDocumentType\n- uid: System.Xml.Linq.XObject.NodeType\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: NodeType\n  fullName: System.Xml.Linq.XObject.NodeType\n  commentId: P:System.Xml.Linq.XObject.NodeType\n  nameWithType: XObject.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n  commentId: T:System.Xml.XmlNodeType\n  nameWithType: XmlNodeType\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Xml.Linq.XElement\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XElement\n  fullName: System.Xml.Linq.XElement\n  commentId: T:System.Xml.Linq.XElement\n  nameWithType: XElement\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Xml.Linq.LoadOptions\n  parent: System.Xml.Linq\n  isExternal: false\n  name: LoadOptions\n  fullName: System.Xml.Linq.LoadOptions\n  commentId: T:System.Xml.Linq.LoadOptions\n  nameWithType: LoadOptions\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: false\n  name: TextReader\n  fullName: System.IO.TextReader\n  commentId: T:System.IO.TextReader\n  nameWithType: TextReader\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  fullName: System.Xml.XmlReader\n  commentId: T:System.Xml.XmlReader\n  nameWithType: XmlReader\n- uid: System.Xml.Linq.SaveOptions\n  parent: System.Xml.Linq\n  isExternal: false\n  name: SaveOptions\n  fullName: System.Xml.Linq.SaveOptions\n  commentId: T:System.Xml.Linq.SaveOptions\n  nameWithType: SaveOptions\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  fullName: System.IO.TextWriter\n  commentId: T:System.IO.TextWriter\n  nameWithType: TextWriter\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.Linq.XNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.Linq.XNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  nameWithType: XNode.WriteTo(XmlWriter)\n"}