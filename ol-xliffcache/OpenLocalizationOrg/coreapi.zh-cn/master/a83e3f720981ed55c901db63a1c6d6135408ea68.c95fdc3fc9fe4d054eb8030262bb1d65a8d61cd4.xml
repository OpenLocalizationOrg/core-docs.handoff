{"nodes":[{"pos":[2380,2402],"content":"XmlArrayItemAttributes","needQuote":true,"nodes":[{"content":"XmlArrayItemAttributes","pos":[0,22]}]},{"pos":[4564,4588],"content":"XmlArrayItemAttributes()","needQuote":true,"nodes":[{"content":"XmlArrayItemAttributes()","pos":[0,24]}]},{"pos":[5699,5710],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The zero-based index of the collection member to get or set.","pos":[6466,6531],"source":"\\n<p>The zero-based index of the collection member to get or set."},{"content":"&lt;/p&gt;\\n","pos":[6532,6538],"source":" </p>\\n"},{"pos":[7435,7461],"content":"Add(XmlArrayItemAttribute)","needQuote":true,"nodes":[{"content":"Add(XmlArrayItemAttribute)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The index of the added item.&lt;/p&gt;\\n","pos":[8570,8609],"source":"\\n<p>The index of the added item.</p>\\n"},{"pos":[9123,9154],"content":"Contains(XmlArrayItemAttribute)","needQuote":true,"nodes":[{"content":"Contains(XmlArrayItemAttribute)","pos":[0,31]}]},{"pos":[11081,11119],"content":"CopyTo(XmlArrayItemAttribute[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(XmlArrayItemAttribute[], Int32)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The index at which the copied attributes begin.&lt;/p&gt;\\n","pos":[12332,12390],"source":"\\n<p>The index at which the copied attributes begin.</p>\\n"},{"pos":[13178,13208],"content":"IndexOf(XmlArrayItemAttribute)","needQuote":true,"nodes":[{"content":"IndexOf(XmlArrayItemAttribute)","pos":[0,30]}]},{"pos":[15216,15252],"content":"Insert(Int32, XmlArrayItemAttribute)","needQuote":true,"nodes":[{"content":"Insert(Int32, XmlArrayItemAttribute)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The index at which the attribute is inserted.&lt;/p&gt;\\n","pos":[16185,16241],"source":"\\n<p>The index at which the attribute is inserted.</p>\\n"},{"pos":[16993,17022],"content":"Remove(XmlArrayItemAttribute)","needQuote":true,"nodes":[{"content":"Remove(XmlArrayItemAttribute)","pos":[0,29]}]},{"pos":[18441,18446],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[19604,19630],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"pos":[21101,21121],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"pos":[22529,22546],"content":"IList.IsFixedSize","needQuote":true,"nodes":[{"content":"IList.IsFixedSize","pos":[0,17]}]},{"pos":[23924,23940],"content":"IList.IsReadOnly","needQuote":true,"nodes":[{"content":"IList.IsReadOnly","pos":[0,16]}]},{"pos":[25333,25350],"content":"IList.Item[Int32]","needQuote":true,"nodes":[{"content":"IList.Item[Int32]","pos":[0,17]}]},{"pos":[26770,26777],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[27713,27728],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[28827,28842],"content":"RemoveAt(Int32)","needQuote":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[30078,30110],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"pos":[31613,31630],"content":"IList.Add(Object)","needQuote":true,"nodes":[{"content":"IList.Add(Object)","pos":[0,17]}]},{"pos":[33009,33031],"content":"IList.Contains(Object)","needQuote":true,"nodes":[{"content":"IList.Contains(Object)","pos":[0,22]}]},{"pos":[34455,34476],"content":"IList.IndexOf(Object)","needQuote":true,"nodes":[{"content":"IList.IndexOf(Object)","pos":[0,21]}]},{"pos":[35924,35951],"content":"IList.Insert(Int32, Object)","needQuote":true,"nodes":[{"content":"IList.Insert(Int32, Object)","pos":[0,27]}]},{"pos":[37417,37437],"content":"IList.Remove(Object)","needQuote":true,"nodes":[{"content":"IList.Remove(Object)","pos":[0,20]}]},{"pos":[38485,38509],"content":"System.Xml.Serialization","needQuote":true,"nodes":[{"content":"System.Xml.Serialization","pos":[0,24]}]},{"pos":[38694,38700],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38868,38873],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[39068,39079],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[39292,39303],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[39502,39512],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[39607,39615],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[39684,39685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39712,39713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39783,39791],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[39860,39861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39888,39889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40072,40086],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[40205,40211],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40278,40279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40329,40335],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40395,40396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40479,40485],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40552,40553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40603,40609],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40669,40670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40884,40906],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[41054,41060],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41127,41128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41178,41184],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41245,41246]},{"pos":[41301,41307],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41367,41368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41465,41471],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41538,41539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41589,41595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41656,41657]},{"pos":[41712,41718],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41778,41779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42024,42055],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[42221,42236],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[42312,42313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42363,42369],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42430,42431]},{"pos":[42486,42492],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42552,42553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42659,42674],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[42750,42751],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42801,42807],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42868,42869]},{"pos":[42924,42930],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42990,42991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43221,43234],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[43335,43346],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43418,43419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43446,43447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43520,43531],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43603,43604],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43631,43632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43807,43816],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[43909,43916],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[43984,43985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44012,44013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44082,44089],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[44157,44158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44185,44186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44361,44378],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[44487,44502],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[44578,44579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44606,44607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44684,44699],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[44775,44776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44803,44804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45099,45112],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[45229,45240],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[45299,45300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45327,45328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45409,45420],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[45479,45480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45507,45508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45863,45875],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[46008,46018],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[46085,46086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46113,46114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46203,46213],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[46280,46281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46308,46309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46650,46665],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[46869,46882],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[46944,46945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46972,46973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47051,47067],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[47132,47133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47160,47161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47539,47556],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[47768,47783],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[47847,47848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47875,47876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47956,47974],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[48041,48042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48069,48070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48305,48311],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[48430,48448],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[48649,48673],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[48852,48863],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[48922,48923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48990,49001],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[49078,49079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49192,49203],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[49262,49263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49330,49341],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[49418,49419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49647,49656],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[49862,49885],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[50080,50090],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[50157,50158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50225,50236],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[50313,50314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50435,50445],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[50512,50513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50580,50591],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[50668,50669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50922,50940],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[51162,51188],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[51495,51508],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[51570,51571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51638,51649],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[51726,51727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51837,51853],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[51918,51919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51986,51997],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[52074,52075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52364,52374],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[52574,52602],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[52917,52932],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[52996,52997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53064,53075],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[53152,53153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53265,53283],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[53350,53351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53418,53429],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[53506,53507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53769,53780],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[53925,53930],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54123,54144],"content":"XmlArrayItemAttribute","needQuote":true,"nodes":[{"content":"XmlArrayItemAttribute","pos":[0,21]}]},{"pos":[54371,54378],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54524,54547],"content":"XmlArrayItemAttribute[]","needQuote":true,"nodes":[{"content":"XmlArrayItemAttribute[]","pos":[0,23]}]},{"pos":[54789,54810],"content":"XmlArrayItemAttribute","needQuote":true,"nodes":[{"content":"XmlArrayItemAttribute","pos":[0,21]}]},{"content":"[]","pos":[54883,54885]},{"pos":[54983,55004],"content":"XmlArrayItemAttribute","needQuote":true,"nodes":[{"content":"XmlArrayItemAttribute","pos":[0,21]}]},{"pos":[55076,55078],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[55292,55297],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[55555,55569],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[55848,55856],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[56108,56119],"content":"IsFixedSize","needQuote":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[56361,56371],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[56617,56628],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"pos":[56845,56849],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[56905,56906]},{"pos":[56958,56963],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":"]","pos":[57023,57024]},{"pos":[57118,57122],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[57177,57178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57227,57232],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57291,57292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57540,57547],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[57658,57663],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[57719,57720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57747,57748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57826,57831],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[57887,57888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57915,57916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58130,58145],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[58284,58297],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[58367,58368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58395,58396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58488,58501],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[58571,58572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58599,58600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58816,58827],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[59062,59077],"content":"RemoveAt(Int32)","needQuote":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[59220,59228],"content":"RemoveAt","needQuote":true,"nodes":[{"content":"RemoveAt","pos":[0,8]}]},{"pos":[59287,59288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59337,59342],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59401,59402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59497,59505],"content":"RemoveAt","needQuote":true,"nodes":[{"content":"RemoveAt","pos":[0,8]}]},{"pos":[59564,59565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59614,59619],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59678,59679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59937,59957],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[60135,60141],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[60204,60205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60254,60259],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[60298,60299]},{"pos":[60353,60358],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60417,60418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60530,60536],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[60599,60600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60649,60654],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[60693,60694]},{"pos":[60748,60753],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60812,60813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61024,61029],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[61218,61229],"content":"Add(Object)","needQuote":true,"nodes":[{"content":"Add(Object)","pos":[0,11]}]},{"pos":[61364,61367],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[61421,61422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61472,61478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61538,61539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61630,61633],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[61687,61688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61738,61744],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61804,61805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62033,62049],"content":"Contains(Object)","needQuote":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[62194,62202],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[62261,62262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62312,62318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62378,62379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62475,62483],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[62542,62543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62593,62599],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62659,62660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62897,62912],"content":"IndexOf(Object)","needQuote":true,"nodes":[{"content":"IndexOf(Object)","pos":[0,15]}]},{"pos":[63055,63062],"content":"IndexOf","needQuote":true,"nodes":[{"content":"IndexOf","pos":[0,7]}]},{"pos":[63120,63121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63171,63177],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63237,63238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63333,63340],"content":"IndexOf","needQuote":true,"nodes":[{"content":"IndexOf","pos":[0,7]}]},{"pos":[63398,63399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63449,63455],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63515,63516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63763,63784],"content":"Insert(Int32, Object)","needQuote":true,"nodes":[{"content":"Insert(Int32, Object)","pos":[0,21]}]},{"pos":[63952,63958],"content":"Insert","needQuote":true,"nodes":[{"content":"Insert","pos":[0,6]}]},{"pos":[64015,64016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64065,64070],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[64130,64131]},{"pos":[64186,64192],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64252,64253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64360,64366],"content":"Insert","needQuote":true,"nodes":[{"content":"Insert","pos":[0,6]}]},{"pos":[64423,64424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64473,64478],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[64538,64539]},{"pos":[64594,64600],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64660,64661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64913,64927],"content":"Remove(Object)","needQuote":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"pos":[65068,65074],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[65131,65132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65182,65188],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65248,65249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65343,65349],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[65406,65407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65457,65463],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65523,65524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Xml.Serialization.XmlArrayItemAttributes\n  commentId: T:System.Xml.Serialization.XmlArrayItemAttributes\n  id: XmlArrayItemAttributes\n  parent: System.Xml.Serialization\n  children:\n  - System.Xml.Serialization.XmlArrayItemAttributes.#ctor\n  - System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)\n  - System.Xml.Serialization.XmlArrayItemAttributes.Clear\n  - System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)\n  - System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)\n  - System.Xml.Serialization.XmlArrayItemAttributes.Count\n  - System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator\n  - System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)\n  - System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)\n  - System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)\n  - System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)\n  - System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)\n  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  - vb\n  name: XmlArrayItemAttributes\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlArrayItemAttributes\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 31\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Represents a collection of <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: 'public class XmlArrayItemAttributes : IList, ICollection, IEnumerable'\n    content.vb: >-\n      Public Class XmlArrayItemAttributes\n          Implements IList, ICollection, IEnumerable\n  seealso:\n  - type: System.Xml.Serialization.XmlSerializer\n    commentId: T:System.Xml.Serialization.XmlSerializer\n  - type: System.Xml.Serialization.XmlAttributeOverrides\n    commentId: T:System.Xml.Serialization.XmlAttributeOverrides\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlArrayItemAttributes\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.#ctor\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor\n  id: '#ctor'\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: XmlArrayItemAttributes()\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.XmlArrayItemAttributes()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 64\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public XmlArrayItemAttributes()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlArrayItemAttributes.XmlArrayItemAttributes()\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)\n  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 65\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Gets or sets the item at the specified index.</p>\\n\"\n  syntax:\n    content: public XmlArrayItemAttribute this[int index] { get; set; }\n    content.vb: Public Property Item(index As Integer) As XmlArrayItemAttribute\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the collection member to get or set. </p>\\n\"\n    return:\n      type: System.Xml.Serialization.XmlArrayItemAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified index.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: XmlArrayItemAttributes.Item[Int32]\n  nameWithType.vb: XmlArrayItemAttributes.Item(Int32)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)\n  id: Add(System.Xml.Serialization.XmlArrayItemAttribute)\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: Add(XmlArrayItemAttribute)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 66\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Adds an <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the collection.</p>\\n\"\n  syntax:\n    content: public int Add(XmlArrayItemAttribute attribute)\n    content.vb: Public Function Add(attribute As XmlArrayItemAttribute) As Integer\n    parameters:\n    - id: attribute\n      type: System.Xml.Serialization.XmlArrayItemAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add to the collection. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The index of the added item.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlArrayItemAttributes.Add(XmlArrayItemAttribute)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)\n  id: Contains(System.Xml.Serialization.XmlArrayItemAttribute)\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: Contains(XmlArrayItemAttribute)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 67\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Determines whether the collection contains the specified <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public bool Contains(XmlArrayItemAttribute attribute)\n    content.vb: Public Function Contains(attribute As XmlArrayItemAttribute) As Boolean\n    parameters:\n    - id: attribute\n      type: System.Xml.Serialization.XmlArrayItemAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to check for.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the collection contains the specified <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlArrayItemAttributes.Contains(XmlArrayItemAttribute)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)\n  id: CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(XmlArrayItemAttribute[], Int32)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 68\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Copies an <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array to the collection, starting at a specified target index. </p>\\n\"\n  syntax:\n    content: public void CopyTo(XmlArrayItemAttribute[] array, int index)\n    content.vb: Public Sub CopyTo(array As XmlArrayItemAttribute(), index As Integer)\n    parameters:\n    - id: array\n      type: System.Xml.Serialization.XmlArrayItemAttribute[]\n      description: \"\\n<p>The array of <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects to copy to the collection.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The index at which the copied attributes begin.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute(), System.Int32)\n  name.vb: CopyTo(XmlArrayItemAttribute(), Int32)\n  nameWithType: XmlArrayItemAttributes.CopyTo(XmlArrayItemAttribute[], Int32)\n  nameWithType.vb: XmlArrayItemAttributes.CopyTo(XmlArrayItemAttribute(), Int32)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)\n  id: IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: IndexOf(XmlArrayItemAttribute)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IndexOf\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 69\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Returns the zero-based index of the first occurrence of the specified <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the collection or -1 if the attribute is not found in the collection. </p>\\n\"\n  syntax:\n    content: public int IndexOf(XmlArrayItemAttribute attribute)\n    content.vb: Public Function IndexOf(attribute As XmlArrayItemAttribute) As Integer\n    parameters:\n    - id: attribute\n      type: System.Xml.Serialization.XmlArrayItemAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to locate in the collection.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The first index of the <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the collection or -1 if the attribute is not found in the collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlArrayItemAttributes.IndexOf(XmlArrayItemAttribute)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)\n  id: Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: Insert(Int32, XmlArrayItemAttribute)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32, System.Xml.Serialization.XmlArrayItemAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Insert\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 70\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Inserts an <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the collection at the specified index. </p>\\n\"\n  syntax:\n    content: public void Insert(int index, XmlArrayItemAttribute attribute)\n    content.vb: Public Sub Insert(index As Integer, attribute As XmlArrayItemAttribute)\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The index at which the attribute is inserted.</p>\\n\"\n    - id: attribute\n      type: System.Xml.Serialization.XmlArrayItemAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  to insert.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlArrayItemAttributes.Insert(Int32, XmlArrayItemAttribute)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)\n  id: Remove(System.Xml.Serialization.XmlArrayItemAttribute)\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: Remove(XmlArrayItemAttribute)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 71\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Removes an <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from the collection, if it is present. </p>\\n\"\n  syntax:\n    content: public void Remove(XmlArrayItemAttribute attribute)\n    content.vb: Public Sub Remove(attribute As XmlArrayItemAttribute)\n    parameters:\n    - id: attribute\n      type: System.Xml.Serialization.XmlArrayItemAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlArrayItemAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlArrayItemAttributes.Remove(XmlArrayItemAttribute)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.Count\n  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.Count\n  id: Count\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 33\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n  implements:\n  - System.Collections.ICollection.Count\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XmlArrayItemAttributes.Count\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: ICollection.IsSynchronized\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.ICollection.IsSynchronized\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.IsSynchronized\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 34\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: bool ICollection.IsSynchronized { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.ICollection.IsSynchronized\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.IsSynchronized\n  nameWithType: XmlArrayItemAttributes.ICollection.IsSynchronized\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.ICollection.IsSynchronized\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: ICollection.SyncRoot\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.ICollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.SyncRoot\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 35\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: object ICollection.SyncRoot { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot\n    parameters: []\n    return:\n      type: System.Object\n  implements:\n  - System.Collections.ICollection.SyncRoot\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.SyncRoot\n  nameWithType: XmlArrayItemAttributes.ICollection.SyncRoot\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.ICollection.SyncRoot\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize\n  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.IsFixedSize\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.IsFixedSize\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.IsFixedSize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 36\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: bool IList.IsFixedSize { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.IList.IsFixedSize\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.IList.IsFixedSize\n  nameWithType: XmlArrayItemAttributes.IList.IsFixedSize\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.IList.IsFixedSize\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly\n  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.IsReadOnly\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.IsReadOnly\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 37\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: bool IList.IsReadOnly { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.IList.IsReadOnly\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.IList.IsReadOnly\n  nameWithType: XmlArrayItemAttributes.IList.IsReadOnly\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.IList.IsReadOnly\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Item[Int32]\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.this[]\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 38\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: object IList.this[int index] { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this\n    parameters:\n    - id: index\n      type: System.Int32\n    return:\n      type: System.Object\n  implements:\n  - System.Collections.IList.Item(System.Int32)\n  modifiers.csharp:\n  - get\n  - set\n  fullName.vb: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Item(System.Int32)\n  name.vb: System.Collections.IList.Item(Int32)\n  nameWithType: XmlArrayItemAttributes.IList.Item[Int32]\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.IList.Item(Int32)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.Clear\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Clear\n  id: Clear\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 39\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: public void Clear()\n    content.vb: Public Sub Clear\n  implements:\n  - System.Collections.IList.Clear\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlArrayItemAttributes.Clear()\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator\n  id: GetEnumerator\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 40\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: public IEnumerator GetEnumerator()\n    content.vb: Public Function GetEnumerator As IEnumerator\n    return:\n      type: System.Collections.IEnumerator\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlArrayItemAttributes.GetEnumerator()\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: RemoveAt(Int32)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAt\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 41\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: public void RemoveAt(int index)\n    content.vb: Public Sub RemoveAt(index As Integer)\n    parameters:\n    - id: index\n      type: System.Int32\n  implements:\n  - System.Collections.IList.RemoveAt(System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlArrayItemAttributes.RemoveAt(Int32)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.CopyTo\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 42\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: void ICollection.CopyTo(Array array, int index)\n    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo\n    parameters:\n    - id: array\n      type: System.Array\n    - id: index\n      type: System.Int32\n  implements:\n  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  nameWithType: XmlArrayItemAttributes.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.ICollection.CopyTo(Array, Int32)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Add(Object)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Add(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.Add\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 43\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: int IList.Add(object value)\n    content.vb: Function System.Collections.IList.Add(value As Object) As Integer Implements IList.Add\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Int32\n  implements:\n  - System.Collections.IList.Add(System.Object)\n  name.vb: System.Collections.IList.Add(Object)\n  nameWithType: XmlArrayItemAttributes.IList.Add(Object)\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.IList.Add(Object)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Contains(Object)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Contains(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.Contains\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 44\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: bool IList.Contains(object value)\n    content.vb: Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.IList.Contains(System.Object)\n  name.vb: System.Collections.IList.Contains(Object)\n  nameWithType: XmlArrayItemAttributes.IList.Contains(Object)\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.IList.Contains(Object)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.IndexOf(Object)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.IndexOf(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.IndexOf\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 45\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: int IList.IndexOf(object value)\n    content.vb: Function System.Collections.IList.IndexOf(value As Object) As Integer Implements IList.IndexOf\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Int32\n  implements:\n  - System.Collections.IList.IndexOf(System.Object)\n  name.vb: System.Collections.IList.IndexOf(Object)\n  nameWithType: XmlArrayItemAttributes.IList.IndexOf(Object)\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.IList.IndexOf(Object)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Insert(Int32, Object)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Insert(System.Int32, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.Insert\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 46\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: void IList.Insert(int index, object value)\n    content.vb: Sub System.Collections.IList.Insert(index As Integer, value As Object) Implements IList.Insert\n    parameters:\n    - id: index\n      type: System.Int32\n    - id: value\n      type: System.Object\n  implements:\n  - System.Collections.IList.Insert(System.Int32,System.Object)\n  name.vb: System.Collections.IList.Insert(Int32, Object)\n  nameWithType: XmlArrayItemAttributes.IList.Insert(Int32, Object)\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.IList.Insert(Int32, Object)\n- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Xml.Serialization.XmlArrayItemAttributes\n  langs:\n  - csharp\n  - vb\n  name: IList.Remove(Object)\n  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Remove(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IList.Remove\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs\n    startLine: 47\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  syntax:\n    content: void IList.Remove(object value)\n    content.vb: Sub System.Collections.IList.Remove(value As Object) Implements IList.Remove\n    parameters:\n    - id: value\n      type: System.Object\n  implements:\n  - System.Collections.IList.Remove(System.Object)\n  name.vb: System.Collections.IList.Remove(Object)\n  nameWithType: XmlArrayItemAttributes.IList.Remove(Object)\n  nameWithType.vb: XmlArrayItemAttributes.System.Collections.IList.Remove(Object)\nreferences:\n- uid: System.Xml.Serialization\n  isExternal: false\n  name: System.Xml.Serialization\n  fullName: System.Xml.Serialization\n  commentId: N:System.Xml.Serialization\n  nameWithType: System.Xml.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  fullName: System.Collections.IList\n  commentId: T:System.Collections.IList\n  nameWithType: IList\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  commentId: T:System.Collections.ICollection\n  nameWithType: ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Xml.Serialization.XmlArrayItemAttribute\n  parent: System.Xml.Serialization\n  isExternal: false\n  name: XmlArrayItemAttribute\n  fullName: System.Xml.Serialization.XmlArrayItemAttribute\n  commentId: T:System.Xml.Serialization.XmlArrayItemAttribute\n  nameWithType: XmlArrayItemAttribute\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.Serialization.XmlArrayItemAttribute[]\n  name: XmlArrayItemAttribute[]\n  fullName: System.Xml.Serialization.XmlArrayItemAttribute[]\n  fullname.vb: System.Xml.Serialization.XmlArrayItemAttribute()\n  name.vb: XmlArrayItemAttribute()\n  spec.csharp:\n  - uid: System.Xml.Serialization.XmlArrayItemAttribute\n    name: XmlArrayItemAttribute\n    fullName: System.Xml.Serialization.XmlArrayItemAttribute\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Xml.Serialization.XmlArrayItemAttribute\n    name: XmlArrayItemAttribute\n    fullName: System.Xml.Serialization.XmlArrayItemAttribute\n  - name: ()\n    fullName: ()\n  nameWithType: XmlArrayItemAttribute[]\n  nameWithType.vb: XmlArrayItemAttribute()\n- uid: System.Collections.ICollection.Count\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: Count\n  fullName: System.Collections.ICollection.Count\n  commentId: P:System.Collections.ICollection.Count\n  nameWithType: ICollection.Count\n- uid: System.Collections.ICollection.IsSynchronized\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Collections.ICollection.IsSynchronized\n  commentId: P:System.Collections.ICollection.IsSynchronized\n  nameWithType: ICollection.IsSynchronized\n- uid: System.Collections.ICollection.SyncRoot\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Collections.ICollection.SyncRoot\n  commentId: P:System.Collections.ICollection.SyncRoot\n  nameWithType: ICollection.SyncRoot\n- uid: System.Collections.IList.IsFixedSize\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsFixedSize\n  fullName: System.Collections.IList.IsFixedSize\n  commentId: P:System.Collections.IList.IsFixedSize\n  nameWithType: IList.IsFixedSize\n- uid: System.Collections.IList.IsReadOnly\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.IList.IsReadOnly\n  commentId: P:System.Collections.IList.IsReadOnly\n  nameWithType: IList.IsReadOnly\n- uid: System.Collections.IList.Item(System.Int32)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Item[Int32]\n  fullName: System.Collections.IList.Item[System.Int32]\n  fullname.vb: System.Collections.IList.Item(System.Int32)\n  name.vb: Item(Int32)\n  spec.csharp:\n  - uid: System.Collections.IList.Item(System.Int32)\n    name: Item\n    fullName: System.Collections.IList.Item\n  - name: '['\n    fullName: '['\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.IList.Item(System.Int32)\n    name: Item\n    fullName: System.Collections.IList.Item\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Collections.IList.Item(System.Int32)\n  nameWithType: IList.Item[Int32]\n  nameWithType.vb: IList.Item(Int32)\n- uid: System.Collections.IList.Clear\n  parent: System.Collections.IList\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.IList.Clear()\n  spec.csharp:\n  - uid: System.Collections.IList.Clear\n    name: Clear\n    fullName: System.Collections.IList.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Clear\n    name: Clear\n    fullName: System.Collections.IList.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Clear\n  nameWithType: IList.Clear()\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n  nameWithType: IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.Collections.IList.RemoveAt(System.Int32)\n  parent: System.Collections.IList\n  isExternal: true\n  name: RemoveAt(Int32)\n  fullName: System.Collections.IList.RemoveAt(System.Int32)\n  spec.csharp:\n  - uid: System.Collections.IList.RemoveAt(System.Int32)\n    name: RemoveAt\n    fullName: System.Collections.IList.RemoveAt\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.RemoveAt(System.Int32)\n    name: RemoveAt\n    fullName: System.Collections.IList.RemoveAt\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.RemoveAt(System.Int32)\n  nameWithType: IList.RemoveAt(Int32)\n- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ICollection\n  isExternal: true\n  name: CopyTo(Array, Int32)\n  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  spec.csharp:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  nameWithType: ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  commentId: T:System.Array\n  nameWithType: Array\n- uid: System.Collections.IList.Add(System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Add(Object)\n  fullName: System.Collections.IList.Add(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.Add(System.Object)\n    name: Add\n    fullName: System.Collections.IList.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Add(System.Object)\n    name: Add\n    fullName: System.Collections.IList.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Add(System.Object)\n  nameWithType: IList.Add(Object)\n- uid: System.Collections.IList.Contains(System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Contains(Object)\n  fullName: System.Collections.IList.Contains(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IList.Contains\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IList.Contains\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Contains(System.Object)\n  nameWithType: IList.Contains(Object)\n- uid: System.Collections.IList.IndexOf(System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: IndexOf(Object)\n  fullName: System.Collections.IList.IndexOf(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.IndexOf(System.Object)\n    name: IndexOf\n    fullName: System.Collections.IList.IndexOf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.IndexOf(System.Object)\n    name: IndexOf\n    fullName: System.Collections.IList.IndexOf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.IndexOf(System.Object)\n  nameWithType: IList.IndexOf(Object)\n- uid: System.Collections.IList.Insert(System.Int32,System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Insert(Int32, Object)\n  fullName: System.Collections.IList.Insert(System.Int32, System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.Insert(System.Int32,System.Object)\n    name: Insert\n    fullName: System.Collections.IList.Insert\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Insert(System.Int32,System.Object)\n    name: Insert\n    fullName: System.Collections.IList.Insert\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Insert(System.Int32,System.Object)\n  nameWithType: IList.Insert(Int32, Object)\n- uid: System.Collections.IList.Remove(System.Object)\n  parent: System.Collections.IList\n  isExternal: true\n  name: Remove(Object)\n  fullName: System.Collections.IList.Remove(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IList.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IList.Remove\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IList.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IList.Remove\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IList.Remove(System.Object)\n  nameWithType: IList.Remove(Object)\n"}