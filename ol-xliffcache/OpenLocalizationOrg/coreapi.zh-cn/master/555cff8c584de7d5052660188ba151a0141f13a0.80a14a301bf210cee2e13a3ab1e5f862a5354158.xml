{"nodes":[{"pos":[428,439],"content":"IDataReader","needQuote":true,"nodes":[{"content":"IDataReader","pos":[0,11]}]},{"pos":[2942,2947],"content":"Depth","needQuote":true,"nodes":[{"content":"Depth","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The level of nesting.&lt;/p&gt;\\n","pos":[3582,3614],"source":"\\n<p>The level of nesting.</p>\\n"},{"pos":[3879,3887],"content":"IsClosed","needQuote":true,"nodes":[{"content":"IsClosed","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the data reader is closed; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4530,4629],"source":"\\n<p>\\n<strong>true</strong> if the data reader is closed; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[4918,4933],"content":"RecordsAffected","needQuote":true,"nodes":[{"content":"RecordsAffected","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.&lt;/p&gt;\\n","pos":[5631,5773],"source":"\\n<p>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</p>\\n"},{"pos":[6039,6046],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[6837,6853],"content":"GetSchemaTable()","needQuote":true,"nodes":[{"content":"GetSchemaTable()","pos":[0,16]}]},{"pos":[8251,8263],"content":"NextResult()","needQuote":true,"nodes":[{"content":"NextResult()","pos":[0,12]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if there are more rows; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8915,9008],"source":"\\n<p>\\n<strong>true</strong> if there are more rows; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[9211,9217],"content":"Read()","needQuote":true,"nodes":[{"content":"Read()","pos":[0,6]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if there are more rows; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9867,9960],"source":"\\n<p>\\n<strong>true</strong> if there are more rows; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[10056,10067],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[10251,10261],"content":"FieldCount","needQuote":true,"nodes":[{"content":"FieldCount","pos":[0,10]}]},{"pos":[10509,10520],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"pos":[10734,10738],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[10793,10794]},{"pos":[10846,10851],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":"]","pos":[10911,10912]},{"pos":[11005,11009],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[11063,11064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11113,11118],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11177,11178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11448,11460],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"pos":[11678,11682],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[11737,11738]},{"pos":[11791,11797],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"]","pos":[11858,11859]},{"pos":[11953,11957],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[12011,12012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12062,12068],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12128,12129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12407,12424],"content":"GetBoolean(Int32)","needQuote":true,"nodes":[{"content":"GetBoolean(Int32)","pos":[0,17]}]},{"pos":[12569,12579],"content":"GetBoolean","needQuote":true,"nodes":[{"content":"GetBoolean","pos":[0,10]}]},{"pos":[12639,12640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12689,12694],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12753,12754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12850,12860],"content":"GetBoolean","needQuote":true,"nodes":[{"content":"GetBoolean","pos":[0,10]}]},{"pos":[12920,12921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12970,12975],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13034,13035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13276,13290],"content":"GetByte(Int32)","needQuote":true,"nodes":[{"content":"GetByte(Int32)","pos":[0,14]}]},{"pos":[13429,13436],"content":"GetByte","needQuote":true,"nodes":[{"content":"GetByte","pos":[0,7]}]},{"pos":[13493,13494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13543,13548],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13607,13608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13701,13708],"content":"GetByte","needQuote":true,"nodes":[{"content":"GetByte","pos":[0,7]}]},{"pos":[13765,13766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13815,13820],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13879,13880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14169,14213],"content":"GetBytes(Int32, Int64, Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"GetBytes(Int32, Int64, Byte[], Int32, Int32)","pos":[0,44]}]},{"pos":[14639,14647],"content":"GetBytes","needQuote":true,"nodes":[{"content":"GetBytes","pos":[0,8]}]},{"pos":[14705,14706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14755,14760],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[14820,14821]},{"pos":[14875,14880],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[14940,14941]},{"pos":[14994,14998],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[15057,15059]},{"content":",","pos":[15091,15092]},{"pos":[15146,15151],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[15211,15212]},{"pos":[15266,15271],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15330,15331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15478,15486],"content":"GetBytes","needQuote":true,"nodes":[{"content":"GetBytes","pos":[0,8]}]},{"pos":[15544,15545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15594,15599],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[15659,15660]},{"pos":[15714,15719],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[15779,15780]},{"pos":[15833,15837],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[15895,15897],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[15926,15927]},{"pos":[15981,15986],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[16046,16047]},{"pos":[16101,16106],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16165,16166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16561,16575],"content":"GetChar(Int32)","needQuote":true,"nodes":[{"content":"GetChar(Int32)","pos":[0,14]}]},{"pos":[16714,16721],"content":"GetChar","needQuote":true,"nodes":[{"content":"GetChar","pos":[0,7]}]},{"pos":[16778,16779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16828,16833],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16892,16893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16986,16993],"content":"GetChar","needQuote":true,"nodes":[{"content":"GetChar","pos":[0,7]}]},{"pos":[17050,17051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17100,17105],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17164,17165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17454,17498],"content":"GetChars(Int32, Int64, Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"GetChars(Int32, Int64, Char[], Int32, Int32)","pos":[0,44]}]},{"pos":[17924,17932],"content":"GetChars","needQuote":true,"nodes":[{"content":"GetChars","pos":[0,8]}]},{"pos":[17990,17991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18040,18045],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[18105,18106]},{"pos":[18160,18165],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[18225,18226]},{"pos":[18279,18283],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[18342,18344]},{"content":",","pos":[18376,18377]},{"pos":[18431,18436],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[18496,18497]},{"pos":[18551,18556],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18615,18616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18763,18771],"content":"GetChars","needQuote":true,"nodes":[{"content":"GetChars","pos":[0,8]}]},{"pos":[18829,18830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18879,18884],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[18944,18945]},{"pos":[18999,19004],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[19064,19065]},{"pos":[19118,19122],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[19180,19182],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[19211,19212]},{"pos":[19266,19271],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[19331,19332]},{"pos":[19386,19391],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19450,19451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19846,19860],"content":"GetData(Int32)","needQuote":true,"nodes":[{"content":"GetData(Int32)","pos":[0,14]}]},{"pos":[19999,20006],"content":"GetData","needQuote":true,"nodes":[{"content":"GetData","pos":[0,7]}]},{"pos":[20063,20064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20113,20118],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20177,20178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20271,20278],"content":"GetData","needQuote":true,"nodes":[{"content":"GetData","pos":[0,7]}]},{"pos":[20335,20336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20385,20390],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20449,20450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20693,20715],"content":"GetDataTypeName(Int32)","needQuote":true,"nodes":[{"content":"GetDataTypeName(Int32)","pos":[0,22]}]},{"pos":[20870,20885],"content":"GetDataTypeName","needQuote":true,"nodes":[{"content":"GetDataTypeName","pos":[0,15]}]},{"pos":[20950,20951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21000,21005],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21064,21065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21166,21181],"content":"GetDataTypeName","needQuote":true,"nodes":[{"content":"GetDataTypeName","pos":[0,15]}]},{"pos":[21246,21247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21296,21301],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21360,21361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21616,21634],"content":"GetDateTime(Int32)","needQuote":true,"nodes":[{"content":"GetDateTime(Int32)","pos":[0,18]}]},{"pos":[21781,21792],"content":"GetDateTime","needQuote":true,"nodes":[{"content":"GetDateTime","pos":[0,11]}]},{"pos":[21853,21854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21903,21908],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21967,21968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22065,22076],"content":"GetDateTime","needQuote":true,"nodes":[{"content":"GetDateTime","pos":[0,11]}]},{"pos":[22137,22138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22187,22192],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22251,22252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22498,22515],"content":"GetDecimal(Int32)","needQuote":true,"nodes":[{"content":"GetDecimal(Int32)","pos":[0,17]}]},{"pos":[22660,22670],"content":"GetDecimal","needQuote":true,"nodes":[{"content":"GetDecimal","pos":[0,10]}]},{"pos":[22730,22731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22780,22785],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22844,22845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22941,22951],"content":"GetDecimal","needQuote":true,"nodes":[{"content":"GetDecimal","pos":[0,10]}]},{"pos":[23011,23012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23061,23066],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23125,23126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23369,23385],"content":"GetDouble(Int32)","needQuote":true,"nodes":[{"content":"GetDouble(Int32)","pos":[0,16]}]},{"pos":[23528,23537],"content":"GetDouble","needQuote":true,"nodes":[{"content":"GetDouble","pos":[0,9]}]},{"pos":[23596,23597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23646,23651],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23710,23711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23806,23815],"content":"GetDouble","needQuote":true,"nodes":[{"content":"GetDouble","pos":[0,9]}]},{"pos":[23874,23875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23924,23929],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23988,23989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24233,24252],"content":"GetFieldType(Int32)","needQuote":true,"nodes":[{"content":"GetFieldType(Int32)","pos":[0,19]}]},{"pos":[24401,24413],"content":"GetFieldType","needQuote":true,"nodes":[{"content":"GetFieldType","pos":[0,12]}]},{"pos":[24475,24476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24525,24530],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24589,24590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24688,24700],"content":"GetFieldType","needQuote":true,"nodes":[{"content":"GetFieldType","pos":[0,12]}]},{"pos":[24762,24763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24812,24817],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24876,24877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25123,25138],"content":"GetFloat(Int32)","needQuote":true,"nodes":[{"content":"GetFloat(Int32)","pos":[0,15]}]},{"pos":[25279,25287],"content":"GetFloat","needQuote":true,"nodes":[{"content":"GetFloat","pos":[0,8]}]},{"pos":[25345,25346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25395,25400],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25459,25460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25554,25562],"content":"GetFloat","needQuote":true,"nodes":[{"content":"GetFloat","pos":[0,8]}]},{"pos":[25620,25621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25670,25675],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25734,25735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25972,25986],"content":"GetGuid(Int32)","needQuote":true,"nodes":[{"content":"GetGuid(Int32)","pos":[0,14]}]},{"pos":[26125,26132],"content":"GetGuid","needQuote":true,"nodes":[{"content":"GetGuid","pos":[0,7]}]},{"pos":[26189,26190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26239,26244],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26303,26304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26397,26404],"content":"GetGuid","needQuote":true,"nodes":[{"content":"GetGuid","pos":[0,7]}]},{"pos":[26461,26462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26511,26516],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26575,26576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26812,26827],"content":"GetInt16(Int32)","needQuote":true,"nodes":[{"content":"GetInt16(Int32)","pos":[0,15]}]},{"pos":[26968,26976],"content":"GetInt16","needQuote":true,"nodes":[{"content":"GetInt16","pos":[0,8]}]},{"pos":[27034,27035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27084,27089],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27148,27149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27243,27251],"content":"GetInt16","needQuote":true,"nodes":[{"content":"GetInt16","pos":[0,8]}]},{"pos":[27309,27310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27359,27364],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27423,27424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27662,27677],"content":"GetInt32(Int32)","needQuote":true,"nodes":[{"content":"GetInt32(Int32)","pos":[0,15]}]},{"pos":[27818,27826],"content":"GetInt32","needQuote":true,"nodes":[{"content":"GetInt32","pos":[0,8]}]},{"pos":[27884,27885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27934,27939],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27998,27999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28093,28101],"content":"GetInt32","needQuote":true,"nodes":[{"content":"GetInt32","pos":[0,8]}]},{"pos":[28159,28160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28209,28214],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28273,28274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28512,28527],"content":"GetInt64(Int32)","needQuote":true,"nodes":[{"content":"GetInt64(Int32)","pos":[0,15]}]},{"pos":[28668,28676],"content":"GetInt64","needQuote":true,"nodes":[{"content":"GetInt64","pos":[0,8]}]},{"pos":[28734,28735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28784,28789],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28848,28849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28943,28951],"content":"GetInt64","needQuote":true,"nodes":[{"content":"GetInt64","pos":[0,8]}]},{"pos":[29009,29010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29059,29064],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29123,29124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29361,29375],"content":"GetName(Int32)","needQuote":true,"nodes":[{"content":"GetName(Int32)","pos":[0,14]}]},{"pos":[29514,29521],"content":"GetName","needQuote":true,"nodes":[{"content":"GetName","pos":[0,7]}]},{"pos":[29578,29579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29628,29633],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29692,29693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29786,29793],"content":"GetName","needQuote":true,"nodes":[{"content":"GetName","pos":[0,7]}]},{"pos":[29850,29851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29900,29905],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29964,29965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30204,30222],"content":"GetOrdinal(String)","needQuote":true,"nodes":[{"content":"GetOrdinal(String)","pos":[0,18]}]},{"pos":[30369,30379],"content":"GetOrdinal","needQuote":true,"nodes":[{"content":"GetOrdinal","pos":[0,10]}]},{"pos":[30439,30440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30490,30496],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30556,30557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30654,30664],"content":"GetOrdinal","needQuote":true,"nodes":[{"content":"GetOrdinal","pos":[0,10]}]},{"pos":[30724,30725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30775,30781],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30841,30842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31087,31103],"content":"GetString(Int32)","needQuote":true,"nodes":[{"content":"GetString(Int32)","pos":[0,16]}]},{"pos":[31246,31255],"content":"GetString","needQuote":true,"nodes":[{"content":"GetString","pos":[0,9]}]},{"pos":[31314,31315],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31364,31369],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31428,31429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31524,31533],"content":"GetString","needQuote":true,"nodes":[{"content":"GetString","pos":[0,9]}]},{"pos":[31592,31593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31642,31647],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31706,31707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31947,31962],"content":"GetValue(Int32)","needQuote":true,"nodes":[{"content":"GetValue(Int32)","pos":[0,15]}]},{"pos":[32103,32111],"content":"GetValue","needQuote":true,"nodes":[{"content":"GetValue","pos":[0,8]}]},{"pos":[32169,32170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32219,32224],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32283,32284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32378,32386],"content":"GetValue","needQuote":true,"nodes":[{"content":"GetValue","pos":[0,8]}]},{"pos":[32444,32445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32494,32499],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32558,32559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32801,32820],"content":"GetValues(Object[])","needQuote":true,"nodes":[{"content":"GetValues(Object[])","pos":[0,19]}]},{"pos":[33066,33075],"content":"GetValues","needQuote":true,"nodes":[{"content":"GetValues","pos":[0,9]}]},{"pos":[33134,33135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33185,33191],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[33252,33254]},{"pos":[33285,33286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33384,33393],"content":"GetValues","needQuote":true,"nodes":[{"content":"GetValues","pos":[0,9]}]},{"pos":[33452,33453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33503,33509],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33569,33571],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[33599,33600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33897,33912],"content":"IsDBNull(Int32)","needQuote":true,"nodes":[{"content":"IsDBNull(Int32)","pos":[0,15]}]},{"pos":[34053,34061],"content":"IsDBNull","needQuote":true,"nodes":[{"content":"IsDBNull","pos":[0,8]}]},{"pos":[34119,34120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34169,34174],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34233,34234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34328,34336],"content":"IsDBNull","needQuote":true,"nodes":[{"content":"IsDBNull","pos":[0,8]}]},{"pos":[34394,34395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34444,34449],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34508,34509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34723,34732],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[34835,34842],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[34894,34895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34922,34923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34997,35004],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[35056,35057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35084,35085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35263,35274],"content":"IDataRecord","needQuote":true,"nodes":[{"content":"IDataRecord","pos":[0,11]}]},{"pos":[35449,35460],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[35596,35602],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[35732,35737],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35880,35887],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36048,36057],"content":"DataTable","needQuote":true,"nodes":[{"content":"DataTable","pos":[0,9]}]},{"pos":[36240,36265],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Data.IDataReader\n  commentId: T:System.Data.IDataReader\n  id: IDataReader\n  parent: System.Data\n  children:\n  - System.Data.IDataReader.Close\n  - System.Data.IDataReader.Depth\n  - System.Data.IDataReader.GetSchemaTable\n  - System.Data.IDataReader.IsClosed\n  - System.Data.IDataReader.NextResult\n  - System.Data.IDataReader.Read\n  - System.Data.IDataReader.RecordsAffected\n  langs:\n  - csharp\n  - vb\n  name: IDataReader\n  fullName: System.Data.IDataReader\n  type: Interface\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDataReader.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IDataReader\n    path: src/System.Data.Common/src/System/Data/IDataReader.cs\n    startLine: 8\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\\n\"\n  syntax:\n    content: 'public interface IDataReader : IDisposable, IDataRecord'\n    content.vb: >-\n      Public Interface IDataReader\n          Inherits IDisposable, IDataRecord\n  inheritedMembers:\n  - System.Data.IDataRecord.FieldCount\n  - System.Data.IDataRecord.Item(System.Int32)\n  - System.Data.IDataRecord.Item(System.String)\n  - System.Data.IDataRecord.GetBoolean(System.Int32)\n  - System.Data.IDataRecord.GetByte(System.Int32)\n  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  - System.Data.IDataRecord.GetChar(System.Int32)\n  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  - System.Data.IDataRecord.GetData(System.Int32)\n  - System.Data.IDataRecord.GetDataTypeName(System.Int32)\n  - System.Data.IDataRecord.GetDateTime(System.Int32)\n  - System.Data.IDataRecord.GetDecimal(System.Int32)\n  - System.Data.IDataRecord.GetDouble(System.Int32)\n  - System.Data.IDataRecord.GetFieldType(System.Int32)\n  - System.Data.IDataRecord.GetFloat(System.Int32)\n  - System.Data.IDataRecord.GetGuid(System.Int32)\n  - System.Data.IDataRecord.GetInt16(System.Int32)\n  - System.Data.IDataRecord.GetInt32(System.Int32)\n  - System.Data.IDataRecord.GetInt64(System.Int32)\n  - System.Data.IDataRecord.GetName(System.Int32)\n  - System.Data.IDataRecord.GetOrdinal(System.String)\n  - System.Data.IDataRecord.GetString(System.Int32)\n  - System.Data.IDataRecord.GetValue(System.Int32)\n  - System.Data.IDataRecord.GetValues(System.Object[])\n  - System.Data.IDataRecord.IsDBNull(System.Int32)\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IDataReader\n- uid: System.Data.IDataReader.Depth\n  commentId: P:System.Data.IDataReader.Depth\n  id: Depth\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  - vb\n  name: Depth\n  fullName: System.Data.IDataReader.Depth\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDataReader.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Depth\n    path: src/System.Data.Common/src/System/Data/IDataReader.cs\n    startLine: 11\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Gets a value indicating the depth of nesting for the current row.</p>\\n\"\n  syntax:\n    content: int Depth { get; }\n    content.vb: ReadOnly Property Depth As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The level of nesting.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IDataReader.Depth\n- uid: System.Data.IDataReader.IsClosed\n  commentId: P:System.Data.IDataReader.IsClosed\n  id: IsClosed\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  - vb\n  name: IsClosed\n  fullName: System.Data.IDataReader.IsClosed\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDataReader.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsClosed\n    path: src/System.Data.Common/src/System/Data/IDataReader.cs\n    startLine: 16\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Gets a value indicating whether the data reader is closed.</p>\\n\"\n  syntax:\n    content: bool IsClosed { get; }\n    content.vb: ReadOnly Property IsClosed As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the data reader is closed; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IDataReader.IsClosed\n- uid: System.Data.IDataReader.RecordsAffected\n  commentId: P:System.Data.IDataReader.RecordsAffected\n  id: RecordsAffected\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  - vb\n  name: RecordsAffected\n  fullName: System.Data.IDataReader.RecordsAffected\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDataReader.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RecordsAffected\n    path: src/System.Data.Common/src/System/Data/IDataReader.cs\n    startLine: 21\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</p>\\n\"\n  syntax:\n    content: int RecordsAffected { get; }\n    content.vb: ReadOnly Property RecordsAffected As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IDataReader.RecordsAffected\n- uid: System.Data.IDataReader.Close\n  commentId: M:System.Data.IDataReader.Close\n  id: Close\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  - vb\n  name: Close()\n  fullName: System.Data.IDataReader.Close()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDataReader.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Close\n    path: src/System.Data.Common/src/System/Data/IDataReader.cs\n    startLine: 26\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Closes the <xref href=\\\"System.Data.IDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> Object.</p>\\n\"\n  syntax:\n    content: void Close()\n    content.vb: Sub Close\n  nameWithType: IDataReader.Close()\n- uid: System.Data.IDataReader.GetSchemaTable\n  commentId: M:System.Data.IDataReader.GetSchemaTable\n  id: GetSchemaTable\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  - vb\n  name: GetSchemaTable()\n  fullName: System.Data.IDataReader.GetSchemaTable()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDataReader.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSchemaTable\n    path: src/System.Data.Common/src/System/Data/IDataReader.cs\n    startLine: 28\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Data.DataTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that describes the column metadata of the <xref href=\\\"System.Data.IDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: DataTable GetSchemaTable()\n    content.vb: Function GetSchemaTable As DataTable\n    return:\n      type: System.Data.DataTable\n      description: \"\\n<p>A <xref href=\\\"System.Data.DataTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that describes the column metadata.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Data.IDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is closed. </p>\\n\"\n  nameWithType: IDataReader.GetSchemaTable()\n- uid: System.Data.IDataReader.NextResult\n  commentId: M:System.Data.IDataReader.NextResult\n  id: NextResult\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  - vb\n  name: NextResult()\n  fullName: System.Data.IDataReader.NextResult()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDataReader.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NextResult\n    path: src/System.Data.Common/src/System/Data/IDataReader.cs\n    startLine: 30\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Advances the data reader to the next result, when reading the results of batch SQL statements.</p>\\n\"\n  syntax:\n    content: bool NextResult()\n    content.vb: Function NextResult As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if there are more rows; otherwise, <strong>false</strong>.</p>\\n\"\n  nameWithType: IDataReader.NextResult()\n- uid: System.Data.IDataReader.Read\n  commentId: M:System.Data.IDataReader.Read\n  id: Read\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  - vb\n  name: Read()\n  fullName: System.Data.IDataReader.Read()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDataReader.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.Data.Common/src/System/Data/IDataReader.cs\n    startLine: 32\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Advances the <xref href=\\\"System.Data.IDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the next record.</p>\\n\"\n  syntax:\n    content: bool Read()\n    content.vb: Function Read As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if there are more rows; otherwise, <strong>false</strong>.</p>\\n\"\n  nameWithType: IDataReader.Read()\nreferences:\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.Data.IDataRecord.FieldCount\n  parent: System.Data.IDataRecord\n  isExternal: false\n  name: FieldCount\n  fullName: System.Data.IDataRecord.FieldCount\n  nameWithType: IDataRecord.FieldCount\n  commentId: P:System.Data.IDataRecord.FieldCount\n- uid: System.Data.IDataRecord.Item(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: Item[Int32]\n  fullName: System.Data.IDataRecord.Item[System.Int32]\n  fullname.vb: System.Data.IDataRecord.Item(System.Int32)\n  name.vb: Item(Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.Item(System.Int32)\n    name: Item\n    fullName: System.Data.IDataRecord.Item\n  - name: '['\n    fullName: '['\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Data.IDataRecord.Item(System.Int32)\n    name: Item\n    fullName: System.Data.IDataRecord.Item\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.Item[Int32]\n  nameWithType.vb: IDataRecord.Item(Int32)\n  commentId: P:System.Data.IDataRecord.Item(System.Int32)\n- uid: System.Data.IDataRecord.Item(System.String)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: Item[String]\n  fullName: System.Data.IDataRecord.Item[System.String]\n  fullname.vb: System.Data.IDataRecord.Item(System.String)\n  name.vb: Item(String)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.Item(System.String)\n    name: Item\n    fullName: System.Data.IDataRecord.Item\n  - name: '['\n    fullName: '['\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Data.IDataRecord.Item(System.String)\n    name: Item\n    fullName: System.Data.IDataRecord.Item\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.Item[String]\n  nameWithType.vb: IDataRecord.Item(String)\n  commentId: P:System.Data.IDataRecord.Item(System.String)\n- uid: System.Data.IDataRecord.GetBoolean(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetBoolean(Int32)\n  fullName: System.Data.IDataRecord.GetBoolean(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)\n    name: GetBoolean\n    fullName: System.Data.IDataRecord.GetBoolean\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)\n    name: GetBoolean\n    fullName: System.Data.IDataRecord.GetBoolean\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetBoolean(Int32)\n  commentId: M:System.Data.IDataRecord.GetBoolean(System.Int32)\n- uid: System.Data.IDataRecord.GetByte(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetByte(Int32)\n  fullName: System.Data.IDataRecord.GetByte(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetByte(System.Int32)\n    name: GetByte\n    fullName: System.Data.IDataRecord.GetByte\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetByte(System.Int32)\n    name: GetByte\n    fullName: System.Data.IDataRecord.GetByte\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetByte(Int32)\n  commentId: M:System.Data.IDataRecord.GetByte(System.Int32)\n- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  fullName: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)\n  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n    name: GetBytes\n    fullName: System.Data.IDataRecord.GetBytes\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n    name: GetBytes\n    fullName: System.Data.IDataRecord.GetBytes\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  nameWithType.vb: IDataRecord.GetBytes(Int32, Int64, Byte(), Int32, Int32)\n  commentId: M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n- uid: System.Data.IDataRecord.GetChar(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetChar(Int32)\n  fullName: System.Data.IDataRecord.GetChar(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetChar(System.Int32)\n    name: GetChar\n    fullName: System.Data.IDataRecord.GetChar\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetChar(System.Int32)\n    name: GetChar\n    fullName: System.Data.IDataRecord.GetChar\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetChar(Int32)\n  commentId: M:System.Data.IDataRecord.GetChar(System.Int32)\n- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetChars(Int32, Int64, Char[], Int32, Int32)\n  fullName: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)\n  fullname.vb: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)\n  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n    name: GetChars\n    fullName: System.Data.IDataRecord.GetChars\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n    name: GetChars\n    fullName: System.Data.IDataRecord.GetChars\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetChars(Int32, Int64, Char[], Int32, Int32)\n  nameWithType.vb: IDataRecord.GetChars(Int32, Int64, Char(), Int32, Int32)\n  commentId: M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n- uid: System.Data.IDataRecord.GetData(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetData(Int32)\n  fullName: System.Data.IDataRecord.GetData(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetData(System.Int32)\n    name: GetData\n    fullName: System.Data.IDataRecord.GetData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetData(System.Int32)\n    name: GetData\n    fullName: System.Data.IDataRecord.GetData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetData(Int32)\n  commentId: M:System.Data.IDataRecord.GetData(System.Int32)\n- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetDataTypeName(Int32)\n  fullName: System.Data.IDataRecord.GetDataTypeName(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)\n    name: GetDataTypeName\n    fullName: System.Data.IDataRecord.GetDataTypeName\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)\n    name: GetDataTypeName\n    fullName: System.Data.IDataRecord.GetDataTypeName\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetDataTypeName(Int32)\n  commentId: M:System.Data.IDataRecord.GetDataTypeName(System.Int32)\n- uid: System.Data.IDataRecord.GetDateTime(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetDateTime(Int32)\n  fullName: System.Data.IDataRecord.GetDateTime(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)\n    name: GetDateTime\n    fullName: System.Data.IDataRecord.GetDateTime\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)\n    name: GetDateTime\n    fullName: System.Data.IDataRecord.GetDateTime\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetDateTime(Int32)\n  commentId: M:System.Data.IDataRecord.GetDateTime(System.Int32)\n- uid: System.Data.IDataRecord.GetDecimal(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetDecimal(Int32)\n  fullName: System.Data.IDataRecord.GetDecimal(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)\n    name: GetDecimal\n    fullName: System.Data.IDataRecord.GetDecimal\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)\n    name: GetDecimal\n    fullName: System.Data.IDataRecord.GetDecimal\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetDecimal(Int32)\n  commentId: M:System.Data.IDataRecord.GetDecimal(System.Int32)\n- uid: System.Data.IDataRecord.GetDouble(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetDouble(Int32)\n  fullName: System.Data.IDataRecord.GetDouble(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetDouble(System.Int32)\n    name: GetDouble\n    fullName: System.Data.IDataRecord.GetDouble\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetDouble(System.Int32)\n    name: GetDouble\n    fullName: System.Data.IDataRecord.GetDouble\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetDouble(Int32)\n  commentId: M:System.Data.IDataRecord.GetDouble(System.Int32)\n- uid: System.Data.IDataRecord.GetFieldType(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetFieldType(Int32)\n  fullName: System.Data.IDataRecord.GetFieldType(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)\n    name: GetFieldType\n    fullName: System.Data.IDataRecord.GetFieldType\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)\n    name: GetFieldType\n    fullName: System.Data.IDataRecord.GetFieldType\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetFieldType(Int32)\n  commentId: M:System.Data.IDataRecord.GetFieldType(System.Int32)\n- uid: System.Data.IDataRecord.GetFloat(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetFloat(Int32)\n  fullName: System.Data.IDataRecord.GetFloat(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetFloat(System.Int32)\n    name: GetFloat\n    fullName: System.Data.IDataRecord.GetFloat\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetFloat(System.Int32)\n    name: GetFloat\n    fullName: System.Data.IDataRecord.GetFloat\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetFloat(Int32)\n  commentId: M:System.Data.IDataRecord.GetFloat(System.Int32)\n- uid: System.Data.IDataRecord.GetGuid(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetGuid(Int32)\n  fullName: System.Data.IDataRecord.GetGuid(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetGuid(System.Int32)\n    name: GetGuid\n    fullName: System.Data.IDataRecord.GetGuid\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetGuid(System.Int32)\n    name: GetGuid\n    fullName: System.Data.IDataRecord.GetGuid\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetGuid(Int32)\n  commentId: M:System.Data.IDataRecord.GetGuid(System.Int32)\n- uid: System.Data.IDataRecord.GetInt16(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetInt16(Int32)\n  fullName: System.Data.IDataRecord.GetInt16(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetInt16(System.Int32)\n    name: GetInt16\n    fullName: System.Data.IDataRecord.GetInt16\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetInt16(System.Int32)\n    name: GetInt16\n    fullName: System.Data.IDataRecord.GetInt16\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetInt16(Int32)\n  commentId: M:System.Data.IDataRecord.GetInt16(System.Int32)\n- uid: System.Data.IDataRecord.GetInt32(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetInt32(Int32)\n  fullName: System.Data.IDataRecord.GetInt32(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetInt32(System.Int32)\n    name: GetInt32\n    fullName: System.Data.IDataRecord.GetInt32\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetInt32(System.Int32)\n    name: GetInt32\n    fullName: System.Data.IDataRecord.GetInt32\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetInt32(Int32)\n  commentId: M:System.Data.IDataRecord.GetInt32(System.Int32)\n- uid: System.Data.IDataRecord.GetInt64(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetInt64(Int32)\n  fullName: System.Data.IDataRecord.GetInt64(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetInt64(System.Int32)\n    name: GetInt64\n    fullName: System.Data.IDataRecord.GetInt64\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetInt64(System.Int32)\n    name: GetInt64\n    fullName: System.Data.IDataRecord.GetInt64\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetInt64(Int32)\n  commentId: M:System.Data.IDataRecord.GetInt64(System.Int32)\n- uid: System.Data.IDataRecord.GetName(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetName(Int32)\n  fullName: System.Data.IDataRecord.GetName(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetName(System.Int32)\n    name: GetName\n    fullName: System.Data.IDataRecord.GetName\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetName(System.Int32)\n    name: GetName\n    fullName: System.Data.IDataRecord.GetName\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetName(Int32)\n  commentId: M:System.Data.IDataRecord.GetName(System.Int32)\n- uid: System.Data.IDataRecord.GetOrdinal(System.String)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetOrdinal(String)\n  fullName: System.Data.IDataRecord.GetOrdinal(System.String)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetOrdinal(System.String)\n    name: GetOrdinal\n    fullName: System.Data.IDataRecord.GetOrdinal\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetOrdinal(System.String)\n    name: GetOrdinal\n    fullName: System.Data.IDataRecord.GetOrdinal\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetOrdinal(String)\n  commentId: M:System.Data.IDataRecord.GetOrdinal(System.String)\n- uid: System.Data.IDataRecord.GetString(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetString(Int32)\n  fullName: System.Data.IDataRecord.GetString(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetString(System.Int32)\n    name: GetString\n    fullName: System.Data.IDataRecord.GetString\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetString(System.Int32)\n    name: GetString\n    fullName: System.Data.IDataRecord.GetString\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetString(Int32)\n  commentId: M:System.Data.IDataRecord.GetString(System.Int32)\n- uid: System.Data.IDataRecord.GetValue(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetValue(Int32)\n  fullName: System.Data.IDataRecord.GetValue(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetValue(System.Int32)\n    name: GetValue\n    fullName: System.Data.IDataRecord.GetValue\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetValue(System.Int32)\n    name: GetValue\n    fullName: System.Data.IDataRecord.GetValue\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetValue(Int32)\n  commentId: M:System.Data.IDataRecord.GetValue(System.Int32)\n- uid: System.Data.IDataRecord.GetValues(System.Object[])\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: GetValues(Object[])\n  fullName: System.Data.IDataRecord.GetValues(System.Object[])\n  fullname.vb: System.Data.IDataRecord.GetValues(System.Object())\n  name.vb: GetValues(Object())\n  spec.csharp:\n  - uid: System.Data.IDataRecord.GetValues(System.Object[])\n    name: GetValues\n    fullName: System.Data.IDataRecord.GetValues\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.GetValues(System.Object[])\n    name: GetValues\n    fullName: System.Data.IDataRecord.GetValues\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.GetValues(Object[])\n  nameWithType.vb: IDataRecord.GetValues(Object())\n  commentId: M:System.Data.IDataRecord.GetValues(System.Object[])\n- uid: System.Data.IDataRecord.IsDBNull(System.Int32)\n  parent: System.Data.IDataRecord\n  isExternal: true\n  name: IsDBNull(Int32)\n  fullName: System.Data.IDataRecord.IsDBNull(System.Int32)\n  spec.csharp:\n  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)\n    name: IsDBNull\n    fullName: System.Data.IDataRecord.IsDBNull\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)\n    name: IsDBNull\n    fullName: System.Data.IDataRecord.IsDBNull\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDataRecord.IsDBNull(Int32)\n  commentId: M:System.Data.IDataRecord.IsDBNull(System.Int32)\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.Data.IDataRecord\n  parent: System.Data\n  isExternal: false\n  name: IDataRecord\n  fullName: System.Data.IDataRecord\n  nameWithType: IDataRecord\n  commentId: T:System.Data.IDataRecord\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  fullName: System.Data.DataTable\n  nameWithType: DataTable\n  commentId: T:System.Data.DataTable\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}