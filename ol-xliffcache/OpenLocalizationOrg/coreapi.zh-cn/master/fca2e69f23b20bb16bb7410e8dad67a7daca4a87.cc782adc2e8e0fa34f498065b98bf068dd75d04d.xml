{"nodes":[{"pos":[619,645],"content":"EncoderReplacementFallback","needQuote":true,"nodes":[{"content":"EncoderReplacementFallback","pos":[0,26]}]},{"pos":[2732,2760],"content":"EncoderReplacementFallback()","needQuote":true,"nodes":[{"content":"EncoderReplacementFallback()","pos":[0,28]}]},{"pos":[3973,4007],"content":"EncoderReplacementFallback(String)","needQuote":true,"nodes":[{"content":"EncoderReplacementFallback(String)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;A string that is converted in an encoding operation in place of an input character that cannot be encoded.&lt;/p&gt;\\n","pos":[4866,4983],"source":"\\n<p>A string that is converted in an encoding operation in place of an input character that cannot be encoded.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;replacement&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5102,5161],"source":"\\n<p>\\n<em>replacement</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;replacement&lt;/em&gt; contains an invalid surrogate pair.","pos":[5258,5321],"source":"\\n<p>\\n<em>replacement</em> contains an invalid surrogate pair."},{"content":"In other words, the surrogate does not consist of one high surrogate component followed by one low surrogate component.&lt;/p&gt;\\n","pos":[5322,5447],"source":" In other words, the surrogate does not consist of one high surrogate component followed by one low surrogate component.</p>\\n"},{"pos":[6108,6121],"content":"DefaultString","needQuote":true,"nodes":[{"content":"DefaultString","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A substitute string that is used in place of an input character that cannot be encoded.&lt;/p&gt;\\n","pos":[6927,7025],"source":"\\n<p>A substitute string that is used in place of an input character that cannot be encoded.</p>\\n"},{"pos":[7550,7562],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The number of characters in the string used in place of an input character that cannot be encoded.&lt;/p&gt;\\n","pos":[8391,8500],"source":"\\n<p>The number of characters in the string used in place of an input character that cannot be encoded.</p>\\n"},{"pos":[9263,9285],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"pos":[10974,10988],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12838,12851],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The hash code of the value of the object.&lt;/p&gt;\\n","pos":[13622,13674],"source":"\\n<p>The hash code of the value of the object.</p>\\n"},{"pos":[14061,14072],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[14218,14224],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14388,14403],"content":"EncoderFallback","needQuote":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[14638,14655],"content":"ExceptionFallback","needQuote":true,"nodes":[{"content":"ExceptionFallback","pos":[0,17]}]},{"pos":[14946,14965],"content":"ReplacementFallback","needQuote":true,"nodes":[{"content":"ReplacementFallback","pos":[0,19]}]},{"pos":[15222,15232],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15327,15335],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15404,15405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15432,15433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15503,15511],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15580,15581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15608,15609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15806,15828],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15976,15982],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16049,16050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16100,16106],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16167,16168]},{"pos":[16223,16229],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16289,16290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16387,16393],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16460,16461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16511,16517],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16578,16579]},{"pos":[16634,16640],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16700,16701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16946,16977],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17143,17158],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17234,17235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17285,17291],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17352,17353]},{"pos":[17408,17414],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17474,17475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17581,17596],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17672,17673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17723,17729],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17790,17791]},{"pos":[17846,17852],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17912,17913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18139,18148],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18241,18248],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18316,18317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18344,18345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18414,18421],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18489,18490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18517,18518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18693,18710],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18819,18834],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18910,18911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18938,18939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19016,19031],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19107,19108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19135,19136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19281,19287],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19418,19424],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19617,19629],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"pos":[19849,19854],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20052,20074],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"pos":[20221,20241],"content":"CreateFallbackBuffer","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer","pos":[0,20]}]},{"pos":[20315,20316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20343,20344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20440,20460],"content":"CreateFallbackBuffer","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer","pos":[0,20]}]},{"pos":[20534,20535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20562,20563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20790,20811],"content":"EncoderFallbackBuffer","needQuote":true,"nodes":[{"content":"EncoderFallbackBuffer","pos":[0,21]}]},{"pos":[21039,21053],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21172,21178],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21245,21246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21296,21302],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21362,21363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21446,21452],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21519,21520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21570,21576],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21636,21637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21810,21817],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21983,21996],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22097,22108],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22180,22181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22208,22209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22282,22293],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22365,22366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22393,22394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22553,22574],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[22775,22792],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Text.EncoderReplacementFallback\n  commentId: T:System.Text.EncoderReplacementFallback\n  id: EncoderReplacementFallback\n  parent: System.Text\n  children:\n  - System.Text.EncoderReplacementFallback.#ctor\n  - System.Text.EncoderReplacementFallback.#ctor(System.String)\n  - System.Text.EncoderReplacementFallback.CreateFallbackBuffer\n  - System.Text.EncoderReplacementFallback.DefaultString\n  - System.Text.EncoderReplacementFallback.Equals(System.Object)\n  - System.Text.EncoderReplacementFallback.GetHashCode\n  - System.Text.EncoderReplacementFallback.MaxCharCount\n  langs:\n  - csharp\n  - vb\n  name: EncoderReplacementFallback\n  fullName: System.Text.EncoderReplacementFallback\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EncoderReplacementFallback\n    path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n    startLine: 10\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Provides a failure handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence. The fallback uses a user-specified replacement string instead of the original input character. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public sealed class EncoderReplacementFallback : EncoderFallback\n    content.vb: >-\n      <Serializable>\n\n      Public NotInheritable Class EncoderReplacementFallback\n          Inherits EncoderFallback\n  seealso:\n  - type: System.Text.EncoderReplacementFallbackBuffer\n    commentId: T:System.Text.EncoderReplacementFallbackBuffer\n  - type: System.Text.EncoderReplacementFallback.#ctor\n    commentId: M:System.Text.EncoderReplacementFallback.#ctor\n  - type: System.Text.EncoderReplacementFallback.DefaultString\n    commentId: P:System.Text.EncoderReplacementFallback.DefaultString\n  inheritance:\n  - System.Object\n  - System.Text.EncoderFallback\n  inheritedMembers:\n  - System.Text.EncoderFallback.ExceptionFallback\n  - System.Text.EncoderFallback.ReplacementFallback\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: EncoderReplacementFallback\n- uid: System.Text.EncoderReplacementFallback.#ctor\n  commentId: M:System.Text.EncoderReplacementFallback.#ctor\n  id: '#ctor'\n  parent: System.Text.EncoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: EncoderReplacementFallback()\n  fullName: System.Text.EncoderReplacementFallback.EncoderReplacementFallback()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n    startLine: 17\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public EncoderReplacementFallback()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Text.EncoderReplacementFallback.DefaultString\n    commentId: P:System.Text.EncoderReplacementFallback.DefaultString\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EncoderReplacementFallback.EncoderReplacementFallback()\n- uid: System.Text.EncoderReplacementFallback.#ctor(System.String)\n  commentId: M:System.Text.EncoderReplacementFallback.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Text.EncoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: EncoderReplacementFallback(String)\n  fullName: System.Text.EncoderReplacementFallback.EncoderReplacementFallback(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n    startLine: 21\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using a specified replacement string.</p>\\n\"\n  syntax:\n    content: public EncoderReplacementFallback(string replacement)\n    content.vb: Public Sub New(replacement As String)\n    parameters:\n    - id: replacement\n      type: System.String\n      description: \"\\n<p>A string that is converted in an encoding operation in place of an input character that cannot be encoded.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>replacement</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>replacement</em> contains an invalid surrogate pair. In other words, the surrogate does not consist of one high surrogate component followed by one low surrogate component.</p>\\n\"\n  seealso:\n  - type: System.Text.EncoderReplacementFallback.DefaultString\n    commentId: P:System.Text.EncoderReplacementFallback.DefaultString\n  - type: System.Text.EncoderReplacementFallback.#ctor(System.String)\n    commentId: M:System.Text.EncoderReplacementFallback.#ctor(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EncoderReplacementFallback.EncoderReplacementFallback(String)\n- uid: System.Text.EncoderReplacementFallback.DefaultString\n  commentId: P:System.Text.EncoderReplacementFallback.DefaultString\n  id: DefaultString\n  parent: System.Text.EncoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: DefaultString\n  fullName: System.Text.EncoderReplacementFallback.DefaultString\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefaultString\n    path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n    startLine: 67\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets the replacement string that is the value of the <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public string DefaultString { get; }\n    content.vb: Public ReadOnly Property DefaultString As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A substitute string that is used in place of an input character that cannot be encoded.</p>\\n\"\n  seealso:\n  - type: System.Text.EncoderReplacementFallback.#ctor(System.String)\n    commentId: M:System.Text.EncoderReplacementFallback.#ctor(System.String)\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: EncoderReplacementFallback.DefaultString\n- uid: System.Text.EncoderReplacementFallback.MaxCharCount\n  commentId: P:System.Text.EncoderReplacementFallback.MaxCharCount\n  id: MaxCharCount\n  parent: System.Text.EncoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: MaxCharCount\n  fullName: System.Text.EncoderReplacementFallback.MaxCharCount\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxCharCount\n    path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n    startLine: 81\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets the number of characters in the replacement string for the <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int MaxCharCount { get; }\n    content.vb: Public Overrides ReadOnly Property MaxCharCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of characters in the string used in place of an input character that cannot be encoded.</p>\\n\"\n  overridden: System.Text.EncoderFallback.MaxCharCount\n  seealso:\n  - type: System.Text.EncoderReplacementFallback.DefaultString\n    commentId: P:System.Text.EncoderReplacementFallback.DefaultString\n  - type: System.Text.EncoderReplacementFallback.#ctor(System.String)\n    commentId: M:System.Text.EncoderReplacementFallback.#ctor(System.String)\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: EncoderReplacementFallback.MaxCharCount\n- uid: System.Text.EncoderReplacementFallback.CreateFallbackBuffer\n  commentId: M:System.Text.EncoderReplacementFallback.CreateFallbackBuffer\n  id: CreateFallbackBuffer\n  parent: System.Text.EncoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: CreateFallbackBuffer()\n  fullName: System.Text.EncoderReplacementFallback.CreateFallbackBuffer()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateFallbackBuffer\n    path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n    startLine: 75\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Creates a <xref href=\\\"System.Text.EncoderFallbackBuffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is initialized with the replacement string of this <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override EncoderFallbackBuffer CreateFallbackBuffer()\n    content.vb: Public Overrides Function CreateFallbackBuffer As EncoderFallbackBuffer\n    return:\n      type: System.Text.EncoderFallbackBuffer\n      description: \"\\n<p>A <xref href=\\\"System.Text.EncoderFallbackBuffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object equal to this <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  overridden: System.Text.EncoderFallback.CreateFallbackBuffer\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: EncoderReplacementFallback.CreateFallbackBuffer()\n- uid: System.Text.EncoderReplacementFallback.Equals(System.Object)\n  commentId: M:System.Text.EncoderReplacementFallback.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Text.EncoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Text.EncoderReplacementFallback.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n    startLine: 89\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Indicates whether the value of a specified object is equal to the <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object value)\n    content.vb: Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>A <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <em>value</em> parameter specifies an <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and the replacement string of that object is equal to the replacement string of this <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; otherwise, <strong>false</strong>. </p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: EncoderReplacementFallback.Equals(Object)\n- uid: System.Text.EncoderReplacementFallback.GetHashCode\n  commentId: M:System.Text.EncoderReplacementFallback.GetHashCode\n  id: GetHashCode\n  parent: System.Text.EncoderReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Text.EncoderReplacementFallback.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Text/EncoderReplacementFallback.cs\n    startLine: 99\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Retrieves the hash code for the value of the <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code of the value of the object.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  seealso:\n  - type: System.Text.EncoderReplacementFallback.DefaultString\n    commentId: P:System.Text.EncoderReplacementFallback.DefaultString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: EncoderReplacementFallback.GetHashCode()\nreferences:\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  fullName: System.Text.EncoderFallback\n  nameWithType: EncoderFallback\n  commentId: T:System.Text.EncoderFallback\n- uid: System.Text.EncoderFallback.ExceptionFallback\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: ExceptionFallback\n  fullName: System.Text.EncoderFallback.ExceptionFallback\n  nameWithType: EncoderFallback.ExceptionFallback\n  commentId: P:System.Text.EncoderFallback.ExceptionFallback\n- uid: System.Text.EncoderFallback.ReplacementFallback\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: ReplacementFallback\n  fullName: System.Text.EncoderFallback.ReplacementFallback\n  nameWithType: EncoderFallback.ReplacementFallback\n  commentId: P:System.Text.EncoderFallback.ReplacementFallback\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Text.EncoderFallback.MaxCharCount\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: MaxCharCount\n  fullName: System.Text.EncoderFallback.MaxCharCount\n  nameWithType: EncoderFallback.MaxCharCount\n  commentId: P:System.Text.EncoderFallback.MaxCharCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Text.EncoderFallback.CreateFallbackBuffer\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: CreateFallbackBuffer()\n  fullName: System.Text.EncoderFallback.CreateFallbackBuffer()\n  spec.csharp:\n  - uid: System.Text.EncoderFallback.CreateFallbackBuffer\n    name: CreateFallbackBuffer\n    fullName: System.Text.EncoderFallback.CreateFallbackBuffer\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Text.EncoderFallback.CreateFallbackBuffer\n    name: CreateFallbackBuffer\n    fullName: System.Text.EncoderFallback.CreateFallbackBuffer\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: EncoderFallback.CreateFallbackBuffer()\n  commentId: M:System.Text.EncoderFallback.CreateFallbackBuffer\n- uid: System.Text.EncoderFallbackBuffer\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallbackBuffer\n  fullName: System.Text.EncoderFallbackBuffer\n  nameWithType: EncoderFallbackBuffer\n  commentId: T:System.Text.EncoderFallbackBuffer\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}