{"nodes":[{"pos":[423,442],"content":"MethodImplAttribute","needQuote":true,"nodes":[{"content":"MethodImplAttribute","pos":[0,19]}]},{"pos":[2273,2282],"content":"Inherited","needQuote":true,"nodes":[{"content":"Inherited","pos":[0,9]}]},{"pos":[2875,2913],"content":"MethodImplAttribute(MethodImplOptions)","needQuote":true,"nodes":[{"content":"MethodImplAttribute(MethodImplOptions)","pos":[0,38]}]},{"pos":[4747,4752],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[6002,6033],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[6239,6245],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6393,6402],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[6590,6604],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6729,6735],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6784,6785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6835,6841],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6901,6902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6988,6994],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7043,7044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7094,7100],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7160,7161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7364,7377],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7484,7495],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7549,7550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7577,7578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7654,7665],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7719,7720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7747,7748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7930,7940],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8035,8043],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8112,8113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8140,8141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8211,8219],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8288,8289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8316,8317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8514,8536],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8684,8690],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8757,8758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8808,8814],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8875,8876]},{"pos":[8931,8937],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8997,8998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9095,9101],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9168,9169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9219,9225],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9286,9287]},{"pos":[9342,9348],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9408,9409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9654,9685],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9851,9866],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9942,9943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9993,9999],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10060,10061]},{"pos":[10116,10122],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10182,10183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10289,10304],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10380,10381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10431,10437],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10498,10499]},{"pos":[10554,10560],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10620,10621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10847,10856],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10949,10956],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11024,11025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11052,11053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11122,11129],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11197,11198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11225,11226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11401,11418],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11527,11542],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11618,11619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11646,11647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11724,11739],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11815,11816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11843,11844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11989,11995],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12187,12204],"content":"MethodImplOptions","needQuote":true,"nodes":[{"content":"MethodImplOptions","pos":[0,17]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.MethodImplAttribute\n  commentId: T:System.Runtime.CompilerServices.MethodImplAttribute\n  id: MethodImplAttribute\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)\n  - System.Runtime.CompilerServices.MethodImplAttribute.Value\n  langs:\n  - csharp\n  - vb\n  name: MethodImplAttribute\n  fullName: System.Runtime.CompilerServices.MethodImplAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MethodImplAttribute\n    path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n    startLine: 41\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Specifies the details of how a method is implemented. This class cannot be inherited. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [AttributeUsage(AttributeTargets.Constructor | AttributeTargets.Method, Inherited = false)]\n\n      [ComVisible(true)]\n\n      public sealed class MethodImplAttribute : Attribute, _Attribute\n    content.vb: >-\n      <Serializable>\n\n      <AttributeUsage(AttributeTargets.Constructor Or AttributeTargets.Method, Inherited:=False)>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class MethodImplAttribute\n          Inherits Attribute\n          Implements _Attribute\n  seealso:\n  - type: System.Reflection.MethodBase.GetMethodImplementationFlags\n    commentId: M:System.Reflection.MethodBase.GetMethodImplementationFlags\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 96\n    namedArguments:\n    - name: Inherited\n      type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: MethodImplAttribute\n- uid: System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)\n  commentId: M:System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)\n  id: '#ctor(System.Runtime.CompilerServices.MethodImplOptions)'\n  parent: System.Runtime.CompilerServices.MethodImplAttribute\n  langs:\n  - csharp\n  - vb\n  name: MethodImplAttribute(MethodImplOptions)\n  fullName: System.Runtime.CompilerServices.MethodImplAttribute.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n    startLine: 59\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.CompilerServices.MethodImplAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified <xref href=\\\"System.Runtime.CompilerServices.MethodImplOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public MethodImplAttribute(MethodImplOptions methodImplOptions)\n    content.vb: Public Sub New(methodImplOptions As MethodImplOptions)\n    parameters:\n    - id: methodImplOptions\n      type: System.Runtime.CompilerServices.MethodImplOptions\n      description: \"\\n<p>A <xref href=\\\"System.Runtime.CompilerServices.MethodImplOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value specifying properties of the attributed method. </p>\\n\"\n  seealso:\n  - type: System.Reflection.MethodBase.GetMethodImplementationFlags\n    commentId: M:System.Reflection.MethodBase.GetMethodImplementationFlags\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodImplAttribute.MethodImplAttribute(MethodImplOptions)\n- uid: System.Runtime.CompilerServices.MethodImplAttribute.Value\n  commentId: P:System.Runtime.CompilerServices.MethodImplAttribute.Value\n  id: Value\n  parent: System.Runtime.CompilerServices.MethodImplAttribute\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Runtime.CompilerServices.MethodImplAttribute.Value\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Value\n    path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n    startLine: 73\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Runtime.CompilerServices.MethodImplOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value describing the attributed method.</p>\\n\"\n  syntax:\n    content: public MethodImplOptions Value { get; }\n    content.vb: Public ReadOnly Property Value As MethodImplOptions\n    parameters: []\n    return:\n      type: System.Runtime.CompilerServices.MethodImplOptions\n      description: \"\\n<p>The <xref href=\\\"System.Runtime.CompilerServices.MethodImplOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value describing the attributed method.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: MethodImplAttribute.Value\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.CompilerServices.MethodImplOptions\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: MethodImplOptions\n  fullName: System.Runtime.CompilerServices.MethodImplOptions\n  nameWithType: MethodImplOptions\n  commentId: T:System.Runtime.CompilerServices.MethodImplOptions\n"}