{"nodes":[{"pos":[365,379],"content":"UnknownWrapper","needQuote":true,"nodes":[{"content":"UnknownWrapper","pos":[0,14]}]},{"pos":[2168,2190],"content":"UnknownWrapper(Object)","needQuote":true,"nodes":[{"content":"UnknownWrapper(Object)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The object being wrapped.","pos":[3051,3081],"source":"\\n<p>The object being wrapped."},{"content":"&lt;/p&gt;\\n","pos":[3082,3088],"source":" </p>\\n"},{"pos":[3455,3468],"content":"WrappedObject","needQuote":true,"nodes":[{"content":"WrappedObject","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The wrapped object.&lt;/p&gt;\\n","pos":[4207,4237],"source":"\\n<p>The wrapped object.</p>\\n"},{"pos":[4441,4471],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[4674,4680],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4840,4850],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[4945,4953],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5022,5023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5050,5051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5121,5129],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5198,5199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5226,5227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5410,5424],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5543,5549],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5616,5617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5667,5673],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5733,5734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5817,5823],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5890,5891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5941,5947],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6007,6008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6222,6244],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6392,6398],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6465,6466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6516,6522],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6583,6584]},{"pos":[6639,6645],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6705,6706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6803,6809],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6876,6877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6927,6933],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6994,6995]},{"pos":[7050,7056],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7116,7117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7362,7393],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7559,7574],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7650,7651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7701,7707],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7768,7769]},{"pos":[7824,7830],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7890,7891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7997,8012],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8088,8089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8139,8145],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8206,8207]},{"pos":[8262,8268],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8328,8329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8559,8572],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8673,8684],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8756,8757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8784,8785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8858,8869],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8941,8942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8969,8970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9145,9154],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9247,9254],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9322,9323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9350,9351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9420,9427],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9495,9496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9523,9524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9699,9716],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[9825,9840],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[9916,9917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9944,9945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10022,10037],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10113,10114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10141,10142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10287,10293],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.UnknownWrapper\n  commentId: T:System.Runtime.InteropServices.UnknownWrapper\n  id: UnknownWrapper\n  parent: System.Runtime.InteropServices\n  children:\n  - System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)\n  - System.Runtime.InteropServices.UnknownWrapper.WrappedObject\n  langs:\n  - csharp\n  - vb\n  name: UnknownWrapper\n  fullName: System.Runtime.InteropServices.UnknownWrapper\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/UnknownWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UnknownWrapper\n    path: src/mscorlib/src/System/Runtime/InteropServices/UnknownWrapper.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Wraps objects the marshaler should marshal as a <strong>VT_UNKNOWN</strong>.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public sealed class UnknownWrapper\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class UnknownWrapper\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.ObsoleteAttribute\n    ctor: System.ObsoleteAttribute.#ctor(System.String)\n    arguments:\n    - type: System.String\n      value: UnknownWrapper and support for marshalling to the VARIANT type may be unavailable in future releases.\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: UnknownWrapper\n- uid: System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)\n  commentId: M:System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Runtime.InteropServices.UnknownWrapper\n  langs:\n  - csharp\n  - vb\n  name: UnknownWrapper(Object)\n  fullName: System.Runtime.InteropServices.UnknownWrapper.UnknownWrapper(System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/UnknownWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/InteropServices/UnknownWrapper.cs\n    startLine: 21\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.InteropServices.UnknownWrapper\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the object to be wrapped.</p>\\n\"\n  syntax:\n    content: public UnknownWrapper(object obj)\n    content.vb: Public Sub New(obj As Object)\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object being wrapped. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnknownWrapper.UnknownWrapper(Object)\n- uid: System.Runtime.InteropServices.UnknownWrapper.WrappedObject\n  commentId: P:System.Runtime.InteropServices.UnknownWrapper.WrappedObject\n  id: WrappedObject\n  parent: System.Runtime.InteropServices.UnknownWrapper\n  langs:\n  - csharp\n  - vb\n  name: WrappedObject\n  fullName: System.Runtime.InteropServices.UnknownWrapper.WrappedObject\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/UnknownWrapper.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WrappedObject\n    path: src/mscorlib/src/System/Runtime/InteropServices/UnknownWrapper.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Gets the object contained by this wrapper.</p>\\n\"\n  syntax:\n    content: public object WrappedObject { get; }\n    content.vb: Public ReadOnly Property WrappedObject As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The wrapped object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: UnknownWrapper.WrappedObject\nreferences:\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n"}