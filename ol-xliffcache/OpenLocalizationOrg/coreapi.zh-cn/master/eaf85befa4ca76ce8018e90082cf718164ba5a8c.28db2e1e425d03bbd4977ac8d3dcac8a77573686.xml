{"nodes":[{"pos":[594,602],"content":"TypeCode","needQuote":true,"nodes":[{"content":"TypeCode","pos":[0,8]}]},{"pos":[1417,1424],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[2189,2193],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[2937,2941],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[3863,3871],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[4599,4606],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[5404,5410],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[6214,6219],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[6903,6908],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[7665,7670],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8437,8442],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[9231,9237],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10028,10033],"content":"SByte","needQuote":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[10788,10794],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[11595,11601],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12335,12341],"content":"UInt16","needQuote":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[13102,13108],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[13875,13881],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[14570,14576],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14709,14717],"content":"TypeCode","needQuote":true,"nodes":[{"content":"TypeCode","pos":[0,8]}]}],"content":"items:\n- uid: System.TypeCode\n  commentId: T:System.TypeCode\n  id: TypeCode\n  parent: System\n  children:\n  - System.TypeCode.Boolean\n  - System.TypeCode.Byte\n  - System.TypeCode.Char\n  - System.TypeCode.DateTime\n  - System.TypeCode.Decimal\n  - System.TypeCode.Double\n  - System.TypeCode.Empty\n  - System.TypeCode.Int16\n  - System.TypeCode.Int32\n  - System.TypeCode.Int64\n  - System.TypeCode.Object\n  - System.TypeCode.SByte\n  - System.TypeCode.Single\n  - System.TypeCode.String\n  - System.TypeCode.UInt16\n  - System.TypeCode.UInt32\n  - System.TypeCode.UInt64\n  langs:\n  - csharp\n  - vb\n  name: TypeCode\n  fullName: System.TypeCode\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TypeCode\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Specifies the type of an object.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public enum TypeCode\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Enum TypeCode\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: TypeCode\n- uid: System.TypeCode.Boolean\n  commentId: F:System.TypeCode.Boolean\n  id: Boolean\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Boolean\n  fullName: System.TypeCode.Boolean\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Boolean\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 29\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>A simple type representing Boolean values of <strong>true</strong> or <strong>false</strong>.</p>\\n\"\n  syntax:\n    content: Boolean = 3\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Boolean\n- uid: System.TypeCode.Byte\n  commentId: F:System.TypeCode.Byte\n  id: Byte\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Byte\n  fullName: System.TypeCode.Byte\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Byte\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 32\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>An integral type representing unsigned 8-bit integers with values between 0 and 255.</p>\\n\"\n  syntax:\n    content: Byte = 6\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Byte\n- uid: System.TypeCode.Char\n  commentId: F:System.TypeCode.Char\n  id: Char\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Char\n  fullName: System.TypeCode.Char\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Char\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>An integral type representing unsigned 16-bit integers with values between 0 and 65535. The set of possible values for the <xref href=\\\"System.TypeCode.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type corresponds to the Unicode character set.</p>\\n\"\n  syntax:\n    content: Char = 4\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Char\n- uid: System.TypeCode.DateTime\n  commentId: F:System.TypeCode.DateTime\n  id: DateTime\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: DateTime\n  fullName: System.TypeCode.DateTime\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DateTime\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 42\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>A type representing a date and time value.</p>\\n\"\n  syntax:\n    content: DateTime = 16\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.DateTime\n- uid: System.TypeCode.Decimal\n  commentId: F:System.TypeCode.Decimal\n  id: Decimal\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Decimal\n  fullName: System.TypeCode.Decimal\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Decimal\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 41\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.</p>\\n\"\n  syntax:\n    content: Decimal = 15\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Decimal\n- uid: System.TypeCode.Double\n  commentId: F:System.TypeCode.Double\n  id: Double\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Double\n  fullName: System.TypeCode.Double\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Double\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.</p>\\n\"\n  syntax:\n    content: Double = 14\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Double\n- uid: System.TypeCode.Empty\n  commentId: F:System.TypeCode.Empty\n  id: Empty\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Empty\n  fullName: System.TypeCode.Empty\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Empty\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>A null reference.</p>\\n\"\n  syntax:\n    content: Empty = 0\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Empty\n- uid: System.TypeCode.Int16\n  commentId: F:System.TypeCode.Int16\n  id: Int16\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Int16\n  fullName: System.TypeCode.Int16\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Int16\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 33\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>An integral type representing signed 16-bit integers with values between -32768 and 32767.</p>\\n\"\n  syntax:\n    content: Int16 = 7\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Int16\n- uid: System.TypeCode.Int32\n  commentId: F:System.TypeCode.Int32\n  id: Int32\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Int32\n  fullName: System.TypeCode.Int32\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Int32\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.</p>\\n\"\n  syntax:\n    content: Int32 = 9\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Int32\n- uid: System.TypeCode.Int64\n  commentId: F:System.TypeCode.Int64\n  id: Int64\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Int64\n  fullName: System.TypeCode.Int64\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Int64\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 37\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.</p>\\n\"\n  syntax:\n    content: Int64 = 11\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Int64\n- uid: System.TypeCode.Object\n  commentId: F:System.TypeCode.Object\n  id: Object\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Object\n  fullName: System.TypeCode.Object\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Object\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>A general type representing any reference or value type not explicitly represented by another <strong>TypeCode</strong>.</p>\\n\"\n  syntax:\n    content: Object = 1\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Object\n- uid: System.TypeCode.SByte\n  commentId: F:System.TypeCode.SByte\n  id: SByte\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: SByte\n  fullName: System.TypeCode.SByte\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SByte\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 31\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>An integral type representing signed 8-bit integers with values between -128 and 127.</p>\\n\"\n  syntax:\n    content: SByte = 5\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.SByte\n- uid: System.TypeCode.Single\n  commentId: F:System.TypeCode.Single\n  id: Single\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: Single\n  fullName: System.TypeCode.Single\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Single\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 39\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.</p>\\n\"\n  syntax:\n    content: Single = 13\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.Single\n- uid: System.TypeCode.String\n  commentId: F:System.TypeCode.String\n  id: String\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: String\n  fullName: System.TypeCode.String\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: String\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 43\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>A sealed class type representing Unicode character strings.</p>\\n\"\n  syntax:\n    content: String = 18\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.String\n- uid: System.TypeCode.UInt16\n  commentId: F:System.TypeCode.UInt16\n  id: UInt16\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: UInt16\n  fullName: System.TypeCode.UInt16\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UInt16\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>An integral type representing unsigned 16-bit integers with values between 0 and 65535.</p>\\n\"\n  syntax:\n    content: UInt16 = 8\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.UInt16\n- uid: System.TypeCode.UInt32\n  commentId: F:System.TypeCode.UInt32\n  id: UInt32\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: UInt32\n  fullName: System.TypeCode.UInt32\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UInt32\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.</p>\\n\"\n  syntax:\n    content: UInt32 = 10\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.UInt32\n- uid: System.TypeCode.UInt64\n  commentId: F:System.TypeCode.UInt64\n  id: UInt64\n  parent: System.TypeCode\n  langs:\n  - csharp\n  - vb\n  name: UInt64\n  fullName: System.TypeCode.UInt64\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TypeCode.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UInt64\n    path: src/mscorlib/src/System/TypeCode.cs\n    startLine: 38\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.</p>\\n\"\n  syntax:\n    content: UInt64 = 12\n    return:\n      type: System.TypeCode\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TypeCode.UInt64\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  fullName: System.TypeCode\n  nameWithType: TypeCode\n  commentId: T:System.TypeCode\n"}