{"nodes":[{"pos":[482,506],"content":"EncoderExceptionFallback","needQuote":true,"nodes":[{"content":"EncoderExceptionFallback","pos":[0,24]}]},{"pos":[2203,2229],"content":"EncoderExceptionFallback()","needQuote":true,"nodes":[{"content":"EncoderExceptionFallback()","pos":[0,26]}]},{"pos":[3250,3262],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The return value is always zero.&lt;/p&gt;\\n","pos":[3978,4021],"source":"\\n<p>The return value is always zero.</p>\\n"},{"pos":[4485,4507],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;An encoder fallback buffer that throws an exception when it cannot encode a character sequence.&lt;/p&gt;\\n","pos":[5331,5437],"source":"\\n<p>An encoder fallback buffer that throws an exception when it cannot encode a character sequence.</p>\\n"},{"pos":[5901,5915],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7638,7651],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The return value is always the same arbitrary value, and has no special significance.","pos":[8307,8397],"source":"\\n<p>The return value is always the same arbitrary value, and has no special significance."},{"content":"&lt;/p&gt;\\n","pos":[8398,8404],"source":" </p>\\n"},{"pos":[8645,8656],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[8802,8808],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8972,8987],"content":"EncoderFallback","needQuote":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[9222,9239],"content":"ExceptionFallback","needQuote":true,"nodes":[{"content":"ExceptionFallback","pos":[0,17]}]},{"pos":[9530,9549],"content":"ReplacementFallback","needQuote":true,"nodes":[{"content":"ReplacementFallback","pos":[0,19]}]},{"pos":[9806,9816],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9911,9919],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9988,9989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10016,10017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10087,10095],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10164,10165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10192,10193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10390,10412],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10560,10566],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10633,10634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10684,10690],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10751,10752]},{"pos":[10807,10813],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10873,10874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10971,10977],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11044,11045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11095,11101],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11162,11163]},{"pos":[11218,11224],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11284,11285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11530,11561],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11727,11742],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11818,11819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11869,11875],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11936,11937]},{"pos":[11992,11998],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12058,12059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12165,12180],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12256,12257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12307,12313],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12374,12375]},{"pos":[12430,12436],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12496,12497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12723,12732],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12825,12832],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12900,12901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12928,12929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12998,13005],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13073,13074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13101,13102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13277,13294],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13403,13418],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13494,13495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13522,13523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13600,13615],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13691,13692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13719,13720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13865,13871],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14050,14062],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"pos":[14282,14287],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14485,14507],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"pos":[14654,14674],"content":"CreateFallbackBuffer","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer","pos":[0,20]}]},{"pos":[14748,14749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14776,14777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14873,14893],"content":"CreateFallbackBuffer","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer","pos":[0,20]}]},{"pos":[14967,14968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14995,14996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15223,15244],"content":"EncoderFallbackBuffer","needQuote":true,"nodes":[{"content":"EncoderFallbackBuffer","pos":[0,21]}]},{"pos":[15472,15486],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15605,15611],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15678,15679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15729,15735],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15795,15796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15879,15885],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15952,15953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16003,16009],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16069,16070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16243,16250],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16416,16429],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16530,16541],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16613,16614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16641,16642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16715,16726],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16798,16799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16826,16827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Text.EncoderExceptionFallback\n  commentId: T:System.Text.EncoderExceptionFallback\n  id: EncoderExceptionFallback\n  parent: System.Text\n  children:\n  - System.Text.EncoderExceptionFallback.#ctor\n  - System.Text.EncoderExceptionFallback.CreateFallbackBuffer\n  - System.Text.EncoderExceptionFallback.Equals(System.Object)\n  - System.Text.EncoderExceptionFallback.GetHashCode\n  - System.Text.EncoderExceptionFallback.MaxCharCount\n  langs:\n  - csharp\n  - vb\n  name: EncoderExceptionFallback\n  fullName: System.Text.EncoderExceptionFallback\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EncoderExceptionFallback\n    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n    startLine: 10\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence. The fallback throws an exception if an input character cannot be converted to an output byte sequence. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public sealed class EncoderExceptionFallback : EncoderFallback\n    content.vb: >-\n      <Serializable>\n\n      Public NotInheritable Class EncoderExceptionFallback\n          Inherits EncoderFallback\n  inheritance:\n  - System.Object\n  - System.Text.EncoderFallback\n  inheritedMembers:\n  - System.Text.EncoderFallback.ExceptionFallback\n  - System.Text.EncoderFallback.ReplacementFallback\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: EncoderExceptionFallback\n- uid: System.Text.EncoderExceptionFallback.#ctor\n  commentId: M:System.Text.EncoderExceptionFallback.#ctor\n  id: '#ctor'\n  parent: System.Text.EncoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: EncoderExceptionFallback()\n  fullName: System.Text.EncoderExceptionFallback.EncoderExceptionFallback()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n    startLine: 14\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.EncoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public EncoderExceptionFallback()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EncoderExceptionFallback.EncoderExceptionFallback()\n- uid: System.Text.EncoderExceptionFallback.MaxCharCount\n  commentId: P:System.Text.EncoderExceptionFallback.MaxCharCount\n  id: MaxCharCount\n  parent: System.Text.EncoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: MaxCharCount\n  fullName: System.Text.EncoderExceptionFallback.MaxCharCount\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxCharCount\n    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n    startLine: 24\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets the maximum number of characters this instance can return.</p>\\n\"\n  syntax:\n    content: public override int MaxCharCount { get; }\n    content.vb: Public Overrides ReadOnly Property MaxCharCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The return value is always zero.</p>\\n\"\n  overridden: System.Text.EncoderFallback.MaxCharCount\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: EncoderExceptionFallback.MaxCharCount\n- uid: System.Text.EncoderExceptionFallback.CreateFallbackBuffer\n  commentId: M:System.Text.EncoderExceptionFallback.CreateFallbackBuffer\n  id: CreateFallbackBuffer\n  parent: System.Text.EncoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: CreateFallbackBuffer()\n  fullName: System.Text.EncoderExceptionFallback.CreateFallbackBuffer()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateFallbackBuffer\n    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n    startLine: 18\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Returns an encoder fallback buffer that throws an exception if it cannot convert a character sequence to a byte sequence.</p>\\n\"\n  syntax:\n    content: public override EncoderFallbackBuffer CreateFallbackBuffer()\n    content.vb: Public Overrides Function CreateFallbackBuffer As EncoderFallbackBuffer\n    return:\n      type: System.Text.EncoderFallbackBuffer\n      description: \"\\n<p>An encoder fallback buffer that throws an exception when it cannot encode a character sequence.</p>\\n\"\n  overridden: System.Text.EncoderFallback.CreateFallbackBuffer\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: EncoderExceptionFallback.CreateFallbackBuffer()\n- uid: System.Text.EncoderExceptionFallback.Equals(System.Object)\n  commentId: M:System.Text.EncoderExceptionFallback.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Text.EncoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Text.EncoderExceptionFallback.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n    startLine: 32\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Indicates whether the current <xref href=\\\"System.Text.EncoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and a specified object are equal.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object value)\n    content.vb: Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>An object that derives from the <xref href=\\\"System.Text.EncoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>value</em> is not <strong>null</strong> (<strong>Nothing</strong> in Visual Basic .NET) and is a <xref href=\\\"System.Text.EncoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: EncoderExceptionFallback.Equals(Object)\n- uid: System.Text.EncoderExceptionFallback.GetHashCode\n  commentId: M:System.Text.EncoderExceptionFallback.GetHashCode\n  id: GetHashCode\n  parent: System.Text.EncoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Text.EncoderExceptionFallback.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs\n    startLine: 42\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Retrieves the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The return value is always the same arbitrary value, and has no special significance. </p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: EncoderExceptionFallback.GetHashCode()\nreferences:\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  fullName: System.Text.EncoderFallback\n  nameWithType: EncoderFallback\n  commentId: T:System.Text.EncoderFallback\n- uid: System.Text.EncoderFallback.ExceptionFallback\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: ExceptionFallback\n  fullName: System.Text.EncoderFallback.ExceptionFallback\n  nameWithType: EncoderFallback.ExceptionFallback\n  commentId: P:System.Text.EncoderFallback.ExceptionFallback\n- uid: System.Text.EncoderFallback.ReplacementFallback\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: ReplacementFallback\n  fullName: System.Text.EncoderFallback.ReplacementFallback\n  nameWithType: EncoderFallback.ReplacementFallback\n  commentId: P:System.Text.EncoderFallback.ReplacementFallback\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Text.EncoderFallback.MaxCharCount\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: MaxCharCount\n  fullName: System.Text.EncoderFallback.MaxCharCount\n  nameWithType: EncoderFallback.MaxCharCount\n  commentId: P:System.Text.EncoderFallback.MaxCharCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Text.EncoderFallback.CreateFallbackBuffer\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: CreateFallbackBuffer()\n  fullName: System.Text.EncoderFallback.CreateFallbackBuffer()\n  spec.csharp:\n  - uid: System.Text.EncoderFallback.CreateFallbackBuffer\n    name: CreateFallbackBuffer\n    fullName: System.Text.EncoderFallback.CreateFallbackBuffer\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Text.EncoderFallback.CreateFallbackBuffer\n    name: CreateFallbackBuffer\n    fullName: System.Text.EncoderFallback.CreateFallbackBuffer\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: EncoderFallback.CreateFallbackBuffer()\n  commentId: M:System.Text.EncoderFallback.CreateFallbackBuffer\n- uid: System.Text.EncoderFallbackBuffer\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallbackBuffer\n  fullName: System.Text.EncoderFallbackBuffer\n  nameWithType: EncoderFallbackBuffer\n  commentId: T:System.Text.EncoderFallbackBuffer\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n"}