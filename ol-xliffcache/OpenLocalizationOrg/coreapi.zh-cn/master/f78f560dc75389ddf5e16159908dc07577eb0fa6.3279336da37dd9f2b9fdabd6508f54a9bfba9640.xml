{"nodes":[{"pos":[774,801],"content":"SerializationInfoEnumerator","needQuote":true,"nodes":[{"content":"SerializationInfoEnumerator","pos":[0,27]}]},{"pos":[2813,2820],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The item currently being examined.&lt;/p&gt;\\n","pos":[3631,3676],"source":"\\n<p>The item currently being examined.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator has not started enumerating items or has reached the end of the enumeration.","pos":[3803,3899],"source":"\\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration."},{"content":"&lt;/p&gt;\\n","pos":[3900,3906],"source":" </p>\\n"},{"pos":[4298,4302],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The item name.&lt;/p&gt;\\n","pos":[5056,5081],"source":"\\n<p>The item name.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator has not started enumerating items or has reached the end of the enumeration.","pos":[5208,5304],"source":"\\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration."},{"content":"&lt;/p&gt;\\n","pos":[5305,5311],"source":" </p>\\n"},{"pos":[5718,5728],"content":"ObjectType","needQuote":true,"nodes":[{"content":"ObjectType","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The type of the item currently being examined.&lt;/p&gt;\\n","pos":[6499,6556],"source":"\\n<p>The type of the item currently being examined.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator has not started enumerating items or has reached the end of the enumeration.","pos":[6683,6779],"source":"\\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration."},{"content":"&lt;/p&gt;\\n","pos":[6780,6786],"source":" </p>\\n"},{"pos":[7297,7316],"content":"IEnumerator.Current","needQuote":true,"nodes":[{"content":"IEnumerator.Current","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The enumeration has not started or has already ended.","pos":[8494,8552],"source":"\\n<p>The enumeration has not started or has already ended."},{"content":"&lt;/p&gt;\\n","pos":[8553,8559],"source":" </p>\\n"},{"pos":[9137,9142],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The value of the item currently being examined.&lt;/p&gt;\\n","pos":[9900,9958],"source":"\\n<p>The value of the item currently being examined.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator has not started enumerating items or has reached the end of the enumeration.","pos":[10085,10181],"source":"\\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration."},{"content":"&lt;/p&gt;\\n","pos":[10182,10188],"source":" </p>\\n"},{"pos":[10590,10600],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a new element is found; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11322,11418],"source":"\\n<p>\\n<strong>true</strong> if a new element is found; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[11853,11860],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[12737,12765],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[12962,12968],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13142,13153],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[13352,13362],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13457,13465],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[13534,13535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13562,13563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13633,13641],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[13710,13711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13738,13739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13922,13936],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14055,14061],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14128,14129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14179,14185],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14245,14246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14329,14335],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14402,14403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14453,14459],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14519,14520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14734,14756],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[14904,14910],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14977,14978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15028,15034],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15095,15096]},{"pos":[15151,15157],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15217,15218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15315,15321],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15388,15389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15439,15445],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15506,15507]},{"pos":[15562,15568],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15628,15629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15874,15905],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16071,16086],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16162,16163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16213,16219],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16280,16281]},{"pos":[16336,16342],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16402,16403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16509,16524],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16600,16601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16651,16657],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16718,16719]},{"pos":[16774,16780],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16840,16841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17071,17084],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17185,17196],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17268,17269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17296,17297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17370,17381],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17453,17454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17481,17482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17657,17666],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[17759,17766],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17834,17835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17862,17863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17932,17939],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18007,18008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18035,18036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18211,18228],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18337,18352],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18428,18429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18456,18457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18534,18549],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18625,18626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18653,18654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18799,18805],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18924,18942],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[19165,19183],"content":"SerializationEntry","needQuote":true,"nodes":[{"content":"SerializationEntry","pos":[0,18]}]},{"pos":[19408,19414],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19557,19561],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[19749,19756],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[20014,20024],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[20153,20161],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[20226,20227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20254,20255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20342,20350],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[20415,20416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20443,20444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20622,20629],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20824,20831],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[20954,20959],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[21021,21022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21049,21050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21134,21139],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[21201,21202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21229,21230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21420,21445],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Runtime.Serialization.SerializationInfoEnumerator\n  commentId: T:System.Runtime.Serialization.SerializationInfoEnumerator\n  id: SerializationInfoEnumerator\n  parent: System.Runtime.Serialization\n  children:\n  - System.Runtime.Serialization.SerializationInfoEnumerator.Current\n  - System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext\n  - System.Runtime.Serialization.SerializationInfoEnumerator.Name\n  - System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType\n  - System.Runtime.Serialization.SerializationInfoEnumerator.Reset\n  - System.Runtime.Serialization.SerializationInfoEnumerator.System#Collections#IEnumerator#Current\n  - System.Runtime.Serialization.SerializationInfoEnumerator.Value\n  langs:\n  - csharp\n  - vb\n  name: SerializationInfoEnumerator\n  fullName: System.Runtime.Serialization.SerializationInfoEnumerator\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SerializationInfoEnumerator\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n    startLine: 58\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Provides a formatter-friendly mechanism for parsing the data in <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public sealed class SerializationInfoEnumerator : IEnumerator\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public NotInheritable Class SerializationInfoEnumerator\n          Implements IEnumerator\n  seealso:\n  - type: System.Collections.IEnumerator\n    commentId: T:System.Collections.IEnumerator\n  - type: System.Runtime.Serialization.SerializationInfo\n    commentId: T:System.Runtime.Serialization.SerializationInfo\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerator\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SerializationInfoEnumerator\n- uid: System.Runtime.Serialization.SerializationInfoEnumerator.Current\n  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.Current\n  id: Current\n  parent: System.Runtime.Serialization.SerializationInfoEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Current\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n    startLine: 106\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets the item currently being examined.</p>\\n\"\n  syntax:\n    content: public SerializationEntry Current { get; }\n    content.vb: Public ReadOnly Property Current As SerializationEntry\n    parameters: []\n    return:\n      type: System.Runtime.Serialization.SerializationEntry\n      description: \"\\n<p>The item currently being examined.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SerializationInfoEnumerator.Current\n- uid: System.Runtime.Serialization.SerializationInfoEnumerator.Name\n  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.Name\n  id: Name\n  parent: System.Runtime.Serialization.SerializationInfoEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n    startLine: 120\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets the name for the item currently being examined.</p>\\n\"\n  syntax:\n    content: public string Name { get; }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The item name.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SerializationInfoEnumerator.Name\n- uid: System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType\n  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType\n  id: ObjectType\n  parent: System.Runtime.Serialization.SerializationInfoEnumerator\n  langs:\n  - csharp\n  - vb\n  name: ObjectType\n  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ObjectType\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n    startLine: 136\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets the type of the item currently being examined.</p>\\n\"\n  syntax:\n    content: public Type ObjectType { get; }\n    content.vb: Public ReadOnly Property ObjectType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The type of the item currently being examined.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SerializationInfoEnumerator.ObjectType\n- uid: System.Runtime.Serialization.SerializationInfoEnumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Runtime.Serialization.SerializationInfoEnumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.Current\n  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.System.Collections.IEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IEnumerator.Current\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n    startLine: 97\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets the current item in the collection.</p>\\n\"\n  syntax:\n    content: object IEnumerator.Current { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>A <xref href=\\\"System.Runtime.Serialization.SerializationEntry\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the current serialization data.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumeration has not started or has already ended. </p>\\n\"\n  implements:\n  - System.Collections.IEnumerator.Current\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.IEnumerator.Current\n  nameWithType: SerializationInfoEnumerator.IEnumerator.Current\n  nameWithType.vb: SerializationInfoEnumerator.System.Collections.IEnumerator.Current\n- uid: System.Runtime.Serialization.SerializationInfoEnumerator.Value\n  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.Value\n  id: Value\n  parent: System.Runtime.Serialization.SerializationInfoEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.Value\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Value\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n    startLine: 128\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets the value of the item currently being examined.</p>\\n\"\n  syntax:\n    content: public object Value { get; }\n    content.vb: Public ReadOnly Property Value As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The value of the item currently being examined.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SerializationInfoEnumerator.Value\n- uid: System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext\n  commentId: M:System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Runtime.Serialization.SerializationInfoEnumerator\n  langs:\n  - csharp\n  - vb\n  name: MoveNext()\n  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MoveNext\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n    startLine: 86\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Updates the enumerator to the next item.</p>\\n\"\n  syntax:\n    content: public bool MoveNext()\n    content.vb: Public Function MoveNext As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a new element is found; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerator.MoveNext\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfoEnumerator.MoveNext()\n- uid: System.Runtime.Serialization.SerializationInfoEnumerator.Reset\n  commentId: M:System.Runtime.Serialization.SerializationInfoEnumerator.Reset\n  id: Reset\n  parent: System.Runtime.Serialization.SerializationInfoEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Reset\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs\n    startLine: 115\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Resets the enumerator to the first item.</p>\\n\"\n  syntax:\n    content: public void Reset()\n    content.vb: Public Sub Reset\n  implements:\n  - System.Collections.IEnumerator.Reset\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfoEnumerator.Reset()\nreferences:\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Runtime.Serialization.SerializationEntry\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationEntry\n  fullName: System.Runtime.Serialization.SerializationEntry\n  nameWithType: SerializationEntry\n  commentId: T:System.Runtime.Serialization.SerializationEntry\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Collections.IEnumerator.Current\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Current\n  fullName: System.Collections.IEnumerator.Current\n  nameWithType: IEnumerator.Current\n  commentId: P:System.Collections.IEnumerator.Current\n- uid: System.Collections.IEnumerator.MoveNext\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: MoveNext()\n  fullName: System.Collections.IEnumerator.MoveNext()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator.MoveNext()\n  commentId: M:System.Collections.IEnumerator.MoveNext\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.IEnumerator.Reset\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Reset()\n  fullName: System.Collections.IEnumerator.Reset()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator.Reset()\n  commentId: M:System.Collections.IEnumerator.Reset\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}